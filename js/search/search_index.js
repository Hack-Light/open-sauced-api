var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.421,1,2.087]],["body/modules/AppModule.html",[0,1.81,1,3.88,2,1.419,3,2.391,4,2.47,5,2.47,6,3.241,7,0.033,8,3.241,9,3.241,10,2.658,11,1.715,12,1.419,13,0.41,14,0.367,15,0.325,16,2.959,17,3.06,18,0.984,19,1.096,20,2.47,21,2.148,22,4.124,23,4.286,24,2.47,25,4.124,26,2.959,27,3.443,28,2.148,29,2.959,30,2.959,31,2.959,32,4.747,33,1.096,34,2.959,35,4.124,36,2.959,37,4.124,38,2.959,39,4.124,40,2.959,41,2.959,42,1.008,43,2.148,44,1.097,45,1.556,46,1.977,47,2.47,48,1.977,49,2.47,50,1.977,51,2.47,52,1.977,53,2.47,54,1.977,55,2.47,56,2.959,57,2.959,58,2.47,59,2.959,60,2.47,61,2.959,62,2.959,63,0.504,64,2.959,65,2.959,66,2.959,67,2.959,68,2.959,69,2.959,70,2.959,71,2.959,72,2.959,73,1.908,74,2.959,75,2.959,76,2.658,77,1.009,78,2.959,79,2.959,80,1.299,81,2.148,82,0.41,83,0.21,84,2.47,85,0.02,86,0.02]],["title/controllers/AuthController.html",[87,1.552,88,2.087]],["body/controllers/AuthController.html",[7,0.033,13,0.482,14,0.43,15,0.382,18,0.903,19,1.287,44,1.518,63,0.783,80,1.525,82,0.482,83,0.247,85,0.023,86,0.023,87,1.665,88,2.964,89,2.9,90,2.522,91,2.988,92,0.482,93,2.666,94,5.155,95,3.474,96,4.58,97,1.005,98,3.474,99,4.599,100,3.338,101,4.599,102,3.839,103,3.474,104,3.474,105,0.779,106,3.474,107,1.826,108,0.924,109,1.525,110,2.014,111,3.537,112,2.9,113,2.9,114,3.474,115,4.599,116,2.964,117,3.338,118,2.522,119,1.826,120,1.826,121,2.9,122,2.522,123,2.014,124,3.474,125,3.474,126,3.474,127,3.474,128,3.474,129,3.474,130,3.474,131,2.522,132,3.474,133,2.9,134,2.522,135,3.839,136,3.839,137,3.839,138,3.839,139,1.853,140,1.853,141,3.474,142,3.474,143,1.665,144,1.091,145,3.474]],["title/modules/AuthModule.html",[0,1.421,6,1.877]],["body/modules/AuthModule.html",[0,2.167,2,1.858,3,2.863,6,3.665,7,0.032,10,3.183,11,2.247,12,1.858,13,0.537,14,0.48,15,0.426,17,2.499,18,0.91,19,1.436,80,2.167,81,3.585,82,0.537,83,0.275,85,0.024,86,0.024,88,3.503,120,3.363,121,3.236,146,3.236,147,3.236,148,3.236,149,3.709,150,3.877,151,4.122,152,4.939,153,2.814,154,3.877,155,3.877]],["title/entities/Contribution.html",[46,1.552,156,0.726]],["body/entities/Contribution.html",[7,0.033,13,0.357,14,0.319,15,0.283,18,0.576,33,0.955,42,1.406,43,1.871,46,1.792,63,1.061,76,2.41,77,0.879,82,0.357,83,0.183,85,0.018,86,0.018,92,0.357,97,1.69,105,1.31,108,0.995,139,1.772,140,1.772,144,1.609,156,0.838,157,2.152,158,0.995,159,4.398,160,4.398,161,2.108,162,4.398,163,2.969,164,3.193,165,2.536,166,3.718,167,4.027,168,4.027,169,4.027,170,4.027,171,2.578,172,1.822,173,3.502,174,2.152,175,2.167,176,2.578,177,2.705,178,1.235,179,2.705,180,2.477,181,2.705,182,2.705,183,2.312,184,2.578,185,1.235,186,2.578,187,1.871,188,2.578,189,2.578,190,1.355,191,2.578,192,1.965,193,2.578,194,2.713,195,2.578,196,1.235,197,2.578,198,2.578,199,2.56,200,2.713,201,1.871,202,1.965,203,1.965,204,1.792,205,1.792,206,1.792,207,1.871,208,1.494,209,1.871,210,2.152]],["title/controllers/HealthController.html",[87,1.552,211,2.087]],["body/controllers/HealthController.html",[7,0.033,13,0.402,14,0.359,15,0.318,18,0.784,19,1.074,23,3.919,24,2.421,28,2.105,73,1.869,80,1.273,82,0.402,83,0.206,85,0.02,86,0.02,87,1.39,90,2.105,92,0.402,93,2.357,97,1.176,100,3.694,105,0.912,110,2.357,116,3.026,117,3.408,118,2.105,119,1.524,131,2.951,143,1.949,211,2.621,212,2.421,213,4.637,214,4.062,215,4.637,216,5.555,217,2.9,218,4.066,219,3.694,220,2.95,221,3.28,222,4.066,223,2.9,224,2.951,225,2.9,226,4.066,227,2.9,228,4.066,229,4.066,230,4.066,231,4.695,232,4.066,233,4.066,234,2.9,235,2.9,236,1.681,237,4.637,238,2.9,239,2.9,240,2.9,241,1.524,242,2.9,243,3.394,244,4.066,245,2.9,246,2.9,247,2.9,248,2.9,249,2.9,250,2.9,251,4.066,252,2.9,253,3.394,254,2.9,255,2.9,256,2.9,257,2.9,258,2.9,259,2.9,260,2.9,261,2.9,262,2.9,263,2.9,264,2.9,265,2.9,266,2.9,267,2.9,268,2.9]],["title/modules/HealthModule.html",[0,1.421,8,1.877]],["body/modules/HealthModule.html",[0,2.402,2,2.196,7,0.032,8,3.173,13,0.635,14,0.568,15,0.503,17,2.953,18,0.902,19,1.697,27,4.57,28,3.325,80,2.402,82,0.635,83,0.325,85,0.027,86,0.027,211,3.774,269,4.581,270,4.581]],["title/classes/PageDto.html",[83,0.23,271,1.877]],["body/classes/PageDto.html",[7,0.033,13,0.493,14,0.441,15,0.391,18,0.853,60,3.901,63,1.024,82,0.493,83,0.37,85,0.023,86,0.023,92,0.493,97,1.351,105,1.17,107,1.871,108,0.947,109,1.562,119,1.871,158,1.243,236,2.064,241,3.104,271,2.709,272,2.064,273,2.972,274,4.802,275,4.368,276,4.674,277,5.753,278,3.539,279,4.674,280,3.56,281,3.56,282,3.56,283,3.56,284,3.56,285,3.56,286,4.355,287,5.218,288,5.218,289,2.972,290,2.584,291,2.972,292,2.972,293,3.56,294,2.972,295,3.56,296,3.56]],["title/classes/PageMetaDto.html",[83,0.23,278,1.877]],["body/classes/PageMetaDto.html",[7,0.032,13,0.44,14,0.393,15,0.349,18,0.667,63,0.995,82,0.44,83,0.225,85,0.021,86,0.021,92,0.44,97,1.652,105,1.311,107,1.669,108,0.845,109,1.393,119,1.669,158,1.152,172,2.029,236,2.509,241,3.361,272,1.84,275,2.305,278,2.509,286,5.218,290,3.84,297,3.836,298,2.65,299,4.926,300,4.926,301,4.621,302,4.926,303,3.575,304,3.175,305,4.416,306,4.329,307,3.84,308,3.175,309,3.175,310,3.175,311,3.175,312,3.175,313,3.175,314,1.669,315,4.112,316,3.175,317,3.142,318,3.614,319,3.175,320,2.305,321,3.175,322,3.175,323,3.175,324,3.175,325,3.175]],["title/classes/PageOptionsDto.html",[83,0.23,314,1.702]],["body/classes/PageOptionsDto.html",[7,0.032,13,0.429,14,0.383,15,0.34,18,0.806,63,0.965,82,0.429,83,0.345,85,0.021,86,0.021,92,0.429,97,1.405,105,1.173,109,2.487,119,1.626,143,1.483,158,1.131,172,1.98,174,2.418,241,3.154,272,1.793,289,2.582,290,3.527,292,2.582,297,3.536,303,3.527,314,2.235,315,2.582,317,4.356,318,2.582,320,3.798,326,2.582,327,4.408,328,4.252,329,4.859,330,3.132,331,4.859,332,3.093,333,4.252,334,3.093,335,3.093,336,4.252,337,3.093,338,3.093,339,4.252,340,4.252,341,3.093,342,3.093,343,3.093,344,3.093,345,5.232,346,3.093,347,4.859,348,5.232,349,3.093,350,3.093,351,3.093,352,3.093,353,3.093,354,4.252,355,4.252,356,3.093]],["title/entities/Repo.html",[42,0.792,156,0.726]],["body/entities/Repo.html",[7,0.033,13,0.222,14,0.199,15,0.176,18,0.716,33,0.594,42,0.634,44,1.33,45,0.843,46,2.116,47,1.338,48,2.396,50,2.396,52,2.396,54,2.396,63,1.069,76,2.421,77,0.547,82,0.222,83,0.114,85,0.013,86,0.013,92,0.222,97,1.732,105,1.343,108,1.175,139,1.317,140,1.317,144,1.296,156,0.582,158,0.69,161,1.567,164,2.373,165,2.814,166,3.886,167,4.287,168,4.287,169,4.287,170,3.685,172,1.826,173,3.728,174,2.301,175,2.805,177,2.462,178,0.768,179,2.462,180,2.254,181,2.462,182,2.462,183,2.116,185,0.768,187,1.164,190,0.843,192,1.364,194,1.884,196,0.768,199,2.647,200,1.884,201,1.164,202,1.364,203,1.364,204,1.244,205,1.244,206,1.244,207,2.373,208,0.929,209,1.164,307,1.884,357,1.338,358,2.373,359,3.269,360,3.269,361,3.269,362,3.269,363,3.269,364,1.895,365,3.269,366,3.136,367,3.269,368,2.391,369,3.269,370,3.444,371,2.595,372,1.603,373,1.603,374,1.603,375,1.603,376,1.603,377,1.603,378,1.603,379,1.338,380,1.603,381,1.603,382,3.756,383,1.603,384,2.595,385,1.603,386,1.603,387,1.603,388,1.603,389,2.595,390,1.603,391,2.595,392,1.603,393,2.595,394,1.603,395,2.595,396,1.603,397,1.603,398,1.603,399,1.603,400,1.603,401,1.603,402,1.603,403,1.603,404,1.603,405,3.685,406,1.603,407,1.603,408,1.603,409,1.603,410,1.033,411,1.603,412,1.338,413,1.338,414,1.603,415,1.603]],["title/controllers/RepoController.html",[87,1.552,416,2.087]],["body/controllers/RepoController.html",[7,0.033,13,0.378,14,0.338,15,0.299,18,0.863,19,1.009,42,1.502,63,0.975,80,1.195,82,0.378,83,0.193,84,2.274,85,0.019,86,0.019,87,1.306,90,1.977,92,0.378,93,2.255,97,1.312,100,3.951,105,1.017,107,2.385,108,1.207,109,1.991,110,2.63,112,2.274,113,2.274,116,3.19,117,3.592,118,1.977,119,1.432,131,3.293,133,3.787,143,2.175,144,1.425,165,2.861,172,1.547,214,3.758,241,1.432,271,1.579,314,2.861,410,2.925,416,2.507,417,2.274,418,4.369,419,4.369,420,4.537,421,2.274,422,2.724,423,5.443,424,2.724,425,3.89,426,4.369,427,2.724,428,4.543,429,2.274,430,2.724,431,4.131,432,2.724,433,2.724,434,2.724,435,2.724,436,3.247,437,3.89,438,2.724,439,2.724,440,2.724,441,3.89,442,2.385,443,2.274,444,1.306,445,4.537,446,2.274,447,2.274,448,2.274,449,1.977,450,2.724,451,1.977,452,2.724,453,2.724,454,2.724,455,2.724,456,2.724,457,2.724,458,2.724,459,2.724,460,2.724,461,2.724,462,2.724,463,2.724,464,2.724]],["title/modules/RepoModule.html",[0,1.421,9,1.877]],["body/modules/RepoModule.html",[0,2.228,2,1.942,3,2.944,7,0.032,9,3.594,10,3.273,11,2.349,12,1.942,13,0.562,14,0.502,15,0.445,17,2.612,18,0.922,19,1.501,20,3.382,21,2.941,42,0.991,80,2.228,81,3.686,82,0.562,83,0.288,85,0.025,86,0.025,151,4.239,416,3.575,442,3.383,443,3.382,444,1.942,465,3.382,466,3.382,467,3.382,468,4.052,469,4.052,470,4.052]],["title/injectables/RepoService.html",[442,1.702,471,1.552]],["body/injectables/RepoService.html",[7,0.033,13,0.323,14,0.288,15,0.256,18,0.822,19,0.862,21,1.689,33,0.862,42,1.201,44,0.619,46,1.115,48,1.115,50,1.115,52,1.115,54,1.115,63,0.782,77,0.794,82,0.323,83,0.165,85,0.017,86,0.017,92,0.323,93,2.01,105,1.101,107,2.414,108,1.37,109,2.016,110,2.662,134,4.202,143,2.354,144,1.443,156,0.522,165,2.882,172,1.414,207,1.689,210,1.943,214,3.612,236,2.01,237,1.943,271,1.349,278,2.662,291,1.943,301,2.895,314,2.804,366,2.895,418,2.895,419,2.895,421,2.895,426,3.46,428,4.299,429,2.895,431,1.943,436,3.46,442,1.823,444,1.115,446,2.895,447,1.943,448,1.943,471,1.662,472,1.5,473,1.943,474,4.593,475,2.327,476,2.961,477,2.327,478,3.468,479,2.327,480,2.327,481,2.327,482,2.327,483,2.327,484,2.327,485,2.327,486,2.327,487,2.327,488,2.327,489,1.943,490,3.468,491,2.327,492,3.468,493,2.327,494,2.327,495,2.327,496,2.327,497,2.327,498,2.327,499,3.468,500,2.327,501,2.327,502,2.327,503,2.327,504,2.327,505,2.327,506,2.327,507,4.593,508,4.593,509,2.327,510,2.327,511,2.327,512,2.327,513,2.327,514,1.943,515,2.327,516,1.943,517,2.327,518,1.943,519,2.327,520,1.943,521,5.15,522,4.145,523,2.327,524,5.15,525,4.593,526,3.468,527,3.468,528,2.662,529,2.327,530,2.327,531,2.327,532,2.327,533,2.327,534,2.327,535,2.327,536,2.327,537,2.327,538,2.327]],["title/entities/RepoToUserStargazers.html",[54,1.552,156,0.726]],["body/entities/RepoToUserStargazers.html",[7,0.033,13,0.383,14,0.343,15,0.304,18,0.705,33,1.025,42,1.431,44,1.557,45,1.454,54,1.885,63,1.022,77,0.943,82,0.383,83,0.196,85,0.019,86,0.019,92,0.383,97,1.663,105,1.29,108,1.217,139,1.843,140,1.843,144,1.767,156,0.882,158,1.046,161,2.193,163,3.052,172,1.866,174,2.007,177,2.622,178,1.326,179,2.622,180,2.401,181,2.622,182,2.622,183,2.389,185,1.326,190,2.067,192,2.619,196,1.326,199,2.523,202,2.405,203,2.405,204,1.885,205,1.885,206,1.885,368,3.052,444,1.326,518,2.309,539,2.309,540,3.593,541,2.766,542,2.766,543,2.949,544,2.766,545,2.766,546,2.766,547,2.766,548,2.766,549,2.766,550,2.766,551,2.766,552,2.766,553,2.766]],["title/entities/RepoToUserStars.html",[50,1.552,156,0.726]],["body/entities/RepoToUserStars.html",[7,0.033,13,0.383,14,0.343,15,0.304,18,0.705,33,1.025,42,1.431,44,1.557,45,1.454,50,1.885,63,1.022,77,0.943,82,0.383,83,0.196,85,0.019,86,0.019,92,0.383,97,1.663,105,1.29,108,1.217,139,1.843,140,1.843,144,1.767,156,0.882,158,1.046,161,2.193,163,3.052,172,1.866,174,2.007,177,2.622,178,1.326,179,2.622,180,2.401,181,2.622,182,2.622,183,2.389,185,1.326,190,2.067,192,2.619,196,1.326,199,2.523,202,2.405,203,2.405,204,1.885,205,1.885,206,1.885,368,3.052,444,1.326,520,2.309,540,3.593,543,2.949,554,2.309,555,2.766,556,2.766,557,2.766,558,2.766,559,2.766,560,2.766,561,2.766,562,2.766,563,2.766,564,2.766,565,2.766,566,2.766]],["title/entities/RepoToUserSubmissions.html",[52,1.552,156,0.726]],["body/entities/RepoToUserSubmissions.html",[7,0.033,13,0.383,14,0.343,15,0.304,18,0.705,33,1.025,42,1.431,44,1.557,45,1.454,52,1.885,63,1.022,77,0.943,82,0.383,83,0.196,85,0.019,86,0.019,92,0.383,97,1.663,105,1.29,108,1.217,139,1.843,140,1.843,144,1.767,156,0.882,158,1.046,161,2.193,163,3.052,172,1.866,174,2.007,177,2.622,178,1.326,179,2.622,180,2.401,181,2.622,182,2.622,183,2.389,185,1.326,190,2.067,192,2.619,196,1.326,199,2.523,202,2.405,203,2.405,204,1.885,205,1.885,206,1.885,368,3.052,444,1.326,516,2.309,540,3.593,543,2.949,567,2.309,568,2.766,569,2.766,570,2.766,571,2.766,572,2.766,573,2.766,574,2.766,575,2.766,576,2.766,577,2.766,578,2.766,579,2.766]],["title/entities/RepoToUserVotes.html",[48,1.552,156,0.726]],["body/entities/RepoToUserVotes.html",[7,0.033,13,0.383,14,0.343,15,0.304,18,0.705,33,1.025,42,1.431,44,1.557,45,1.454,48,1.885,63,1.022,77,0.943,82,0.383,83,0.196,85,0.019,86,0.019,92,0.383,97,1.663,105,1.29,108,1.217,139,1.843,140,1.843,144,1.767,156,0.882,158,1.046,161,2.193,163,3.052,172,1.866,174,2.007,177,2.622,178,1.326,179,2.622,180,2.401,181,2.622,182,2.622,183,2.389,185,1.326,190,2.067,192,2.619,196,1.326,199,2.523,202,2.405,203,2.405,204,1.885,205,1.885,206,1.885,368,3.052,444,1.326,514,2.309,540,3.593,543,2.949,580,2.309,581,2.766,582,2.766,583,2.766,584,2.766,585,2.766,586,2.766,587,2.766,588,2.766,589,2.766,590,2.766,591,2.766,592,2.766]],["title/classes/SupabaseAuthResponse.html",[83,0.23,111,2.087]],["body/classes/SupabaseAuthResponse.html",[7,0.031,13,0.471,14,0.421,15,0.373,63,1.029,82,0.471,83,0.241,85,0.022,86,0.022,91,3.548,92,0.471,105,1.356,109,2.785,111,2.922,135,4.257,136,4.257,137,4.257,138,4.257,139,2.055,140,2.055,144,1.602,158,1.206,165,3.364,241,3.431,272,1.971,593,5.109,594,2.838,595,5.1,596,3.4,597,3.4,598,3.4,599,3.4,600,3.4,601,3.4,602,3.4,603,3.4]],["title/injectables/SupabaseGuard.html",[120,1.702,471,1.552]],["body/injectables/SupabaseGuard.html",[7,0.032,13,0.656,14,0.586,15,0.52,18,0.86,19,1.753,82,0.656,83,0.336,85,0.028,86,0.028,120,2.933,153,3.435,208,2.743,471,2.675,472,3.05,604,3.95,605,4.732,606,4.732]],["title/injectables/SupabaseStrategy.html",[149,1.877,471,1.552]],["body/injectables/SupabaseStrategy.html",[7,0.033,13,0.496,14,0.443,15,0.393,18,0.855,19,1.326,44,1.247,63,0.89,82,0.65,83,0.254,85,0.023,86,0.023,91,2.074,92,0.496,93,2.718,96,4.81,105,1.173,107,2.465,108,1.247,109,2.058,110,2.718,122,2.597,123,2.718,143,1.715,149,2.718,153,2.597,208,2.074,214,3.371,224,2.597,236,3.032,471,2.247,472,2.306,540,2.718,607,2.597,608,4.689,609,4.689,610,3.578,611,4.689,612,5.23,613,3.578,614,3.578,615,3.578,616,4.689,617,3.578,618,4.689,619,3.578,620,3.578,621,3.578,622,4.689,623,2.987,624,3.578,625,3.578,626,3.578,627,3.578,628,3.578,629,3.578,630,3.578,631,3.578,632,3.578,633,3.578,634,3.578,635,3.578,636,3.578]],["title/entities/User.html",[44,0.862,156,0.726]],["body/entities/User.html",[7,0.033,13,0.325,14,0.291,15,0.258,18,0.796,33,0.869,42,1.263,43,1.703,44,0.928,48,2.692,49,1.958,50,2.692,51,1.958,52,2.692,53,1.958,54,2.692,55,1.958,63,1.041,76,3.33,77,0.8,82,0.325,83,0.167,85,0.017,86,0.017,92,0.325,97,1.716,105,1.331,108,0.624,139,1.678,140,1.678,144,1.308,156,0.782,158,0.928,161,1.996,166,1.703,172,1.573,173,2.532,174,2.262,175,2.022,177,2.476,178,1.125,179,2.476,180,2.267,181,2.476,182,2.476,183,2.21,185,1.125,187,1.703,196,1.125,199,2.363,200,2.532,201,1.703,204,1.672,205,1.672,206,1.672,208,1.36,209,1.703,307,3.75,370,4.114,379,3.477,405,4.312,410,2.685,637,1.958,638,4.165,639,4.165,640,4.165,641,4.165,642,2.346,643,2.346,644,2.346,645,2.346,646,2.346,647,2.346,648,2.346,649,3.489,650,2.346,651,3.489,652,2.346,653,3.489,654,2.346,655,3.489,656,2.346,657,3.489,658,2.346,659,2.346,660,2.346]],["title/changelog.html",[661,1.753,662,1.974,663,2.271]],["body/changelog.html",[3,1.82,7,0.032,12,0.575,15,0.292,33,0.986,42,0.293,44,0.319,58,1.703,73,0.774,77,0.908,85,0.01,86,0.01,91,0.696,102,1.002,108,0.936,123,1.543,144,0.641,164,0.871,175,0.696,194,0.871,213,1.002,215,1.703,219,0.871,220,0.696,243,1.002,303,0.871,317,0.871,320,1.932,330,0.774,410,0.774,476,1.716,489,2.222,528,1.183,661,0.774,663,1.703,664,1.2,665,2.041,666,1.703,667,1.703,668,2.041,669,2.62,670,1.703,671,5.209,672,4.775,673,3.826,674,5.654,675,5.694,676,2.662,677,2.222,678,1.002,679,4.081,680,1.2,681,1.2,682,1.2,683,1.2,684,2.041,685,4.479,686,4.479,687,5.101,688,1.2,689,2.041,690,1.2,691,1.2,692,1.2,693,1.2,694,1.2,695,1.2,696,1.2,697,2.041,698,3.518,699,2.268,700,1.2,701,1.2,702,1.2,703,4.081,704,1.2,705,5.004,706,5.611,707,1.2,708,1.002,709,1.2,710,1.2,711,2.041,712,2.041,713,2.662,714,3.518,715,2.041,716,2.041,717,1.2,718,1.2,719,1.2,720,2.662,721,1.2,722,3.586,723,2.041,724,1.2,725,1.2,726,1.2,727,1.2,728,3.826,729,3.139,730,3.139,731,2.041,732,2.662,733,2.041,734,4.479,735,2.041,736,2.041,737,2.041,738,2.662,739,3.518,740,2.041,741,2.041,742,1.703,743,2.041,744,3.826,745,2.041,746,2.041,747,2.041,748,2.041,749,2.662,750,2.041,751,4.479,752,4.479,753,2.041,754,1.2,755,4.637,756,3.518,757,5.98,758,3.518,759,1.2,760,2.222,761,2.041,762,2.662,763,1.2,764,1.2,765,3.139,766,3.139,767,4.775,768,1.2,769,1.2,770,1.2,771,1.2,772,1.2,773,1.2,774,4.081,775,1.2,776,1.2,777,1.2,778,1.2,779,4.081,780,2.662,781,1.481,782,1.2,783,1.2,784,1.2,785,2.041,786,1.703,787,2.041,788,1.2,789,1.2,790,1.2,791,3.139,792,1.703,793,1.2,794,1.2,795,1.002,796,1.703,797,1.2,798,1.2,799,2.041,800,1.002,801,1.2,802,1.2,803,4.479,804,1.2,805,1.2,806,1.2,807,1.2,808,2.041,809,1.2,810,1.2,811,1.2,812,1.2,813,1.703,814,1.2,815,1.2,816,1.002,817,1.2,818,1.2,819,1.2,820,1.2,821,1.2,822,1.2,823,2.041,824,1.2,825,1.2,826,3.586,827,1.2,828,1.2,829,1.2,830,2.041,831,1.2,832,2.041,833,2.662,834,1.2,835,1.2,836,1.2,837,1.2,838,0.871,839,1.2,840,1.2,841,1.2,842,1.2,843,1.2,844,1.2,845,3.518,846,2.041,847,1.002,848,1.2,849,1.2,850,1.2,851,1.2,852,1.2,853,1.2,854,1.2,855,1.2,856,1.2,857,1.2,858,2.662,859,1.2,860,1.2,861,1.2,862,1.2,863,1.2,864,1.2,865,1.2,866,1.2,867,1.2,868,1.2,869,4.479,870,1.2,871,1.2,872,1.2,873,1.2,874,2.662,875,1.2,876,1.2,877,1.2,878,1.2,879,1.2,880,1.2,881,1.2,882,1.2,883,1.2,884,1.2,885,1.2,886,1.2,887,1.2,888,1.2,889,1.2,890,1.2,891,2.662,892,1.2,893,1.2,894,1.2,895,1.2,896,1.2,897,1.2,898,1.2,899,1.2,900,1.2,901,1.2,902,1.002,903,1.2,904,1.2,905,1.2,906,1.2,907,1.2,908,1.2,909,2.041,910,1.2,911,1.2,912,1.2,913,1.2,914,1.2,915,1.2,916,3.139,917,2.041,918,1.2,919,1.2,920,1.2,921,1.703,922,1.2,923,1.703,924,1.2,925,1.2,926,1.2,927,2.041,928,2.041,929,2.041,930,1.703,931,2.041,932,1.2,933,2.662,934,1.2,935,2.041,936,1.2,937,2.041,938,2.041,939,1.2,940,1.2,941,1.2,942,1.2,943,1.2,944,1.2,945,1.2,946,1.2,947,1.2,948,1.2,949,1.2,950,1.2,951,1.2,952,1.2,953,1.2,954,1.2,955,1.2,956,2.041,957,1.2,958,1.2,959,1.2,960,1.2,961,1.2,962,1.2,963,1.2,964,1.2,965,1.2,966,1.2,967,1.2,968,1.2,969,1.2,970,1.2,971,1.2,972,1.2,973,1.2,974,1.2,975,1.2,976,1.002,977,1.2,978,1.2,979,1.2,980,1.2,981,1.2,982,1.2,983,1.2,984,1.2,985,1.2,986,1.2,987,1.2,988,1.002,989,1.2,990,1.2,991,1.2,992,1.2,993,1.2,994,1.2,995,1.2,996,1.2,997,1.2,998,1.002,999,1.2,1000,1.2,1001,1.2,1002,1.2,1003,1.2,1004,1.2,1005,1.2,1006,1.2]],["title/coverage.html",[1007,3.662]],["body/coverage.html",[7,0.032,15,0.369,42,0.822,44,1.197,46,1.611,48,1.611,50,1.611,52,1.611,54,1.611,63,0.572,83,0.384,85,0.022,86,0.022,87,2.43,88,2.166,89,2.805,91,1.948,111,2.166,120,1.766,149,1.948,156,1.33,157,2.805,175,3.767,211,2.166,212,2.805,271,1.948,273,2.805,278,1.948,297,2.899,298,2.805,314,1.766,326,2.805,357,2.805,416,2.166,417,2.805,442,1.766,449,2.439,451,2.439,471,2.43,473,2.805,528,1.948,539,2.805,554,2.805,567,2.805,580,2.805,593,2.805,594,2.805,604,2.805,607,2.439,637,2.805,699,2.166,796,4.52,1007,2.805,1008,3.361,1009,3.361,1010,3.361,1011,3.361,1012,6.304,1013,5.415,1014,3.265,1015,2.805,1016,2.805,1017,2.805,1018,3.361,1019,2.805,1020,2.805,1021,3.361,1022,2.805,1023,3.361,1024,2.805,1025,3.361,1026,3.361,1027,2.805]],["title/miscellaneous/enumerations.html",[1028,1.194,1029,3.244]],["body/miscellaneous/enumerations.html",[7,0.031,85,0.028,86,0.028,92,0.674,327,4.115,330,3.654,412,4.732,413,4.732,1028,2.133,1029,4.057,1030,4.86,1031,4.86]],["title/miscellaneous/functions.html",[1028,1.194,1032,3.244]],["body/miscellaneous/functions.html",[7,0.028,85,0.028,86,0.028,92,0.69,1022,4.155,1024,5.059,1028,2.184,1032,4.155,1033,4.977]],["title/index.html",[92,0.377,661,1.753,662,1.974]],["body/index.html",[7,0.031,11,1.948,12,1.611,14,0.416,46,1.611,73,3.49,85,0.022,86,0.022,123,3.139,219,3.265,220,3.272,221,3.49,253,2.805,327,2.439,364,1.948,476,2.166,528,1.948,666,4.712,667,2.805,677,3.755,678,3.755,699,2.166,708,2.805,722,3.755,742,2.805,760,2.805,816,4.952,826,3.755,838,2.439,902,3.755,921,2.805,976,2.805,988,4.712,1027,2.805,1034,3.361,1035,3.361,1036,3.361,1037,3.361,1038,3.361,1039,3.361,1040,3.361,1041,4.232,1042,2.805,1043,3.361,1044,3.361,1045,3.361,1046,3.361,1047,3.361,1048,3.361,1049,3.361,1050,3.361,1051,3.361,1052,5.07,1053,4.498,1054,3.361,1055,3.361,1056,4.498,1057,3.361,1058,3.361,1059,3.361,1060,3.361,1061,3.361,1062,4.498,1063,3.361,1064,4.498,1065,4.498,1066,3.361,1067,3.361,1068,3.361,1069,3.361,1070,3.361,1071,3.361,1072,3.361,1073,3.361,1074,3.361,1075,3.361,1076,3.361,1077,3.361,1078,2.805,1079,3.361,1080,4.498,1081,3.361,1082,3.361,1083,3.361,1084,3.361,1085,3.361,1086,3.361,1087,3.361,1088,3.361,1089,3.361,1090,3.361,1091,3.361,1092,3.361,1093,3.361,1094,3.361,1095,3.361,1096,3.361,1097,2.439]],["title/license.html",[364,1.577,661,1.753,662,1.974]],["body/license.html",[7,0.024,12,1.843,85,0.024,86,0.024,180,2.376,220,2.229,221,2.479,364,2.229,671,3.21,699,2.479,800,3.21,847,4.101,1041,3.21,1042,5.23,1097,2.792,1098,5.414,1099,3.846,1100,4.913,1101,3.846,1102,3.846,1103,3.846,1104,3.846,1105,3.846,1106,3.846,1107,3.846,1108,3.846,1109,3.846,1110,3.846,1111,4.913,1112,3.846,1113,3.846,1114,4.913,1115,3.846,1116,3.846,1117,3.846,1118,3.846,1119,3.846,1120,3.846,1121,3.846,1122,4.913,1123,3.846,1124,3.846,1125,3.846,1126,3.846,1127,3.846,1128,3.846,1129,4.913,1130,4.913,1131,3.846,1132,3.846,1133,3.846,1134,3.846,1135,3.846,1136,3.846,1137,3.846,1138,3.846,1139,3.846,1140,3.846,1141,3.846,1142,3.846,1143,3.846,1144,3.846,1145,3.846,1146,3.846,1147,3.846,1148,3.846,1149,3.846,1150,3.846,1151,3.846,1152,3.846,1153,3.846,1154,3.846,1155,3.846,1156,3.846,1157,3.846,1158,3.846,1159,3.846]],["title/modules.html",[2,2.103]],["body/modules.html",[1,3.08,2,2.291,6,2.77,7,0.028,8,2.77,9,2.77,85,0.028,86,0.028,1160,5.96,1161,5.96,1162,5.96,1163,6.15,1164,3.989,1165,4.779]],["title/overview.html",[1166,3.662]],["body/overview.html",[1,4.025,2,1.905,3,2.908,4,3.317,5,3.317,6,3.653,7,0.032,8,3.186,9,3.524,10,3.233,11,2.303,12,1.905,77,1.355,80,1.744,85,0.025,86,0.025,120,3.245,146,3.317,147,3.317,148,3.317,149,3.578,272,2.303,442,3.245,465,3.317,466,3.317,467,3.317,472,2.561,930,3.317,1166,3.317,1167,5.016,1168,5.016]],["title/properties.html",[158,1.034,1169,2.72]],["body/properties.html",[7,0.032,85,0.026,86,0.026,122,3.183,123,2.542,158,1.167,220,3.091,221,3.437,358,3.183,364,2.542,476,2.827,669,3.661,670,3.661,795,3.661,838,3.183,923,3.661,998,3.661,1097,3.183,1164,3.661,1170,4.385,1171,4.385,1172,4.385,1173,4.385,1174,4.385,1175,4.385,1176,4.385,1177,4.385,1178,4.385,1179,4.385,1180,4.385,1181,5.332,1182,4.385,1183,4.385,1184,4.385,1185,4.385,1186,4.385,1187,4.385,1188,4.385,1189,4.385]],["title/miscellaneous/typealiases.html",[1028,1.194,1190,3.886]],["body/miscellaneous/typealiases.html",[7,0.028,63,0.952,85,0.028,86,0.028,92,0.658,275,4.059,297,3.06,305,4.667,607,3.446,623,5.123,1014,3.446,1028,2.083,1191,4.747,1192,4.747,1193,5.591,1194,4.747,1195,3.963,1196,4.747]],["title/miscellaneous/variables.html",[781,2.821,1028,1.194]],["body/miscellaneous/variables.html",[7,0.033,42,0.875,44,1.247,63,0.609,85,0.023,86,0.023,92,0.496,116,2.306,134,3.404,143,2.507,158,0.952,165,2.465,174,2.236,224,3.404,274,2.987,294,2.987,330,3.578,358,2.597,449,3.404,451,3.404,528,2.074,781,2.597,786,3.914,792,3.914,813,2.987,1014,2.597,1015,3.914,1016,2.987,1017,3.914,1019,2.987,1020,3.914,1028,1.57,1078,2.987,1195,3.914,1197,3.578,1198,3.578,1199,4.689,1200,3.578,1201,3.578,1202,3.578,1203,3.578,1204,3.578,1205,3.578,1206,4.689,1207,3.578,1208,3.578,1209,3.578,1210,4.689,1211,3.578,1212,3.578,1213,3.578,1214,4.689,1215,4.689,1216,4.689,1217,4.689,1218,3.578,1219,3.578]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":175,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["0/1",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["0848443",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":317,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["1.0.0",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["1.6.10",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["1.6.11",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["1.6.12",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["1.6.13",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["1.6.14",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["1.6.15",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["1.6.16",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["1.6.17",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["1.6.3",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["1.6.4",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["1.6.5",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["1.6.6",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["1.6.7",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["1.6.8",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["1.6.9",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["1.7.1",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["1.7.10",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["1.7.11",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["1.7.12",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["1.7.3",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["1.7.5",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["1.7.6",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["1.7.7",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["1.7.8",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["1.7.9",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["1.8.1",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["1.8.2",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["1.9.0",{"_index":669,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["10",{"_index":320,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(50)@isoptional",{"_index":341,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["12",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["166050d",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["17c54b9",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":337,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["20",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":671,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["20880c7",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["20bc1e7",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["22d3cc1",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":170,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["27",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["272c09a",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["273f337",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["2c0b15f",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["2c0b3d1",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["2f966a3",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1168,"title":{},"body":{"overview.html":{}}}],["30",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["31e4d60",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["33fea7e",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["34d521d",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["3918a78",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1167,"title":{},"body":{"overview.html":{}}}],["4552c66",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["50",{"_index":340,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["58bf922",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["5e7c6c7",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["5eddeb1",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["5f79c49",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["607cf5d",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["61b67d5",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["62b3eea",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["630f3b5",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["63d6a92",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":382,"title":{},"body":{"entities/Repo.html":{}}}],["673dca9",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["6d23c24",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":930,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["7249714",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["73d1c74",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["77c734c",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["79bf61d",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["7adfb6b",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["7db9008",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["7e9b8a4",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["7fe63aa",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["81e8bbc",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["8837b2a",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["8aee8e5",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["911df68",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["94ba4e1",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["_data",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a0db0aa",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["a229a3b",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["a9e1df6",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1128,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["ac31556",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["accessing",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["accessors",{"_index":328,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["action",{"_index":1153,"title":{},"body":{"license.html":{}}}],["add",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["add_table_nametest",{"_index":1068,"title":{},"body":{"index.html":{}}}],["adding",{"_index":1059,"title":{},"body":{"index.html":{}}}],["addselect((qb",{"_index":507,"title":{},"body":{"injectables/RepoService.html":{}}}],["adjust",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["adjustments",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["af531e4",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":488,"title":{},"body":{"injectables/RepoService.html":{}}}],["aliases",{"_index":1191,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliasname",{"_index":490,"title":{},"body":{"injectables/RepoService.html":{}}}],["aliastable",{"_index":492,"title":{},"body":{"injectables/RepoService.html":{}}}],["alias}count",{"_index":491,"title":{},"body":{"injectables/RepoService.html":{}}}],["alias}countselect",{"_index":493,"title":{},"body":{"injectables/RepoService.html":{}}}],["allof",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["along",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1120,"title":{},"body":{"license.html":{}}}],["api",{"_index":838,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["api.opensauced.pizza",{"_index":1037,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconfig",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["apidocs",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["apiextramodels(pagedto",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apinotfoundresponse",{"_index":445,"title":{},"body":{"controllers/RepoController.html":{}}}],["apiokresponse",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"miscellaneous/variables.html":{}}}],["apioperation",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["apipaginatedresponse",{"_index":449,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse(repo",{"_index":463,"title":{},"body":{"controllers/RepoController.html":{}}}],["apiproperty",{"_index":286,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{}}}],["apiproperty({type",{"_index":284,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":345,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({enum",{"_index":332,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":336,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apitags",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["apitags(\"authentication",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"health",{"_index":234,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"repositories",{"_index":454,"title":{},"body":{"controllers/RepoController.html":{}}}],["apply",{"_index":1066,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1157,"title":{},"body":{"license.html":{}}}],["array",{"_index":294,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["artifact",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":413,"title":{},"body":{"entities/Repo.html":{},"miscellaneous/enumerations.html":{}}}],["assign",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1107,"title":{},"body":{"license.html":{}}}],["async",{"_index":214,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["attach",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["attempt",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"changelog.html":{},"coverage.html":{}}}],["auth.controller",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":88,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":608,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticate(req",{"_index":611,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticated",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":605,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authguard(\"supabase",{"_index":606,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1187,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":1146,"title":{},"body":{"license.html":{}}}],["autoloadentities",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1165,"title":{},"body":{"modules.html":{}}}],["await",{"_index":525,"title":{},"body":{"injectables/RepoService.html":{}}}],["b1a67da",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["b1eda28",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["b4c9879",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["b4d3785",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["b57f47b",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["b5b6ac5",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["b7c3395",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["b9f3798",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["ba8dfbb",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1173,"title":{},"body":{"properties.html":{}}}],["badges",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["baseentity",{"_index":200,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["baseline",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["basequerybuilder",{"_index":474,"title":{},"body":{"injectables/RepoService.html":{}}}],["bash",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["bc3a37d",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["bd6d621",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":670,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["beta.5",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["beta.api.opensauced.pizza",{"_index":1038,"title":{},"body":{"index.html":{}}}],["better",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["bigint",{"_index":173,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["binaries",{"_index":1043,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":307,"title":{},"body":{"classes/PageMetaDto.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":1024,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["branch",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1163,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1160,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1183,"title":{},"body":{"properties.html":{}}}],["build",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":499,"title":{},"body":{"injectables/RepoService.html":{}}}],["c",{"_index":1099,"title":{},"body":{"license.html":{}}}],["c013b70",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["c127cea",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["c24937f",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["cb83f9d",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["cb9206d",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["cc46460",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["cd306f8",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["cd8f21d",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":663,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":666,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["channel",{"_index":1095,"title":{},"body":{"index.html":{}}}],["character",{"_index":167,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["charge",{"_index":1104,"title":{},"body":{"license.html":{}}}],["check",{"_index":219,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["checkauthsession",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["checks",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1149,"title":{},"body":{"license.html":{}}}],["class",{"_index":83,"title":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/SupabaseAuthResponse.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"coverage.html":{}}}],["classes",{"_index":272,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/SupabaseAuthResponse.html":{},"overview.html":{}}}],["clean",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":1075,"title":{},"body":{"index.html":{}}}],["client",{"_index":1175,"title":{},"body":{"properties.html":{}}}],["closes",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_repomodule",{"_index":465,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_exports",{"_index":467,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_providers",{"_index":466,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["code",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["column",{"_index":199,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["column(\"text",{"_index":414,"title":{},"body":{"entities/Repo.html":{}}}],["column('text",{"_index":375,"title":{},"body":{"entities/Repo.html":{}}}],["column({default",{"_index":379,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["column({type",{"_index":166,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["command",{"_index":1062,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1050,"title":{},"body":{"index.html":{}}}],["comments",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["common/decorators/api",{"_index":450,"title":{},"body":{"controllers/RepoController.html":{}}}],["common/dtos/page",{"_index":446,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["common/dtos/page.dto",{"_index":448,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["community",{"_index":1087,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":1176,"title":{},"body":{"properties.html":{}}}],["component",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["concurrency",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1127,"title":{},"body":{"license.html":{}}}],["config/api.config",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["config/endpoint.config",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configservice.get(\"db.connection",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.database",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.host",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.password",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.port",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.username",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["confirmed_at",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["connection",{"_index":1158,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["console.log(querybuilder.getsql",{"_index":535,"title":{},"body":{"injectables/RepoService.html":{}}}],["const",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RepoService.html":{},"miscellaneous/variables.html":{}}}],["constants/order.constant",{"_index":351,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["constructor",{"_index":236,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["constructor(data",{"_index":276,"title":{},"body":{"classes/PageDto.html":{}}}],["constructor(private",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoController.html":{}}}],["constructor(reporepository",{"_index":475,"title":{},"body":{"injectables/RepoService.html":{}}}],["constructor(undefined",{"_index":304,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["container",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":792,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continuous",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1154,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1082,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":1080,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":46,"title":{"entities/Contribution.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"coverage.html":{},"index.html":{}}}],["contribution.repo",{"_index":371,"title":{},"body":{"entities/Repo.html":{}}}],["contribution/contribution.entity",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{}}}],["contributions",{"_index":207,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{}}}],["contributions.repo_id",{"_index":505,"title":{},"body":{"injectables/RepoService.html":{}}}],["contributor",{"_index":159,"title":{},"body":{"entities/Contribution.html":{}}}],["controller",{"_index":87,"title":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"health",{"_index":235,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"repos",{"_index":453,"title":{},"body":{"controllers/RepoController.html":{}}}],["controllers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"overview.html":{}}}],["conversation",{"_index":1090,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1122,"title":{},"body":{"license.html":{}}}],["copy",{"_index":847,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":1098,"title":{},"body":{"license.html":{}}}],["correct",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":160,"title":{},"body":{"entities/Contribution.html":{}}}],["counting",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":1007,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["created",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["created_at",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":205,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createdatecolumn({type",{"_index":178,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createparamdecorator",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["d0d5ca5",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["d77ea52",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1150,"title":{},"body":{"license.html":{}}}],["data",{"_index":274,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["datasource",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":177,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["db",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["db:changesif",{"_index":1063,"title":{},"body":{"index.html":{}}}],["db:commit",{"_index":1067,"title":{},"body":{"index.html":{}}}],["db:push",{"_index":1074,"title":{},"body":{"index.html":{}}}],["db:resetpush",{"_index":1072,"title":{},"body":{"index.html":{}}}],["db:startmake",{"_index":1058,"title":{},"body":{"index.html":{}}}],["dbconfig",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["dd5e668",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1109,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1159,"title":{},"body":{"license.html":{}}}],["debug",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["decorator",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["default",{"_index":174,"title":{},"body":{"entities/Contribution.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["delete",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["deleted_at",{"_index":161,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["deletedatecolumn",{"_index":204,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["deletedatecolumn({type",{"_index":185,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["demo",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":412,"title":{},"body":{"entities/Repo.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":358,"title":{},"body":{"entities/Repo.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":1174,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":678,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["diagram",{"_index":1079,"title":{},"body":{"index.html":{}}}],["diagrams",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":1061,"title":{},"body":{"index.html":{}}}],["digital",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["discord.find",{"_index":1091,"title":{},"body":{"index.html":{}}}],["disk",{"_index":240,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":233,"title":{},"body":{"controllers/HealthController.html":{}}}],["distribute",{"_index":1118,"title":{},"body":{"license.html":{}}}],["docker",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.12",{"_index":1048,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["docr",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":699,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":1170,"title":{},"body":{"properties.html":{}}}],["dry",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["dtos/supabase",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["e145e2d",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["e1fe498",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["e663170",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":293,"title":{},"body":{"classes/PageDto.html":{}}}],["eba258a",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["echo",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["ed9729a",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["email",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["encourage",{"_index":1081,"title":{},"body":{"index.html":{}}}],["endpointconfig",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":222,"title":{},"body":{"controllers/HealthController.html":{}}}],["engines",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["entities",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"overview.html":{}}}],["entity",{"_index":156,"title":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":352,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["enumerations",{"_index":1029,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":333,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["env",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["environments",{"_index":1036,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":800,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["everything",{"_index":1064,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["explain",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["exports",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"modules/RepoModule.html":{}}}],["exposing",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1137,"title":{},"body":{"license.html":{}}}],["extend",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":208,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["extractjwt",{"_index":619,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":634,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractor",{"_index":633,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["f0304d4",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["f5385b3",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["fad79b1",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["fdc11ea",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["fe4b9e9",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":1108,"title":{},"body":{"license.html":{}}}],["findall",{"_index":436,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findall(pageoptionsdto",{"_index":480,"title":{},"body":{"injectables/RepoService.html":{}}}],["findonebyid",{"_index":418,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyid(id",{"_index":421,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo",{"_index":419,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo(owner",{"_index":429,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["finds",{"_index":423,"title":{},"body":{"controllers/RepoController.html":{}}}],["finduserlist",{"_index":420,"title":{},"body":{"controllers/RepoController.html":{}}}],["finduserlist(pageoptionsdto",{"_index":434,"title":{},"body":{"controllers/RepoController.html":{}}}],["fine",{"_index":1065,"title":{},"body":{"index.html":{}}}],["first",{"_index":1053,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1142,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["flight",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1041,"title":{},"body":{"index.html":{},"license.html":{}}}],["free",{"_index":1103,"title":{},"body":{"license.html":{}}}],["from(entity",{"_index":496,"title":{},"body":{"injectables/RepoService.html":{}}}],["full",{"_index":742,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["full_name",{"_index":359,"title":{},"body":{"entities/Repo.html":{}}}],["function",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1032,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1125,"title":{},"body":{"license.html":{}}}],["generated",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["get(\"/:id",{"_index":455,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/:owner/:repo",{"_index":458,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/list",{"_index":462,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/service",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/session",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"/web",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":422,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/:owner/:repo')@apioperation({operationid",{"_index":430,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/list')@apioperation({operationid",{"_index":435,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":217,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/session')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdomain",{"_index":1020,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethello",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello(user",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["getschemapath(model",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(pagedto",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getskip",{"_index":343,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getting",{"_index":661,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1185,"title":{},"body":{"properties.html":{}}}],["github",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":1102,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1164,"title":{},"body":{"modules.html":{},"properties.html":{}}}],["guard",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["guards",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1084,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1085,"title":{},"body":{"index.html":{}}}],["handler",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["has_stars_data",{"_index":638,"title":{},"body":{"entities/User.html":{}}}],["hasnextpage",{"_index":299,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":300,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["health",{"_index":213,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["health.controller",{"_index":270,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":231,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":211,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":8,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["healthstatusservice",{"_index":218,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{}}}],["hereby",{"_index":1101,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1147,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1180,"title":{},"body":{"properties.html":{}}}],["host",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":238,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["httpcode(httpstatus.ok",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["httphealthindicator",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/open",{"_index":1181,"title":{},"body":{"properties.html":{}}}],["httpstatus",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["id",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"entities/User.html":{},"changelog.html":{}}}],["id'})@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":424,"title":{},"body":{"controllers/RepoController.html":{}}}],["identifier",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1076,"title":{},"body":{"index.html":{}}}],["immediate",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1138,"title":{},"body":{"license.html":{}}}],["import",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["imports",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}}}],["improve",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1131,"title":{},"body":{"license.html":{}}}],["including",{"_index":1111,"title":{},"body":{"license.html":{}}}],["index",{"_index":92,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["information",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["information'})@apiokresponse({type",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["initial",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":471,"title":{"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}},"body":{"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":472,"title":{},"body":{"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":484,"title":{},"body":{"injectables/RepoService.html":{}}}],["injectrepository(repo",{"_index":485,"title":{},"body":{"injectables/RepoService.html":{}}}],["inspection",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["installed",{"_index":1044,"title":{},"body":{"index.html":{}}}],["instead",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":1178,"title":{},"body":{"properties.html":{}}}],["is_fork",{"_index":360,"title":{},"body":{"entities/Repo.html":{}}}],["is_open_sauced_member",{"_index":639,"title":{},"body":{"entities/User.html":{}}}],["is_private",{"_index":640,"title":{},"body":{"entities/User.html":{}}}],["isarray",{"_index":287,"title":{},"body":{"classes/PageDto.html":{}}}],["isarray()@apiproperty({isarray",{"_index":280,"title":{},"body":{"classes/PageDto.html":{}}}],["isenum",{"_index":346,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(order",{"_index":353,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isglobal",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":347,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isoptional",{"_index":348,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["issues",{"_index":361,"title":{},"body":{"entities/Repo.html":{}}}],["item",{"_index":524,"title":{},"body":{"injectables/RepoService.html":{}}}],["itemcount",{"_index":301,"title":{},"body":{"classes/PageMetaDto.html":{},"injectables/RepoService.html":{}}}],["items",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["job",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["jobs",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":1089,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":203,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["jwt",{"_index":621,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["keywords",{"_index":1179,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1136,"title":{},"body":{"license.html":{}}}],["language",{"_index":362,"title":{},"body":{"entities/Repo.html":{}}}],["last_fetched_contributors_at",{"_index":363,"title":{},"body":{"entities/Repo.html":{}}}],["last_merged_at",{"_index":162,"title":{},"body":{"entities/Contribution.html":{}}}],["last_sign_in_at",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["leftjoinandmapmany(\"repo.contributions",{"_index":504,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(\"repo.user",{"_index":502,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(repotouserstars",{"_index":503,"title":{},"body":{"injectables/RepoService.html":{}}}],["length",{"_index":169,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["liability",{"_index":1151,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1148,"title":{},"body":{"license.html":{}}}],["license",{"_index":364,"title":{"license.html":{}},"body":{"entities/Repo.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["limit(pageoptionsdto.take",{"_index":534,"title":{},"body":{"injectables/RepoService.html":{}}}],["limitation",{"_index":1112,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1139,"title":{},"body":{"license.html":{}}}],["links",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":813,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":1196,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["live",{"_index":1035,"title":{},"body":{"index.html":{}}}],["load",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["loadrelationcountandmap(\"repo.contributionscount",{"_index":512,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.stargazerscount",{"_index":517,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.starscount",{"_index":519,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.submissionscount",{"_index":515,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.votescount",{"_index":513,"title":{},"body":{"injectables/RepoService.html":{}}}],["local",{"_index":677,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["localhost:54321",{"_index":1057,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1056,"title":{},"body":{"index.html":{}}}],["logging",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":1045,"title":{},"body":{"index.html":{}}}],["main",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["manytoone",{"_index":202,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["manytoone(undefined",{"_index":190,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["matching",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":323,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["max",{"_index":349,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(50",{"_index":356,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maximum",{"_index":339,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["memory",{"_index":239,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":232,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1141,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1116,"title":{},"body":{"license.html":{}}}],["meta",{"_index":275,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["meta.dto",{"_index":291,"title":{},"body":{"classes/PageDto.html":{},"injectables/RepoService.html":{}}}],["meta.dto.ts",{"_index":298,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:12",{"_index":309,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:15",{"_index":311,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:18",{"_index":308,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":306,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:6",{"_index":310,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":312,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["metadata",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["migration",{"_index":976,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["migrations",{"_index":1071,"title":{},"body":{"index.html":{}}}],["min",{"_index":350,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":355,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimal",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":354,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minor",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1028,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1097,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mkdocs",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":1115,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["mount",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["mounted",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{}}}],["need",{"_index":1040,"title":{},"body":{"index.html":{}}}],["nest",{"_index":921,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nestjs",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/config",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["nestjs/passport",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/swagger",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{}}}],["nestjs/terminus",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["nestjs/typeorm",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{}}}],["nestjs/typeorm/dist/interfaces/typeorm",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["never",{"_index":612,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["new",{"_index":528,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1034,"title":{},"body":{"index.html":{}}}],["node",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["node>=16.7.0",{"_index":1046,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1145,"title":{},"body":{"license.html":{}}}],["notable",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["notfoundexception",{"_index":426,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["notice",{"_index":1129,"title":{},"body":{"license.html":{}}}],["now",{"_index":183,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["npm",{"_index":988,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm>=8.0.0",{"_index":1047,"title":{},"body":{"index.html":{}}}],["number",{"_index":172,"title":{},"body":{"entities/Contribution.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["oas3",{"_index":1172,"title":{},"body":{"properties.html":{}}}],["obtaining",{"_index":1106,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["offset(pageoptionsdto.skip",{"_index":533,"title":{},"body":{"injectables/RepoService.html":{}}}],["onetomany",{"_index":405,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":370,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["open",{"_index":220,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["open_issues",{"_index":641,"title":{},"body":{"entities/User.html":{}}}],["opensauced.pizza\"}`).tostring",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operationid",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["optional",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{}}}],["options.dto",{"_index":447,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["options.dto.ts",{"_index":326,"title":{},"body":{"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:10",{"_index":335,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:20",{"_index":338,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":342,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":344,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.interface",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":327,"title":{},"body":{"classes/PageOptionsDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["order.asc",{"_index":331,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["orderby",{"_index":411,"title":{},"body":{"entities/Repo.html":{}}}],["orderby(\"repo.pushed_at",{"_index":531,"title":{},"body":{"injectables/RepoService.html":{}}}],["otherwise",{"_index":1156,"title":{},"body":{"license.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["outputs",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1166,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":1093,"title":{},"body":{"index.html":{}}}],["owner",{"_index":431,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["owner}/${repo",{"_index":530,"title":{},"body":{"injectables/RepoService.html":{}}}],["package",{"_index":1169,"title":{"properties.html":{}},"body":{}}],["page",{"_index":290,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["pagecount",{"_index":302,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":271,"title":{"classes/PageDto.html":{}},"body":{"classes/PageDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagedto(entities",{"_index":538,"title":{},"body":{"injectables/RepoService.html":{}}}],["pagemetadto",{"_index":278,"title":{"classes/PageMetaDto.html":{}},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagemetadto})@validatenested()@type(undefined",{"_index":285,"title":{},"body":{"classes/PageDto.html":{}}}],["pagemetaparameters",{"_index":305,"title":{},"body":{"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["pageoptionsdto",{"_index":314,"title":{"classes/PageOptionsDto.html":{}},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pageoptionsdto.order",{"_index":532,"title":{},"body":{"injectables/RepoService.html":{}}}],["pageoptionsdto.page",{"_index":316,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.take",{"_index":319,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pages",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["paginated",{"_index":451,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginates",{"_index":437,"title":{},"body":{"controllers/RepoController.html":{}}}],["pagination",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":440,"title":{},"body":{"controllers/RepoController.html":{}}}],["param(\"id",{"_index":456,"title":{},"body":{"controllers/RepoController.html":{}}}],["param(\"owner",{"_index":459,"title":{},"body":{"controllers/RepoController.html":{}}}],["param(\"repo",{"_index":460,"title":{},"body":{"controllers/RepoController.html":{}}}],["parameters",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["parameters.dto",{"_index":313,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["parameters.dto.ts",{"_index":1193,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["partial",{"_index":624,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["particular",{"_index":1143,"title":{},"body":{"license.html":{}}}],["passport",{"_index":620,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["passportmodule",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":618,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["password",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["performance",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1100,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1123,"title":{},"body":{"license.html":{}}}],["person",{"_index":1105,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1124,"title":{},"body":{"license.html":{}}}],["pipelines",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":1083,"title":{},"body":{"index.html":{}}}],["port",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":1133,"title":{},"body":{"license.html":{}}}],["powered",{"_index":1171,"title":{},"body":{"properties.html":{}}}],["prefix",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["prerequisites",{"_index":1039,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["primarycolumn",{"_index":201,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn(\"bigint",{"_index":209,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn('bigint",{"_index":187,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn",{"_index":543,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["print",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":237,"title":{},"body":{"controllers/HealthController.html":{},"injectables/RepoService.html":{}}}],["proceed",{"_index":1086,"title":{},"body":{"index.html":{}}}],["process",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["process.env.domain",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.supabase_api_key",{"_index":629,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_jwt_secret",{"_index":632,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_url",{"_index":627,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["production",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":667,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":428,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["proper",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":158,"title":{"properties.html":{}},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"entities/User.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":795,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["provided",{"_index":1134,"title":{},"body":{"license.html":{}}}],["providers",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{}}}],["public",{"_index":540,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{}}}],["publish",{"_index":1117,"title":{},"body":{"license.html":{}}}],["pull",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1144,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["push",{"_index":760,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pushed_at",{"_index":365,"title":{},"body":{"entities/Repo.html":{}}}],["query",{"_index":441,"title":{},"body":{"controllers/RepoController.html":{}}}],["querybuilder",{"_index":521,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getcount",{"_index":536,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getmany",{"_index":537,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getone",{"_index":526,"title":{},"body":{"injectables/RepoService.html":{}}}],["questions",{"_index":1088,"title":{},"body":{"index.html":{}}}],["re",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["readme",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["received",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refactoring",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["referencedcolumnname",{"_index":192,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["registry",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["relations",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["relationship",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":722,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remote",{"_index":1073,"title":{},"body":{"index.html":{}}}],["remove",{"_index":998,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["repo",{"_index":42,"title":{"entities/Repo.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo'})@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":432,"title":{},"body":{"controllers/RepoController.html":{}}}],["repo.contributions",{"_index":210,"title":{},"body":{"entities/Contribution.html":{},"injectables/RepoService.html":{}}}],["repo.contributions)@joincolumn({name",{"_index":191,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.controller",{"_index":469,"title":{},"body":{"modules/RepoModule.html":{}}}],["repo.entity",{"_index":444,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.id",{"_index":506,"title":{},"body":{"injectables/RepoService.html":{}}}],["repo.repotouserstargazers",{"_index":518,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{}}}],["repo.repotouserstargazers)@joincolumn({name",{"_index":545,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["repo.repotouserstars",{"_index":520,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{}}}],["repo.repotouserstars)@joincolumn({name",{"_index":558,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["repo.repotousersubmissions",{"_index":516,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserSubmissions.html":{}}}],["repo.repotousersubmissions)@joincolumn({name",{"_index":571,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["repo.repotouservotes",{"_index":514,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouservotes)@joincolumn({name",{"_index":584,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["repo.service",{"_index":443,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{}}}],["repo.to.user.stargazers.entity",{"_index":409,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.stars.entity",{"_index":407,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.submissions.entity",{"_index":408,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.votes.entity",{"_index":406,"title":{},"body":{"entities/Repo.html":{}}}],["repo.user",{"_index":649,"title":{},"body":{"entities/User.html":{}}}],["repo/repo.entity",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/User.html":{}}}],["repo/repo.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["repo/repo.to.user.stargazers.entity",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.stars.entity",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.submissions.entity",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.votes.entity",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo_id",{"_index":163,"title":{},"body":{"entities/Contribution.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["repocontroller",{"_index":416,"title":{"controllers/RepoController.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"coverage.html":{}}}],["repomodule",{"_index":9,"title":{"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["reporepository",{"_index":478,"title":{},"body":{"injectables/RepoService.html":{}}}],["repos",{"_index":410,"title":{},"body":{"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/User.html":{},"changelog.html":{}}}],["reposervice",{"_index":442,"title":{"injectables/RepoService.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"coverage.html":{},"overview.html":{}}}],["repository",{"_index":476,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["repotouserstargazers",{"_index":54,"title":{"entities/RepoToUserStargazers.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstargazers.repo",{"_index":389,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstargazers.user",{"_index":651,"title":{},"body":{"entities/User.html":{}}}],["repotouserstars",{"_index":50,"title":{"entities/RepoToUserStars.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstars.repo",{"_index":391,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstars.user",{"_index":653,"title":{},"body":{"entities/User.html":{}}}],["repotousersubmissions",{"_index":52,"title":{"entities/RepoToUserSubmissions.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserSubmissions.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotousersubmissions.repo",{"_index":393,"title":{},"body":{"entities/Repo.html":{}}}],["repotousersubmissions.user",{"_index":655,"title":{},"body":{"entities/User.html":{}}}],["repotouservotes",{"_index":48,"title":{"entities/RepoToUserVotes.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouservotes.repo",{"_index":395,"title":{},"body":{"entities/Repo.html":{}}}],["repotouservotes.user",{"_index":657,"title":{},"body":{"entities/User.html":{}}}],["repo})@apinotfoundresponse({type",{"_index":425,"title":{},"body":{"controllers/RepoController.html":{}}}],["req",{"_index":614,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["request",{"_index":786,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user?.user_metadata?.sub",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirements",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"index.html":{},"overview.html":{}}}],["response.decorator",{"_index":452,"title":{},"body":{"controllers/RepoController.html":{}}}],["response.decorator.ts",{"_index":1017,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.dto.ts",{"_index":594,"title":{},"body":{"classes/SupabaseAuthResponse.html":{},"coverage.html":{}}}],["response.dto.ts:2",{"_index":599,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:3",{"_index":603,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:4",{"_index":601,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:5",{"_index":598,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:6",{"_index":596,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:7",{"_index":600,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:8",{"_index":597,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:9",{"_index":602,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["restriction",{"_index":1110,"title":{},"body":{"license.html":{}}}],["results",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["revert",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1113,"title":{},"body":{"license.html":{}}}],["rogue",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["role",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["rules",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":816,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runner",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["sauced",{"_index":221,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["sauced/api.opensauced.pizza",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["sauced/api.opensauced.pizza#readme",{"_index":1182,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza.git",{"_index":1186,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza/issues",{"_index":1184,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":1078,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scoping",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1077,"title":{},"body":{"index.html":{}}}],["select",{"_index":194,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"changelog.html":{}}}],["select(\"count(distinct",{"_index":495,"title":{},"body":{"injectables/RepoService.html":{}}}],["select(['repo.id",{"_index":501,"title":{},"body":{"injectables/RepoService.html":{}}}],["selectquerybuilder",{"_index":487,"title":{},"body":{"injectables/RepoService.html":{}}}],["sell",{"_index":1121,"title":{},"body":{"license.html":{}}}],["service",{"_index":215,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["session",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"changelog.html":{}}}],["shall",{"_index":1130,"title":{},"body":{"license.html":{}}}],["simple",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["simplest",{"_index":1069,"title":{},"body":{"index.html":{}}}],["skip",{"_index":329,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["soft",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1042,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"index.html":{}}}],["spec",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["src/.../api",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoint.config.ts",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.constant.ts",{"_index":1030,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../page",{"_index":1192,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../supabase.strategy.ts",{"_index":1194,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../supabase.user.decorator.ts",{"_index":1195,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dtos/supabase",{"_index":593,"title":{},"body":{"classes/SupabaseAuthResponse.html":{},"coverage.html":{}}}],["src/auth/supabase.guard.ts",{"_index":604,"title":{},"body":{"injectables/SupabaseGuard.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts",{"_index":607,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/supabase.strategy.ts:12",{"_index":610,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:23",{"_index":617,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:27",{"_index":613,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.user.decorator.ts",{"_index":1014,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/order.constant.ts",{"_index":1031,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/decorators/api",{"_index":1016,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/page",{"_index":297,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/dtos/page.dto.ts",{"_index":273,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts:11",{"_index":283,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dtos/page.dto.ts:16",{"_index":279,"title":{},"body":{"classes/PageDto.html":{}}}],["src/config/endpoint.config.ts",{"_index":1019,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contribution/contribution.entity.ts",{"_index":157,"title":{},"body":{"entities/Contribution.html":{},"coverage.html":{}}}],["src/contribution/contribution.entity.ts:19",{"_index":188,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:25",{"_index":195,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:31",{"_index":176,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:36",{"_index":189,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:42",{"_index":184,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:48",{"_index":197,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:53",{"_index":186,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:59",{"_index":171,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:65",{"_index":198,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:72",{"_index":193,"title":{},"body":{"entities/Contribution.html":{}}}],["src/health/health.controller.ts",{"_index":212,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":269,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1022,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/repo/repo.controller.ts",{"_index":417,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{}}}],["src/repo/repo.controller.ts:22",{"_index":427,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:36",{"_index":433,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:51",{"_index":439,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.entity.ts",{"_index":357,"title":{},"body":{"entities/Repo.html":{},"coverage.html":{}}}],["src/repo/repo.entity.ts:104",{"_index":377,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:107",{"_index":376,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:113",{"_index":383,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:119",{"_index":386,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:125",{"_index":400,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:132",{"_index":402,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:135",{"_index":372,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:138",{"_index":396,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:141",{"_index":392,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:144",{"_index":394,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:147",{"_index":390,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:30",{"_index":378,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:36",{"_index":403,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:42",{"_index":381,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:48",{"_index":397,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:54",{"_index":404,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:60",{"_index":398,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:63",{"_index":380,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:69",{"_index":373,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:75",{"_index":399,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:81",{"_index":388,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:87",{"_index":385,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:92",{"_index":374,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:98",{"_index":387,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.module.ts",{"_index":468,"title":{},"body":{"modules/RepoModule.html":{}}}],["src/repo/repo.service.ts",{"_index":473,"title":{},"body":{"injectables/RepoService.html":{},"coverage.html":{}}}],["src/repo/repo.service.ts:11",{"_index":477,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:27",{"_index":479,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:46",{"_index":482,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:61",{"_index":483,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:78",{"_index":481,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts",{"_index":539,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:18",{"_index":544,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:21",{"_index":551,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:24",{"_index":547,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:30",{"_index":541,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:36",{"_index":548,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:41",{"_index":542,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:48",{"_index":550,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:55",{"_index":546,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stars.entity.ts",{"_index":554,"title":{},"body":{"entities/RepoToUserStars.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:18",{"_index":557,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:21",{"_index":564,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:24",{"_index":560,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:30",{"_index":555,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:36",{"_index":561,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:41",{"_index":556,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:48",{"_index":563,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:55",{"_index":559,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts",{"_index":567,"title":{},"body":{"entities/RepoToUserSubmissions.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:18",{"_index":570,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:21",{"_index":577,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:24",{"_index":573,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:30",{"_index":568,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:36",{"_index":574,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:41",{"_index":569,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:48",{"_index":576,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:55",{"_index":572,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.votes.entity.ts",{"_index":580,"title":{},"body":{"entities/RepoToUserVotes.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:18",{"_index":583,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:21",{"_index":590,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:24",{"_index":586,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:30",{"_index":581,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:36",{"_index":587,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:41",{"_index":582,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:48",{"_index":589,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:55",{"_index":585,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/user/user.entity.ts",{"_index":637,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:22",{"_index":645,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:28",{"_index":648,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:31",{"_index":644,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:34",{"_index":647,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:37",{"_index":646,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:43",{"_index":642,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:49",{"_index":659,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:54",{"_index":643,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:57",{"_index":650,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:60",{"_index":658,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:63",{"_index":654,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:66",{"_index":656,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:69",{"_index":652,"title":{},"body":{"entities/User.html":{}}}],["stable",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["stargazers",{"_index":511,"title":{},"body":{"injectables/RepoService.html":{}}}],["stars",{"_index":366,"title":{},"body":{"entities/Repo.html":{},"injectables/RepoService.html":{}}}],["starscount",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1055,"title":{},"body":{"index.html":{}}}],["started",{"_index":662,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":1051,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["stray",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":165,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"classes/SupabaseAuthResponse.html":{},"miscellaneous/variables.html":{}}}],["string(sub",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["structure",{"_index":902,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["structured",{"_index":1177,"title":{},"body":{"properties.html":{}}}],["studio",{"_index":1052,"title":{},"body":{"index.html":{}}}],["styles",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["subdomain",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":1126,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1119,"title":{},"body":{"license.html":{}}}],["submission",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["submissions",{"_index":510,"title":{},"body":{"injectables/RepoService.html":{}}}],["subquery",{"_index":494,"title":{},"body":{"injectables/RepoService.html":{}}}],["subquerycount(subquery",{"_index":486,"title":{},"body":{"injectables/RepoService.html":{}}}],["subscribers",{"_index":367,"title":{},"body":{"entities/Repo.html":{}}}],["substantial",{"_index":1132,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summary",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["supabase",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["supabase.guard",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["supabase.strategy",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["supabase.user.decorator",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabase>=0.18.0",{"_index":1049,"title":{},"body":{"index.html":{}}}],["supabaseauthrequest",{"_index":623,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["supabaseauthresponse",{"_index":111,"title":{"classes/SupabaseAuthResponse.html":{}},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{},"coverage.html":{}}}],["supabaseauthresponse})@httpcode(httpstatus.ok",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabaseauthstrategy",{"_index":622,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseauthuser",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{}}}],["supabaseguard",{"_index":120,"title":{"injectables/SupabaseGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/SupabaseGuard.html":{},"coverage.html":{},"overview.html":{}}}],["supabasejwtsecret",{"_index":631,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasekey",{"_index":628,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseoptions",{"_index":630,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasestrategy",{"_index":149,"title":{"injectables/SupabaseStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":626,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super",{"_index":625,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.authenticate(req",{"_index":636,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.validate(user",{"_index":635,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["support",{"_index":1161,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1162,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":277,"title":{},"body":{"classes/PageDto.html":{}}}],["table",{"_index":1027,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tables",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["tagging",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":303,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["target",{"_index":489,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{}}}],["target}.id",{"_index":498,"title":{},"body":{"injectables/RepoService.html":{}}}],["tech",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["ted",{"_index":1188,"title":{},"body":{"properties.html":{}}}],["temporary",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":826,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["them'})@httpcode(httpstatus.ok)@apipaginatedresponse(repo)@apiokresponse({type",{"_index":438,"title":{},"body":{"controllers/RepoController.html":{}}}],["thing",{"_index":1054,"title":{},"body":{"index.html":{}}}],["this.basequerybuilder",{"_index":522,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":268,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":266,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.data",{"_index":295,"title":{},"body":{"classes/PageDto.html":{}}}],["this.database.pingcheck(\"db",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hasnextpage",{"_index":325,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":324,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.health.check",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":267,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.itemcount",{"_index":321,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.meta",{"_index":296,"title":{},"body":{"classes/PageDto.html":{}}}],["this.page",{"_index":315,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":322,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.reporepository.createquerybuilder(\"repo",{"_index":500,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.reposervice.findall(pageoptionsdto",{"_index":464,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.reposervice.findonebyid(id",{"_index":457,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.reposervice.findonebyownerandrepo(owner",{"_index":461,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.subquerycount(qb",{"_index":508,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.take",{"_index":318,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["thresholdpercent",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":527,"title":{},"body":{"injectables/RepoService.html":{}}}],["time",{"_index":181,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["timestamp",{"_index":179,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["tld",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["tmodel",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_timestamp(0",{"_index":384,"title":{},"body":{"entities/Repo.html":{}}}],["token",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1155,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":292,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["true",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"classes/PageDto.html":{}}}],["true})@type(undefined",{"_index":282,"title":{},"body":{"classes/PageDto.html":{}}}],["true})@validatenested({each",{"_index":281,"title":{},"body":{"classes/PageDto.html":{}}}],["type",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1190,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{}}}],["typeormhealthindicator",{"_index":230,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{}}}],["typeormmodule.forfeature([repo",{"_index":470,"title":{},"body":{"modules/RepoModule.html":{}}}],["typeormmodule.forrootasync",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["undefined})@isenum(order)@isoptional",{"_index":334,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["unknown",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{},"injectables/SupabaseStrategy.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["updated_at",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"entities/User.html":{}}}],["updatedatecolumn",{"_index":206,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["updatedatecolumn({type",{"_index":196,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["url",{"_index":164,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"changelog.html":{}}}],["url(`https://${subdomain",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urls",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":1114,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(supabaseguard",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":44,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.repos",{"_index":415,"title":{},"body":{"entities/Repo.html":{}}}],["user.repos)@joincolumn({name",{"_index":401,"title":{},"body":{"entities/Repo.html":{}}}],["user.repotouserstargazers",{"_index":553,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["user.repotouserstargazers)@joincolumn({name",{"_index":549,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["user.repotouserstars",{"_index":566,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotouserstars)@joincolumn({name",{"_index":562,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotousersubmissions",{"_index":579,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["user.repotousersubmissions)@joincolumn({name",{"_index":575,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["user.repotouservotes",{"_index":592,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user.repotouservotes)@joincolumn({name",{"_index":588,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user/user.entity",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["user_id",{"_index":368,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["user_metadata",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["user_name",{"_index":595,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["userid",{"_index":1015,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":660,"title":{},"body":{"entities/User.html":{}}}],["users_to_repos_stargazers",{"_index":552,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["users_to_repos_stars",{"_index":565,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["users_to_repos_submissions",{"_index":578,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["users_to_repos_votes",{"_index":591,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["validate",{"_index":609,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validate(user",{"_index":616,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validatenested",{"_index":288,"title":{},"body":{"classes/PageDto.html":{}}}],["validator",{"_index":289,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["value",{"_index":330,"title":{},"body":{"classes/PageOptionsDto.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":796,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":781,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":168,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["verify",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":923,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versiond",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":1092,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1096,"title":{},"body":{"index.html":{}}}],["visually",{"_index":1060,"title":{},"body":{"index.html":{}}}],["vite",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":615,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["volume",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["volumes",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["vortex",{"_index":1189,"title":{},"body":{"properties.html":{}}}],["vortex/api.opensauced.pizza",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["votes",{"_index":509,"title":{},"body":{"injectables/RepoService.html":{}}}],["votescount",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1140,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1135,"title":{},"body":{"license.html":{}}}],["watchers",{"_index":369,"title":{},"body":{"entities/Repo.html":{}}}],["way",{"_index":1070,"title":{},"body":{"index.html":{}}}],["web",{"_index":216,"title":{},"body":{"controllers/HealthController.html":{}}}],["where(\"repo.full_name",{"_index":529,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(\"repo.id",{"_index":523,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(`${aliastable}.${target}_id",{"_index":497,"title":{},"body":{"injectables/RepoService.html":{}}}],["whether",{"_index":1152,"title":{},"body":{"license.html":{}}}],["without",{"_index":180,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"license.html":{}}}],["workflow",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":708,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["yaml",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":1094,"title":{},"body":{"index.html":{}}}],["zone",{"_index":182,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            RepoModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm/dist/interfaces/typeorm-options.interface\";\nimport { DataSource } from \"typeorm\";\n\nimport { RepoModule } from \"./repo/repo.module\";\nimport apiConfig from \"./config/api.config\";\nimport dbConfig from \"./config/database.config\";\nimport endpointConfig from \"./config/endpoint.config\";\nimport { HealthModule } from \"./health/health.module\";\nimport { Repo } from \"./repo/repo.entity\";\nimport { User } from \"./user/user.entity\";\nimport { Contribution } from \"./contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo/repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"./repo/repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"./repo/repo.to.user.stargazers.entity\";\nimport { AuthModule } from \"./auth/auth.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        apiConfig,\n        dbConfig,\n        endpointConfig\n      ],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\"db.connection\"),\n        host: configService.get(\"db.host\"),\n        port: configService.get(\"db.port\"),\n        username: configService.get(\"db.username\"),\n        password: configService.get(\"db.password\"),\n        database: configService.get(\"db.database\"),\n        autoLoadEntities: false,\n        entities: [\n          User,\n          Repo,\n          Contribution,\n          RepoToUserVotes,\n          RepoToUserStars,\n          RepoToUserSubmissions,\n          RepoToUserStargazers,\n        ],\n        synchronize: false,\n      }),\n      inject: [ConfigService],\n    }),\n    TerminusModule,\n    HttpModule,\n    AuthModule,\n    HealthModule,\n    RepoModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  constructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello(user: SupabaseAuthUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/session')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'checkAuthSession', summary: 'Get authenticated session information'})@ApiOkResponse({type: SupabaseAuthResponse})@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SupabaseAuthResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, UseGuards } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseAuthUser } from \"nestjs-supabase-auth\";\nimport { User } from \"./supabase.user.decorator\";\nimport { SupabaseAuthResponse } from \"./dtos/supabase-auth-response.dto\";\n\n@ApiTags(\"Authentication\")\n@Controller(\"auth\")\nexport class AuthController {\n  @Get(\"/session\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"checkAuthSession\",\n    summary: \"Get authenticated session information\",\n  })\n  @ApiOkResponse({ type: SupabaseAuthResponse })\n  @HttpCode(HttpStatus.OK)\n  getHello(\n    @User() user: SupabaseAuthUser,\n  ): SupabaseAuthResponse {\n    const { role, email, confirmed_at, last_sign_in_at, created_at, updated_at, user_metadata: { sub } } = user;\n\n    return {\n      id: `${String(sub)}`,\n      role,\n      email,\n      confirmed_at,\n      last_sign_in_at,\n      created_at,\n      updated_at\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseStrategy } from \"./supabase.strategy\";\nimport { AuthController } from \"./auth.controller\";\n\n@Module({\n  imports: [PassportModule],\n  providers: [SupabaseStrategy, SupabaseGuard],\n  exports: [SupabaseStrategy, SupabaseGuard],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Contribution.html":{"url":"entities/Contribution.html","title":"entity - Contribution","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Contribution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributor\n                            \n                            \n                                count\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                id\n                            \n                            \n                                last_merged_at\n                            \n                            \n                                repo\n                            \n                            \n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_merged_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.contributions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:65\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  ManyToOne,\n  JoinColumn,\n  DeleteDateColumn,\n  CreateDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { Repo } from \"../repo/repo.entity\";\n\n@Entity({\n  name: \"contributions\"\n})\nexport class Contribution extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  repo_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  count: number;\n\n  @Column({\n    type: \"timestamp without time zone\"\n  })\n  last_merged_at: Date;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  contributor: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => Repo, (repo) => repo.contributions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  repo: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@ApiTags(\"Health\")\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service() {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\"),\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\"),\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web() {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, ValidateNested } from \"class-validator\";\nimport { PageMetaDto } from \"./page-meta.dto\";\nimport { Type } from \"class-transformer\";\n\nexport class PageDto {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  @ValidateNested({ each: true })\n  @Type(() => Array)\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PageMetaDto })\n  @ValidateNested()\n  @Type(() => PageMetaDto)\n  readonly meta: PageMetaDto;\n\n  constructor(data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { PageMetaParameters } from \"./page-meta-parameters.dto\";\n\nexport class PageMetaDto {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: PageMetaParameters) {\n    this.page = pageOptionsDto.page || 1;\n    this.take = pageOptionsDto.take || 10;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Order, enumName: 'Order', default: undefined})@IsEnum(Order)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dtos/page-options.dto.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEnum, IsInt, IsOptional, Max, Min } from \"class-validator\";\nimport { Order } from \"../constants/order.constant\";\n\nexport class PageOptionsDto {\n  @ApiPropertyOptional({ enum: Order, enumName: \"Order\", default: Order.ASC })\n  @IsEnum(Order)\n  @IsOptional()\n  readonly order?: Order = Order.ASC;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 50,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(50)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return ((this.page || 1) - 1) * (this.take || 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Repo.html":{"url":"entities/Repo.html","title":"entity - Repo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Repo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributions\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                description\n                            \n                            \n                                full_name\n                            \n                            \n                                id\n                            \n                            \n                                is_fork\n                            \n                            \n                                issues\n                            \n                            \n                                language\n                            \n                            \n                                last_fetched_contributors_at\n                            \n                            \n                                license\n                            \n                            \n                                name\n                            \n                            \n                                pushed_at\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                stars\n                            \n                            \n                                subscribers\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                            \n                                user_id\n                            \n                            \n                                watchers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contribution[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, contribution => contribution.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_fork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_fetched_contributors_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => to_timestamp(0)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        license\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repos)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  JoinColumn,\n  ManyToOne,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  DeleteDateColumn\n} from \"typeorm\";\n\nimport { User } from \"../user/user.entity\";\nimport { Contribution } from \"../contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"./repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"./repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"repos\",\n  orderBy: {\n    stars: \"DESC\",\n    name: \"ASC\"\n  }\n})\nexport class Repo extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  user_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  issues: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  stars: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  watchers: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  subscribers: number;\n\n  @Column({ default: false })\n  is_fork: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  pushed_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"to_timestamp(0)\",\n  })\n  last_fetched_contributors_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  name: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  full_name: string;\n\n  @Column(\"text\")\n  description: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  language: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  license: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => User, user => user.repos)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  user: User;\n\n  @OneToMany(() => Contribution, contribution => contribution.repo)\n  contributions: Contribution[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.repo)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.repo)\n  repoToUserStars: RepoToUserStars[];\n\n  @OneToMany(() => RepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.repo)\n  repoToUserSubmissions: RepoToUserSubmissions[];\n\n  @OneToMany(() => RepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.repo)\n  repoToUserStargazers: RepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoController.html":{"url":"controllers/RepoController.html","title":"controller - RepoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'findOneById', summary: 'Finds a repo by :id'})@HttpCode(HttpStatus.OK)@ApiOkResponse({type: Repo})@ApiNotFoundResponse({type: NotFoundException})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:owner/:repo')@ApiOperation({operationId: 'findOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo'})@HttpCode(HttpStatus.OK)@ApiOkResponse({type: Repo})@ApiNotFoundResponse({type: NotFoundException})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserList\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserList(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@ApiOperation({operationId: 'findAll', summary: 'Finds all repos and paginates them'})@HttpCode(HttpStatus.OK)@ApiPaginatedResponse(Repo)@ApiOkResponse({type: Repo})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, NotFoundException, Param, Query } from \"@nestjs/common\";\nimport { RepoService } from \"./repo.service\";\nimport { Repo } from \"./repo.entity\";\nimport { ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repositories\")\nexport class RepoController {\n  constructor(private readonly repoService: RepoService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"findOneById\",\n    summary: \"Finds a repo by :id\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: Repo })\n  @ApiNotFoundResponse({ type: NotFoundException })\n  async findOneById(\n    @Param(\"id\") id: number,\n  ): Promise {\n    return this.repoService.findOneById(id);\n  }\n\n  @Get(\"/:owner/:repo\")\n  @ApiOperation({\n    operationId: \"findOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: Repo })\n  @ApiNotFoundResponse({ type: NotFoundException })\n  async findOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n  ): Promise {\n    return this.repoService.findOneByOwnerAndRepo(owner, repo);\n  }\n\n  @Get(\"/list\")\n  @ApiOperation({\n    operationId: \"findAll\",\n    summary: \"Finds all repos and paginates them\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiPaginatedResponse(Repo)\n  @ApiOkResponse({ type: Repo })\n  async findUserList(\n    @Query() pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepoModule.html":{"url":"modules/RepoModule.html","title":"module - RepoModule","body":"\n                   \n\n\n\n\n    Modules\n    RepoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_providers\n\n\n\ncluster_RepoModule_exports\n\n\n\n\nRepoService \n\nRepoService \n\n\n\nRepoModule\n\nRepoModule\n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/repo/repo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepoService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { RepoService } from \"./repo.service\";\nimport { RepoController } from \"./repo.controller\";\nimport { Repo } from \"./repo.entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Repo])],\n  controllers: [RepoController],\n  providers: [RepoService],\n  exports: [RepoService],\n})\nexport class RepoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepoService.html":{"url":"injectables/RepoService.html","title":"injectable - RepoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/repo/repo.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { Repo } from \"./repo.entity\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Injectable()\nexport class RepoService {\n  constructor(\n    @InjectRepository(Repo)\n    private repoRepository: Repository,\n  ) {}\n\n  // subQueryCount(subQuery: SelectQueryBuilder, entity: string , alias: string, target = \"repo\") {\n  //   const aliasName = `${alias}Count`;\n  //   const aliasTable = `${alias}CountSelect`;\n  //\n  //   return subQuery\n  //     .select(\"COUNT(DISTINCT id)\", aliasName)\n  //     .from(entity, aliasTable)\n  //     .where(`${aliasTable}.${target}_id = ${target}.id`);\n  // }\n\n  baseQueryBuilder() {\n    const builder = this.repoRepository.createQueryBuilder(\"repo\")\n      // .select(['repo.id'])\n      // .leftJoinAndSelect(\"repo.user\", \"user\")\n      // .leftJoinAndSelect(RepoToUserStars, \"stars\")\n      // .leftJoinAndMapMany(\"repo.contributions\", Contribution, \"contributions\", \"contributions.repo_id = repo.id\")\n      // .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserVotes\", \"votes\"))\n      // .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserSubmissions\", \"submissions\"))\n      // .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserStargazers\", \"stargazers\"))\n      // .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserStars\", \"stars\"))\n      .loadRelationCountAndMap(\"repo.contributionsCount\", \"repo.contributions\")\n      .loadRelationCountAndMap(\"repo.votesCount\", \"repo.repoToUserVotes\")\n      .loadRelationCountAndMap(\"repo.submissionsCount\", \"repo.repoToUserSubmissions\")\n      .loadRelationCountAndMap(\"repo.stargazersCount\", \"repo.repoToUserStargazers\")\n      .loadRelationCountAndMap(\"repo.starsCount\", \"repo.repoToUserStars\");\n\n    return builder;\n  }\n\n  async findOneById(id: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.id = :id\", { id });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findOneByOwnerAndRepo(owner: string, repo: string): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.full_name = :name\", {\n        name: `${owner}/${repo}`\n      });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findAll(\n    pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .orderBy(\"repo.pushed_at\", pageOptionsDto.order)\n      .offset(pageOptionsDto.skip)\n      .limit(pageOptionsDto.take);\n\n    console.log(queryBuilder.getSql());\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStargazers.html":{"url":"entities/RepoToUserStargazers.html","title":"entity - RepoToUserStargazers","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStargazers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.stargazers.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStargazers)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStargazers)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stargazers\",\n})\nexport class RepoToUserStargazers {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStargazers)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStargazers)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStars.html":{"url":"entities/RepoToUserStars.html","title":"entity - RepoToUserStars","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStars\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.stars.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStars)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStars)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stars\",\n})\nexport class RepoToUserStars {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStars)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStars)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserSubmissions.html":{"url":"entities/RepoToUserSubmissions.html","title":"entity - RepoToUserSubmissions","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserSubmissions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.submissions.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserSubmissions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserSubmissions)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_submissions\",\n})\nexport class RepoToUserSubmissions {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserVotes.html":{"url":"entities/RepoToUserVotes.html","title":"entity - RepoToUserVotes","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserVotes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.votes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserVotes)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserVotes)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_votes\",\n})\nexport class RepoToUserVotes {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserVotes)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserVotes)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SupabaseAuthResponse.html":{"url":"classes/SupabaseAuthResponse.html","title":"class - SupabaseAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SupabaseAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/supabase-auth-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                confirmed_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                created_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                    Optional\n                                last_sign_in_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        confirmed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        last_sign_in_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        user_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SupabaseAuthResponse {\n  readonly id: string;\n  readonly user_name?: string;\n  readonly role?: string;\n  readonly email?: string;\n  readonly confirmed_at?: string;\n  readonly last_sign_in_at?: string;\n  readonly created_at?: string;\n  readonly updated_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseGuard.html":{"url":"injectables/SupabaseGuard.html","title":"injectable - SupabaseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class SupabaseGuard extends AuthGuard(\"supabase\") {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseStrategy.html":{"url":"injectables/SupabaseStrategy.html","title":"injectable - SupabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/supabase.strategy.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(req: never)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(user: SupabaseAuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { SupabaseAuthStrategy, SupabaseAuthUser } from \"nestjs-supabase-auth\";\n\nexport type SupabaseAuthRequest = Partial & { user?: SupabaseAuthUser };\n\n@Injectable()\nexport class SupabaseStrategy extends PassportStrategy(\n  SupabaseAuthStrategy,\n  \"supabase\",\n) {\n  public constructor() {\n    super({\n      supabaseUrl: process.env.SUPABASE_URL,\n      supabaseKey: process.env.SUPABASE_API_KEY,\n      supabaseOptions: {},\n      supabaseJwtSecret: process.env.SUPABASE_JWT_SECRET,\n      extractor: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate(user: SupabaseAuthUser) {\n    return super.validate(user);\n  }\n\n  authenticate(req: never) {\n    super.authenticate(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                has_stars_data\n                            \n                            \n                                id\n                            \n                            \n                                is_open_sauced_member\n                            \n                            \n                                is_private\n                            \n                            \n                                open_issues\n                            \n                            \n                                repos\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has_stars_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_open_sauced_member\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open_issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repo => repo.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  OneToMany,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { Repo } from \"../repo/repo.entity\";\nimport { RepoToUserVotes } from \"../repo/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"../repo/repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"../repo/repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"../repo/repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"users\"\n})\nexport class User extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  open_issues: number;\n\n  @Column({ default: false })\n  has_stars_data: boolean;\n\n  @Column({ default: false })\n  is_private: boolean;\n\n  @Column({ default: false })\n  is_open_sauced_member: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @OneToMany(() => Repo, repo => repo.user)\n  repos: Repo[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.user)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.user)\n  repoToUserStars: RepoToUserStars[];\n\n  @OneToMany(() => RepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.user)\n  repoToUserSubmissions: RepoToUserSubmissions[];\n\n  @OneToMany(() => RepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.user)\n  repoToUserStargazers: RepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.9.0-beta.4 (2022-08-19)\n🔁 Continuous Integration\n\nimprove local development workflow along vite apps (b9f3798)\n\n1.9.0-beta.3 (2022-08-19)\n🐛 Bug Fixes\n\ncorrect counting of many to many tables (7249714)\n\n🧑‍💻 Code Refactoring\n\ncorrect stray console.log (b4c9879)\n\n1.9.0-beta.2 (2022-08-19)\n🔁 Continuous Integration\n\nonly deploy documentation on main branch (fad79b1), closes #14\n\n🍕 Features\n\nadd supabase auth session handler and working guards (ed9729a), closes #24\n\n1.9.0-beta.1 (2022-08-18)\n🍕 Features\n\nimplement simple supabase strategy guard (2f966a3)\n\n1.8.2 (2022-08-12)\n🐛 Bug Fixes\n\ncorrect ci release url docs (f0304d4)\n\n1.8.1 (2022-08-12)\n🔁 Continuous Integration\n\nimprove release urls (dd5e668)\n\n1.8.0 (2022-08-12)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\nupdate readme badges (17c54b9)\n\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\nadd get repository by id and full name (4552c66)\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.5 (2022-08-06)\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.4 (2022-08-06)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\n\n1.8.0-beta.3 (2022-08-05)\n🍕 Features\n\nadd get repository by id and full name (4552c66)\n\n1.8.0-beta.2 (2022-08-05)\n🍕 Features\n\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n1.8.0-beta.1 (2022-07-30)\n📝 Documentation\n\nupdate readme badges (17c54b9)\n\n1.7.12 (2022-07-30)\n🐛 Bug Fixes\n\npush all tags to docr (a9e1df6)\n\n1.7.11 (2022-07-30)\n🔁 Continuous Integration\n\npush to digital ocean container registry (cd8f21d)\n\n1.7.10 (2022-07-30)\n🔁 Continuous Integration\n\ncorrect the digital ocean tagging (673dca9)\n\n1.7.9 (2022-07-30)\n✅ Tests\n\ncheck release job outputs (31e4d60)\n\n1.7.8 (2022-07-29)\n🔁 Continuous Integration\n\ncorrect environment variables (6d23c24)\n\n1.7.7 (2022-07-29)\n✅ Tests\n\nprint out proper pull request target env variables (20880c7)\n\n1.7.6 (2022-07-29)\n🔁 Continuous Integration\n\necho github context (7adfb6b)\n\n1.7.5 (2022-07-29)\n🔁 Continuous Integration\n\nprovide variable as ENV (b57f47b)\n\n1.7.4 (2022-07-29)\n🔁 Continuous Integration\n\nchange pull request event target (20bc1e7)\n\n1.7.3 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect digital ocean docker tag based on target (b1a67da)\n\n1.7.2 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect static domain and release clean up workflow (a229a3b)\nupdate dependencies and list docr tags (79bf61d)\n\n🔁 Continuous Integration\n\nadd docr push dry run (5eddeb1)\nadd release workflow concurrency for demo purposes (63d6a92)\nextend digital ocean temporary token (d0d5ca5)\ntest bash variable environment (e1fe498)\n\n1.7.1 (2022-07-27)\n🔁 Continuous Integration\n\ndeploy developer mkdocs to github pages test (8837b2a)\n\n1.7.0 (2022-07-27)\n📝 Documentation\n\nchange github pages deploy to take tech mkdocs instead of api (bc3a37d)\n\n1.6.17 (2022-07-24)\n🔁 Continuous Integration\n\nadd temporary debug logging (ba8dfbb)\n\n1.6.16 (2022-07-23)\n🔁 Continuous Integration\n\nproperly copy contents from mounted container volume (c013b70)\n\n1.6.15 (2022-07-23)\n🔁 Continuous Integration\n\ncreate new container from release (b1eda28)\n\n1.6.14 (2022-07-23)\n🔁 Continuous Integration\n\ntest file is generated properly (c127cea)\n\n🤖 Build System\n\nattempt docker inspection again (2c0b3d1)\n\n1.6.13 (2022-07-23)\n🔁 Continuous Integration\n\ntest proper container name exposing (cc46460)\n\n1.6.12 (2022-07-23)\n🔁 Continuous Integration\n\ntest local swagger spec (7e9b8a4)\n\n1.6.11 (2022-07-21)\n🔁 Continuous Integration\n\ntest getting docker process list output (f5385b3)\n\n1.6.10 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to get value from running container (911df68)\ntest accessing running container by re-creating (77c734c)\n\n1.6.9 (2022-07-21)\n🔁 Continuous Integration\n\nget container name from runner context (94ba4e1)\n\n1.6.8 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to assign docker service name to running container (fe4b9e9)\n\n1.6.7 (2022-07-21)\n✅ Tests\n\nmount docker service and volumes (0848443)\n\n1.6.6 (2022-07-21)\n✅ Tests\n\nload docker container from artifact (b7c3395)\n\n1.6.5 (2022-07-21)\n🐛 Bug Fixes\n\ncorrect docker local creation (cd306f8)\n\n1.6.4 (2022-07-21)\n✅ Tests\n\nload docker container in flight environment (e145e2d)\n\n1.6.3 (2022-07-20)\n🤖 Build System\n\nupdate deployment and add simple repo submission structure (33fea7e)\n\n1.6.2 (2022-07-19)\n🤖 Build System\n\nrevert to production release container (8aee8e5)\n\n1.6.1 (2022-07-19)\n🤖 Build System\n\nimprove swagger generation (22d3cc1)\n\n🐛 Bug Fixes\n\ncorrect workflow yaml comments (7fe63aa)\n\n1.6.0 (2022-07-19)\n🎨 Styles\n\nimplement correct eslint rules for immediate scoping (bd6d621), closes #1\n\n🍕 Features\n\nupdate dependencies and nest to stable new version (c24937f)\n\n🔁 Continuous Integration\n\nadd docker build and static swagger docs jobs (81e8bbc)\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n🤖 Build System\n\nadd better eslint baseline configuration (3918a78)\nadd minimal eslint configuration (a0db0aa)\nadd minor deployment improvements and github pages adjustments (cb83f9d)\nimplement prettier rules in typescript eslint (166050d)\n\n🐛 Bug Fixes\n\ncorrect release workflow artifact strategy (b5b6ac5)\ncorrect rogue workflow artifact (61b67d5)\n\n1.5.1 (2022-07-13)\n🔁 Continuous Integration\n\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n📦 0-vortex/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.5.0 (2022-06-21)\n🍕 Features\n\nimplement proper starsCount (fdc11ea)\nimplement proper votesCount (607cf5d)\n\n1.4.0 (2022-06-17)\n🍕 Features\n\nadd minimal pagination decorator (ac31556)\n\n1.3.0 (2022-06-10)\n🍕 Features\n\nadd abstract pagination component (630f3b5)\nadd repository relations and limit select (b4d3785)\n\n1.2.0 (2022-06-09)\n🍕 Features\n\nattach user relationship to get repos (e663170)\n\n1.1.0 (2022-06-07)\n🍕 Features\n\nadd basic tld entities (273f337)\n\n1.0.2 (2022-06-05)\n🤖 Build System\n\nadd supabase migration system (34d521d)\n\n1.0.1 (2022-06-05)\n✅ Tests\n\nverify database diagrams generation (73d1c74)\n\n1.0.0 (2022-06-05)\n🍕 Features\n\nadjust health checks endpoints (cb9206d)\ninitial commit (5e7c6c7)\n\n🐛 Bug Fixes\n\ncorrect npm scripts, workflow node versiond and update deps (2c0b15f)\nupdate nest typeorm integration and correct db status (58bf922)\n\n🔥 Performance Improvements\n\nremove minor version engines requirements (7db9008)\n\n✅ Tests\n\nexplain current test configuration and unblock pipelines (272c09a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/supabase-auth-response.dto.ts\n            \n            class\n            SupabaseAuthResponse\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/supabase.guard.ts\n            \n            injectable\n            SupabaseGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.strategy.ts\n            \n            injectable\n            SupabaseStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/supabase.user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.user.decorator.ts\n            \n            variable\n            UserId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/dtos/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/endpoint.config.ts\n            \n            variable\n            getDomain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.entity.ts\n            \n            entity\n            Contribution\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.controller.ts\n            \n            controller\n            RepoController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repo/repo.entity.ts\n            \n            entity\n            Repo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.service.ts\n            \n            injectable\n            RepoService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.stargazers.entity.ts\n            \n            entity\n            RepoToUserStargazers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.stars.entity.ts\n            \n            entity\n            RepoToUserStars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.submissions.entity.ts\n            \n            entity\n            RepoToUserSubmissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.votes.entity.ts\n            \n            entity\n            RepoToUserVotes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../order.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/order.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        Order\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n  🍕 Open Sauced Nest Supabase API🍕\n  The path to your next Open Source contribution\n\n\n\n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n🚀 Live release environments\n\napi.opensauced.pizza\nbeta.api.opensauced.pizza\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=16.7.0\nnpm>=8.0.0\ndocker>=20.10.12\nsupabase>=0.18.0\n\n🔑 Database commands\nStarting the Supabase Studio\nFirst thing we have to do for local development is start the studio locally at localhost:54321:\nnpm run db:startMake changes\nIf we are adding a new table structure, first do it visually in the Supabase Studio and test locally.\nCheck the migration difference with the following command:\nnpm run db:changesIf everything is fine we can run the following command to apply the changes to the database:\nnpm run db:commit add_table_nameTest changes\nSimplest way to test the migrations are working is to reset the local database:\nnpm run db:resetPush changes\nIf everything is fine we can push the changes to the remote database:\nnpm run db:push🔑 Supabase structure\nClick the image to see the schema diagram full documentation.\n\n🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.9.0-beta.4\n        \n            Description : API dot Open Sauced is NestJS and SupaBase powered OAS3 backend designed to remove client complexity and provide a structured graph of all @open-sauced integrations\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/api.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/api.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/api.opensauced.pizza.git\n        \n            Author : TED Vortex \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageMetaParameters   (src/.../page-meta-parameters.dto.ts)\n                        \n                        \n                            SupabaseAuthRequest   (src/.../supabase.strategy.ts)\n                        \n                        \n                            SupabaseAuthRequest   (src/.../supabase.user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/dtos/page-meta-parameters.dto.ts\n    \n    \n        \n            \n                \n                    \n                    PageMetaParameters\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/auth/supabase.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    SupabaseAuthRequest\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/auth/supabase.user.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    SupabaseAuthRequest\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            getDomain   (src/.../endpoint.config.ts)\n                        \n                        \n                            User   (src/.../supabase.user.decorator.ts)\n                        \n                        \n                            UserId   (src/.../supabase.user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  model: TModel,\n) => {\n  return applyDecorators(\n    ApiExtraModels(PageDto, Repo),\n    ApiOkResponse({\n      description: \"Successfully received model list\",\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PageDto) },\n          {\n            properties: {\n              data: {\n                type: \"array\",\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/config/endpoint.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (subdomain?: string) =>\n  new URL(`https://${subdomain ? `${subdomain}.` : \"\" }${process.env.DOMAIN || \"opensauced.pizza\"}`).toString()\n                    \n                \n\n\n        \n    \n\n    src/auth/supabase.user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.user?.user_metadata?.sub as string;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
