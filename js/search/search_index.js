var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.207,1,3.612]],["body/modules/AppModule.html",[0,1.167,1,7.434,2,1.107,3,1.796,4,2.615,5,2.615,6,4.975,7,0.007,8,5.235,9,5.235,10,4.753,11,5.235,12,5.235,13,5.235,14,5.235,15,5.235,16,4.975,17,4.753,18,4.089,19,5.235,20,5.235,21,4.975,22,5.235,23,5.235,24,4.231,25,4.975,26,5.235,27,1.835,28,1.18,29,1.107,30,0.038,31,0.043,32,0.034,33,2.936,34,2.878,35,0.581,36,2.936,37,4.567,38,6.323,39,0.178,40,2.936,41,0.562,42,0.699,43,0.292,44,0.274,45,2.936,46,0.581,47,2.119,48,0.157,49,2.936,50,0.372,51,2.936,52,1.357,53,0.864,54,5.632,55,5.054,56,1.776,57,4.567,58,2.936,59,4.068,60,2.404,61,2.936,62,2.119,63,4.068,64,5.605,65,0.751,66,5.605,67,2.936,68,2.936,69,2.404,70,2.404,71,2.404,72,3.739,73,3.739,74,3.739,75,3.739,76,3.739,77,3.739,78,4.567,79,1.924,80,2.936,81,1.876,82,1.51,83,2.222,84,1.924,85,2.762,86,2.936,87,2.762,88,2.246,89,2.762,90,2.246,91,2.762,92,2.246,93,2.762,94,2.246,95,2.615,96,2.936,97,2.936,98,2.936,99,2.936,100,2.936,101,2.014,102,2.246,103,2.936,104,4.567,105,2.246,106,2.936,107,2.936,108,2.664,109,2.936,110,2.993,111,4.567,112,2.968,113,0.904,114,3.133,115,2.615,116,3.133,117,3.133,118,2.936,119,2.404,120,1.846,121,2.936,122,2.936,123,3.493,124,2.615,125,3.133,126,2.404,127,3.133,128,2.936,129,2.589,130,1.603,131,2.404,132,2.762,133,3.133,134,2.014,135,2.575,136,4.975,137,1.846,138,2.936,139,2.993,140,2.246,141,2.993,142,2.246,143,2.871,144,2.615,145,2.575,146,1.429,147,1.846,148,2.993,149,0.965,150,2.119,151,3.296,152,1.713,153,2.993,154,2.246,155,2.993,156,2.246,157,2.936,158,2.762,159,2.404,160,2.936,161,1.063,162,1.713,163,2.615,164,2.936,165,2.615,166,2.936,167,3.729,168,4.567,169,1.393,170,5.605,171,4.567,172,8.886,173,2.936,174,3.739,175,2.936,176,3.739,177,2.936,178,2.575,179,2.936,180,4.068,181,2.936,182,3.296,183,2.936,184,4.567,185,2.735,186,1.445,187,4.567,188,3.133,189,1.368,190,2.936,191,4.567,192,4.068,193,2.936,194,4.567,195,4.068,196,2.936,197,5.605,198,3.739,199,2.936,200,2.936,201,2.936,202,2.936,203,2.936,204,2.936,205,2.936,206,2.936,207,2.936,208,2.936,209,2.936,210,2.936,211,2.119,212,2.936,213,2.936,214,2.246,215,2.936,216,1.776,217,2.936,218,2.936,219,2.936,220,2.936,221,2.936,222,2.936,223,2.936,224,2.936,225,2.615,226,2.936,227,2.936,228,1.846,229,2.404,230,2.119,231,2.246,232,2.936,233,2.246,234,2.246,235,1.262,236,0.047,237,0.084,238,0.819,239,2.936,240,1.167,241,1.344,242,2.936,243,2.936,244,0.003,245,0.003]],["title/controllers/AuthController.html",[246,1.018,247,3.612]],["body/controllers/AuthController.html",[7,0.007,30,0.037,31,0.041,32,0.033,35,0.883,39,0.454,41,1.432,42,0.88,43,0.463,44,0.698,46,1.481,48,0.138,50,0.361,62,2.056,83,3.026,84,1.867,113,1.871,189,1.336,236,0.045,237,0.081,238,0.794,240,1.405,244,0.003,245,0.003,246,0.614,247,3.411,248,0.767,249,2.537,250,1.052,251,3.771,252,0.143,253,1.936,254,4.46,255,6.22,256,6.22,257,6.22,258,6.753,259,6.753,260,6.22,261,2.848,262,6.127,263,0.986,264,2.848,265,4.46,266,3.266,267,3.873,268,5.862,269,2.848,270,2.848,271,2.848,272,2.9,273,2.848,274,2.848,275,3.972,276,5.539,277,5.497,278,5.497,279,5.305,280,2.803,281,2.848,282,2.848,283,1.142,284,4.23,285,4.489,286,2.848,287,5.59,288,4.756,289,5.22,290,3.765,291,2.848,292,2.865,293,2.848,294,2.848,295,5.091,296,2.848,297,2.848,298,6.477,299,5.169,300,2.848,301,4.682,302,5.539,303,4.46,304,4.895,305,5.497,306,2.848,307,2.848,308,5.169,309,2.848,310,4.425,311,2.848,312,2.848,313,2.848,314,6.342,315,1.954,316,2.848,317,2.848,318,2.848,319,2.056,320,1.508,321,1.284,322,3.58,323,3.507,324,3.458,325,3.047,326,2.922,327,1.052,328,0.466,329,1.17,330,2.537,331,1.954,332,2.848,333,5.164,334,2.848,335,2.848,336,2.748,337,2.056,338,3.602,339,2.537,340,3.602,341,2.537,342,5.497,343,2.537,344,2.537,345,2.537,346,2.537,347,2.537,348,2.848,349,2.848,350,1.011,351,2.848,352,3.458,353,2.823,354,2.848,355,2.848,356,1.881,357,3.771,358,4.46,359,3.651,360,3.972,361,1.648,362,1.832,363,3.972,364,5.497,365,1.268,366,3.651,367,5.497,368,1.722,369,2.537,370,1.722,371,0.954,372,1.661,373,2.331,374,3.411,375,3.651,376,3.972,377,3.411,378,3.411,379,3.411,380,3.411,381,3.411,382,2.361,383,3.411,384,3.411,385,3.972,386,1.963,387,2.848,388,1.722,389,2.178,390,2.848,391,1.407,392,2.848,393,2.848,394,2.848,395,2.848,396,1.193,397,2.848,398,4.46,399,2.178,400,2.848,401,2.848,402,2.848,403,2.848,404,2.848,405,2.848,406,2.848,407,2.848,408,3.651,409,2.848,410,4.895,411,0.434,412,2.848,413,2.848,414,2.848,415,2.848,416,2.848,417,2.848,418,2.848,419,2.848,420,2.848,421,2.848,422,2.848,423,2.848,424,2.848,425,3.651,426,2.848,427,2.848]],["title/modules/AuthModule.html",[0,1.207,6,3.24]],["body/modules/AuthModule.html",[0,1.913,2,2.22,3,2.944,6,6.767,7,0.007,10,5.989,24,5.33,25,6.269,27,3.008,28,2.366,29,2.22,30,0.077,31,0.086,32,0.069,34,3.144,48,0.152,50,0.747,101,4.039,113,1.165,114,4.039,115,5.243,119,4.819,235,3.217,236,0.094,237,0.168,244,0.005,245,0.005,247,6.294,248,2.016,329,3.973,330,5.243,428,5.243,429,5.243,430,5.243,431,5.243,432,6.269,433,6.981,434,5.887,435,3.374,436,7.485,437,4.819,438,5.887,439,5.887,440,5.243]],["title/interfaces/ChatResponse.html",[441,3.24,442,3.612]],["body/interfaces/ChatResponse.html",[7,0.007,30,0.077,31,0.086,32,0.069,43,0.451,48,0.132,50,0.749,55,5.181,56,3.572,113,1.169,162,3.446,189,1.77,231,4.517,236,0.094,237,0.168,244,0.005,245,0.005,252,0.297,253,1.251,283,0.763,284,3.225,320,3.128,356,2.001,357,5.146,386,2.056,391,1.111,411,1.257,441,4.052,442,6.303,443,4.835,444,4.517,445,4.835,446,1.386,447,7.723,448,7.501,449,1.339,450,7.487,451,4.835,452,5.261,453,3.225,454,5.948,455,3.446,456,2.182,457,5.261,458,6.681,459,5.654,460,4.517,461,4.835,462,4.052,463,4.835,464,5.261,465,5.261,466,3.871,467,5.261,468,4.264,469,5.261,470,4.517,471,5.261,472,5.261,473,5.261,474,5.261,475,5.261,476,2.228,477,5.261,478,4.517,479,4.835,480,5.261,481,2.097,482,5.261,483,2.539,484,5.261,485,3.713,486,5.261,487,5.261,488,2.274,489,5.261]],["title/controllers/CodeExplanationController.html",[246,1.018,490,3.612]],["body/controllers/CodeExplanationController.html",[7,0.007,30,0.078,31,0.087,32,0.07,35,1.497,39,0.364,41,1.145,42,0.662,43,0.393,44,0.559,46,1.185,48,0.144,50,0.759,149,1.967,189,1.794,236,0.096,237,0.17,244,0.005,245,0.005,246,1.29,248,1.612,250,2.212,252,0.301,253,1.757,263,0.789,266,2.853,284,3.269,320,3.17,321,2.699,322,3.495,323,4.266,326,2.853,327,2.212,328,0.98,329,2.46,350,2.125,352,2.766,353,2.258,356,1.454,386,1.641,391,1.126,396,0.997,456,2.212,488,2.306,490,5.786,491,3.108,492,4.958,493,5.333,494,4.322,495,5.786,496,5.988,497,6.806,498,5.988,499,7.566,500,5.786,501,6.193,502,4.958,503,4.901,504,4.413,505,3.621,506,5.988,507,2.005,508,5.19,509,4.413,510,2.838,511,3.079,512,4.146,513,5.333,514,5.69,515,5.333,516,4.322,517,4.322,518,3.269,519,5.988,520,4.579,521,5.436,522,5.988]],["title/injectables/CodeExplanationService.html",[449,0.843,514,3.24]],["body/injectables/CodeExplanationService.html",[7,0.007,30,0.075,31,0.084,32,0.067,35,1.46,39,0.494,41,1.557,42,0.9,43,0.423,44,0.759,46,1.46,48,0.13,50,0.729,161,2.083,162,3.355,216,3.478,236,0.092,237,0.164,238,1.604,240,2.081,244,0.005,245,0.005,252,0.289,253,1.724,283,1.052,356,1.79,370,3.478,386,1.576,388,3.478,391,1.387,411,1.241,449,1.317,454,5.059,455,5.298,456,2.125,491,3.527,492,5.627,497,6.197,501,6.037,507,2.469,511,2.958,512,4.069,513,5.123,514,5.059,523,1.89,524,5.123,525,7.375,526,5.64,527,4.399,528,5.752,529,7.375,530,5.752,531,6.037,532,5.89,533,5.752,534,5.059,535,4.152,536,4.152,537,4.399,538,4.708,539,4.708,540,4.399,541,4.152,542,4.152,543,2.875,544,4.399,545,4.399,546,4.708,547,5.64,548,4.399,549,4.708,550,4.708,551,4.399,552,5.192,553,4.399,554,4.399,555,4.399]],["title/controllers/CodeRefactorSuggestionController.html",[246,1.018,556,3.612]],["body/controllers/CodeRefactorSuggestionController.html",[7,0.007,30,0.077,31,0.086,32,0.069,35,1.484,39,0.359,41,1.13,42,0.653,43,0.39,44,0.551,46,1.169,48,0.143,50,0.749,149,1.941,189,1.77,236,0.094,237,0.168,244,0.005,245,0.005,246,1.273,248,1.591,250,2.182,252,0.297,253,1.746,263,0.778,266,2.829,284,3.225,320,3.128,321,2.662,322,3.466,323,4.229,326,2.829,327,2.182,328,0.967,329,2.426,350,2.097,352,2.729,353,2.228,356,1.434,386,1.619,391,1.111,396,0.984,456,2.182,488,2.274,491,3.081,492,4.916,494,4.264,495,5.736,500,5.736,502,4.916,503,4.835,504,4.375,505,3.572,507,1.978,508,5.146,509,4.375,510,2.799,511,3.037,512,4.12,516,4.264,517,4.264,518,3.225,520,4.517,521,5.865,556,5.736,557,6.274,558,5.261,559,5.907,560,6.788,561,5.907,562,7.501,563,5.414,564,5.907,565,4.517,566,5.654,567,4.835,568,5.907,569,5.907]],["title/injectables/CodeRefactorSuggestionService.html",[449,0.843,566,3.24]],["body/injectables/CodeRefactorSuggestionService.html",[7,0.007,30,0.072,31,0.079,32,0.064,35,1.412,39,0.482,41,1.519,42,0.878,43,0.413,44,0.741,46,1.412,48,0.127,50,0.693,161,1.979,162,3.188,216,3.305,230,3.945,236,0.087,237,0.156,238,1.524,240,2.031,244,0.005,245,0.005,252,0.275,253,1.683,280,3.435,283,1.027,356,1.732,370,3.305,386,1.498,388,3.305,391,1.341,396,0.91,411,1.211,449,1.274,454,4.895,455,5.226,456,2.019,491,3.459,492,5.519,507,2.389,511,2.81,512,4.562,521,5.206,523,1.796,526,5.456,527,4.18,531,5.84,532,5.777,534,4.895,535,3.945,536,3.945,537,4.18,538,6.503,539,4.474,540,4.18,541,3.945,542,3.945,543,2.732,544,4.18,545,4.18,546,4.474,547,5.456,548,4.18,549,4.474,550,4.474,551,4.18,552,5.093,553,4.18,554,4.18,555,4.18,557,6.146,560,6.078,565,4.18,566,4.895,570,4.474,571,6.355,572,4.868,573,6.355,574,4.868,575,4.868,576,4.474,577,4.474,578,4.474,579,4.474,580,4.868,581,4.868,582,3.945,583,4.474,584,4.868,585,3.435,586,6.355,587,4.474,588,2.984,589,4.474]],["title/controllers/CodeTestSuggestionController.html",[246,1.018,590,3.612]],["body/controllers/CodeTestSuggestionController.html",[7,0.007,30,0.078,31,0.087,32,0.07,35,1.494,39,0.362,41,1.141,42,0.659,43,0.393,44,0.557,46,1.181,48,0.143,50,0.757,149,1.961,189,1.788,236,0.095,237,0.17,244,0.005,245,0.005,246,1.286,248,1.607,250,2.205,252,0.3,253,1.754,263,0.786,266,2.847,284,3.258,320,3.16,321,2.69,322,3.488,323,4.256,326,2.847,327,2.205,328,0.977,329,2.451,350,2.118,352,2.757,353,2.25,356,1.449,386,1.635,391,1.122,396,0.994,456,2.205,488,2.298,491,3.101,492,4.948,494,4.307,495,5.773,500,5.773,502,4.948,503,4.885,504,4.404,505,3.609,507,1.998,508,5.179,509,4.404,510,2.828,511,3.068,512,4.14,516,4.307,517,4.307,518,3.258,520,4.563,521,5.427,565,4.563,567,4.885,590,5.773,591,5.315,592,5.967,593,6.801,594,5.967,595,7.55,596,5.704,597,5.967,598,5.681,599,5.967,600,5.967]],["title/injectables/CodeTestSuggestionService.html",[449,0.843,598,3.24]],["body/injectables/CodeTestSuggestionService.html",[7,0.007,30,0.073,31,0.081,32,0.065,35,1.429,39,0.487,41,1.533,42,0.886,43,0.417,44,0.748,46,1.429,48,0.128,50,0.706,161,2.017,162,3.249,216,3.368,230,4.02,236,0.089,237,0.158,238,1.553,240,2.049,244,0.005,245,0.005,252,0.28,253,1.698,280,3.501,283,1.036,356,1.753,370,3.368,388,3.368,391,1.358,396,0.928,449,1.29,454,4.955,455,5.253,456,2.058,491,3.484,492,5.559,507,2.419,511,2.864,512,4.502,521,4.734,523,1.83,526,5.524,527,4.259,532,4.955,535,4.02,536,4.02,537,4.259,538,6.562,540,4.259,541,4.02,542,4.02,543,2.784,544,4.259,545,4.259,546,4.559,547,5.524,548,4.259,551,4.259,552,5.13,553,4.259,554,4.259,555,4.259,565,4.259,570,4.559,572,4.96,574,4.96,575,4.96,576,4.559,577,4.559,578,4.559,579,4.559,580,4.96,581,4.96,582,4.02,583,4.559,584,4.96,585,3.501,586,6.433,587,4.559,588,3.041,589,4.559,593,6.122,596,5.902,598,4.955,601,7.223,602,7.223,603,7.223,604,5.57]],["title/modules/ContributionModule.html",[0,1.207,8,3.409]],["body/modules/ContributionModule.html",[0,2.019,2,2.419,3,3.106,7,0.007,8,6.95,18,5.264,27,3.174,28,2.578,29,2.419,30,0.084,31,0.093,32,0.075,34,3.318,48,0.151,50,0.813,52,2.964,53,1.887,79,4.204,81,2.635,82,3.298,85,4.776,169,1.957,235,3.395,236,0.102,237,0.183,244,0.005,245,0.005,248,2.127,435,3.56,605,5.713,606,5.713,607,5.713,608,6.415,609,6.711,610,6.415,611,6.544,612,5.251,613,5.713,614,1.668,615,6.415,616,4.4]],["title/classes/ContributionPageOptionsDto.html",[237,0.134,617,3.409]],["body/classes/ContributionPageOptionsDto.html",[7,0.007,30,0.071,31,0.079,32,0.063,39,0.529,43,0.453,44,0.88,48,0.126,236,0.113,237,0.202,241,2.795,244,0.005,245,0.005,252,0.273,263,1.148,283,1.023,328,0.888,361,2.623,362,2.916,446,1.312,483,3.402,543,2.711,617,5.124,618,1.625,619,5.811,620,2.759,621,2.788,622,2.57,623,2.453,624,6.052,625,3.65,626,4.002,627,3.956,628,7.133,629,2.514,630,3.661,631,7.048,632,4.002,633,4.462,634,5.124,635,5.423,636,4.83,637,2.871,638,4.002,639,2.961,640,3.058,641,4.734,642,3.163,643,3.956,644,2.788,645,3.058,646,3.163,647,3.058,648,3.163,649,3.549,650,2.638,651,2.57,652,3.058,653,3.058,654,3.163,655,3.549,656,3.409,657,3.549,658,1.964,659,2.004,660,1.513,661,4.141,662,4.87,663,5.811,664,4.293,665,5.423]],["title/injectables/ContributionService.html",[449,0.843,609,3.24]],["body/injectables/ContributionService.html",[7,0.007,30,0.076,31,0.084,32,0.067,35,1.461,39,0.448,41,1.412,42,0.816,43,0.384,44,0.689,46,1.14,48,0.149,50,0.731,53,1.695,65,1.473,85,3.484,169,1.758,186,1.823,189,2.212,236,0.092,237,0.164,238,2.059,240,1.473,244,0.005,245,0.005,252,0.29,253,1.726,272,2.472,283,1.053,356,2.156,386,2.023,391,1.083,449,1.318,523,1.893,609,5.064,612,4.716,617,6.201,620,1.893,623,1.988,628,4.716,631,5.131,643,2.88,644,2.962,659,2.129,660,1.607,666,5.131,667,4.838,668,5.762,669,2.621,670,5.762,671,7.383,672,4.838,673,6.559,674,5.762,675,3.952,676,2.42,677,2.086,678,2.218,679,4.716,680,4.406,681,4.295,682,3.146,683,5.131,684,5.762,685,3.249,686,5.762,687,5.131,688,5.131,689,5.762,690,5.131,691,5.131,692,5.762,693,4.716,694,4.716,695,3.909,696,3.248,697,3.248,698,3.248]],["title/controllers/ContributorController.html",[246,1.018,699,3.612]],["body/controllers/ContributorController.html",[7,0.007,30,0.079,31,0.087,32,0.07,35,1.501,39,0.365,41,1.149,42,0.664,43,0.394,44,0.56,46,1.189,48,0.149,50,0.762,129,4.156,130,3.28,149,2.491,236,0.096,237,0.171,241,1.768,244,0.005,245,0.005,246,1.295,248,1.618,250,2.22,252,0.302,253,1.76,263,0.791,266,2.859,272,2.539,325,2.982,326,2.859,327,2.22,328,0.983,350,2.133,353,2.266,391,1.13,456,2.22,518,4.14,623,2.042,660,1.676,664,3.633,677,2.175,678,2.313,699,5.798,700,5.351,701,5.996,702,8.996,703,6.008,704,6.297,705,4.918,706,6.753,707,5.473,708,4.585,709,4.275,710,6.008,711,5.996,712,6.008,713,3.259,714,2.776,715,2.923,716,2.708,717,2.923,718,5.222,719,4.595,720,5.201,721,5.351,722,6.008,723,6.008,724,4.918,725,6.008,726,6.008]],["title/modules/ContributorModule.html",[0,1.207,9,3.409]],["body/modules/ContributorModule.html",[0,2.089,2,2.559,3,3.215,7,0.007,9,6.83,17,6.202,27,3.285,28,2.727,29,2.559,30,0.089,31,0.099,32,0.079,34,3.434,48,0.149,50,0.861,52,3.136,53,1.997,129,3.776,130,3.705,131,5.555,132,4.104,133,4.656,134,4.656,169,2.07,236,0.108,237,0.193,244,0.005,245,0.005,248,2.201,699,6.708,727,6.787,728,6.787,729,6.787,730,6.787,731,6.044]],["title/classes/CreateEndorsementDto.html",[237,0.134,732,3.24]],["body/classes/CreateEndorsementDto.html",[7,0.007,30,0.068,31,0.125,32,0.061,39,0.536,43,0.502,44,0.643,48,0.11,113,1.633,228,4.335,236,0.083,237,0.196,244,0.005,245,0.005,252,0.261,263,1.163,283,1.209,328,0.85,365,2.037,371,3.262,382,4.37,396,1.471,411,1.347,446,1.275,618,1.555,629,1.825,650,2.525,655,3.448,657,3.448,658,1.879,669,2.104,732,4.731,733,8.027,734,4.249,735,6.898,736,6.898,737,3.578,738,6.898,739,6.898,740,3.78,741,7.156,742,6.142,743,2.392,744,5.191,745,5.191,746,4.978,747,5.191,748,5.191,749,5.191,750,5.191,751,6.142,752,4.249,753,5.191,754,5.645,755,5.191,756,5.191,757,5.191,758,5.191,759,3.886,760,3.547,761,5.661,762,4.623,763,5.191,764,4.623,765,5.191,766,4.623]],["title/classes/CreateInsightDto.html",[237,0.134,767,3.409]],["body/classes/CreateInsightDto.html",[7,0.007,30,0.077,31,0.085,32,0.069,39,0.499,42,0.987,43,0.5,48,0.138,161,2.125,167,3.84,185,2.213,236,0.094,237,0.234,244,0.005,245,0.005,252,0.295,263,1.082,289,4.895,328,0.96,365,1.353,396,1.369,411,1.319,446,1.38,618,1.758,620,2.842,658,2.125,669,2.279,740,3.616,743,2.334,759,3.806,760,3.21,767,5.391,768,7.08,769,4.803,770,6.284,771,3.375,772,4.58,773,4.324,774,5.712,775,4.803,776,5.868,777,5.226,778,5.868,779,5.739,780,5.124,781,6.652,782,5.669,783,5.226,784,5.868,785,4.803,786,6.114,787,3.845,788,4.803,789,3.845,790,5.868,791,3.423,792,3.203]],["title/classes/CreateInsightMemberDto.html",[237,0.134,793,3.612]],["body/classes/CreateInsightMemberDto.html",[7,0.007,30,0.09,31,0.099,32,0.08,39,0.415,43,0.458,48,0.131,236,0.109,237,0.234,244,0.006,245,0.006,252,0.344,263,0.901,301,5.264,328,1.12,396,1.139,411,1.392,446,1.518,618,2.049,658,2.476,740,3.01,743,2.099,759,3.613,768,6.722,773,4.563,789,5.382,793,6.28,794,5.599,795,5.927,796,7.314,797,6.092,798,6.84,799,7.314,800,5.599]],["title/classes/CreateLogDto.html",[237,0.134,801,3.612]],["body/classes/CreateLogDto.html",[7,0.007,30,0.086,31,0.096,32,0.077,39,0.526,43,0.451,44,0.877,48,0.105,211,6.253,228,5.445,236,0.105,237,0.229,241,2.846,244,0.005,245,0.005,252,0.332,263,1.141,411,1.433,446,1.485,453,4.73,618,1.976,657,4.507,658,2.388,760,3.875,801,6.143,802,8.03,803,5.874,804,8.663,805,6.595,806,6.595,807,6.595]],["title/classes/CreateUserCollaborationDto.html",[237,0.134,808,3.612]],["body/classes/CreateUserCollaborationDto.html",[7,0.007,30,0.083,31,0.093,32,0.074,39,0.477,43,0.485,48,0.126,113,1.688,149,2.583,178,5.159,236,0.102,237,0.224,244,0.005,245,0.005,252,0.32,263,1.036,328,1.042,396,1.31,411,1.455,446,1.453,453,4.996,532,4.368,618,1.908,658,2.306,740,3.46,743,2.277,746,5.675,759,3.753,760,3.666,808,6.013,809,6.982,810,5.213,811,6.111,812,7.862,813,7.862,814,7.002,815,6.368,816,6.368,817,6.368,818,6.368,819,5.671,820,4.87,821,4.87,822,6.368,823,5.671]],["title/classes/CreateUserHighlightDto.html",[237,0.134,824,3.409]],["body/classes/CreateUserHighlightDto.html",[7,0.007,30,0.072,31,0.08,32,0.064,39,0.512,43,0.498,44,0.787,48,0.114,113,1.731,146,4.556,161,2.589,236,0.088,237,0.203,244,0.005,245,0.005,252,0.276,263,1.11,328,0.897,371,3.206,382,4.63,396,1.405,411,1.485,446,1.321,532,3.761,588,3.903,618,1.642,650,3.478,655,3.977,657,3.977,658,1.985,740,3.146,743,2.367,759,3.501,760,3.624,809,7.158,819,4.883,823,4.883,824,5.16,825,4.883,826,5.742,827,6.312,828,6.448,829,5.288,830,5.483,831,5.483,832,6.367,833,2.696,834,4.685,835,5.468,836,3.073,837,5.483,838,5.483,839,5.483,840,5.483,841,6.367,842,5.483,843,5.483,844,7.15,845,4.883,846,3.198,847,5.483,848,2.412]],["title/injectables/CustomLogger.html",[449,0.843,849,3.409]],["body/injectables/CustomLogger.html",[7,0.007,30,0.06,31,0.066,32,0.053,35,1.246,39,0.528,41,1.623,42,0.938,43,0.453,44,0.792,46,1.623,48,0.125,50,0.576,55,5.47,56,2.745,211,5.919,216,4.721,228,6.158,236,0.073,237,0.129,238,1.266,240,1.848,241,2.127,244,0.004,245,0.004,252,0.228,253,2.007,391,1.542,411,1.513,446,1.164,449,1.124,453,5.173,507,2.746,523,1.491,552,5.263,622,2.28,629,1.201,675,5.822,849,5.218,850,7.902,851,4.043,852,7.229,853,8.703,854,5.918,855,6.391,856,7.229,857,6.438,858,6.296,859,7.808,860,5.822,861,6.296,862,6.296,863,4.539,864,6.296,865,7.808,866,4.539,867,6.296,868,4.539,869,6.296,870,4.539,871,6.296,872,4.539,873,4.539,874,4.539,875,4.043,876,4.539,877,4.539,878,4.539,879,4.539,880,8.201,881,4.539,882,4.539,883,6.296]],["title/modules/CustomerModule.html",[0,1.207,10,3.095]],["body/modules/CustomerModule.html",[0,2.092,2,2.564,3,3.218,7,0.007,10,6.275,27,3.288,28,2.733,29,2.564,30,0.089,31,0.099,32,0.079,34,2.857,48,0.146,50,0.862,52,3.142,53,2.001,117,4.665,169,2.074,235,3.517,236,0.109,237,0.193,244,0.005,245,0.005,340,6.458,435,3.688,884,6.056,885,6.056,886,6.056,887,6.8,888,6.056,889,6.8,890,6.8]],["title/injectables/CustomerService.html",[340,3.095,449,0.843]],["body/injectables/CustomerService.html",[7,0.007,30,0.074,31,0.083,32,0.066,35,1.447,39,0.537,41,1.634,42,0.944,43,0.444,44,0.797,46,1.691,48,0.136,50,0.72,53,1.67,65,1.451,117,3.895,169,1.732,236,0.091,237,0.162,238,2.04,240,1.451,244,0.005,245,0.005,252,0.286,253,1.997,283,1.17,292,2.449,340,4.793,356,1.775,365,2.039,391,1.606,411,1.38,449,1.306,507,2.709,523,1.865,669,2.606,676,2.385,685,3.218,888,5.057,891,5.057,892,6.513,893,3.851,894,7.314,895,7.314,896,5.678,897,5.678,898,7.314,899,7.314,900,7.61,901,5.678,902,5.678,903,7.314,904,5.678,905,7.314,906,5.678,907,5.678,908,5.678,909,3.379,910,5.678,911,3.76,912,5.678,913,5.678]],["title/classes/DatabaseLoggerMiddleware.html",[105,3.612,237,0.134]],["body/classes/DatabaseLoggerMiddleware.html",[7,0.007,30,0.106,31,0.063,32,0.051,35,1.204,39,0.541,41,1.844,42,0.985,43,0.456,44,0.818,46,1.699,47,5.813,48,0.112,50,0.548,65,1.105,69,3.537,70,3.537,71,3.537,105,5.384,188,5.525,189,1.294,211,5.082,236,0.097,237,0.123,238,1.205,240,2.136,241,2.071,244,0.004,245,0.004,252,0.217,283,0.91,370,2.613,388,2.613,391,1.675,411,1.478,446,1.124,453,4.397,507,2.559,552,3.679,618,1.294,629,1.144,675,6.012,713,3.767,855,6.839,857,6.271,914,8.042,915,3.537,916,4.98,917,7.041,918,6.084,919,6.084,920,6.084,921,6.084,922,6.084,923,6.084,924,6.084,925,6.084,926,6.084,927,9.737,928,4.321,929,6.084,930,4.321,931,6.084,932,4.321,933,6.084,934,4.321,935,6.084,936,4.321,937,1.736,938,6.084,939,4.321,940,6.084,941,4.321,942,4.321,943,3.849,944,4.321,945,4.321,946,7.642,947,4.321,948,7.041,949,4.321,950,3.849,951,4.321,952,7.041,953,4.321,954,4.321,955,4.321]],["title/entities/DbContribution.html",[85,2.856,956,1.228]],["body/entities/DbContribution.html",[7,0.007,30,0.05,31,0.055,32,0.044,39,0.533,42,0.795,43,0.488,44,0.746,48,0.115,65,0.969,81,2.956,82,1.948,85,3.348,113,1.096,129,2.558,185,2.713,186,1.199,236,0.061,237,0.108,244,0.004,245,0.004,252,0.191,263,1.155,283,1.094,290,2.558,328,0.62,361,2.417,362,2.687,365,1.765,371,3.254,382,4.053,396,1.41,411,1.097,446,1.023,476,1.429,481,2.554,518,3.023,585,3.48,614,1.991,622,1.372,629,2.24,662,4.488,663,5.355,664,4.629,669,1.689,737,3.536,743,2.372,754,4.532,833,3.192,836,3.093,848,2.436,937,3.401,956,1.44,957,3.375,958,3.183,959,3.284,960,4.931,961,3.928,962,3.789,963,4.715,964,4.715,965,3.928,966,6.408,967,3.789,968,4.931,969,5.536,970,3.789,971,4.936,972,3.789,973,2.495,974,3.76,975,3.436,976,6.708,977,2.436,978,4.057,979,1.751,980,3.555,981,3.724,982,2.891,983,3.789,984,2.291,985,2.956,986,3.789,987,2.956,988,3.789,989,3.789,990,3.501,991,4.234,992,4.234,993,2.599,994,3.789,995,2.136,996,3.789,997,3.122,998,3.789,999,3.375,1000,3.789,1001,2.38,1002,2.931,1003,2.847,1004,2.291,1005,3.789,1006,5.536,1007,3.789,1008,3.789,1009,3.358,1010,2.931,1011,2.069,1012,3.122,1013,3.122,1014,2.847,1015,2.436,1016,2.931,1017,3.27,1018,3.391,1019,2.949,1020,1.557,1021,1.557,1022,2.898,1023,3.789,1024,2.735,1025,2.21,1026,3.102,1027,2.136,1028,3.102,1029,3.789,1030,3.375]],["title/entities/DbCustomer.html",[117,3.24,956,1.228]],["body/entities/DbCustomer.html",[7,0.007,30,0.083,31,0.093,32,0.074,39,0.477,42,0.704,43,0.444,48,0.126,65,1.628,113,1.556,117,5.394,120,4.942,186,2.015,236,0.102,237,0.181,244,0.005,245,0.005,252,0.32,263,1.036,283,1.016,365,2.11,371,3.121,396,1.31,408,6.436,411,1.199,446,1.453,476,2.401,622,2.306,637,4.163,743,2.277,900,7.597,956,2.045,959,3.23,963,5.153,964,5.153,965,4.293,987,3.23,1009,3.303,1010,4.163,1011,3.477,1018,3.504,1020,2.616,1021,2.616,1024,4.596,1031,5.671,1032,4.87,1033,6.368,1034,5.671,1035,6.368,1036,6.368,1037,3.018,1038,5.671]],["title/entities/DbEmoji.html",[143,2.969,956,1.228]],["body/entities/DbEmoji.html",[7,0.007,30,0.057,31,0.064,32,0.051,39,0.534,42,0.927,43,0.487,44,0.783,48,0.123,65,1.12,136,3.005,143,3.861,145,4.335,146,3.938,147,2.753,185,2.316,186,1.386,236,0.07,237,0.125,244,0.004,245,0.004,252,0.22,263,1.158,283,0.794,290,2.838,328,0.717,361,2.621,362,2.914,365,1.636,371,3.257,382,4.286,396,1.398,411,1.28,446,1.135,476,1.652,481,2.18,483,1.883,588,4.197,629,2.034,743,2.361,833,3.165,836,2.64,848,1.928,937,3.372,956,1.597,958,3.451,959,3.158,973,2.768,974,3.72,975,3.304,977,2.703,978,3.463,979,2.024,980,3.525,981,3.693,982,3.089,984,2.649,985,2.523,987,2.523,990,2.988,1001,2.64,1002,3.252,1003,3.158,1004,2.649,1009,3.23,1014,3.158,1015,2.703,1016,3.252,1017,3.546,1018,3.325,1019,3.197,1020,1.799,1021,1.799,1027,2.47,1039,3.901,1040,7.093,1041,5.119,1042,5.879,1043,4.381,1044,4.381,1045,7.199,1046,4.213,1047,4.697,1048,3.901,1049,3.861,1050,4.381,1051,4.213,1052,3.586,1053,4.381,1054,4.381,1055,4.381,1056,3.586,1057,5.028,1058,6.142,1059,4.381,1060,4.381,1061,4.381,1062,4.381,1063,5.028,1064,3.158,1065,3.901,1066,3.162,1067,2.871,1068,4.381]],["title/entities/DbEndorsement.html",[158,2.856,956,1.228]],["body/entities/DbEndorsement.html",[7,0.007,30,0.058,31,0.118,32,0.052,39,0.536,42,0.492,43,0.502,44,0.824,48,0.099,65,1.138,113,1.532,158,3.757,186,1.409,228,3.905,236,0.071,237,0.127,244,0.004,245,0.004,252,0.224,263,1.163,283,1.09,361,2.644,365,2.069,371,3.262,382,3.29,396,1.471,411,1.347,446,1.148,476,1.679,481,2.205,629,1.644,669,1.895,735,6.373,736,6.373,737,3.306,738,6.373,739,6.373,741,7.186,742,5.533,743,2.368,746,4.484,751,5.533,764,3.966,766,3.966,833,2.343,836,2.67,848,1.959,937,2.497,956,1.616,959,3.556,963,5.528,964,5.528,965,4.605,973,2.007,974,3.181,975,2.67,977,2.734,979,2.057,980,2.61,981,2.734,982,2.497,987,2.552,1001,2.67,1009,3.637,1015,2.734,1018,3.627,1019,2.8,1020,1.829,1021,1.829,1037,2.11,1049,5.302,1051,4.262,1052,3.645,1064,3.194,1066,3.214,1069,3.966,1070,4.453,1071,3.214,1072,4.453,1073,4.453,1074,3.966,1075,4.453,1076,4.453,1077,4.453,1078,6.213,1079,4.751,1080,4.453,1081,5.921,1082,4.453,1083,4.453,1084,4.453,1085,3.214,1086,3.966]],["title/entities/DbInsight.html",[108,2.755,956,1.228]],["body/entities/DbInsight.html",[7,0.007,30,0.048,31,0.053,32,0.043,39,0.536,42,0.903,43,0.483,44,0.737,48,0.121,65,0.936,83,3.444,84,2.4,108,3.15,110,4.639,112,1.939,113,1.616,161,1.955,185,3.161,186,1.159,236,0.059,237,0.104,244,0.004,245,0.004,252,0.184,263,1.162,283,0.915,328,0.6,361,2.37,362,2.635,365,1.884,371,3.262,396,1.425,411,1.079,446,0.998,476,1.381,481,2.803,512,1.831,620,2.326,622,1.326,629,2.218,743,2.387,770,4.905,771,2.635,772,3.748,773,4.643,774,4.13,789,2.4,827,3.898,833,2.978,836,3.395,846,3.15,848,2.822,937,3.174,956,1.404,958,3.121,959,3.244,963,4.639,964,4.639,965,3.865,966,4.809,971,3.704,973,2.891,974,3.668,975,3.395,977,2.376,979,1.692,980,3.318,981,3.475,982,3.174,985,2.218,987,2.218,990,2.627,995,2.065,997,3.045,1001,3.395,1009,3.318,1010,2.859,1011,2.948,1012,3.045,1013,3.045,1014,2.777,1015,2.376,1016,2.859,1017,3.206,1018,3.355,1019,3.191,1020,1.505,1021,1.505,1037,2.559,1056,2.998,1063,4.42,1064,2.777,1071,2.644,1087,3.262,1088,6.414,1089,6.414,1090,2.789,1091,3.663,1092,3.898,1093,2.644,1094,3.663,1095,3.262,1096,3.663,1097,5.109,1098,6.305,1099,5.4,1100,4.809,1101,3.663,1102,3.663,1103,3.663,1104,3.663,1105,4.809,1106,5.4,1107,3.663,1108,5.4,1109,3.663,1110,4.42,1111,3.663,1112,3.704,1113,2.801,1114,3.663,1115,3.663,1116,3.663,1117,3.663,1118,2.302,1119,3.663]],["title/entities/DbInsightMember.html",[141,3.095,956,1.228]],["body/entities/DbInsightMember.html",[7,0.007,30,0.048,31,0.054,32,0.043,39,0.529,42,0.875,43,0.486,44,0.85,48,0.087,65,0.942,113,1.074,141,3.555,185,3.167,186,1.166,236,0.059,237,0.105,244,0.004,245,0.004,252,0.185,263,1.148,283,0.918,301,4.003,361,2.379,362,2.645,365,1.887,371,3.247,396,1.452,411,1.28,446,1.003,476,1.39,481,2.981,588,3.877,622,1.335,629,2.095,743,2.411,773,3.957,789,5.712,795,6.575,800,3.017,833,3.287,834,3.555,836,3.402,848,3.124,937,3.374,956,1.411,958,3.132,959,3.251,963,3.555,964,3.555,965,2.962,973,3.2,974,3.796,975,3.609,977,2.387,979,1.703,980,3.528,981,3.695,982,2.853,985,3.251,987,2.229,990,2.639,993,2.528,1001,3.402,1009,3.438,1010,2.872,1011,2.962,1014,2.789,1015,2.387,1016,2.872,1018,3.362,1019,3.411,1020,1.514,1021,1.514,1037,2.571,1049,3.41,1051,3.722,1064,2.789,1066,2.66,1071,2.66,1081,4.149,1090,2.379,1092,3.916,1093,2.66,1112,3.722,1113,2.819,1120,7.234,1121,3.283,1122,5.788,1123,4.647,1124,5.734,1125,6.438,1126,3.283,1127,4.416,1128,3.686,1129,3.686,1130,3.686,1131,3.283,1132,3.686,1133,2.317,1134,3.686,1135,6.324,1136,3.686,1137,3.686,1138,4.832,1139,4.149,1140,3.686,1141,4.832,1142,4.832,1143,3.283,1144,4.149,1145,3.686,1146,3.686,1147,3.686,1148,3.283,1149,3.283]],["title/entities/DbInsightRepo.html",[110,3.095,956,1.228]],["body/entities/DbInsightRepo.html",[7,0.007,30,0.059,31,0.066,32,0.053,39,0.527,42,0.86,43,0.474,44,0.726,48,0.124,65,1.153,108,4.542,110,4.108,150,3.255,161,2.27,186,1.427,236,0.072,237,0.128,244,0.004,245,0.004,252,0.227,263,1.144,283,1.095,328,0.738,361,2.662,365,2.075,371,3.243,396,1.411,411,0.956,446,1.159,476,1.701,481,2.764,588,3.422,614,2.304,622,1.633,629,2.06,737,3.329,743,2.373,773,4.676,791,4.202,792,2.462,833,2.936,836,3.347,848,2.758,937,3.129,956,1.63,958,3.505,959,3.198,973,2.825,974,3.639,975,3.347,977,2.758,979,2.084,980,3.271,981,3.426,982,3.129,987,2.575,995,2.543,997,3.534,1001,3.347,1009,3.271,1010,3.319,1011,3.422,1012,3.534,1013,3.534,1014,3.223,1015,2.758,1017,3.133,1018,3.361,1019,3.247,1020,1.853,1021,1.853,1037,3.414,1064,3.223,1092,4.524,1093,3.255,1095,4.017,1120,7.251,1123,5.906,1133,3.94,1150,3.255,1151,4.017,1152,4.51,1153,3.94,1154,3.449,1155,4.017,1156,4.017,1157,4.51,1158,4.51,1159,4.017,1160,4.51,1161,4.017,1162,4.51]],["title/entities/DbLog.html",[127,3.24,956,1.228]],["body/entities/DbLog.html",[7,0.007,30,0.082,31,0.091,32,0.073,39,0.553,42,0.694,43,0.474,48,0.1,65,1.604,127,5.346,186,1.987,211,6.117,228,5.327,236,0.1,237,0.179,244,0.005,245,0.005,252,0.316,263,1.2,361,3.131,365,1.955,371,3.3,411,1.451,446,1.44,453,4.627,622,2.273,833,2.939,956,2.027,1009,3.956,1010,4.126,1015,3.729,1064,3.227,1163,5.59,1164,6.277,1165,6.277,1166,6.277,1167,6.277,1168,6.277,1169,6.277,1170,6.277,1171,6.277]],["title/entities/DbPRInsight.html",[148,3.095,956,1.228]],["body/entities/DbPRInsight.html",[7,0.007,30,0.058,31,0.064,32,0.051,39,0.51,42,0.486,43,0.497,48,0.098,65,1.124,133,5.918,148,4.036,149,2.834,185,3.486,186,1.392,236,0.07,237,0.125,244,0.004,245,0.004,252,0.221,263,1.107,283,1.212,365,1.639,371,3.202,396,1.4,446,1.138,476,1.658,483,2.647,491,3.543,518,4.587,622,1.592,629,2.446,651,2.918,662,5.764,669,1.879,743,2.363,829,5.081,833,2.322,937,2.475,956,1.602,959,3.451,961,5.001,971,4.225,974,2.53,980,2.587,981,2.71,982,2.475,985,3.797,987,2.53,1001,2.647,1002,3.261,1003,3.166,1009,3.53,1010,3.261,1011,3.362,1018,3.543,1020,1.806,1021,1.806,1025,2.565,1049,5.533,1172,3.916,1173,7.107,1174,7.107,1175,5.818,1176,5.653,1177,7.107,1178,5.485,1179,7.107,1180,4.397,1181,4.397,1182,7.701,1183,6.158,1184,6.158,1185,6.158,1186,6.158,1187,4.397,1188,4.397,1189,4.397,1190,4.397,1191,6.158,1192,6.158,1193,6.158,1194,6.158,1195,6.158,1196,3.916,1197,4.397,1198,5.485,1199,4.397,1200,3.016,1201,4.397,1202,7.107]],["title/entities/DbPullRequest.html",[132,2.856,956,1.228]],["body/entities/DbPullRequest.html",[7,0.007,30,0.027,31,0.083,32,0.024,39,0.548,42,0.63,43,0.492,44,0.862,48,0.07,65,0.525,129,4.294,132,2.07,133,6.218,149,3.054,161,1.239,178,2.895,185,3.099,186,0.65,214,3.926,236,0.033,237,0.058,244,0.002,245,0.002,252,0.103,263,1.189,283,1.097,290,2.372,328,0.336,361,1.626,362,1.808,365,1.316,371,3.289,382,1.812,396,1.51,411,1.358,446,0.633,476,0.774,481,0.729,491,3.723,588,4.362,614,0.89,622,0.743,629,2.265,630,1.438,669,1.044,737,2.033,743,2.451,772,3.625,791,2.567,792,1.121,827,4.118,829,4.831,833,3.099,937,2.948,956,0.89,959,3.675,961,1.121,971,4.697,973,0.925,974,3.516,975,3.153,977,1.506,980,3.082,981,3.228,982,2.948,985,2.812,987,1.406,990,2.498,991,2.617,992,3.926,1001,3.153,1002,3.884,1003,3.772,1009,3.493,1010,1.812,1011,1.121,1015,1.506,1017,1.711,1018,3.692,1019,1.543,1020,0.843,1021,0.843,1027,3.217,1049,2.151,1144,2.617,1153,2.151,1154,1.57,1196,1.829,1200,1.408,1203,1.829,1204,4.401,1205,4.401,1206,4.401,1207,4.401,1208,3.602,1209,4.401,1210,3.602,1211,5.081,1212,4.401,1213,5.705,1214,4.401,1215,5.705,1216,4.401,1217,5.705,1218,5.081,1219,3.602,1220,5.705,1221,4.401,1222,4.401,1223,5.705,1224,4.401,1225,4.401,1226,5.134,1227,2.47,1228,2.053,1229,2.053,1230,5.134,1231,5.134,1232,3.422,1233,2.053,1234,2.053,1235,4.203,1236,2.053,1237,2.053,1238,2.053,1239,2.053,1240,2.801,1241,3.422,1242,3.422,1243,2.053,1244,3.422,1245,5.134,1246,2.053,1247,2.053,1248,2.053,1249,2.053,1250,3.048,1251,2.053,1252,5.134,1253,2.053,1254,2.053,1255,2.053,1256,2.053,1257,3.422,1258,3.048,1259,2.053,1260,2.053,1261,3.422,1262,3.422,1263,4.401,1264,3.422,1265,3.422,1266,3.422,1267,3.422,1268,3.422,1269,1.829,1270,2.053,1271,3.422,1272,2.053,1273,2.053,1274,2.053,1275,2.053,1276,2.053,1277,2.053,1278,2.053,1279,1.829,1280,2.053,1281,2.053,1282,2.053,1283,4.573,1284,2.053,1285,2.053,1286,2.053,1287,2.053,1288,2.053,1289,2.053,1290,2.053,1291,2.053,1292,3.422,1293,3.422,1294,3.048,1295,3.422,1296,2.053,1297,2.053,1298,2.053,1299,2.053,1300,2.053,1301,2.053,1302,2.053,1303,1.681,1304,5.488,1305,5.134,1306,1.829,1307,2.053,1308,2.053,1309,1.829,1310,2.053,1311,1.829,1312,2.053,1313,2.07,1314,2.151]],["title/classes/DbPullRequestContributor.html",[237,0.134,711,3.409]],["body/classes/DbPullRequestContributor.html",[7,0.007,30,0.084,31,0.093,32,0.075,39,0.478,43,0.409,44,0.734,48,0.102,129,3.637,149,3.008,178,4.438,236,0.102,237,0.182,244,0.005,245,0.005,252,0.321,263,1.037,290,3.637,362,3.507,371,3.122,396,1.311,411,1.2,446,1.455,476,2.406,491,3.507,618,1.911,711,5.681,720,5.856,743,2.278,829,4.76,833,2.968,959,3.233,974,3.233,975,3.383,990,3.829,1001,3.383,1002,4.168,1003,4.047,1018,3.507,1020,2.621,1021,2.621,1027,4.438,1208,6.988,1235,6.443,1311,7.01,1315,5.682,1316,6.38,1317,6.38]],["title/entities/DbRepoToUserStargazers.html",[93,2.856,956,1.228]],["body/entities/DbRepoToUserStargazers.html",[7,0.007,30,0.057,31,0.064,32,0.051,39,0.534,42,0.784,43,0.476,44,0.783,48,0.129,65,1.12,81,3.158,83,3.74,84,2.871,93,3.714,112,2.319,113,1.705,185,2.316,186,1.386,236,0.07,237,0.125,244,0.004,245,0.004,252,0.22,263,1.158,283,1.085,290,2.838,328,0.717,361,2.621,362,2.914,365,1.987,371,3.257,396,1.349,446,1.135,476,1.652,481,2.18,614,2.105,629,2.034,669,1.874,737,3.74,743,2.315,833,3.165,836,2.64,848,1.928,937,3.372,956,1.597,958,3.451,959,2.914,973,2.768,974,3.72,975,3.304,977,2.703,978,3.463,979,2.024,980,3.525,981,3.693,982,3.089,984,2.649,985,2.523,987,3.447,990,2.988,995,3.463,997,4.335,1001,2.64,1002,3.252,1003,3.158,1004,2.649,1009,2.98,1012,3.999,1013,3.999,1014,3.158,1015,2.703,1016,3.252,1017,3.843,1018,3.158,1019,3.197,1020,1.799,1021,1.799,1025,2.555,1027,2.47,1037,2.076,1064,3.158,1090,2.991,1133,2.753,1318,3.901,1319,6.869,1320,4.381,1321,4.381,1322,3.005,1323,4.381,1324,4.381,1325,4.381,1326,3.005,1327,4.381,1328,4.381,1329,4.381,1330,4.381,1331,4.381,1332,4.381,1333,3.005,1334,4.381,1335,3.901]],["title/entities/DbRepoToUserStars.html",[89,2.856,956,1.228]],["body/entities/DbRepoToUserStars.html",[7,0.007,30,0.057,31,0.064,32,0.051,39,0.534,42,0.784,43,0.476,44,0.783,48,0.129,65,1.12,81,3.158,83,3.74,84,2.871,89,3.714,112,2.319,113,1.705,185,2.316,186,1.386,236,0.07,237,0.125,244,0.004,245,0.004,252,0.22,263,1.158,283,1.085,290,2.838,328,0.717,361,2.621,362,2.914,365,1.987,371,3.257,396,1.349,446,1.135,476,1.652,481,2.18,614,2.105,629,2.034,669,1.874,737,3.74,743,2.315,833,3.165,836,2.64,848,1.928,937,3.372,956,1.597,958,3.451,959,2.914,973,2.768,974,3.72,975,3.304,977,2.703,978,3.463,979,2.024,980,3.525,981,3.693,982,3.089,984,2.649,985,2.523,987,3.447,990,2.988,995,3.463,997,4.335,1001,2.64,1002,3.252,1003,3.158,1004,2.649,1009,2.98,1012,3.999,1013,3.999,1014,3.158,1015,2.703,1016,3.252,1017,3.843,1018,3.158,1019,3.197,1020,1.799,1021,1.799,1025,2.555,1027,2.47,1037,2.076,1064,3.158,1090,2.991,1133,2.753,1322,3.005,1326,3.005,1333,3.005,1336,3.901,1337,6.418,1338,4.381,1339,4.381,1340,4.381,1341,4.381,1342,4.381,1343,4.381,1344,4.381,1345,4.381,1346,4.381,1347,4.381,1348,4.381,1349,4.381,1350,3.901]],["title/entities/DbRepoToUserSubmissions.html",[91,2.856,956,1.228]],["body/entities/DbRepoToUserSubmissions.html",[7,0.007,30,0.054,31,0.06,32,0.049,39,0.536,42,0.762,43,0.476,44,0.809,48,0.127,65,1.063,81,3.085,83,3.654,84,2.725,91,3.58,112,2.201,113,1.68,161,2.143,185,2.993,186,1.316,236,0.066,237,0.118,244,0.004,245,0.004,252,0.209,263,1.163,283,1.066,290,2.735,328,0.681,361,2.547,362,2.832,365,1.958,371,3.262,396,1.374,446,1.094,476,1.568,481,2.101,614,2.064,629,2.101,669,1.806,737,3.667,743,2.339,772,3.134,833,3.111,836,2.544,846,3.453,848,1.829,937,3.315,956,1.539,958,3.354,959,3.085,973,2.668,974,3.679,975,3.546,977,2.605,978,3.337,979,1.921,980,3.466,981,3.63,982,3.018,984,2.514,985,2.432,987,3.389,990,2.88,995,3.337,997,4.235,1001,2.544,1002,3.134,1003,3.044,1004,2.514,1009,3.155,1012,3.886,1013,3.886,1014,3.044,1015,2.605,1016,3.134,1017,3.755,1018,3.261,1019,3.107,1020,1.708,1021,1.708,1025,2.425,1027,2.344,1037,1.97,1064,3.044,1090,2.933,1097,4.272,1100,3.703,1133,2.613,1322,2.852,1326,2.852,1333,2.852,1351,3.703,1352,6.139,1353,7.103,1354,4.157,1355,4.157,1356,4.157,1357,5.919,1358,5.919,1359,4.157,1360,4.157,1361,4.157,1362,4.157,1363,4.157,1364,4.157,1365,4.157,1366,4.157,1367,4.157,1368,4.157,1369,3.703]],["title/entities/DbRepoToUserVotes.html",[87,2.856,956,1.228]],["body/entities/DbRepoToUserVotes.html",[7,0.007,30,0.057,31,0.064,32,0.051,39,0.534,42,0.784,43,0.476,44,0.783,48,0.129,65,1.12,81,3.158,83,3.74,84,2.871,87,3.714,112,2.319,113,1.705,185,2.316,186,1.386,236,0.07,237,0.125,244,0.004,245,0.004,252,0.22,263,1.158,283,1.085,290,2.838,328,0.717,361,2.621,362,2.914,365,1.987,371,3.257,396,1.349,446,1.135,476,1.652,481,2.18,614,2.105,629,2.034,669,1.874,737,3.74,743,2.315,833,3.165,836,2.64,848,1.928,937,3.372,956,1.597,958,3.451,959,2.914,973,2.768,974,3.72,975,3.304,977,2.703,978,3.463,979,2.024,980,3.525,981,3.693,982,3.089,984,2.649,985,2.523,987,3.447,990,2.988,995,3.463,997,4.335,1001,2.64,1002,3.252,1003,3.158,1004,2.649,1009,2.98,1012,3.999,1013,3.999,1014,3.158,1015,2.703,1016,3.252,1017,3.843,1018,3.158,1019,3.197,1020,1.799,1021,1.799,1025,2.555,1027,2.47,1037,2.076,1064,3.158,1090,2.991,1133,2.753,1322,3.005,1326,3.005,1333,3.005,1370,3.901,1371,6.418,1372,4.381,1373,4.381,1374,4.381,1375,4.381,1376,4.381,1377,4.381,1378,4.381,1379,4.381,1380,4.381,1381,4.381,1382,4.381,1383,4.381,1384,3.901]],["title/entities/DbSubscription.html",[125,3.24,956,1.228]],["body/entities/DbSubscription.html",[7,0.007,30,0.038,31,0.043,32,0.034,39,0.535,42,0.324,43,0.492,44,0.829,48,0.09,65,0.751,113,0.904,125,3.133,185,1.722,186,0.929,236,0.047,237,0.084,244,0.003,245,0.003,252,0.148,263,1.16,283,0.817,328,0.481,361,2.071,365,1.58,371,3.259,396,1.452,411,1.194,446,0.844,476,1.107,481,3.202,483,1.262,582,4.564,583,5.937,588,3.96,622,1.063,629,2.387,743,2.411,762,2.615,772,3.348,833,3.576,836,3.877,848,3.538,937,3.571,956,1.188,959,2.814,971,4.338,973,3.624,974,3.931,975,3.877,977,2.782,978,5.086,979,1.357,980,3.733,981,3.91,982,3.571,985,1.876,987,2.597,993,5.37,1009,3.662,1010,2.418,1011,1.603,1015,2.01,1017,2.283,1018,2.979,1019,3.705,1020,1.206,1021,1.206,1048,2.615,1090,2.071,1279,2.615,1385,6.795,1386,2.615,1387,4.992,1388,4.992,1389,4.992,1390,4.992,1391,4.992,1392,4.992,1393,4.286,1394,4.992,1395,5.607,1396,4.306,1397,4.992,1398,4.992,1399,4.567,1400,2.936,1401,5.987,1402,2.936,1403,4.567,1404,2.936,1405,2.936,1406,4.836,1407,6.323,1408,2.936,1409,2.936,1410,2.936,1411,2.936,1412,2.936,1413,2.936,1414,4.068,1415,2.936,1416,2.936,1417,2.936,1418,2.936,1419,4.045,1420,2.936,1421,6.323,1422,2.936,1423,2.936,1424,2.936,1425,2.936,1426,2.615,1427,2.936,1428,2.936,1429,2.936]],["title/entities/DbUserCollaboration.html",[155,3.095,956,1.228]],["body/entities/DbUserCollaboration.html",[7,0.007,30,0.043,31,0.047,32,0.038,39,0.529,42,0.662,43,0.485,44,0.831,48,0.107,65,0.835,83,3.826,113,1.827,149,2.487,155,3.249,185,2.854,186,1.034,236,0.052,237,0.093,244,0.003,245,0.003,252,0.164,263,1.148,283,0.864,301,3.771,328,0.535,361,2.213,362,2.461,365,1.983,371,3.247,396,1.409,411,1.154,446,0.916,453,3.925,476,1.232,481,3.003,622,1.183,629,2.144,743,2.372,811,6.365,814,4.415,821,2.499,833,3.36,834,4.383,836,3.253,848,3.164,937,3.399,956,1.289,958,2.915,959,2.953,963,4.383,964,4.383,965,3.651,973,3.241,974,3.811,975,3.636,977,2.181,979,1.509,980,3.554,981,3.722,982,2.687,985,3.109,987,2.036,990,2.412,993,3.401,995,2.795,997,3.771,1001,3.253,1009,3.304,1010,2.625,1011,2.707,1012,3.378,1013,3.378,1014,2.549,1015,2.181,1016,2.625,1017,2.995,1018,3.109,1019,3.411,1020,1.342,1021,1.342,1037,1.548,1049,4.204,1051,3.401,1064,2.549,1066,2.358,1071,2.358,1074,2.91,1079,3.791,1081,3.791,1086,2.91,1090,2.656,1092,3.578,1093,2.358,1112,3.401,1113,2.499,1126,2.91,1127,4.11,1131,2.91,1138,5.956,1139,5.114,1396,4.519,1430,5.333,1431,2.91,1432,5.991,1433,5.991,1434,5.336,1435,7.19,1436,4.958,1437,3.267,1438,3.267,1439,3.267,1440,3.267,1441,4.958,1442,4.415,1443,4.958,1444,3.267,1445,3.267,1446,3.267,1447,3.267,1448,3.267,1449,3.267,1450,3.267,1451,3.267,1452,3.267,1453,3.267,1454,4.958,1455,3.267,1456,2.141,1457,3.267,1458,3.267,1459,3.267]],["title/entities/DbUserHighlight.html",[135,2.663,956,1.228]],["body/entities/DbUserHighlight.html",[7,0.007,30,0.04,31,0.083,32,0.036,39,0.538,42,0.917,43,0.484,44,0.856,48,0.111,65,0.777,83,3.133,113,1.738,129,2.975,135,2.644,145,3.631,146,4.606,147,1.91,149,2.116,152,2.735,161,2.332,185,3.343,186,0.961,236,0.049,237,0.086,244,0.003,245,0.003,252,0.153,263,1.168,283,0.832,328,0.497,361,2.116,362,2.352,365,1.768,371,3.267,382,3.684,396,1.446,411,1.307,446,0.867,476,1.146,588,4.322,614,1.22,622,1.1,629,1.946,743,2.406,772,3.409,791,3.34,792,1.659,820,2.323,826,4.133,827,5.023,828,4.924,829,1.837,832,4.176,833,3.372,834,5.188,835,6.054,836,3.403,841,5.735,845,4.176,848,2.833,937,3.181,956,1.22,958,2.786,959,3.337,973,2.902,974,3.673,975,3.403,977,2.063,979,1.404,980,3.326,981,3.483,982,2.588,985,3.021,987,2.645,993,2.084,995,1.713,997,3.631,1009,3.089,1010,2.483,1011,1.659,1012,2.644,1013,3.229,1014,2.411,1015,2.063,1016,2.483,1017,2.863,1018,3.408,1019,3.136,1020,1.248,1021,1.248,1024,2.193,1032,2.323,1037,2.222,1041,4.133,1056,2.487,1057,3.838,1063,3.838,1090,2.571,1092,3.385,1093,2.193,1112,3.217,1113,2.323,1142,4.176,1143,2.706,1144,5.624,1149,2.706,1153,4.047,1154,2.323,1304,5.1,1430,5.408,1456,1.991,1460,2.706,1461,5.322,1462,6.959,1463,3.038,1464,3.038,1465,3.038,1466,4.689,1467,3.038,1468,3.038,1469,3.038,1470,3.038,1471,3.038,1472,3.038,1473,3.838,1474,3.038,1475,3.038,1476,3.038,1477,3.838,1478,3.038,1479,3.038,1480,3.038,1481,3.038,1482,3.038,1483,3.038,1484,3.038,1485,3.038,1486,3.038,1487,2.706,1488,3.038,1489,2.706,1490,2.706,1491,3.038,1492,3.038]],["title/entities/DbUserHighlightReaction.html",[145,2.663,956,1.228]],["body/entities/DbUserHighlightReaction.html",[7,0.007,30,0.048,31,0.053,32,0.043,39,0.536,42,0.782,43,0.486,44,0.849,48,0.126,65,0.936,83,3.121,113,1.563,135,3.616,137,2.302,143,4.032,144,3.262,145,4.256,146,4.602,185,3.432,186,1.159,236,0.059,237,0.104,244,0.004,245,0.004,252,0.184,263,1.162,283,1.021,290,2.495,328,0.6,361,2.37,362,2.635,365,1.974,371,3.199,396,1.316,411,1.079,446,0.998,476,1.381,481,1.917,588,2.948,629,1.873,743,2.283,833,2.978,836,2.321,848,1.612,937,3.174,956,1.404,958,3.121,959,2.908,973,2.434,974,3.575,975,3.043,977,2.376,978,3.045,979,1.692,980,3.318,981,3.475,982,2.845,984,2.215,985,3.668,987,3.443,990,2.627,995,3.616,997,4.453,999,3.262,1001,2.321,1002,2.859,1003,2.777,1004,2.215,1009,3.171,1012,3.991,1013,3.991,1014,2.777,1015,2.376,1016,2.859,1017,3.773,1018,3.101,1019,2.891,1020,1.505,1021,1.505,1025,2.136,1027,2.065,1037,1.736,1042,6.829,1045,6.179,1049,4.964,1051,4.856,1052,2.998,1064,2.777,1066,3.898,1071,2.644,1090,2.789,1144,4.13,1269,3.262,1430,5.4,1456,2.4,1477,6.179,1493,3.262,1494,5.773,1495,4.905,1496,3.663,1497,3.663,1498,3.663,1499,3.663,1500,3.663,1501,3.663,1502,3.663,1503,3.663,1504,3.663,1505,3.663,1506,3.663,1507,3.663,1508,3.663,1509,3.663,1510,3.663,1511,3.663,1512,3.663,1513,3.663,1514,3.663,1515,3.663,1516,3.663]],["title/classes/DbUserHighlightReactionResponse.html",[237,0.134,1517,3.095]],["body/classes/DbUserHighlightReactionResponse.html",[7,0.007,30,0.089,31,0.099,32,0.08,48,0.146,136,4.683,145,3.849,146,3.991,147,4.291,161,2.472,236,0.131,237,0.25,241,2.008,244,0.005,245,0.005,328,1.117,396,1.137,411,1.041,614,2.133,618,2.045,621,3.51,622,2.97,623,2.209,655,4.1,657,4.1,658,2.472,659,2.522,660,1.904,743,1.745,760,3.526,792,3.727,1494,5.22,1495,5.22,1517,5.375,1518,5.588,1519,6.08,1520,4.474,1521,4.291,1522,6.08]],["title/classes/DbUserHighlightRepo.html",[237,0.134,1523,3.409]],["body/classes/DbUserHighlightRepo.html",[7,0.007,30,0.09,31,0.1,32,0.081,39,0.419,42,0.912,43,0.359,44,0.77,48,0.11,146,4.452,161,2.987,236,0.11,237,0.196,244,0.006,245,0.006,252,0.347,263,0.908,371,2.957,396,1.148,411,1.258,446,1.525,476,2.6,614,2.146,618,2.065,743,2.109,791,5.151,792,4.505,959,2.832,1018,3.389,1020,2.832,1021,2.832,1150,4.975,1153,5.186,1523,5.955,1524,7.348,1525,6.893]],["title/entities/DbUserNotification.html",[153,3.095,956,1.228]],["body/entities/DbUserNotification.html",[7,0.007,30,0.054,31,0.1,32,0.049,39,0.527,42,0.459,43,0.498,44,0.835,48,0.11,65,1.061,113,1.851,146,2.877,153,3.876,185,2.23,186,1.314,236,0.066,237,0.118,244,0.004,245,0.004,252,0.209,263,1.143,283,1.066,365,2.036,371,3.241,396,1.445,411,1.258,446,1.093,453,4.332,476,1.566,481,2.099,622,1.504,629,1.565,661,3.45,743,2.404,796,5.267,820,4.523,833,3.11,834,3.876,836,3.227,848,2.602,937,3.017,956,1.538,959,3.388,963,5.405,964,5.405,965,4.503,971,5.15,973,2.666,974,3.563,975,3.227,977,2.602,979,1.918,980,3.154,981,3.303,982,2.377,985,2.429,987,2.429,993,2.849,1001,2.542,1009,3.565,1010,3.132,1011,2.267,1015,2.602,1018,3.486,1019,3.105,1020,1.706,1021,1.706,1024,2.997,1032,3.176,1034,3.698,1037,1.968,1038,3.698,1067,3.876,1090,2.545,1110,4.841,1139,4.523,1430,5.338,1526,3.698,1527,6.135,1528,5.639,1529,6.135,1530,6.135,1531,4.153,1532,4.153,1533,7.489,1534,4.153,1535,3.876,1536,4.153,1537,4.153,1538,4.153,1539,5.267,1540,4.153,1541,5.267,1542,4.153,1543,5.914,1544,4.153,1545,4.153,1546,4.726,1547,4.153,1548,4.153,1549,3.399,1550,3.698,1551,4.153,1552,3.698,1553,3.698]],["title/entities/DbUserRepo.html",[116,3.24,956,1.228]],["body/entities/DbUserRepo.html",[7,0.007,30,0.068,31,0.076,32,0.061,39,0.522,42,0.857,43,0.469,44,0.645,48,0.11,65,1.331,113,1.749,114,6.064,116,4.74,161,2.502,186,1.648,236,0.083,237,0.148,244,0.005,245,0.005,252,0.262,263,1.133,283,1.142,361,2.866,365,1.789,371,3.23,396,1.432,411,1.054,446,1.277,476,1.963,481,2.453,588,3.773,614,2.299,622,1.885,629,1.829,737,3.584,743,2.393,791,4.524,792,2.842,833,2.606,836,2.97,848,2.291,937,2.777,956,1.797,959,3.394,973,2.346,974,3.394,975,2.97,977,3.041,979,2.405,980,2.903,981,3.041,982,2.777,987,3.631,1001,2.97,1009,2.903,1010,3.659,1011,2.842,1015,3.041,1018,3.532,1019,3.115,1020,2.138,1021,2.138,1024,3.757,1032,3.981,1037,3.676,1090,2.866,1150,3.757,1153,4.343,1154,3.981,1156,4.637,1159,4.637,1487,6.154,1490,6.154,1554,6.064,1555,5.206,1556,5.206,1557,5.206,1558,5.206]],["title/entities/DbUserToUserFollows.html",[139,3.095,956,1.228]],["body/entities/DbUserToUserFollows.html",[7,0.007,30,0.062,31,0.069,32,0.056,39,0.523,42,0.527,43,0.474,44,0.804,48,0.118,65,1.219,113,1.823,139,4.268,185,2.456,186,1.509,236,0.076,237,0.136,244,0.004,245,0.004,252,0.24,263,1.135,283,1.113,290,3.009,328,0.78,361,2.741,362,3.047,365,1.711,371,3.233,396,1.39,446,1.204,476,1.798,481,2.312,629,2.11,743,2.354,833,3.249,836,2.799,848,2.098,937,3.462,956,1.694,958,3.609,959,3.047,973,2.935,974,3.783,975,3.426,977,2.866,978,3.672,979,2.203,980,3.619,981,3.791,982,3.203,984,2.883,985,2.675,987,3.539,990,3.168,1001,2.799,1002,3.448,1003,3.349,1004,2.883,1009,3.116,1014,3.349,1015,2.866,1016,3.448,1017,3.256,1018,3.275,1019,3.343,1020,1.958,1021,1.958,1025,2.781,1027,2.688,1037,2.259,1064,3.349,1090,2.741,1133,2.997,1322,3.27,1326,3.27,1333,3.27,1430,5.333,1559,4.246,1560,5.673,1561,6.218,1562,4.767,1563,4.767,1564,6.513,1565,4.767,1566,4.767,1567,4.767,1568,4.767,1569,3.902]],["title/entities/DbUserTopRepo.html",[151,3.409,956,1.228]],["body/entities/DbUserTopRepo.html",[7,0.007,30,0.055,31,0.062,32,0.049,39,0.529,42,0.769,43,0.473,44,0.774,48,0.128,65,1.082,81,3.11,82,2.176,83,3.684,113,1.689,151,4.327,152,5.472,185,2.261,186,1.34,236,0.068,237,0.12,244,0.004,245,0.004,252,0.35,263,1.148,283,1.073,290,2.77,328,0.693,361,2.572,362,2.86,365,1.968,371,3.247,396,1.331,446,1.108,476,1.596,481,2.128,614,2.365,629,2.004,669,1.829,737,3.692,743,2.298,828,4.585,833,3.13,836,2.577,848,1.862,937,3.335,956,1.559,958,3.387,959,2.86,973,2.702,974,3.693,975,3.254,978,3.38,979,1.955,980,3.486,981,3.652,982,3.043,984,2.56,985,2.463,987,3.409,990,2.917,995,3.38,997,4.269,1001,2.577,1002,3.174,1003,3.083,1004,2.56,1009,2.924,1012,3.925,1013,3.925,1014,3.083,1015,2.638,1016,3.174,1017,3.785,1018,3.11,1019,3.138,1020,1.739,1021,1.739,1025,2.469,1027,2.386,1037,2.006,1064,3.083,1090,2.953,1133,2.66,1150,3.055,1151,3.77,1155,3.77,1322,2.904,1326,2.904,1333,2.904,1430,5.362,1456,2.774,1570,4.233,1571,4.907,1572,4.233,1573,4.233,1574,4.233,1575,4.233,1576,4.233,1577,4.233,1578,4.233,1579,4.233,1580,4.233,1581,4.233]],["title/controllers/EmojiController.html",[246,1.018,1582,3.612]],["body/controllers/EmojiController.html",[7,0.007,30,0.081,31,0.09,32,0.072,35,1.53,39,0.376,41,1.186,42,0.685,43,0.402,44,0.578,46,1.227,48,0.148,50,0.786,143,4.86,236,0.099,237,0.176,244,0.005,245,0.005,246,1.336,248,1.669,250,2.29,252,0.312,253,1.785,263,0.816,266,2.916,324,3.572,325,3.041,326,2.916,327,2.29,328,1.015,350,2.2,353,2.338,391,1.166,396,1.033,456,2.29,507,2.076,623,2.493,659,2.29,660,1.729,709,4.36,713,2.665,714,2.864,715,3.016,716,2.794,717,3.016,1065,8.087,1582,5.913,1583,5.521,1584,8.824,1585,6.199,1586,4.474,1587,4.86,1588,6.199,1589,6.199,1590,4.094,1591,6.199,1592,5.781,1593,5.521,1594,5.074,1595,6.199,1596,6.199,1597,6.199,1598,6.199,1599,6.199]],["title/modules/EmojiModule.html",[0,1.207,11,3.409]],["body/modules/EmojiModule.html",[0,2.097,2,2.574,3,3.226,7,0.007,11,6.839,27,3.296,28,2.743,29,2.574,30,0.089,31,0.099,32,0.08,34,2.868,48,0.149,50,0.866,52,3.154,53,2.008,143,4.291,169,2.082,235,3.526,236,0.109,237,0.194,244,0.005,245,0.005,248,2.209,1582,6.725,1592,6.5,1593,6.08,1594,5.588,1600,6.08,1601,6.08,1602,6.826,1603,6.826,1604,6.826]],["title/injectables/EmojiService.html",[449,0.843,1592,3.24]],["body/injectables/EmojiService.html",[7,0.007,30,0.079,31,0.087,32,0.07,35,1.499,39,0.504,41,1.449,42,0.837,43,0.394,44,0.707,46,1.499,48,0.149,50,0.761,53,1.765,65,1.533,143,3.77,169,1.83,186,1.898,189,2.269,236,0.096,237,0.171,238,2.112,240,1.533,244,0.005,245,0.005,252,0.302,253,1.758,356,2.117,386,2.076,391,1.424,449,1.352,507,2.008,523,1.971,623,2.473,659,2.798,660,1.673,667,4.964,669,2.66,672,4.964,676,2.52,677,2.172,678,2.309,681,4.359,682,3.275,685,2.639,695,4.01,696,3.382,697,3.382,698,3.382,893,3.93,909,2.771,1592,5.196,1594,4.91,1605,5.342,1606,5.998,1607,5.998,1608,7.574,1609,5.998,1610,5.998,1611,5.998,1612,5.998,1613,5.998,1614,4.91]],["title/controllers/EndorsementController.html",[246,1.018,1615,3.612]],["body/controllers/EndorsementController.html",[7,0.007,30,0.042,31,0.047,32,0.038,35,0.97,39,0.49,41,1.542,42,0.891,43,0.473,44,0.752,46,1.596,48,0.132,50,0.408,113,1.548,158,5.372,178,4.547,189,1.469,236,0.051,237,0.092,240,0.823,241,1.442,244,0.003,245,0.003,246,0.694,248,0.867,250,1.189,252,0.162,253,2.001,263,1.062,266,3.432,275,4.366,284,2.676,320,2.596,321,1.451,323,2.764,324,2.743,325,3.249,326,3.178,327,1.189,328,0.527,336,2.968,337,2.323,350,1.143,353,3.116,356,1.19,365,1.736,386,1.343,391,1.553,396,0.817,411,1.445,456,1.189,470,2.462,507,2.7,563,3.538,614,2.228,623,2.612,659,1.189,660,0.898,709,4.751,713,3.234,714,1.487,715,1.566,716,1.451,717,1.566,732,5.668,741,6.551,1085,6.27,1586,2.323,1590,3.514,1615,3.749,1616,2.867,1617,7.143,1618,6.637,1619,7.143,1620,6.637,1621,6.362,1622,4.366,1623,6.702,1624,6.637,1625,3.219,1626,3.219,1627,3.219,1628,3.219,1629,3.219,1630,4.902,1631,3.219,1632,2.867,1633,4.8,1634,4.902,1635,4.366,1636,3.219,1637,3.219,1638,3.219,1639,3.219,1640,4.902,1641,6.362,1642,3.219,1643,4.366,1644,3.219,1645,3.219,1646,2.867,1647,3.219,1648,4.389,1649,3.219,1650,3.219,1651,3.219,1652,5.433,1653,3.219,1654,3.219,1655,3.219,1656,3.219,1657,3.219,1658,3.219,1659,3.749,1660,2.635,1661,3.219,1662,3.219,1663,1.566,1664,1.815,1665,3.732,1666,2.867,1667,2.867,1668,2.635,1669,2.635,1670,2.323,1671,2.867,1672,3.219,1673,2.867,1674,3.219,1675,2.462,1676,3.219,1677,2.323,1678,2.635,1679,3.219,1680,6.362,1681,3.219,1682,3.219,1683,3.219,1684,3.219,1685,3.219,1686,3.219,1687,3.363,1688,3.213,1689,3.219,1690,3.219,1691,4.366,1692,3.219,1693,3.219,1694,3.219,1695,3.219,1696,3.219,1697,3.219,1698,3.219,1699,4.013,1700,3.219,1701,3.219,1702,3.219,1703,3.219,1704,2.867,1705,3.219,1706,3.219]],["title/modules/EndorsementModule.html",[0,1.207,12,3.409]],["body/modules/EndorsementModule.html",[0,1.99,2,2.363,3,3.061,6,6.369,7,0.007,12,7.007,24,5.415,27,3.128,28,2.518,29,2.363,30,0.082,31,0.091,32,0.073,34,3.27,48,0.152,50,0.795,52,2.895,53,1.843,95,5.58,101,4.298,158,3.789,169,1.911,235,3.346,236,0.1,237,0.178,244,0.005,245,0.005,248,2.096,435,3.508,741,4.792,1615,6.476,1665,6.13,1666,5.58,1669,5.129,1670,5.618,1671,5.58,1707,5.58,1708,6.266,1709,5.58,1710,5.58,1711,6.266,1712,5.58,1713,6.266]],["title/injectables/EndorsementService.html",[449,0.843,1665,2.969]],["body/injectables/EndorsementService.html",[7,0.007,30,0.044,31,0.048,32,0.039,35,0.996,39,0.524,41,1.626,42,0.94,43,0.442,44,0.793,46,1.683,48,0.13,50,0.423,53,0.98,65,0.852,113,0.996,158,2.015,169,1.017,186,2.413,189,2.653,236,0.053,237,0.095,238,1.404,240,0.852,244,0.003,245,0.003,252,0.168,253,2.02,280,3.163,283,0.986,292,2.554,356,2.309,365,1.558,372,2.935,386,2.451,391,1.569,411,1.425,449,0.899,488,1.283,507,2.729,523,1.095,614,2.211,623,2.633,659,1.859,660,0.929,667,3.298,669,2.061,672,3.298,676,1.4,677,1.207,678,1.283,681,4.628,682,1.819,685,3.801,695,4.635,696,4.3,697,4.3,698,4.3,732,4.975,771,2.491,893,3.045,909,3.523,911,1.713,1085,3.632,1621,4.482,1643,2.968,1646,4.482,1648,2.935,1665,3.163,1667,2.968,1668,2.728,1669,2.728,1691,4.482,1714,2.968,1715,5.032,1716,5.032,1717,5.032,1718,3.043,1719,3.298,1720,3.332,1721,3.332,1722,5.032,1723,3.332,1724,5.032,1725,3.332,1726,3.332,1727,5.032,1728,3.332,1729,5.032,1730,3.332,1731,5.032,1732,3.332,1733,3.332,1734,5.032,1735,3.332,1736,3.043,1737,3.332,1738,5.032,1739,3.332,1740,2.587,1741,3.332,1742,3.332,1743,3.332,1744,3.332,1745,5.231,1746,5.504,1747,3.332,1748,7.252,1749,3.332,1750,4.963,1751,6.063,1752,4.482,1753,3.332,1754,6.063,1755,5.032,1756,5.032,1757,3.332,1758,5.032,1759,3.332,1760,3.332,1761,3.332,1762,3.332,1763,2.728,1764,3.332,1765,3.332,1766,3.118,1767,3.332]],["title/guards/EndorsementTokenGuard.html",[1670,3.409,1768,3.612]],["body/guards/EndorsementTokenGuard.html",[7,0.007,30,0.082,31,0.091,32,0.074,35,1.544,39,0.474,41,1.492,42,0.862,43,0.406,44,0.728,46,1.244,48,0.125,50,0.797,55,5.84,56,3.803,149,2.066,167,3.233,174,5.147,185,2.942,236,0.1,237,0.179,238,1.754,244,0.005,245,0.005,252,0.316,356,2.213,391,1.595,449,1.393,456,2.323,470,4.809,772,3.329,916,5.147,1670,5.631,1675,4.809,1677,4.539,1678,6.943,1769,5.6,1770,7.554,1771,5.6,1772,8.868,1773,5.147,1774,6.288,1775,7.801,1776,7.898,1777,6.288,1778,8.482,1779,6.288,1780,6.288,1781,6.288,1782,6.288,1783,6.288,1784,7.801]],["title/classes/FilterOptionsDto.html",[237,0.134,1785,3.24]],["body/classes/FilterOptionsDto.html",[7,0.007,30,0.065,31,0.073,32,0.058,39,0.551,43,0.483,44,0.899,48,0.13,161,2.433,236,0.08,237,0.191,241,2.871,244,0.005,245,0.005,252,0.251,263,1.195,283,0.982,328,0.817,411,1.417,446,1.242,483,3.264,543,2.495,614,1.975,618,1.495,620,2.495,621,2.566,622,2.433,623,2.403,625,3.454,626,3.788,627,3.796,629,2.458,630,3.413,632,3.788,633,4.282,637,2.643,638,3.788,639,2.725,640,2.814,641,4.58,642,2.911,643,3.796,644,2.566,645,2.814,646,2.911,647,2.814,648,2.911,649,3.358,650,2.428,651,2.365,652,2.814,653,2.814,654,2.911,655,4.238,656,3.137,657,4.238,658,1.807,660,1.874,661,2.911,743,1.717,752,4.086,760,3.492,792,2.725,1521,4.773,1785,4.609,1786,7.551,1787,4.977,1788,4.977,1789,5.281,1790,3.603,1791,4.086,1792,4.849,1793,3.817,1794,4.445,1795,3.603,1796,4.086,1797,4.445,1798,3.271,1799,3.603]],["title/classes/GenerateCodeExplanationDto.html",[237,0.134,497,3.409]],["body/classes/GenerateCodeExplanationDto.html",[7,0.007,30,0.073,31,0.081,32,0.065,39,0.516,43,0.5,48,0.116,236,0.089,237,0.206,244,0.005,245,0.005,252,0.282,263,1.119,283,1.202,328,0.916,396,1.579,411,1.399,446,1.339,459,6.038,491,3.616,497,5.23,512,4.739,534,6.038,618,1.676,629,1.917,658,2.026,740,3.739,743,2.305,759,3.873,760,3.454,761,5.512,965,3.956,1800,6.353,1801,4.984,1802,6.145,1803,4.581,1804,5.596,1805,4.28,1806,5.596,1807,6.577,1808,4.581,1809,5.931,1810,5.931,1811,5.931,1812,5.931,1813,5.931,1814,5.931,1815,5.931,1816,5.931,1817,5.931,1818,5.596,1819,4.28,1820,5.596,1821,4.039,1822,4.039,1823,3.839,1824,4.28,1825,4.28,1826,4.28,1827,4.039,1828,4.28,1829,4.28,1830,4.581]],["title/classes/GenerateCodeRefactorSuggestionDto.html",[237,0.134,560,3.409]],["body/classes/GenerateCodeRefactorSuggestionDto.html",[7,0.007,30,0.073,31,0.081,32,0.065,39,0.514,43,0.499,48,0.115,236,0.089,237,0.205,244,0.005,245,0.005,252,0.279,263,1.116,283,1.2,328,0.909,396,1.499,411,1.397,446,1.332,459,6.023,491,3.607,512,4.733,521,5.552,534,6.023,557,6.023,560,5.203,618,1.663,629,1.908,658,2.01,740,3.728,743,2.3,759,3.863,760,3.44,761,5.491,965,3.935,1800,6.337,1802,6.121,1803,4.545,1805,4.246,1807,6.552,1808,4.545,1809,5.9,1810,5.9,1811,5.9,1812,5.9,1813,5.9,1814,5.9,1815,5.9,1816,5.9,1817,5.9,1819,4.246,1821,4.007,1822,4.007,1823,3.809,1824,4.246,1825,4.246,1826,4.246,1827,4.007,1828,4.246,1829,4.246,1830,4.545,1831,4.545,1832,5.552,1833,4.945,1834,5.552,1835,4.945]],["title/classes/GenerateCodeTestSuggestionDto.html",[237,0.134,593,3.409]],["body/classes/GenerateCodeTestSuggestionDto.html",[7,0.007,30,0.08,31,0.089,32,0.071,39,0.508,43,0.496,48,0.122,236,0.097,237,0.218,244,0.005,245,0.005,252,0.306,263,1.101,283,1.223,328,0.997,396,1.505,411,1.275,446,1.414,459,6.197,491,3.602,512,4.772,521,5.012,593,5.52,596,5.746,618,1.825,658,2.206,740,3.679,743,2.241,759,3.858,760,3.287,761,5.735,965,4.176,1800,6.329,1802,6.393,1803,4.986,1805,4.659,1819,4.659,1821,4.397,1822,4.397,1824,4.659,1825,4.659,1826,4.659,1827,4.397,1828,4.659,1829,4.659,1831,4.986,1833,5.425,1835,5.425,1836,6.092]],["title/classes/GeneratePullRequestDescriptionDto.html",[237,0.134,1837,3.409]],["body/classes/GeneratePullRequestDescriptionDto.html",[7,0.007,30,0.063,31,0.07,32,0.056,39,0.525,43,0.503,44,0.747,48,0.105,129,4.086,149,2.906,167,3.374,236,0.077,237,0.187,244,0.004,245,0.004,252,0.242,263,1.138,283,1.163,328,0.789,396,1.583,411,1.457,446,1.213,459,5.747,478,5.018,491,3.633,534,5.747,618,1.444,629,1.736,650,3.192,655,3.729,657,3.729,658,1.745,740,3.524,743,2.359,759,3.686,760,3.442,761,5.117,782,4.3,829,4.843,965,3.582,1227,3.479,1800,6.383,1802,5.705,1805,3.686,1807,6.106,1808,3.945,1809,5.371,1810,5.371,1811,5.371,1812,5.371,1813,5.371,1814,5.371,1815,5.371,1816,5.371,1817,5.371,1819,3.686,1821,3.479,1822,3.479,1823,3.306,1824,3.686,1825,3.686,1826,3.686,1827,3.479,1828,3.686,1829,3.686,1830,3.945,1837,4.736,1838,4.293,1839,7.46,1840,7.461,1841,7.461,1842,5.844,1843,4.82,1844,4.82,1845,4.82,1846,4.82,1847,4.82,1848,4.82,1849,4.82,1850,4.82,1851,6.561,1852,6.561,1853,6.561,1854,7.46,1855,4.82,1856,4.82,1857,4.82,1858,4.82,1859,4.293,1860,4.82,1861,4.293,1862,4.82,1863,4.82,1864,4.82]],["title/controllers/HealthController.html",[246,1.018,1865,3.612]],["body/controllers/HealthController.html",[7,0.007,30,0.069,31,0.076,32,0.061,35,1.377,39,0.422,46,1.377,48,0.133,50,0.667,55,4.901,56,3.181,60,4.306,161,3.004,182,3.797,229,4.306,233,5.321,234,6.599,236,0.084,237,0.15,238,1.467,240,2.266,241,1.548,244,0.005,245,0.005,246,1.133,248,1.417,250,1.944,252,0.265,253,2.061,263,0.916,266,3.129,325,3.066,326,2.94,327,1.944,328,0.861,350,3.209,353,2.624,391,1.308,507,2.33,846,4.839,1865,5.321,1866,4.685,1867,7.896,1868,8.865,1869,5.261,1870,6.958,1871,6.958,1872,5.261,1873,5.261,1874,6.958,1875,5.261,1876,6.958,1877,6.958,1878,6.958,1879,7.797,1880,6.958,1881,6.958,1882,5.261,1883,5.261,1884,5.261,1885,5.261,1886,5.261,1887,6.197,1888,6.958,1889,5.261,1890,5.261,1891,5.261,1892,5.261,1893,5.261,1894,5.261,1895,6.958,1896,5.261,1897,5.261,1898,5.261,1899,5.261,1900,5.261,1901,5.261,1902,5.261,1903,5.261,1904,5.261,1905,5.261,1906,5.261,1907,5.261,1908,5.261,1909,5.261,1910,5.261,1911,5.261]],["title/modules/HealthModule.html",[0,1.207,13,3.409]],["body/modules/HealthModule.html",[0,2.175,2,2.74,7,0.007,13,6.143,30,0.095,31,0.106,32,0.085,34,3.052,48,0.144,50,0.921,59,7.58,60,5.946,236,0.116,237,0.207,244,0.006,245,0.006,248,2.292,1865,6.903,1912,7.265,1913,7.265]],["title/controllers/HighlightController.html",[246,1.018,1914,3.612]],["body/controllers/HighlightController.html",[7,0.007,30,0.065,31,0.072,32,0.058,35,1.322,39,0.459,41,1.446,42,0.836,43,0.453,44,0.705,46,1.496,48,0.147,50,0.628,112,2.62,113,1.322,135,4.263,136,3.395,137,3.111,146,4.238,149,2.195,236,0.079,237,0.141,241,1.456,244,0.004,245,0.004,246,1.066,248,1.333,250,1.828,252,0.249,253,1.944,263,0.996,266,3.285,272,2.917,279,4.199,283,0.977,324,3.086,325,3.184,326,3.053,327,1.828,328,0.81,350,1.757,353,2.852,365,1.541,391,1.422,396,1.113,456,1.828,504,3.896,509,3.896,623,2.438,659,1.828,660,1.863,677,1.792,678,1.906,709,4.565,713,2.127,714,2.286,715,2.408,716,2.231,717,2.408,771,2.744,968,5.949,1041,5.458,1517,4.378,1520,5.306,1523,5.458,1633,4.42,1659,5.108,1663,2.408,1914,5.108,1915,4.408,1916,5.783,1917,7.21,1918,8.096,1919,8.096,1920,4.408,1921,4.949,1922,4.949,1923,4.949,1924,4.949,1925,4.051,1926,4.408,1927,4.949,1928,4.949,1929,4.408,1930,4.408,1931,4.408,1932,4.408,1933,4.949,1934,3.766,1935,4.949,1936,2.702,1937,4.753,1938,4.949,1939,3.785,1940,4.949,1941,4.949,1942,4.051,1943,4.408,1944,4.949,1945,4.408,1946,4.949,1947,4.949,1948,4.949,1949,4.408,1950,4.408,1951,4.949,1952,4.408]],["title/modules/HighlightModule.html",[0,1.207,14,3.409]],["body/modules/HighlightModule.html",[0,2.097,2,2.574,3,3.226,7,0.007,14,6.839,24,5.527,27,3.296,28,2.743,29,2.574,30,0.089,31,0.099,32,0.08,34,3.446,48,0.149,50,0.866,52,3.154,53,2.008,101,4.683,135,3.849,136,4.683,137,4.291,169,2.082,236,0.109,237,0.194,244,0.005,245,0.005,248,2.209,1914,6.725,1953,6.826,1954,6.826,1955,6.826,1956,6.08,1957,6.826]],["title/classes/HighlightOptionsDto.html",[237,0.134,1520,3.095]],["body/classes/HighlightOptionsDto.html",[7,0.007,30,0.072,31,0.08,32,0.064,39,0.531,43,0.455,44,0.882,48,0.135,136,3.767,145,3.096,146,3.874,147,3.451,161,2.591,236,0.114,237,0.227,241,2.801,244,0.005,245,0.005,252,0.276,263,1.152,283,1.029,328,0.899,396,0.915,411,1.091,446,1.323,483,3.422,543,2.745,614,2.275,618,1.645,620,2.351,621,2.823,622,2.883,623,2.46,625,3.68,626,4.035,627,3.98,629,2.452,630,3.544,632,3.096,633,3.096,637,2.907,638,4.035,639,2.998,640,3.096,641,4.757,642,3.203,643,3.98,644,2.823,645,3.096,646,3.203,647,3.096,648,3.203,649,3.578,650,3.482,651,2.602,652,3.096,653,3.096,654,3.203,655,3.578,657,3.578,658,1.988,659,2.029,660,1.532,743,1.829,760,3.076,792,2.998,1494,4.199,1495,4.199,1517,3.599,1518,5.858,1519,4.89,1520,4.69,1521,4.498,1522,4.89,1793,4.199,1958,5.491]],["title/injectables/HttpLoggerMiddleware.html",[102,3.612,449,0.843]],["body/injectables/HttpLoggerMiddleware.html",[7,0.007,30,0.077,31,0.085,32,0.068,35,1.477,39,0.453,41,1.12,42,0.647,43,0.305,44,0.546,46,1.159,47,4.228,48,0.138,50,0.743,69,4.795,70,4.795,71,4.795,102,6.279,149,2.999,188,5.93,189,2.235,231,5.706,236,0.119,237,0.167,240,2.099,244,0.005,245,0.005,252,0.295,356,2.098,391,1.544,446,1.379,449,1.332,453,4.073,462,5.93,468,6.776,523,1.925,629,1.974,630,2.461,915,4.795,916,4.795,1079,4.48,1959,7.312,1960,5.706,1961,7.461,1962,8.644,1963,5.858,1964,7.461,1965,5.858,1966,7.461,1967,4.795,1968,4.795,1969,5.858,1970,5.858,1971,5.217,1972,5.858,1973,5.858,1974,7.461,1975,8.644,1976,7.461,1977,5.858,1978,5.858,1979,5.858,1980,5.858,1981,5.858,1982,5.858]],["title/controllers/InsightController.html",[246,1.018,1983,3.612]],["body/controllers/InsightController.html",[7,0.007,30,0.067,31,0.074,32,0.059,35,1.345,39,0.413,41,1.3,42,0.751,43,0.444,44,0.634,46,1.345,48,0.143,50,0.644,108,4.468,113,1.516,149,1.668,189,1.521,236,0.081,237,0.144,241,1.494,244,0.005,245,0.005,246,1.094,248,1.367,250,1.876,252,0.255,253,1.859,263,0.895,266,3.085,267,3.397,272,2.739,279,4.272,283,1.192,292,2.939,315,3.483,321,2.289,322,3.14,323,3.832,324,3.539,325,3.013,326,2.889,327,1.876,328,0.831,329,2.086,350,1.802,352,2.346,353,2.563,356,1.233,365,1.967,386,1.863,391,0.955,396,1.363,456,1.876,488,1.955,504,3.964,505,3.071,509,3.964,510,2.406,620,2.884,773,4.659,1118,3.192,1590,2.689,1633,3.711,1660,4.157,1663,2.47,1664,2.863,1719,4.454,1934,4.319,1983,5.198,1984,4.522,1985,8.181,1986,8.181,1987,5.078,1988,4.157,1989,5.563,1990,5.078,1991,6.796,1992,5.198,1993,5.078,1994,5.078,1995,4.522,1996,4.662,1997,4.522,1998,5.529,1999,5.078,2000,5.198,2001,6.796,2002,2.689,2003,3.665,2004,4.157,2005,3.665,2006,4.633,2007,3.328,2008,5.078,2009,4.157,2010,4.157,2011,5.078,2012,5.563,2013,4.522,2014,5.078,2015,4.522,2016,5.078]],["title/injectables/InsightMemberService.html",[449,0.843,2017,3.095]],["body/injectables/InsightMemberService.html",[7,0.007,30,0.053,31,0.059,32,0.047,35,1.147,39,0.523,41,1.61,42,0.93,43,0.438,44,0.785,46,1.666,48,0.138,50,0.512,53,1.188,65,1.032,141,4.445,142,3.088,167,3.811,169,1.232,185,1.523,186,1.278,189,2.032,236,0.064,237,0.115,238,1.617,240,1.482,244,0.004,245,0.004,252,0.203,253,2.004,272,2.736,283,1.133,292,2.628,356,2.16,365,1.81,368,4.941,372,2.355,386,2.151,391,1.649,411,1.388,449,1.035,488,1.555,507,2.271,523,1.327,623,2.2,629,1.069,630,1.696,659,2.142,660,1.126,669,2.261,676,1.696,677,1.462,678,1.555,681,3.705,682,2.204,685,3.454,695,3.069,696,2.277,697,2.277,698,2.277,773,2.018,893,3.341,909,3.133,911,2.981,1118,2.538,1313,3.506,1614,3.305,1718,3.506,1736,3.506,1740,2.981,1746,2.914,1752,3.596,1766,4.036,2006,4.482,2007,2.646,2015,3.596,2017,3.799,2018,7.178,2019,3.596,2020,5.163,2021,6.782,2022,5.163,2023,5.797,2024,5.163,2025,4.038,2026,6.782,2027,4.038,2028,5.797,2029,5.797,2030,4.038,2031,6.99,2032,4.038,2033,3.956,2034,4.038,2035,7.284,2036,7.849,2037,7.412,2038,4.038,2039,5.797,2040,4.038,2041,4.038,2042,5.797,2043,4.038,2044,5.163,2045,4.038,2046,3.088,2047,4.038,2048,2.981,2049,4.038,2050,4.038,2051,4.038,2052,4.038,2053,4.038,2054,4.038,2055,5.797,2056,4.038,2057,4.038,2058,3.596,2059,4.038,2060,4.038,2061,4.038,2062,4.038,2063,4.038,2064,4.038,2065,4.038]],["title/classes/InsightOptionsDto.html",[237,0.134,2066,3.866]],["body/classes/InsightOptionsDto.html",[7,0.007,30,0.064,31,0.071,32,0.057,39,0.548,43,0.476,44,0.897,48,0.12,152,2.855,236,0.106,237,0.189,241,2.865,244,0.004,245,0.004,252,0.246,263,1.19,283,0.972,328,0.801,411,1.377,446,1.225,483,3.232,543,2.446,614,1.955,618,1.466,620,2.178,621,2.516,622,2.4,623,2.391,625,3.409,626,3.738,627,3.758,629,2.472,630,3.538,632,3.738,633,4.239,636,4.358,637,2.591,638,3.738,639,2.672,640,2.759,641,4.544,642,2.855,643,3.758,644,2.516,645,2.759,646,2.855,647,2.759,648,2.855,649,3.314,650,2.381,651,2.319,652,2.759,653,2.759,654,2.855,655,4.21,656,3.076,657,4.21,658,1.772,659,1.808,660,1.365,661,3.867,701,3.532,760,3.464,771,2.01,1067,3.207,1314,3.076,1419,3.532,1521,4.726,1787,4.927,1788,4.927,1789,5.251,1790,3.532,1792,3.532,1795,4.785,1799,3.532,2066,5.427,2067,6.44,2068,4.894,2069,4.894,2070,7.518,2071,4.894,2072,4.894,2073,5.07,2074,4.006,2075,4.006,2076,3.742,2077,4.006,2078,4.006,2079,4.006]],["title/classes/InsightPageOptionsDto.html",[237,0.134,2080,3.24]],["body/classes/InsightPageOptionsDto.html",[7,0.007,30,0.08,31,0.089,32,0.071,39,0.533,43,0.457,44,0.883,48,0.098,236,0.098,237,0.174,241,2.786,244,0.005,245,0.005,252,0.308,263,1.156,283,1.082,446,1.417,483,3.599,543,3.056,618,1.831,620,2.751,621,3.143,622,2.775,623,2.521,625,3.941,626,4.322,627,4.186,629,2.505,630,3.688,632,3.447,633,3.447,637,3.237,638,4.322,639,3.337,640,3.447,641,4.95,642,3.566,643,4.186,644,3.143,645,3.447,646,3.566,647,3.447,648,3.566,649,3.832,650,2.974,651,2.897,652,3.447,653,3.447,654,3.566,659,2.258,660,1.705,2067,4.675,2080,5.258]],["title/injectables/InsightRepoService.html",[449,0.843,2081,3.24]],["body/injectables/InsightRepoService.html",[7,0.007,30,0.079,31,0.088,32,0.071,35,1.509,39,0.506,41,1.595,42,0.922,43,0.434,44,0.778,46,1.509,48,0.144,50,0.768,53,1.783,65,1.549,110,3.971,112,3.209,169,1.849,236,0.097,237,0.172,238,2.126,240,1.549,244,0.005,245,0.005,252,0.305,253,1.95,283,1.19,365,1.398,391,1.433,449,1.361,507,2.553,523,1.991,614,2.169,669,2.67,676,2.546,737,2.8,779,5.501,787,3.971,788,4.961,791,3.535,1123,4.374,2018,7.164,2035,6.24,2046,4.634,2081,5.23,2082,5.397,2083,7.623,2084,7.623,2085,6.06,2086,6.06,2087,7.623,2088,7.623,2089,6.06,2090,7.623,2091,6.06,2092,6.06,2093,6.06,2094,4.961,2095,5.397,2096,6.06]],["title/modules/InsightsModule.html",[0,1.207,15,3.409]],["body/modules/InsightsModule.html",[0,1.891,2,2.18,3,2.91,7,0.007,15,7.025,24,5.305,27,2.973,28,2.323,29,2.18,30,0.076,31,0.084,32,0.068,34,3.108,48,0.154,50,0.733,52,2.671,53,1.701,101,3.965,108,3.372,110,4.848,112,3.061,113,1.464,141,4.848,142,4.421,169,1.763,235,3.18,236,0.092,237,0.164,244,0.005,245,0.005,248,1.992,435,3.335,773,4.079,1983,6.24,2005,4.172,2006,5.835,2007,3.788,2017,5.96,2046,5.658,2081,6.619,2097,5.148,2098,5.148,2099,5.781,2100,5.148,2101,5.781,2102,6.24,2103,6.24,2104,7.398,2105,4.421,2106,5.781,2107,4.732,2108,5.781]],["title/injectables/InsightsService.html",[449,0.843,2006,2.856]],["body/injectables/InsightsService.html",[7,0.007,30,0.06,31,0.066,32,0.053,35,1.246,39,0.528,41,1.623,42,0.938,43,0.441,44,0.792,46,1.68,48,0.139,50,0.576,53,1.335,65,1.16,108,3.673,113,0.898,169,1.385,186,1.437,189,2.166,236,0.073,237,0.129,238,1.756,240,1.16,244,0.004,245,0.004,252,0.228,253,2.007,272,2.614,283,1.164,292,2.971,356,2.113,365,1.891,368,5.132,386,1.981,391,1.596,411,1.102,449,1.124,488,1.748,507,2.421,523,1.491,620,1.491,623,1.696,659,1.677,660,1.266,669,2.382,676,1.907,677,1.644,678,1.748,681,3.903,682,2.478,685,3.436,695,3.334,696,2.559,697,2.559,698,2.559,773,4.1,893,3.519,909,2.097,911,2.334,958,2.208,985,1.865,1090,2.326,1122,3.471,1123,3.276,1127,3.114,1148,4.043,1161,5.608,1313,3.808,1718,3.808,1736,3.808,1740,3.237,1745,3.114,1766,3.717,2005,3.276,2006,3.808,2033,4.217,2048,3.237,2080,5.356,2109,4.043,2110,6.296,2111,4.815,2112,6.296,2113,6.296,2114,4.539,2115,4.539,2116,6.296,2117,6.296,2118,4.539,2119,4.539,2120,5.154,2121,4.539,2122,4.539,2123,6.296,2124,4.539,2125,6.296,2126,4.539,2127,3.716,2128,4.539,2129,6.296,2130,4.539,2131,4.539,2132,6.296,2133,6.296,2134,4.539,2135,4.539,2136,4.539,2137,4.539,2138,4.539,2139,4.539,2140,4.539,2141,4.539]],["title/modules/LogModule.html",[0,1.207,2142,3.612]],["body/modules/LogModule.html",[0,2.049,2,2.478,3,3.152,7,0.007,27,3.221,28,2.64,29,2.478,30,0.086,31,0.096,32,0.077,34,2.76,48,0.15,50,0.833,52,3.036,53,1.933,54,7.138,56,3.974,127,4.507,188,4.507,198,5.379,235,3.445,236,0.105,237,0.187,244,0.005,245,0.005,435,3.613,849,7.082,860,6.442,875,5.852,2142,7.394,2143,5.852,2144,5.852,2145,5.852,2146,6.571,2147,5.852,2148,6.571,2149,6.571]],["title/injectables/LogService.html",[449,0.843,860,3.24]],["body/injectables/LogService.html",[7,0.007,30,0.084,31,0.093,32,0.075,35,1.559,39,0.478,41,1.507,42,0.871,43,0.41,44,0.735,46,1.265,48,0.146,50,0.81,53,1.88,65,1.634,127,4.384,167,3.286,198,5.232,236,0.102,237,0.182,238,2.198,240,1.634,244,0.005,245,0.005,252,0.322,253,1.81,356,1.552,386,1.751,391,1.202,449,1.407,485,4.017,507,2.14,511,3.286,523,2.1,669,2.721,676,2.685,801,6.821,855,5.232,860,5.406,2147,5.692,2150,5.692,2151,7.88,2152,6.391,2153,6.391,2154,7.88,2155,7.88,2156,6.391,2157,6.391,2158,6.391,2159,7.88,2160,6.391,2161,6.391,2162,6.391]],["title/modules/OpenAiModule.html",[0,1.207,16,3.24]],["body/modules/OpenAiModule.html",[0,2.116,2,2.615,3,3.256,7,0.007,16,6.594,27,3.327,28,2.787,29,2.615,30,0.091,31,0.101,32,0.081,48,0.132,50,0.879,161,2.511,162,4.045,235,3.559,236,0.111,237,0.197,244,0.006,245,0.006,435,3.732,444,5.303,455,5.761,535,5.005,2163,6.176,2164,6.176,2165,6.176,2166,6.934]],["title/injectables/OpenAiService.html",[449,0.843,455,2.755]],["body/injectables/OpenAiService.html",[7,0.007,30,0.073,31,0.081,32,0.065,35,1.434,39,0.44,41,1.386,42,0.801,43,0.418,44,0.676,46,1.107,48,0.128,50,0.71,55,5.668,56,3.384,113,1.107,162,4.687,189,1.676,231,4.28,236,0.089,237,0.159,238,1.561,244,0.005,245,0.005,252,0.282,253,1.702,283,1.038,284,3.055,320,2.963,356,1.951,357,4.97,386,1.986,391,1.052,411,1.399,441,3.839,442,5.541,444,6.145,445,4.581,447,4.984,449,1.294,450,7.381,451,4.581,452,4.984,453,3.055,454,5.829,455,4.226,456,2.068,457,6.453,458,7.568,459,6.038,460,4.28,461,4.581,462,3.839,463,4.581,464,4.984,465,4.984,466,3.667,467,4.984,468,4.039,469,4.984,470,4.28,471,4.984,472,4.984,473,4.984,474,4.984,475,4.984,476,2.11,477,4.984,478,4.28,479,4.581,480,6.453,481,1.986,482,4.984,483,2.405,484,4.984,485,3.517,486,4.984,487,4.984,488,2.155,489,4.984,507,1.874,523,1.839,1773,4.581,2167,7.246,2168,5.596,2169,5.596]],["title/classes/PageDto.html",[237,0.134,677,1.71]],["body/classes/PageDto.html",[7,0.007,30,0.08,31,0.089,32,0.072,39,0.509,41,1.171,42,0.677,43,0.487,44,0.571,48,0.14,167,3.945,236,0.098,237,0.238,238,1.708,241,2.716,244,0.005,245,0.005,252,0.308,263,1.011,328,1.002,446,1.418,485,5.687,618,1.834,620,2.012,658,2.217,677,2.778,681,4.734,682,3.343,759,3.687,780,4.201,782,5.492,785,5.012,2170,5.454,2171,6.76,2172,7.673,2173,6.206,2174,7.673,2175,6.124,2176,6.124,2177,6.124,2178,6.124,2179,6.124,2180,6.124,2181,8.38,2182,6.124,2183,6.124,2184,6.124]],["title/classes/PageMetaDto.html",[237,0.134,681,2.361]],["body/classes/PageMetaDto.html",[7,0.007,30,0.066,31,0.073,32,0.059,39,0.543,41,0.961,42,0.556,43,0.465,44,0.469,48,0.108,167,3.471,185,2.546,236,0.08,237,0.143,238,1.883,241,2.857,244,0.005,245,0.005,252,0.253,263,1.153,283,1.236,328,0.823,396,1.458,446,1.248,462,4.631,481,3.017,483,3.502,618,1.506,620,3.105,623,1.354,625,3.919,681,3.375,695,4.5,740,3.851,743,2.416,759,3.934,772,4.314,1067,4.424,1097,5.881,1098,7.256,1406,5.163,2171,3.628,2185,6.95,2186,4.477,2187,7.622,2188,7.622,2189,7.622,2190,5.027,2191,6.231,2192,6.751,2193,6.751,2194,5.027,2195,7.256,2196,7.256,2197,5.027,2198,6.751,2199,5.027,2200,5.027,2201,6.012,2202,5.027,2203,5.027,2204,6.788,2205,5.027,2206,6.012,2207,5.027,2208,5.027,2209,5.027,2210,5.027,2211,5.027,2212,5.027]],["title/interfaces/PageMetaParameters.html",[441,3.24,2191,3.612]],["body/interfaces/PageMetaParameters.html",[7,0.007,30,0.094,31,0.104,32,0.084,43,0.439,48,0.114,236,0.114,244,0.006,245,0.006,252,0.36,283,1.16,441,4.912,443,5.861,446,1.56,620,2.353,623,2.624,660,1.997,695,4.906,2171,5.168,2185,5.476,2191,6.454,2213,6.377]],["title/classes/PageOptionsDto.html",[237,0.134,623,1.272]],["body/classes/PageOptionsDto.html",[7,0.007,30,0.068,31,0.075,32,0.06,39,0.52,43,0.475,44,0.852,48,0.131,236,0.082,237,0.22,241,2.791,244,0.005,245,0.005,252,0.259,263,1.084,283,1.208,328,0.843,391,0.969,396,0.858,446,1.268,481,1.829,483,3.977,543,3.431,618,1.543,620,2.535,621,2.649,623,1.848,625,3.968,626,4.351,627,4.284,629,2.511,630,3.457,632,2.905,633,3.869,637,4.086,638,3.869,639,3.747,640,2.905,643,4.497,644,3.968,645,2.905,647,2.905,649,4.284,650,2.507,651,3.252,652,2.905,653,2.905,655,4.284,656,3.239,657,4.284,658,1.866,661,3.005,680,3.94,785,4.218,1821,3.719,1822,3.719,1823,3.535,2076,5.248,2185,6.74,2204,4.589,2206,4.589,2214,6.112,2215,6.873,2216,5.152,2217,5.152,2218,5.152,2219,4.589,2220,5.152,2221,5.152,2222,8.229,2223,5.152,2224,6.863,2225,5.152,2226,5.152,2227,5.152,2228,4.589]],["title/classes/PullRequestContributorOptionsDto.html",[237,0.134,704,3.409]],["body/classes/PullRequestContributorOptionsDto.html",[7,0.007,30,0.064,31,0.071,32,0.057,39,0.548,43,0.481,44,0.897,48,0.129,149,2.766,161,2.398,236,0.078,237,0.188,241,2.865,244,0.004,245,0.004,252,0.246,263,1.189,283,0.971,328,0.8,411,1.411,446,1.224,483,3.229,491,3.458,543,2.443,614,1.954,618,1.464,620,2.176,621,2.513,622,2.398,623,2.39,625,3.406,626,3.734,627,3.756,629,2.389,630,3.383,632,3.734,633,4.236,637,2.588,638,3.734,639,2.668,640,2.755,641,4.541,642,2.851,643,3.756,644,2.513,645,2.755,646,2.851,647,2.755,648,2.851,649,3.311,650,2.378,651,2.316,652,2.755,653,2.755,654,2.851,655,4.208,656,3.072,657,4.208,658,1.769,659,1.806,660,1.847,661,2.851,664,5.09,704,4.78,720,5.774,743,2.059,760,3.462,792,2.668,1521,4.722,1787,4.924,1788,4.924,1789,5.248,1790,3.527,1791,4,1792,4.78,1793,3.737,1794,4.352,1795,3.527,1796,4,1797,4.352,1798,3.203,1799,3.527,2229,4.352,2230,3.737]],["title/controllers/PullRequestController.html",[246,1.018,2231,3.612]],["body/controllers/PullRequestController.html",[7,0.007,30,0.062,31,0.069,32,0.056,35,1.289,39,0.45,41,1.419,42,0.82,43,0.448,44,0.692,46,1.468,48,0.149,50,0.605,129,4.148,130,4.352,132,5.047,134,3.27,148,4.268,149,2.742,150,3.441,236,0.076,237,0.136,238,1.33,240,1.665,241,1.916,244,0.004,245,0.004,246,1.027,248,1.284,250,1.761,252,0.24,253,1.929,263,0.977,266,3.249,272,2.885,325,3.135,326,3.006,327,1.761,328,0.78,350,1.692,353,2.797,391,1.395,466,3.124,491,3.275,494,3.441,516,3.441,517,3.441,518,4.556,620,1.566,623,2.504,649,2.383,659,1.761,660,2.069,677,1.726,678,1.836,705,3.902,706,5.8,707,4.701,708,3.938,709,4.495,713,2.049,714,2.203,715,2.319,716,2.149,717,2.319,718,4.662,719,3.646,724,3.902,990,3.168,1118,4.093,1176,3.124,1633,3.556,1785,5.469,1925,3.902,1942,3.902,2007,3.124,2231,4.98,2232,4.246,2233,7.972,2234,7.972,2235,7.972,2236,4.767,2237,4.767,2238,4.701,2239,6.513,2240,5.8,2241,4.767,2242,4.767,2243,4.767,2244,6.513,2245,4.767,2246,4.767,2247,5.754,2248,4.767,2249,4.98,2250,4.246,2251,4.468,2252,4.246,2253,4.767,2254,5.8,2255,4.767,2256,4.767,2257,4.767,2258,4.767,2259,4.767,2260,4.767,2261,4.767,2262,4.767,2263,4.767,2264,4.767]],["title/controllers/PullRequestDescriptionController.html",[246,1.018,2265,3.612]],["body/controllers/PullRequestDescriptionController.html",[7,0.007,30,0.077,31,0.086,32,0.069,35,1.484,39,0.359,41,1.13,42,0.653,43,0.39,44,0.551,46,1.169,48,0.143,50,0.749,129,3.466,130,4.095,149,2.941,189,1.77,236,0.094,237,0.168,244,0.005,245,0.005,246,1.273,248,1.591,250,2.182,252,0.297,253,1.746,263,0.778,266,2.829,284,3.225,289,3.871,320,3.128,321,2.662,322,3.466,323,4.229,326,2.829,327,2.182,328,0.967,329,2.426,350,2.097,352,2.729,353,2.228,356,1.434,386,1.619,391,1.111,396,1.524,456,2.182,488,2.274,491,3.081,494,4.264,495,6.631,500,5.736,502,4.916,504,4.375,505,3.572,507,1.978,508,5.146,509,4.375,510,2.799,511,3.037,516,4.264,517,4.264,518,3.225,520,4.517,563,5.414,829,4.536,1837,6.788,2265,5.736,2266,5.261,2267,5.907,2268,5.907,2269,5.907,2270,5.907,2271,5.261,2272,5.654,2273,5.261,2274,5.907,2275,5.907]],["title/injectables/PullRequestDescriptionService.html",[449,0.843,2272,3.24]],["body/injectables/PullRequestDescriptionService.html",[7,0.007,30,0.07,31,0.078,32,0.063,35,1.394,39,0.478,41,1.505,42,0.869,43,0.409,44,0.734,46,1.394,48,0.126,50,0.679,129,3.253,130,4.562,149,2.927,161,1.94,162,3.125,216,3.24,230,3.866,236,0.086,237,0.152,238,1.494,240,2.011,244,0.005,245,0.005,252,0.27,253,1.666,283,1.017,356,1.709,370,3.24,388,3.24,391,1.324,396,1.392,411,1.359,449,1.257,454,4.831,455,5.197,456,1.979,468,3.866,478,5.385,491,3.432,507,2.358,511,2.754,512,2.678,523,1.76,526,5.385,527,4.097,531,5.764,532,5.732,534,5.397,535,3.866,536,3.866,537,4.097,539,4.385,540,4.097,541,3.866,542,3.866,543,2.678,544,4.097,545,4.097,547,5.385,548,4.097,549,4.385,550,4.385,551,4.097,552,5.053,553,4.097,554,4.097,555,4.097,571,6.272,573,6.272,576,4.385,577,4.385,578,4.385,579,4.385,585,3.367,829,3.24,1837,6.031,1840,4.771,1841,7.731,2271,4.771,2272,4.831,2276,4.771,2277,5.357,2278,5.357,2279,5.357,2280,5.357,2281,5.357,2282,5.357,2283,5.357,2284,5.357,2285,5.357,2286,4.771,2287,5.357,2288,5.357,2289,5.357,2290,5.357,2291,5.357,2292,5.357]],["title/injectables/PullRequestInsightsService.html",[449,0.843,2251,3.24]],["body/injectables/PullRequestInsightsService.html",[7,0.007,30,0.066,31,0.073,32,0.059,35,1.339,39,0.495,41,1.56,42,0.844,43,0.473,44,0.712,46,1.511,48,0.14,50,0.639,53,1.483,65,1.289,130,4.645,148,4.433,149,2.878,150,3.639,169,1.538,189,1.51,216,5.41,236,0.081,237,0.143,238,1.886,240,1.729,244,0.005,245,0.005,252,0.254,253,1.433,272,1.688,283,1.054,356,1.98,386,1.382,391,1.272,411,1.031,449,1.208,466,3.304,488,1.941,491,3.495,523,1.656,629,1.79,630,2.841,651,3.205,660,1.406,669,2.488,676,2.118,685,2.218,708,3.049,771,2.071,893,3.677,909,3.125,961,4.453,1175,4.127,1176,6.152,1178,4.49,1740,3.478,1750,4.127,1766,3.925,1785,6.008,1787,3.304,2033,4.758,2173,3.458,2249,3.855,2251,4.64,2252,4.49,2293,4.49,2294,6.764,2295,7.633,2296,5.041,2297,5.41,2298,5.041,2299,6.764,2300,5.041,2301,5.041,2302,5.041,2303,5.041,2304,5.041,2305,6.024,2306,4.127,2307,3.458,2308,3.639,2309,5.041,2310,5.041,2311,5.041,2312,5.041,2313,5.041,2314,5.041,2315,4.127,2316,5.041,2317,5.041,2318,5.041,2319,5.041,2320,5.041,2321,5.041,2322,5.041,2323,5.041,2324,4.49,2325,4.49,2326,4.49,2327,5.041]],["title/modules/PullRequestModule.html",[0,1.207,17,3.095]],["body/modules/PullRequestModule.html",[0,1.754,2,1.943,3,2.699,7,0.007,16,6.046,17,6.428,27,2.758,28,2.071,29,1.943,30,0.068,31,0.075,32,0.06,34,2.883,48,0.155,50,0.653,52,2.38,53,1.516,129,3.959,130,2.813,132,3.116,134,3.535,148,4.498,149,2.704,150,3.719,161,1.866,162,3.005,163,4.589,169,1.572,235,2.95,236,0.082,237,0.147,244,0.005,245,0.005,248,1.848,435,3.093,490,5.901,491,2.116,512,4.406,514,6.046,515,4.589,556,5.901,557,4.708,566,6.046,567,5.618,590,5.901,596,3.377,598,6.046,718,5.963,719,3.94,731,4.589,2007,3.377,2231,5.901,2249,5.248,2251,6.046,2265,5.901,2272,6.046,2273,4.589,2307,3.535,2328,4.589,2329,4.589,2330,4.589,2331,4.589,2332,6.046,2333,5.152,2334,4.589,2335,5.152,2336,5.152,2337,5.152,2338,5.152,2339,5.152]],["title/classes/PullRequestPageOptionsDto.html",[237,0.134,2247,3.409]],["body/classes/PullRequestPageOptionsDto.html",[7,0.007,30,0.054,31,0.06,32,0.048,39,0.549,43,0.483,44,0.897,48,0.119,149,2.844,161,2.708,236,0.11,237,0.167,241,2.874,244,0.004,245,0.004,252,0.207,263,1.191,283,0.886,328,0.674,361,2.172,362,2.415,411,1.415,446,1.087,483,2.947,491,3.556,543,2.059,614,1.783,618,1.234,620,2.936,621,2.118,622,2.129,623,2.28,624,5.244,625,3.023,626,3.315,627,3.428,629,2.393,630,3.323,632,4.217,633,4.773,637,2.181,638,3.315,639,2.248,640,2.322,641,4.217,642,2.402,643,3.428,644,2.118,645,2.322,646,2.402,647,2.322,648,2.402,649,2.939,650,2.004,651,1.952,652,2.322,653,2.322,654,2.402,655,4.327,656,2.589,657,4.327,658,1.491,659,1.522,660,1.64,661,4.613,664,4.147,720,5.938,743,2.102,760,3.4,792,2.248,820,3.149,1210,4.813,1219,4.813,1303,4.813,1396,4.31,1521,4.31,1787,4.494,1788,4.494,1789,4.974,1790,2.973,1792,4.949,1793,3.149,1795,2.973,1796,3.371,1798,2.699,1799,2.973,2219,3.668,2229,3.668,2230,3.149,2247,4.244,2340,4.118,2341,4.118,2342,7.54,2343,6.857,2344,4.118,2345,3.668,2346,4.118,2347,4.118,2348,7.325,2349,4.118,2350,4.118,2351,4.118,2352,4.118]],["title/injectables/PullRequestService.html",[449,0.843,718,2.969]],["body/injectables/PullRequestService.html",[7,0.007,30,0.055,31,0.061,32,0.049,35,1.183,39,0.503,41,1.526,42,0.882,43,0.415,44,0.745,46,1.579,48,0.148,50,0.535,53,1.241,65,1.078,130,4.654,132,2.55,134,2.893,149,2.283,169,1.287,186,1.893,189,2.265,236,0.067,237,0.12,238,1.668,240,1.529,244,0.004,245,0.004,252,0.212,253,1.903,272,2.776,356,2.289,362,1.732,386,1.904,391,1.306,411,1.059,449,1.068,481,1.497,491,3.502,523,1.386,620,1.386,623,2.525,627,4.354,643,2.108,644,3.075,651,3.293,659,2.209,660,2.108,664,4.201,667,3.919,669,2.306,672,3.919,676,1.772,677,1.527,678,1.624,679,3.452,680,3.225,681,4.261,682,2.303,685,3.898,693,4.895,694,4.895,695,4.003,696,2.378,697,2.378,698,3.372,704,5.015,708,3.616,711,4.316,718,3.759,721,3.756,771,2.854,893,3.407,909,3.21,961,2.303,1176,4.553,1200,2.893,1208,3.452,1750,5.687,1789,2.55,1798,2.764,2048,3.075,2247,5.015,2249,3.225,2250,6.188,2297,4.571,2307,2.893,2308,3.044,2315,4.895,2353,3.756,2354,5.98,2355,5.98,2356,5.326,2357,4.217,2358,6.188,2359,4.217,2360,5.98,2361,4.217,2362,4.217,2363,5.98,2364,4.217,2365,4.217,2366,4.217,2367,3.756,2368,4.217,2369,4.217,2370,4.217,2371,4.217,2372,6.188,2373,6.948,2374,4.217,2375,4.217,2376,4.217,2377,4.217,2378,4.217,2379,4.217,2380,4.217,2381,5.326,2382,4.217,2383,4.217,2384,4.217,2385,4.217,2386,4.217,2387,4.217,2388,3.452,2389,4.217,2390,3.756]],["title/controllers/RepoContributionsController.html",[246,1.018,611,3.612]],["body/controllers/RepoContributionsController.html",[7,0.007,30,0.066,31,0.073,32,0.058,35,1.331,39,0.408,41,1.286,42,0.743,43,0.423,44,0.627,46,1.331,48,0.145,50,0.634,85,4.596,236,0.08,237,0.142,240,1.278,241,1.979,244,0.005,245,0.005,246,1.077,248,1.346,250,1.847,252,0.251,253,1.851,263,0.886,266,3.065,272,2.722,283,0.982,324,3.511,325,2.989,326,2.866,327,1.847,328,0.818,350,2.387,353,2.536,356,1.632,365,1.875,386,1.843,391,1.264,396,1.12,411,1.332,456,1.847,609,5.213,611,5.143,612,4.091,613,4.452,614,2.484,617,6.443,620,1.642,623,2.353,660,1.394,677,1.81,678,1.925,683,4.452,713,3.267,714,2.309,715,2.432,716,2.253,717,2.432,771,2.053,976,3.822,1022,6.216,1587,5.109,1590,4.304,1633,3.671,1648,4.741,1663,2.432,1687,3.429,1688,3.276,1766,3.458,1934,3.792,2238,4.854,2391,6.769,2392,4.452,2393,8.483,2394,8.483,2395,4.998,2396,4.998,2397,8.129,2398,6.725,2399,6.725,2400,4.998,2401,4.998,2402,4.998,2403,4.998,2404,3.908,2405,3.142,2406,3.429,2407,3.429,2408,4.998,2409,6.725,2410,3.429,2411,3.429,2412,6.725,2413,6.725,2414,4.998,2415,3.429]],["title/controllers/RepoController.html",[246,1.018,2416,3.612]],["body/controllers/RepoController.html",[7,0.007,30,0.061,31,0.068,32,0.054,35,1.267,39,0.479,41,1.508,42,0.872,43,0.464,44,0.736,46,1.561,48,0.143,50,0.589,81,3.598,236,0.074,237,0.132,241,1.367,244,0.004,245,0.004,246,1.001,248,1.251,250,1.717,252,0.234,253,1.977,263,1.039,266,3.365,272,2.988,283,0.946,324,3.382,325,3.253,326,3.119,327,1.717,328,0.761,350,1.65,353,2.974,365,1.688,391,1.483,396,1.066,411,1.304,456,1.717,614,2.355,620,1.527,623,2.124,660,1.785,667,5.168,669,2.406,672,3.046,677,1.683,678,1.789,705,3.804,707,4.619,708,3.87,709,4.447,713,1.998,714,2.147,715,2.261,716,2.095,717,2.261,724,3.804,771,3.397,1590,4.176,1633,4.872,1648,4.6,1660,3.804,1663,2.261,1688,3.046,1718,4.769,1736,2.81,1925,3.804,1934,3.608,1942,3.804,1988,3.804,2010,3.804,2105,3.554,2404,3.764,2406,3.188,2407,3.188,2411,3.188,2415,3.188,2416,4.894,2417,4.139,2418,7.887,2419,7.024,2420,4.6,2421,4.39,2422,4.647,2423,4.647,2424,5.692,2425,4.647,2426,5.7,2427,4.647,2428,4.139,2429,4.647,2430,4.647,2431,4.647,2432,3.804,2433,5.7,2434,3.354,2435,4.647,2436,4.647,2437,4.647,2438,4.39,2439,4.647,2440,3.188,2441,4.647,2442,4.647]],["title/modules/RepoFilterModule.html",[0,1.207,2332,3.24]],["body/modules/RepoFilterModule.html",[0,2.119,2,2.62,3,3.26,7,0.007,27,3.331,28,2.792,29,2.62,30,0.091,31,0.101,32,0.081,48,0.132,50,0.881,235,3.563,236,0.111,237,0.198,244,0.006,245,0.006,435,3.736,614,1.807,2297,5.974,2308,5.015,2332,6.596,2443,6.188,2444,6.188,2445,6.188,2446,5.687,2447,6.948]],["title/injectables/RepoFilterService.html",[449,0.843,2297,2.856]],["body/injectables/RepoFilterService.html",[7,0.007,30,0.064,31,0.071,32,0.057,35,1.313,39,0.403,41,1.439,42,0.733,43,0.391,44,0.619,46,1.313,47,3.537,48,0.129,50,0.621,65,1.253,216,4.013,236,0.078,237,0.139,244,0.004,245,0.004,252,0.379,283,0.858,356,1.19,391,0.921,411,1.147,449,1.185,485,4.729,502,4.349,523,1.61,563,5.82,614,1.957,625,2.52,627,4.212,629,1.756,630,2.788,639,4.108,651,2.322,660,1.851,685,2.92,707,4.789,708,5.599,713,2.852,771,2.013,961,4.108,982,1.969,985,2.726,1047,3.748,1176,3.212,1198,4.365,1200,3.362,1314,3.08,1663,4.226,1745,3.362,1785,5.531,1787,4.349,1788,3.212,1789,2.964,1798,3.212,2033,4.703,2173,3.362,2297,4.013,2305,5.91,2306,4.011,2325,4.365,2326,4.365,2446,6.159,2448,4.365,2449,6.636,2450,6.636,2451,6.636,2452,4.901,2453,8.063,2454,6.636,2455,4.901,2456,6.636,2457,4.901,2458,6.159,2459,4.901,2460,4.901,2461,4.901,2462,4.901,2463,6.636,2464,4.901,2465,4.901,2466,7.524,2467,4.901,2468,4.901,2469,4.901,2470,5.91,2471,6.636,2472,4.901,2473,4.901,2474,6.636,2475,4.901,2476,4.901,2477,4.901,2478,4.901,2479,4.365,2480,4.901,2481,4.901]],["title/classes/RepoInfo.html",[237,0.134,779,2.969]],["body/classes/RepoInfo.html",[7,0.007,30,0.085,31,0.095,32,0.076,39,0.484,42,0.881,43,0.487,48,0.127,161,2.886,236,0.104,237,0.227,244,0.005,245,0.005,252,0.328,263,1.05,283,1.16,328,1.066,365,2.124,396,1.328,411,1.369,446,1.473,614,2.334,618,1.95,658,2.357,740,3.507,743,2.294,759,3.79,760,3.425,761,5.467,779,5.009,792,3.554,1153,5.009,2482,6.217,2483,5.798,2484,7.671,2485,6.51,2486,6.51,2487,6.51,2488,6.51,2489,6.51]],["title/modules/RepoModule.html",[0,1.207,18,2.663]],["body/modules/RepoModule.html",[0,2.032,2,2.446,3,3.127,7,0.007,18,5.439,27,3.195,28,2.606,29,2.446,30,0.085,31,0.094,32,0.076,34,3.34,48,0.15,50,0.822,52,2.996,53,1.908,81,2.664,169,1.979,235,3.418,236,0.104,237,0.185,244,0.005,245,0.005,248,2.141,435,3.584,616,4.449,2105,4.96,2307,4.449,2332,6.422,2334,5.776,2404,5.037,2416,6.576,2432,5.309,2490,5.776,2491,6.486,2492,5.776,2493,5.776,2494,6.486,2495,6.486]],["title/classes/RepoPageOptionsDto.html",[237,0.134,2420,2.755]],["body/classes/RepoPageOptionsDto.html",[7,0.007,30,0.066,31,0.074,32,0.059,39,0.518,42,0.75,43,0.443,44,0.869,48,0.122,152,2.958,236,0.122,237,0.193,241,2.765,244,0.005,245,0.005,252,0.255,263,1.123,283,0.989,328,0.83,361,2.509,362,2.789,446,1.255,483,3.29,543,2.535,618,1.519,620,2.686,621,2.607,622,2.458,623,2.413,624,5.854,625,3.491,626,3.828,627,3.827,629,2.487,630,3.581,632,3.828,633,4.316,634,6.467,637,2.685,638,3.828,639,2.768,640,2.859,641,4.61,642,2.958,643,3.827,644,2.607,645,2.859,646,2.958,647,2.859,648,2.958,649,3.394,650,2.467,651,2.403,652,2.859,653,2.859,654,2.958,655,3.394,656,3.187,657,3.394,658,1.836,659,1.873,660,1.414,661,4.465,701,3.66,771,2.083,1067,3.323,1314,3.187,1419,3.66,2073,5.192,2074,4.151,2075,4.151,2076,3.878,2077,4.151,2078,4.151,2079,4.151,2420,3.96,2482,4.901,2496,6.266,2497,4.516,2498,5.071,2499,4.516,2500,6.047,2501,5.192,2502,6.047,2503,6.047,2504,5.558,2505,5.192,2506,5.558,2507,5.558,2508,5.192,2509,5.071]],["title/classes/RepoSearchOptionsDto.html",[237,0.134,2424,3.409]],["body/classes/RepoSearchOptionsDto.html",[7,0.007,30,0.064,31,0.07,32,0.057,39,0.555,43,0.481,44,0.902,48,0.128,236,0.077,237,0.187,241,2.876,244,0.004,245,0.004,252,0.244,263,1.203,283,0.967,328,0.793,411,1.374,446,1.217,483,3.215,543,2.423,614,2.087,618,1.452,620,2.458,621,2.492,622,2.385,623,2.161,624,5.037,625,3.386,626,3.713,627,3.74,629,2.487,630,3.526,632,4.218,633,4.525,634,5.4,637,2.566,638,3.713,639,2.646,640,2.732,641,4.732,642,2.827,643,3.74,644,2.492,645,2.732,646,2.827,647,2.732,648,2.827,649,3.292,650,2.358,651,2.297,652,2.732,653,2.732,654,2.827,655,4.196,656,3.046,657,4.196,658,1.755,660,1.837,661,2.827,752,3.967,760,3.45,1521,4.702,1787,4.903,1788,4.903,1789,5.235,1790,3.498,1791,3.967,1792,3.498,1795,4.754,1798,3.176,1799,3.498,2345,4.316,2420,4.682,2424,4.754,2434,6.058,2482,6.058,2496,3.967,2497,4.316,2510,4.846,2511,4.846,2512,4.846]],["title/injectables/RepoService.html",[449,0.843,2404,2.428]],["body/injectables/RepoService.html",[7,0.007,30,0.042,31,0.047,32,0.038,35,0.971,39,0.502,41,1.581,42,0.931,43,0.43,44,0.752,46,1.596,48,0.137,50,0.409,53,0.948,65,0.824,81,1.324,85,2.967,87,1.949,89,1.949,91,1.949,93,1.949,113,0.638,161,1.167,169,0.983,186,1.553,189,2.255,214,4.543,236,0.051,237,0.092,238,1.368,240,1.827,244,0.003,245,0.003,252,0.162,253,1.882,272,2.767,283,1.012,292,2.521,310,2.112,356,2.268,365,1.531,386,1.958,391,1.517,411,1.412,449,0.876,481,1.144,488,1.889,523,1.059,614,1.858,620,1.059,623,1.924,627,3.763,629,1.298,630,2.061,634,2.326,643,1.611,644,2.522,649,2.969,651,3.147,659,1.19,660,1.657,667,3.893,669,2.026,672,2.112,675,3.365,676,1.354,677,1.167,678,1.241,679,2.637,680,2.464,681,3.912,682,1.759,685,3.549,687,4.369,688,4.369,690,2.87,691,2.87,693,4.016,694,4.016,695,3.516,696,1.817,697,2.766,698,2.766,708,1.949,737,1.489,893,2.993,909,2.744,911,2.522,956,1.545,961,2.678,982,2.387,985,2.015,1022,3.752,1030,2.87,1176,4.352,1200,3.365,1335,2.87,1350,2.87,1369,2.87,1384,2.87,1648,1.879,1675,2.464,1718,2.967,1736,1.949,1740,3.054,1763,2.637,1766,3.871,1788,2.112,1789,1.949,1798,2.112,2033,3.873,2048,2.522,2094,4.016,2173,2.21,2297,4.016,2306,2.637,2307,2.21,2308,2.326,2315,2.637,2356,4.369,2358,5.29,2367,4.369,2372,2.87,2381,2.87,2388,2.637,2404,2.522,2419,4.369,2420,3.873,2424,4.793,2428,4.369,2432,2.637,2433,4.369,2434,2.326,2496,2.637,2501,4.543,2504,2.637,2505,2.464,2506,2.637,2507,2.637,2508,2.464,2513,2.87,2514,4.906,2515,4.906,2516,5.94,2517,3.222,2518,3.222,2519,4.906,2520,4.906,2521,3.222,2522,3.222,2523,5.94,2524,3.222,2525,3.222,2526,3.222,2527,3.222,2528,4.906,2529,3.222,2530,3.222,2531,5.94,2532,3.222,2533,5.29,2534,3.222,2535,4.906,2536,3.222,2537,4.906,2538,3.222,2539,3.222,2540,3.222,2541,3.222,2542,3.222,2543,4.906,2544,3.222,2545,3.222,2546,3.222,2547,3.222,2548,3.222,2549,3.222,2550,7.146,2551,7.146,2552,2.87,2553,2.637,2554,2.87,2555,3.222,2556,3.222,2557,3.222,2558,3.222,2559,3.222,2560,3.222,2561,3.222,2562,3.222,2563,3.222,2564,3.222,2565,3.222,2566,3.222,2567,3.222,2568,3.222,2569,3.222,2570,3.222,2571,3.222,2572,3.222,2573,3.222,2574,3.222,2575,3.222,2576,3.222,2577,3.222,2578,3.222,2579,3.222,2580,2.87,2581,3.222,2582,3.222,2583,4.906,2584,3.222,2585,3.222,2586,4.906,2587,3.222,2588,3.222,2589,3.222,2590,3.222,2591,3.222]],["title/controllers/RepoStarController.html",[246,1.018,2592,3.612]],["body/controllers/RepoStarController.html",[7,0.007,30,0.045,31,0.049,32,0.04,35,1.01,39,0.444,41,1.399,42,0.808,43,0.467,44,0.682,46,1.759,48,0.139,50,0.431,81,2.52,82,1.747,89,4.422,90,2.598,113,1.01,236,0.054,237,0.097,240,0.868,241,1.502,244,0.003,245,0.003,246,0.732,248,0.915,250,1.255,252,0.171,253,1.917,263,0.963,266,3.222,267,2.552,272,2.861,283,1.211,292,3.191,321,1.531,322,3.549,324,3.378,325,3.021,326,2.897,327,1.255,328,0.556,329,1.395,350,1.812,352,3.378,353,2.758,356,1.656,365,1.891,386,1.869,391,1.375,396,1.464,411,1.34,456,1.255,510,1.61,614,2.543,620,1.116,623,1.375,660,0.947,677,1.23,678,1.308,709,2.879,713,2.194,714,1.569,715,1.653,716,1.531,717,1.653,771,2.52,787,2.226,1337,7.268,1590,3.612,1633,4.664,1648,4.782,1663,1.653,1664,1.915,1687,3.502,1688,3.346,1766,3.507,1934,3.458,1996,4.679,2002,1.799,2404,3.154,2405,2.135,2406,2.33,2407,2.33,2411,3.502,2415,3.502,2420,3.979,2421,2.33,2438,2.33,2440,2.33,2501,2.598,2592,3.904,2593,6.841,2594,3.025,2595,6.821,2596,7.313,2597,7.313,2598,6.821,2599,7.313,2600,3.397,2601,3.397,2602,5.216,2603,6.821,2604,6.821,2605,4.923,2606,4.476,2607,4.679,2608,3.397,2609,3.397,2610,3.397,2611,3.397,2612,3.397,2613,3.397,2614,6.288,2615,3.397,2616,3.397,2617,3.397,2618,4.47,2619,3.397,2620,3.397,2621,3.397,2622,3.397,2623,2.452,2624,4.792,2625,4.208,2626,3.025,2627,2.598,2628,3.397,2629,3.397,2630,3.397,2631,5.106,2632,3.397,2633,3.397,2634,3.397,2635,5.106,2636,3.397]],["title/controllers/RepoStargazeController.html",[246,1.018,2637,3.612]],["body/controllers/RepoStargazeController.html",[7,0.007,30,0.045,31,0.05,32,0.04,35,1.016,39,0.445,41,1.403,42,0.811,43,0.467,44,0.684,46,1.762,48,0.139,50,0.434,81,2.531,82,1.76,93,4.437,94,2.618,113,1.016,236,0.055,237,0.097,240,0.875,241,1.511,244,0.003,245,0.003,246,0.738,248,0.922,250,1.265,252,0.172,253,1.92,263,0.966,266,3.228,267,2.567,272,2.866,283,1.212,292,3.194,321,1.543,322,3.559,324,3.39,325,3.03,326,2.905,327,1.265,328,0.56,329,1.406,350,1.823,352,3.39,353,2.767,356,1.662,365,1.895,386,1.877,391,1.379,396,1.467,411,1.343,456,1.265,510,1.622,614,2.556,620,1.125,623,1.383,660,0.955,677,1.239,678,1.318,709,2.895,713,2.207,714,1.582,715,1.665,716,1.543,717,1.665,771,2.531,787,2.243,1319,5.045,1535,5.049,1561,6.488,1590,3.626,1633,4.674,1648,4.793,1663,1.665,1664,1.93,1687,3.523,1688,3.365,1766,3.521,1934,3.475,2002,1.813,2404,3.169,2405,2.152,2406,2.348,2407,2.348,2410,3.523,2411,3.523,2415,3.523,2420,3.994,2421,2.348,2438,2.348,2440,2.348,2554,3.049,2605,4.942,2606,4.487,2623,2.471,2624,4.808,2627,2.618,2637,3.927,2638,6.861,2639,3.049,2640,7.337,2641,7.337,2642,7.337,2643,7.337,2644,7.337,2645,3.423,2646,3.423,2647,5.135,2648,6.848,2649,6.099,2650,3.423,2651,3.423,2652,3.423,2653,3.423,2654,3.423,2655,3.423,2656,3.423,2657,3.423,2658,3.423,2659,5.135,2660,3.423,2661,3.423,2662,3.423,2663,3.423,2664,4.228,2665,3.049,2666,3.423,2667,3.423,2668,3.927,2669,5.135,2670,3.423,2671,3.423,2672,4.574,2673,5.135,2674,3.423]],["title/controllers/RepoSubmitController.html",[246,1.018,2675,3.612]],["body/controllers/RepoSubmitController.html",[7,0.007,30,0.044,31,0.049,32,0.04,35,1.007,39,0.443,41,1.396,42,0.807,43,0.466,44,0.681,46,1.758,48,0.138,50,0.429,81,2.514,82,1.74,91,4.415,92,2.588,113,1.007,236,0.054,237,0.096,240,0.865,241,1.498,244,0.003,245,0.003,246,0.729,248,0.911,250,1.25,252,0.17,253,1.916,263,0.962,266,3.219,267,2.545,272,2.858,283,1.21,292,3.19,321,1.525,322,3.544,324,3.373,325,3.017,326,2.893,327,1.25,328,0.554,329,1.39,350,1.807,352,3.373,353,2.753,356,1.653,365,1.889,386,1.866,391,1.373,396,1.463,411,1.339,456,1.25,510,1.604,614,2.542,620,1.112,623,1.371,660,0.944,677,1.225,678,1.303,709,2.87,713,2.188,714,1.563,715,1.646,716,1.525,717,1.646,771,2.514,787,2.217,1353,7.752,1590,3.605,1633,4.66,1648,4.777,1663,1.646,1664,1.908,1687,3.492,1688,3.336,1766,3.5,1934,3.45,1996,4.67,2002,1.792,2404,3.147,2405,2.127,2406,2.321,2407,2.321,2410,3.492,2411,3.492,2415,3.492,2420,3.971,2421,2.321,2438,2.321,2440,2.321,2553,2.77,2602,5.206,2605,4.914,2606,4.471,2607,4.67,2618,4.462,2623,2.442,2624,4.784,2627,2.588,2675,3.893,2676,6.831,2677,3.014,2678,7.3,2679,7.3,2680,7.3,2681,7.3,2682,7.3,2683,3.384,2684,3.384,2685,6.808,2686,6.808,2687,3.384,2688,3.384,2689,3.384,2690,3.384,2691,3.384,2692,3.384,2693,6.831,2694,3.384,2695,3.384,2696,3.384,2697,3.384,2698,3.384,2699,3.384,2700,3.384,2701,4.198,2702,3.014,2703,2.77,2704,3.384,2705,3.384,2706,5.091,2707,3.384,2708,3.384,2709,5.091,2710,3.384]],["title/controllers/RepoVoteController.html",[246,1.018,2711,3.612]],["body/controllers/RepoVoteController.html",[7,0.007,30,0.045,31,0.049,32,0.04,35,1.01,39,0.444,41,1.399,42,0.808,43,0.467,44,0.682,46,1.759,48,0.139,50,0.431,81,2.52,82,1.747,87,4.422,88,2.598,113,1.01,236,0.054,237,0.097,240,0.868,241,1.502,244,0.003,245,0.003,246,0.732,248,0.915,250,1.255,252,0.171,253,1.917,263,0.963,266,3.222,267,2.552,272,2.861,283,1.211,292,3.191,321,1.531,322,3.549,324,3.378,325,3.021,326,2.897,327,1.255,328,0.556,329,1.395,350,1.812,352,3.378,353,2.758,356,1.656,365,1.891,386,1.869,391,1.375,396,1.464,411,1.34,456,1.255,510,1.61,614,2.543,620,1.116,623,1.375,660,0.947,677,1.23,678,1.308,709,2.879,713,2.194,714,1.569,715,1.653,716,1.531,717,1.653,771,2.52,787,2.226,1371,7.268,1590,3.612,1633,4.664,1648,4.782,1663,1.653,1664,1.915,1687,3.502,1688,3.346,1766,3.507,1934,3.458,1996,4.679,2002,1.799,2404,3.154,2405,2.135,2406,2.33,2407,2.33,2411,3.502,2415,3.502,2420,3.979,2421,2.33,2438,2.33,2440,2.33,2552,3.025,2602,5.216,2605,4.923,2606,4.476,2607,4.679,2618,4.47,2623,2.452,2624,4.792,2627,2.598,2711,3.904,2712,6.841,2713,3.025,2714,6.821,2715,7.313,2716,7.313,2717,6.821,2718,7.313,2719,3.397,2720,3.397,2721,6.821,2722,6.821,2723,3.397,2724,3.397,2725,3.397,2726,3.397,2727,3.397,2728,3.397,2729,6.288,2730,3.397,2731,3.397,2732,3.397,2733,3.397,2734,3.397,2735,3.397,2736,3.397,2737,4.208,2738,3.025,2739,3.397,2740,3.397,2741,3.397,2742,5.106,2743,3.397,2744,3.397,2745,3.397,2746,5.106,2747,3.397]],["title/modules/StarModule.html",[0,1.207,19,3.409]],["body/modules/StarModule.html",[0,2.019,2,2.419,3,3.106,7,0.007,18,5.264,19,6.95,27,3.174,28,2.578,29,2.419,30,0.084,31,0.093,32,0.075,34,3.318,48,0.151,50,0.813,52,2.964,53,1.887,79,4.204,81,2.635,82,3.298,89,4.776,90,4.905,169,1.957,235,3.395,236,0.102,237,0.183,244,0.005,245,0.005,248,2.127,435,3.56,614,1.668,616,4.4,2592,6.544,2625,6.711,2626,5.713,2748,5.713,2749,6.415,2750,5.713,2751,5.713,2752,6.415,2753,6.415]],["title/injectables/StarService.html",[449,0.843,2625,3.24]],["body/injectables/StarService.html",[7,0.007,30,0.069,31,0.076,32,0.061,35,1.377,39,0.504,41,1.491,42,0.862,43,0.406,44,0.727,46,1.543,48,0.133,50,0.667,53,1.548,65,1.345,89,3.181,90,4.023,169,1.605,189,2.336,236,0.084,237,0.15,238,1.941,240,1.345,244,0.005,245,0.005,252,0.265,253,1.878,272,2.778,283,1.23,292,3.166,356,2.095,386,2.274,391,1.56,449,1.242,488,3.002,523,1.728,614,1.81,669,2.531,673,6.527,676,2.21,685,3.062,737,2.43,893,3.74,909,3.215,911,3.578,1090,1.944,1337,4.023,1740,2.705,2048,3.578,2606,3.799,2607,3.609,2614,5.696,2625,4.773,2754,4.685,2755,6.958,2756,6.958,2757,5.261,2758,5.261,2759,6.958,2760,5.261,2761,6.958,2762,5.261,2763,6.958,2764,5.261,2765,3.181,2766,5.261,2767,5.261,2768,6.958,2769,6.958,2770,8.865,2771,6.958,2772,4.56,2773,5.261,2774,5.261,2775,3.797,2776,5.261]],["title/modules/StargazeModule.html",[0,1.207,20,3.409]],["body/modules/StargazeModule.html",[0,2.019,2,2.419,3,3.106,7,0.007,18,5.264,20,6.95,27,3.174,28,2.578,29,2.419,30,0.084,31,0.093,32,0.075,34,3.318,48,0.151,50,0.813,52,2.964,53,1.887,79,4.204,81,2.635,82,3.298,93,4.776,94,4.905,169,1.957,235,3.395,236,0.102,237,0.183,244,0.005,245,0.005,248,2.127,435,3.56,614,1.668,616,4.4,2637,6.544,2664,6.711,2665,5.713,2777,5.713,2778,5.713,2779,6.415,2780,5.713,2781,6.415,2782,6.415]],["title/injectables/StargazeService.html",[449,0.843,2664,3.24]],["body/injectables/StargazeService.html",[7,0.007,30,0.069,31,0.076,32,0.061,35,1.372,39,0.503,41,1.487,42,0.859,43,0.404,44,0.725,46,1.538,48,0.132,50,0.663,53,1.539,65,1.337,93,3.162,94,3.999,169,1.595,189,2.329,236,0.084,237,0.149,238,1.933,240,1.337,244,0.005,245,0.005,252,0.263,253,1.875,272,2.772,283,1.229,292,3.163,356,2.091,386,2.268,391,1.556,449,1.238,488,2.993,523,1.718,614,2.022,669,2.525,673,6.517,676,2.197,685,3.642,737,2.416,893,3.731,909,3.202,911,3.564,1090,1.932,1535,3.427,1740,2.689,2048,3.564,2606,3.784,2649,6.173,2664,4.754,2765,3.162,2772,4.542,2775,3.774,2783,4.657,2784,6.931,2785,6.931,2786,5.229,2787,5.229,2788,6.931,2789,5.229,2790,6.931,2791,5.229,2792,6.931,2793,5.229,2794,5.229,2795,5.229,2796,6.931,2797,6.931,2798,8.851,2799,6.931,2800,5.229,2801,5.229,2802,5.229]],["title/modules/StripeModule.html",[0,1.207,432,3.24]],["body/modules/StripeModule.html",[0,2.119,2,2.62,3,3.26,7,0.007,27,3.331,28,2.792,29,2.62,30,0.091,31,0.101,32,0.081,34,2.919,48,0.132,50,0.881,235,3.563,236,0.111,237,0.198,244,0.006,245,0.006,338,6.474,432,6.596,435,3.736,2803,6.188,2804,6.188,2805,6.188,2806,6.948,2807,6.948]],["title/injectables/StripeService.html",[338,3.095,449,0.843]],["body/injectables/StripeService.html",[7,0.007,30,0.073,31,0.081,32,0.065,35,1.429,39,0.534,41,1.533,42,0.886,43,0.441,44,0.82,46,1.429,48,0.128,50,0.706,55,5.66,56,3.368,120,5.762,167,2.864,189,1.668,236,0.089,237,0.158,238,1.553,240,2.049,244,0.005,245,0.005,252,0.28,253,1.908,268,4.559,283,1.036,292,1.865,301,4.782,338,4.734,356,1.352,365,1.666,386,1.526,391,1.507,408,5.913,411,1.373,446,1.335,449,1.29,456,2.058,483,2.394,507,2.419,523,1.83,675,3.821,892,6.433,1001,2.394,1026,4.559,1393,4.259,1395,4.559,1401,4.259,1414,4.96,1773,4.559,2214,6.433,2808,4.96,2809,8.017,2810,7.223,2811,7.223,2812,7.223,2813,5.57,2814,7.223,2815,5.57,2816,5.57,2817,5.57,2818,8.017,2819,5.57,2820,5.57,2821,4.96,2822,5.57,2823,5.57,2824,5.57,2825,5.57,2826,5.57,2827,5.57,2828,5.57,2829,5.57,2830,5.57,2831,4.96,2832,5.57,2833,5.57,2834,5.57,2835,5.57,2836,5.57,2837,5.57]],["title/modules/StripeSubscriptionModule.html",[0,1.207,21,3.24]],["body/modules/StripeSubscriptionModule.html",[0,2.084,2,2.55,3,3.207,7,0.007,21,6.56,27,3.277,28,2.717,29,2.55,30,0.089,31,0.098,32,0.079,34,2.84,48,0.145,50,0.857,52,3.123,53,1.989,120,4.249,123,5.17,125,4.638,126,5.534,169,2.062,235,3.505,236,0.108,237,0.192,244,0.005,245,0.005,435,3.676,1385,5.17,2838,6.021,2839,6.021,2840,6.021,2841,6.755,2842,6.761,2843,6.021,2844,6.761]],["title/injectables/StripeSubscriptionService.html",[449,0.843,2841,3.24]],["body/injectables/StripeSubscriptionService.html",[7,0.007,30,0.084,31,0.093,32,0.075,35,1.563,39,0.52,41,1.511,42,0.873,43,0.411,44,0.737,46,1.563,48,0.143,50,0.813,53,1.887,65,1.64,120,4.032,125,4.4,126,5.251,169,1.957,236,0.102,237,0.183,238,2.203,240,1.64,244,0.005,245,0.005,252,0.323,253,1.813,368,5.175,391,1.485,449,1.41,507,2.148,523,2.107,669,2.724,676,2.695,893,4.025,1385,6.829,1401,4.905,2841,5.418,2845,5.713,2846,7.898,2847,6.415,2848,6.415,2849,7.898,2850,6.415,2851,7.898,2852,6.415,2853,6.415,2854,6.415,2855,6.415]],["title/modules/StripeWebHookModule.html",[0,1.207,22,3.409]],["body/modules/StripeWebHookModule.html",[0,1.999,2,2.38,3,3.075,7,0.007,10,6.095,21,6.38,22,7.073,24,5.425,27,3.142,28,2.536,29,2.38,30,0.083,31,0.092,32,0.074,34,3.284,48,0.149,50,0.8,101,4.329,119,5.166,120,3.967,123,4.826,124,5.62,235,2.712,236,0.101,237,0.18,244,0.005,245,0.005,248,2.105,432,6.38,435,3.524,440,5.62,2856,5.62,2857,5.62,2858,6.311,2859,6.977,2860,4.826,2861,6.311,2862,6.311]],["title/controllers/StripeWebhookController.html",[246,1.018,2859,3.409]],["body/controllers/StripeWebhookController.html",[7,0.007,30,0.055,31,0.061,32,0.049,35,1.185,39,0.364,41,1.146,42,0.662,43,0.312,44,0.559,46,1.185,48,0.142,50,0.536,55,4.373,56,2.557,113,1.185,120,4.373,123,3.233,188,4.109,189,2.393,236,0.068,237,0.12,238,1.179,240,2.266,244,0.004,245,0.004,246,0.911,248,1.138,250,1.562,252,0.213,253,1.757,263,0.557,292,2.534,320,2.238,325,2.356,327,1.562,328,0.692,336,3.478,337,3.051,338,4.559,339,3.765,340,4.559,341,3.765,350,1.501,356,2.263,361,1.562,365,1.382,370,2.557,386,2.273,388,2.557,389,4.581,391,0.795,410,6.196,411,1.386,466,5.437,481,2.126,488,2.679,507,2.006,508,5.191,552,2.557,637,2.238,950,3.765,1051,2.9,1090,1.562,1387,3.765,1388,3.765,1389,3.765,1390,3.765,1391,3.765,1392,3.765,1393,3.233,1394,3.765,1395,3.46,1396,3.765,1397,3.765,1398,3.765,1401,6.344,1419,3.051,2458,3.46,2841,4.772,2843,3.765,2859,4.323,2860,5.32,2863,5.695,2864,3.46,2865,5.99,2866,5.99,2867,4.228,2868,7.568,2869,4.228,2870,4.228,2871,6.196,2872,5.99,2873,4.228,2874,5.99,2875,3.46,2876,4.228,2877,3.46,2878,3.46,2879,5.335,2880,5.335,2881,5.335,2882,5.335,2883,4.228,2884,4.228,2885,4.228,2886,6.957,2887,4.228,2888,4.228,2889,4.228,2890,4.228,2891,4.228,2892,4.228,2893,3.765,2894,4.228,2895,6.957,2896,4.228,2897,5.99,2898,4.228,2899,4.228,2900,4.228,2901,4.228,2902,4.228,2903,4.228,2904,4.228,2905,4.228,2906,4.228,2907,4.228,2908,4.228,2909,4.228,2910,4.228,2911,4.228,2912,4.228,2913,4.228,2914,4.228,2915,5.99,2916,4.228,2917,4.228,2918,4.228,2919,4.228,2920,4.228,2921,4.228,2922,6.957,2923,4.228,2924,4.228,2925,4.228,2926,6.196,2927,4.228,2928,3.46,2929,4.228,2930,4.228,2931,4.228,2932,4.228,2933,5.99,2934,4.228,2935,4.228,2936,4.228,2937,4.228,2938,4.228,2939,4.228,2940,4.228,2941,4.228,2942,4.228,2943,4.228]],["title/modules/SubmitModule.html",[0,1.207,23,3.409]],["body/modules/SubmitModule.html",[0,2.019,2,2.419,3,3.106,7,0.007,18,5.264,23,6.95,27,3.174,28,2.578,29,2.419,30,0.084,31,0.093,32,0.075,34,3.318,48,0.151,50,0.813,52,2.964,53,1.887,79,4.204,81,2.635,82,3.298,91,4.776,92,4.905,169,1.957,235,3.395,236,0.102,237,0.183,244,0.005,245,0.005,248,2.127,435,3.56,614,1.668,616,4.4,2675,6.544,2701,6.711,2702,5.713,2944,5.713,2945,5.713,2946,6.415,2947,5.713,2948,6.415,2949,6.415]],["title/injectables/SubmitService.html",[449,0.843,2701,3.24]],["body/injectables/SubmitService.html",[7,0.007,30,0.069,31,0.076,32,0.061,35,1.377,39,0.504,41,1.491,42,0.862,43,0.406,44,0.727,46,1.543,48,0.133,50,0.667,53,1.548,65,1.345,91,3.181,92,4.023,169,1.605,189,2.336,236,0.084,237,0.15,238,1.941,240,1.345,244,0.005,245,0.005,252,0.265,253,1.878,272,2.778,283,1.23,292,3.166,356,2.095,386,2.274,391,1.56,449,1.242,488,3.002,523,1.728,614,1.81,669,2.531,673,6.527,676,2.21,685,3.062,737,2.43,893,3.74,909,3.215,911,3.578,1090,1.944,1740,2.705,2048,3.578,2606,3.799,2607,3.609,2701,4.773,2703,4.306,2765,3.181,2772,4.56,2775,3.797,2950,4.685,2951,6.958,2952,6.958,2953,5.261,2954,5.261,2955,6.958,2956,5.261,2957,6.958,2958,5.261,2959,6.958,2960,5.261,2961,5.261,2962,5.261,2963,6.958,2964,6.958,2965,8.865,2966,6.958,2967,6.958,2968,5.261,2969,5.261,2970,5.261]],["title/classes/SupabaseAuthDto.html",[237,0.134,333,3.612]],["body/classes/SupabaseAuthDto.html",[7,0.007,30,0.038,31,0.042,32,0.034,39,0.556,42,0.83,43,0.476,44,0.9,48,0.046,113,1.904,185,2.71,192,3.997,236,0.046,237,0.082,241,2.904,244,0.003,245,0.003,251,6.308,252,0.144,263,1.205,267,4.227,283,0.807,289,5.542,290,2.074,301,3.822,328,0.47,331,6.07,333,3.432,357,5.151,359,4.523,360,4.921,361,2.041,362,2.27,365,1.274,366,4.523,374,4.226,375,4.523,376,4.921,377,5.184,378,5.184,379,4.226,380,5.184,381,4.226,382,3.975,383,4.226,384,4.226,385,4.921,396,1.524,411,1.45,446,0.83,481,2.899,585,2.821,618,0.86,650,4.427,655,4.574,662,3.079,740,1.263,743,2.474,759,1.975,772,3.805,836,3.34,846,2.618,848,3.419,937,1.804,960,3.997,961,2.45,974,3.192,975,3.34,977,1.975,978,4.381,987,1.844,990,3.039,1028,3.674,1037,2.127,1046,3.079,1097,4.509,1118,2.821,1141,3.997,1306,3.997,1314,2.821,1461,3.432,1473,5.114,1533,3.674,1677,4.509,2971,8.19,2972,2.557,2973,2.871,2974,2.871,2975,4.488,2976,4.488,2977,2.871,2978,2.871,2979,3.24,2980,2.871,2981,4.488,2982,2.871,2983,3.997,2984,3.997,2985,2.871,2986,2.871,2987,2.871,2988,6.247,2989,4.488,2990,2.871,2991,4.488,2992,2.871,2993,2.871,2994,3.997,2995,3.997,2996,2.871,2997,4.488,2998,4.488,2999,2.871,3000,4.488,3001,2.871,3002,4.488,3003,2.871,3004,2.871,3005,3.674,3006,3.997,3007,2.871,3008,2.871,3009,4.488,3010,3.997,3011,2.871,3012,2.871]],["title/injectables/SupabaseGuard.html",[329,1.94,449,0.843]],["body/injectables/SupabaseGuard.html",[7,0.007,30,0.097,31,0.108,32,0.087,48,0.138,50,0.941,236,0.118,237,0.211,244,0.006,245,0.006,329,3.539,437,6.072,449,1.538,523,2.437,622,2.686,3013,6.607,3014,7.418,3015,7.418]],["title/injectables/SupabaseStrategy.html",[433,3.409,449,0.843]],["body/injectables/SupabaseStrategy.html",[7,0.007,30,0.082,31,0.091,32,0.073,35,1.542,39,0.515,41,1.49,42,0.861,43,0.405,44,0.727,46,1.542,47,4.53,48,0.142,50,0.796,62,4.53,113,1.242,236,0.1,237,0.179,238,2.364,244,0.005,245,0.005,251,4.306,252,0.316,253,1.795,262,7.255,331,5.346,371,2.609,391,1.18,433,5.624,437,5.138,449,1.391,507,2.102,523,2.062,622,2.273,2871,5.59,3016,5.59,3017,7.793,3018,6.94,3019,6.277,3020,7.793,3021,8.475,3022,6.277,3023,7.793,3024,6.277,3025,6.277,3026,6.277,3027,6.277,3028,6.277,3029,6.277,3030,6.277,3031,6.277,3032,6.277,3033,6.277,3034,6.277,3035,6.277,3036,6.277,3037,6.277,3038,6.277,3039,6.277,3040,6.277,3041,6.277,3042,6.277]],["title/classes/UpdateEndorsementDto.html",[237,0.134,3043,3.866]],["body/classes/UpdateEndorsementDto.html",[7,0.007,30,0.097,31,0.108,32,0.087,48,0.137,236,0.118,237,0.211,244,0.006,245,0.006,280,4.653,328,1.212,618,2.218,622,2.68,732,5.078,734,6.059,1668,6.059,3043,7.043,3044,6.593,3045,7.402,3046,7.402]],["title/classes/UpdateInsightDto.html",[237,0.134,1998,3.409]],["body/classes/UpdateInsightDto.html",[7,0.007,30,0.086,31,0.096,32,0.077,39,0.525,42,0.956,43,0.488,48,0.105,167,3.378,236,0.105,237,0.187,244,0.005,245,0.005,252,0.331,263,1.139,280,4.13,289,4.306,411,1.222,446,1.481,618,1.968,620,2.633,622,2.902,641,4.876,669,2.004,740,3.806,743,2.211,767,6.778,769,5.379,770,6.129,771,3.292,772,4.244,773,4.007,774,5.025,775,5.379,777,5.852,779,5.038,780,4.507,781,5.852,782,4.306,783,5.852,1998,5.785,2004,5.379,3047,5.379,3048,6.571,3049,6.571,3050,6.571]],["title/classes/UpdateInsightMemberDto.html",[237,0.134,3051,3.612]],["body/classes/UpdateInsightMemberDto.html",[7,0.007,30,0.089,31,0.099,32,0.079,39,0.412,43,0.456,48,0.131,236,0.108,237,0.233,244,0.005,245,0.005,252,0.341,263,0.894,328,1.111,396,1.131,411,1.388,446,1.511,618,2.033,658,2.457,740,2.986,743,2.089,759,3.597,760,3.513,773,4.551,794,5.555,795,5.9,1122,7.124,1127,5.607,1823,4.656,1992,5.19,3047,6.691,3051,6.251,3052,6.787,3053,6.691,3054,5.607,3055,6.787,3056,6.787]],["title/classes/UpdateUserCollaborationDto.html",[237,0.134,3057,3.612]],["body/classes/UpdateUserCollaborationDto.html",[7,0.007,30,0.09,31,0.099,32,0.08,39,0.415,43,0.458,48,0.131,113,1.625,149,2.698,225,7.314,236,0.109,237,0.234,244,0.006,245,0.006,252,0.344,263,0.901,328,1.12,396,1.139,411,1.392,446,1.518,618,2.049,658,2.476,740,3.01,743,2.099,759,3.613,760,3.53,810,5.599,811,5.633,1396,5.868,1823,4.692,3057,6.28,3058,5.927,3059,6.84,3060,6.84,3061,6.84,3062,6.84]],["title/classes/UpdateUserDto.html",[237,0.134,298,3.409]],["body/classes/UpdateUserDto.html",[7,0.007,30,0.05,31,0.056,32,0.045,39,0.541,42,0.85,43,0.505,44,0.876,48,0.089,113,1.859,178,4.078,185,1.445,236,0.061,237,0.159,241,2.361,244,0.004,245,0.004,252,0.193,263,1.174,298,4.028,301,4.334,314,7.609,328,0.627,371,3.238,377,5.879,378,5.879,379,5.034,380,5.879,381,5.034,382,4.583,383,5.034,384,5.034,396,1.484,399,5.879,411,1.497,446,1.031,453,3.047,585,3.508,618,1.148,650,4.211,655,4.396,657,4.396,658,1.387,740,2.456,743,2.439,759,2.897,760,3.56,772,3.829,786,4.568,797,3.412,799,4.97,800,3.136,846,2.234,937,2.243,1046,3.828,1314,2.408,1677,4.028,2979,4.028,2983,4.97,2984,4.97,2994,4.97,2995,3.412,3005,6.948,3006,3.412,3010,3.412,3054,2.628,3058,6.503,3063,3.412,3064,4.97,3065,3.831,3066,3.831,3067,5.581,3068,3.831,3069,3.831,3070,3.831,3071,3.831,3072,3.831,3073,3.831,3074,3.831,3075,3.831,3076,3.831,3077,6.583,3078,3.831,3079,3.831,3080,6.441,3081,3.831,3082,3.831,3083,3.831,3084,7.232,3085,5.581,3086,4.97,3087,5.581,3088,5.581,3089,5.581,3090,3.831,3091,3.831,3092,3.831,3093,3.831,3094,7.232,3095,3.831,3096,3.831,3097,3.831]],["title/classes/UpdateUserEmailPreferencesDto.html",[237,0.134,299,3.409]],["body/classes/UpdateUserEmailPreferencesDto.html",[7,0.007,30,0.083,31,0.092,32,0.074,39,0.476,43,0.484,48,0.125,113,1.867,185,2.955,236,0.101,237,0.223,244,0.005,245,0.005,252,0.319,263,1.032,299,5.656,301,5.151,328,1.037,371,3.192,396,1.305,446,1.448,518,4.278,618,1.897,658,2.293,740,3.448,743,2.273,759,3.744,772,5.047,775,6.414,786,6.965,811,5.376,1046,5.376,3058,6.142,3098,5.641,3099,7.578,3100,7.578,3101,6.334,3102,7.836,3103,6.334]],["title/classes/UpdateUserProfileInterestsDto.html",[237,0.134,308,3.409]],["body/classes/UpdateUserProfileInterestsDto.html",[7,0.007,30,0.089,31,0.099,32,0.08,39,0.414,43,0.457,48,0.131,113,1.621,167,4.213,236,0.109,237,0.233,244,0.005,245,0.005,252,0.343,263,0.897,308,5.913,310,6.112,328,1.115,371,2.942,396,1.135,411,1.34,446,1.514,466,4.465,618,2.041,658,2.467,740,2.998,743,2.094,759,3.605,780,5.62,782,5.974,2230,5.21,3058,5.913,3104,6.068,3105,5.577,3106,6.813,3107,5.21]],["title/controllers/UserCollaborationController.html",[246,1.018,3108,3.612]],["body/controllers/UserCollaborationController.html",[7,0.007,30,0.051,31,0.056,32,0.045,35,1.112,39,0.441,41,1.39,42,0.803,43,0.432,44,0.678,46,1.438,48,0.146,50,0.491,62,2.792,113,1.878,149,2.645,155,4.762,156,2.959,189,2.177,236,0.062,237,0.11,238,1.079,240,1.437,241,1.654,244,0.004,245,0.004,246,0.834,248,1.042,250,1.429,251,2.654,252,0.195,253,1.892,262,5.948,263,0.957,266,3.133,267,2.81,272,2.782,279,4.851,283,1.121,284,3.069,287,2.654,292,3.076,315,2.654,319,2.792,320,2.976,321,1.744,322,3.357,323,3.169,324,3.058,325,2.604,326,2.74,327,1.429,328,0.633,329,1.589,331,2.654,336,3.309,337,2.792,350,1.373,352,3.058,353,2.497,356,1.874,365,1.527,368,2.339,386,2.206,391,1.057,396,1.286,411,1.177,488,2.164,504,4.502,505,2.339,509,3.861,510,1.833,511,1.989,518,2.112,623,2.168,659,1.429,660,1.079,677,1.401,678,1.49,713,2.416,714,1.787,715,1.882,716,1.744,717,1.882,746,2.792,808,6.509,811,5.952,1396,2.432,1586,2.792,1587,3.533,1632,3.445,1663,1.882,1664,2.181,1704,3.445,1719,3.684,1936,2.112,1996,3.856,2000,5.063,2002,2.048,2003,2.792,2238,2.792,2618,3.684,2624,3.684,2765,2.339,3057,6.157,3108,4.298,3109,4.351,3110,3.445,3111,3.869,3112,6.874,3113,6.874,3114,7.266,3115,5.896,3116,3.869,3117,3.167,3118,5.621,3119,3.684,3120,6.62,3121,3.445,3122,5.621,3123,5.006,3124,3.869,3125,3.869,3126,3.445,3127,5.896,3128,3.869,3129,3.869,3130,3.869,3131,3.869,3132,3.869,3133,3.445,3134,3.869,3135,3.869,3136,3.869,3137,4.541,3138,3.445,3139,5.621,3140,3.869,3141,2.654,3142,3.869,3143,3.869,3144,3.869,3145,3.445,3146,3.869,3147,3.869,3148,6.62,3149,3.869,3150,5.621,3151,3.869,3152,3.869,3153,3.869,3154,3.445,3155,3.869,3156,3.869]],["title/injectables/UserCollaborationService.html",[449,0.843,3137,3.24]],["body/injectables/UserCollaborationService.html",[7,0.007,30,0.061,31,0.068,32,0.054,35,1.267,39,0.532,41,1.635,42,0.945,43,0.445,44,0.797,46,1.692,48,0.14,50,0.589,53,1.367,65,1.188,113,0.92,155,4.194,156,3.554,169,1.418,186,1.471,189,2.193,236,0.074,237,0.132,238,1.785,240,1.188,244,0.004,245,0.004,252,0.234,253,2.014,272,2.641,283,0.946,292,2.769,356,2.126,365,1.908,368,5.17,386,2.006,391,1.607,411,1.381,449,1.143,488,1.789,507,2.451,523,1.527,623,2.359,659,2.364,660,1.296,669,2.406,676,1.952,677,1.683,678,1.789,681,3.942,682,2.537,685,3.221,695,3.389,696,2.62,697,2.62,698,2.62,893,3.555,909,2.957,911,2.39,1313,2.81,1434,4.139,1718,3.87,1736,3.87,1740,3.291,1745,3.188,1746,3.354,1766,3.764,1936,2.537,2033,4.27,2048,3.291,3109,5.031,3112,5.7,3113,6.519,3115,5.7,3126,4.139,3133,5.7,3137,4.39,3154,7.366,3157,4.139,3158,6.4,3159,4.647,3160,4.647,3161,6.4,3162,6.4,3163,4.647,3164,4.647,3165,4.647,3166,4.647,3167,6.4,3168,4.647,3169,4.647,3170,4.647,3171,4.647,3172,4.647,3173,4.647,3174,4.647,3175,4.647,3176,4.647,3177,4.647,3178,4.647,3179,4.647]],["title/controllers/UserController.html",[246,1.018,3180,3.612]],["body/controllers/UserController.html",[7,0.007,30,0.054,31,0.06,32,0.049,35,1.17,39,0.456,41,1.436,42,0.83,43,0.451,44,0.7,46,1.486,48,0.147,50,0.527,81,2.429,82,2.135,83,2.877,113,1.826,129,3.468,130,2.267,132,3.577,133,2.849,134,2.849,135,3.335,137,2.61,152,4.379,178,5.048,236,0.066,237,0.118,238,1.158,240,1.919,244,0.004,245,0.004,246,0.895,248,1.118,250,1.534,252,0.209,253,1.938,263,0.989,266,3.271,272,2.905,304,3.698,324,3.666,325,3.12,326,2.992,327,1.534,328,0.68,336,3.444,350,1.474,353,2.831,356,1.436,372,2.422,386,1.621,391,1.411,396,1.251,411,1.395,518,3.229,623,2.577,659,1.534,660,1.158,677,1.504,678,1.599,713,3.227,714,1.918,715,2.02,716,1.872,717,2.02,718,4.33,719,3.176,771,3.259,1456,2.721,1587,4.718,1590,4.593,1633,4.098,1663,2.02,1699,5.639,1916,5.741,1926,3.698,1936,2.267,1937,4.33,1939,3.176,1943,3.698,2254,3.698,2404,3.542,2405,2.61,2421,2.849,2426,3.698,2438,2.849,2440,2.849,3141,2.849,3180,4.523,3181,3.698,3182,7.934,3183,7.934,3184,7.934,3185,5.914,3186,4.153,3187,4.153,3188,6.145,3189,3.698,3190,4.153,3191,4.153,3192,4.153,3193,4.153,3194,4.153,3195,4.153,3196,4.153,3197,4.153,3198,4.153,3199,4.153,3200,4.153,3201,4.153,3202,5.914,3203,4.153,3204,4.153,3205,2.849,3206,3.698,3207,4.153,3208,4.153,3209,4.153,3210,6.135,3211,4.153,3212,4.153,3213,4.153,3214,5.267,3215,4.153,3216,4.153]],["title/controllers/UserEndorsementController.html",[246,1.018,3217,3.612]],["body/controllers/UserEndorsementController.html",[7,0.007,30,0.07,31,0.078,32,0.062,35,1.391,39,0.427,41,1.344,42,0.777,43,0.434,44,0.656,46,1.391,48,0.147,50,0.677,113,1.652,158,5.244,159,4.372,236,0.085,237,0.152,241,1.571,244,0.005,245,0.005,246,1.151,248,1.438,250,1.973,252,0.269,253,1.886,263,0.926,266,3.147,267,4.172,283,1.151,292,2.904,321,2.407,322,3.629,325,3.089,326,2.962,327,1.973,328,0.874,329,2.194,350,1.896,352,3.247,353,2.65,391,1.321,456,1.973,507,2.353,510,2.531,623,2.606,659,1.973,660,1.49,709,4.706,713,3.376,714,2.467,715,2.598,716,2.407,717,2.598,1085,6.024,1622,7.433,1623,7.433,1633,4.557,1641,6.259,1652,5.753,1665,4.937,1673,4.756,1680,6.259,2002,2.828,3109,4.429,3217,5.374,3218,4.756,3219,5.341,3220,5.341,3221,5.341,3222,6.259,3223,5.341,3224,5.341,3225,5.341,3226,5.341,3227,4.756,3228,5.341,3229,5.341,3230,5.341,3231,5.341,3232,5.341,3233,5.341,3234,5.341]],["title/injectables/UserFollowService.html",[449,0.843,3235,3.24]],["body/injectables/UserFollowService.html",[7,0.007,30,0.059,31,0.066,32,0.053,35,1.243,39,0.497,41,1.491,42,0.861,43,0.405,44,0.727,46,1.543,48,0.135,50,0.573,53,1.33,65,1.156,113,1.621,139,2.963,140,3.458,169,1.379,189,2.335,236,0.072,237,0.129,238,1.751,240,1.844,244,0.004,245,0.004,252,0.227,253,1.907,272,2.838,283,1.24,292,3.052,336,4.346,356,2.11,386,2.382,391,1.54,449,1.121,488,3.001,523,1.486,669,2.378,676,1.899,685,3.73,893,3.513,909,3.333,911,3.709,1090,1.671,1313,2.734,1535,4.115,1560,3.458,1740,2.325,1936,2.469,2048,3.229,2606,2.469,2765,2.734,2772,4.115,2775,4.532,3109,4.779,3205,3.102,3235,4.308,3236,4.027,3237,6.28,3238,6.28,3239,6.28,3240,4.522,3241,5.464,3242,4.522,3243,6.28,3244,6.28,3245,7.894,3246,4.522,3247,4.522,3248,6.28,3249,8.117,3250,4.522,3251,6.28,3252,4.522,3253,3.458,3254,4.522,3255,4.522,3256,7.214,3257,7.214,3258,4.522,3259,8.864,3260,4.532,3261,6.28,3262,6.28,3263,6.28,3264,4.522,3265,6.28,3266,4.522,3267,4.522,3268,4.522]],["title/controllers/UserFollowsController.html",[246,1.018,3269,3.612]],["body/controllers/UserFollowsController.html",[7,0.007,30,0.06,31,0.066,32,0.053,35,1.248,39,0.44,41,1.385,42,0.8,43,0.427,44,0.675,46,1.625,48,0.139,50,0.577,113,1.923,139,4.134,140,3.48,178,5.082,236,0.073,237,0.129,240,1.163,241,1.856,244,0.004,245,0.004,246,0.981,248,1.226,250,1.681,252,0.229,253,1.909,263,0.953,266,3.203,267,3.153,272,2.844,283,1.165,292,3.137,321,2.051,322,3.611,324,3.611,325,2.481,326,2.948,327,1.681,328,0.745,329,1.869,336,3.619,350,1.615,352,3.345,353,2.73,356,1.757,372,2.655,386,1.984,391,1.361,396,1.415,411,1.375,456,1.681,502,4.134,510,2.157,982,2.535,1535,4.134,1561,5.642,1590,4.139,1663,2.214,1664,2.566,1699,5.926,1936,2.485,2002,2.41,2605,4.553,2606,3.444,2623,3.285,2624,4.744,2668,5.977,2672,5.618,3109,4.407,3141,3.122,3205,3.122,3206,4.053,3210,6.447,3214,6.447,3235,4.966,3260,4.553,3269,4.824,3270,4.053,3271,7.239,3272,8.209,3273,7.239,3274,4.551,3275,4.551,3276,6.308,3277,6.308,3278,4.551,3279,4.551,3280,4.551,3281,5.618,3282,4.551,3283,4.551,3284,4.551,3285,6.308,3286,4.551,3287,4.551,3288,4.551,3289,4.053,3290,4.551,3291,4.551,3292,4.551,3293,4.551,3294,4.551,3295,4.551]],["title/controllers/UserHighlightsController.html",[246,1.018,3296,3.612]],["body/controllers/UserHighlightsController.html",[7,0.007,30,0.034,31,0.038,32,0.03,35,0.819,39,0.469,41,1.478,42,0.854,43,0.459,44,0.721,46,1.529,48,0.129,50,0.329,112,1.372,113,1.825,135,3.877,137,1.629,145,2.334,146,4.586,147,1.629,149,2.749,189,2.06,236,0.041,237,0.074,241,0.762,244,0.003,245,0.003,246,0.558,248,0.698,250,0.957,252,0.13,253,1.961,263,1.018,266,3.326,267,4.333,272,2.954,279,5.329,283,1.24,284,2.821,287,2.839,290,1.912,292,3.197,315,4.048,319,1.87,320,2.191,321,1.168,322,3.57,323,2.913,324,3.463,325,2.948,326,2.988,327,0.957,328,0.424,329,1.065,350,0.92,352,3.463,353,2.914,356,1.432,365,1.361,372,3.442,386,2.054,391,1.293,396,1.444,411,1.049,456,0.957,488,0.998,504,5.056,505,2.503,509,4.508,510,1.228,511,1.332,623,1.589,660,0.723,677,0.938,678,0.998,713,2.221,771,1.7,824,5.841,826,1.87,1041,3.73,1042,5.519,1517,2.712,1520,4.73,1523,2.987,1635,5.255,1659,4.512,1663,1.261,1664,3.636,1916,3.952,1929,2.308,1930,2.308,1931,2.308,1932,2.308,1934,4.069,1936,2.26,1937,3.248,1939,1.982,1945,2.308,1949,2.308,1950,2.308,1952,2.308,1988,2.121,1995,2.308,2002,1.372,2010,2.121,2013,2.308,2410,4.424,2618,3.867,2624,2.712,2668,3.165,2765,1.567,2772,1.698,3107,1.982,3109,4.468,3117,2.121,3119,3.867,3121,2.308,3141,1.778,3189,4.602,3296,3.165,3297,2.308,3298,2.592,3299,6.45,3300,4.602,3301,6.45,3302,6.45,3303,6.45,3304,6.45,3305,6.45,3306,5.901,3307,6.45,3308,2.592,3309,6.676,3310,2.592,3311,2.592,3312,2.592,3313,2.592,3314,6.848,3315,2.592,3316,4.139,3317,5.901,3318,2.592,3319,5.168,3320,2.592,3321,4.139,3322,2.592,3323,2.592,3324,2.592,3325,2.592,3326,2.592,3327,2.592,3328,2.592,3329,2.592,3330,2.592,3331,5.901,3332,4.139,3333,2.592,3334,2.592,3335,2.592,3336,2.592,3337,2.592,3338,2.592,3339,2.592,3340,2.592,3341,2.308,3342,2.592,3343,5.168,3344,2.308,3345,2.308,3346,2.592,3347,2.592,3348,2.592,3349,2.592,3350,2.592,3351,2.308,3352,5.168,3353,2.592,3354,2.592,3355,2.592,3356,2.592,3357,2.592,3358,2.592,3359,2.592,3360,2.592,3361,4.139,3362,2.592,3363,2.592,3364,2.592,3365,2.592,3366,2.592,3367,2.592,3368,2.592,3369,2.592,3370,2.592]],["title/injectables/UserHighlightsService.html",[449,0.843,1937,2.969]],["body/injectables/UserHighlightsService.html",[7,0.007,30,0.034,31,0.038,32,0.03,35,0.819,39,0.508,41,1.575,42,0.91,43,0.428,44,0.768,46,1.63,48,0.129,50,0.328,53,0.762,65,0.662,113,0.819,129,1.911,135,2.332,137,1.628,145,2.332,146,3.854,147,1.628,169,1.262,186,2.04,189,2.424,236,0.041,237,0.074,238,1.154,240,1.32,244,0.003,245,0.003,252,0.26,253,1.997,272,2.302,283,1.246,292,3.13,356,2.229,365,1.36,368,3.123,372,2.413,382,1.371,386,2.257,391,1.573,411,1.208,449,0.739,460,3.163,461,3.386,462,2.838,463,3.386,481,0.919,485,3.246,488,1.989,507,2.509,511,1.332,523,0.851,614,1.076,623,2.252,659,1.528,660,1.154,667,2.711,669,2.201,672,2.711,675,4.046,676,1.088,677,0.938,678,0.997,681,3.96,682,1.414,685,3.68,695,3.64,696,2.332,697,2.332,698,2.912,708,1.566,791,1.511,824,4.257,826,1.869,827,1.869,833,0.977,893,2.658,909,2.725,911,2.656,958,2.012,961,2.258,985,2.122,1042,1.98,1090,1.528,1227,1.869,1313,3.567,1477,2.12,1494,3.163,1495,1.98,1517,2.711,1520,3.865,1560,3.163,1569,3.386,1718,2.501,1736,2.501,1740,2.656,1745,2.838,1746,3.728,1766,3.534,1917,3.684,1920,3.684,1936,2.258,1937,2.6,2033,3.013,2048,2.127,2058,2.306,2111,3.163,2120,3.386,2388,2.12,2390,3.684,2458,2.12,2470,3.684,2479,2.306,2533,2.306,2580,2.306,2606,1.414,2765,1.566,2772,1.697,3109,4.779,3241,4.535,3249,5.742,3253,1.98,3309,7.206,3314,7.094,3344,2.306,3345,2.306,3371,2.306,3372,4.137,3373,4.137,3374,4.137,3375,4.137,3376,4.137,3377,4.137,3378,4.137,3379,2.59,3380,5.165,3381,2.59,3382,4.137,3383,4.137,3384,2.59,3385,4.137,3386,5.742,3387,2.59,3388,2.59,3389,4.137,3390,2.59,3391,4.137,3392,2.59,3393,2.59,3394,2.59,3395,4.137,3396,2.59,3397,6.447,3398,2.59,3399,2.59,3400,4.137,3401,2.59,3402,4.137,3403,2.59,3404,2.59,3405,2.59,3406,2.59,3407,3.684,3408,4.137,3409,4.137,3410,4.137,3411,2.59,3412,2.59,3413,2.59,3414,4.137,3415,4.137,3416,4.137,3417,4.137,3418,4.137,3419,4.137,3420,4.137,3421,2.59,3422,2.59,3423,2.59,3424,2.59,3425,2.59,3426,2.59,3427,2.59,3428,2.59,3429,2.59,3430,2.59,3431,2.59,3432,2.59,3433,2.59,3434,2.59,3435,2.59,3436,2.59,3437,2.59,3438,2.59,3439,2.59,3440,2.59,3441,2.59,3442,2.59,3443,2.59,3444,2.59,3445,2.59,3446,2.59,3447,2.59,3448,4.137,3449,2.59,3450,2.59,3451,5.165,3452,2.59,3453,2.59,3454,4.137,3455,4.137,3456,2.59,3457,2.59,3458,2.59,3459,5.165,3460,2.59,3461,2.59,3462,4.137,3463,2.59,3464,2.59]],["title/controllers/UserInsightMemberController.html",[246,1.018,2103,3.612]],["body/controllers/UserInsightMemberController.html",[7,0.007,30,0.041,31,0.046,32,0.037,35,0.95,39,0.397,41,1.252,42,0.723,43,0.435,44,0.61,46,1.295,48,0.141,50,0.397,108,3.405,113,0.95,141,3.826,142,2.396,149,2.15,185,1.181,189,2.322,236,0.05,237,0.089,238,0.874,240,1.492,241,1.413,244,0.003,245,0.003,246,0.675,248,0.844,250,1.158,252,0.158,253,1.829,263,0.862,266,3.015,272,2.677,279,5.259,283,1.213,284,3.187,287,3.294,289,2.053,290,1.447,292,3.072,319,2.261,320,1.659,321,1.412,322,3.26,323,3.292,324,3.26,325,2.775,326,2.661,327,1.158,328,0.513,329,1.287,336,2.918,337,2.261,350,1.112,352,3.024,353,2.468,356,2.122,365,1.509,368,1.895,386,2.421,391,1.098,396,1.332,411,1.135,488,2.717,504,4.343,505,1.895,509,3.817,510,1.485,511,1.611,620,1.029,623,1.293,660,0.874,677,1.134,678,1.206,713,2.064,714,1.447,715,1.524,716,1.412,717,1.524,773,4.761,789,2.053,793,6.114,795,6.142,1090,1.774,1122,3.672,1123,2.261,1124,2.79,1127,4.005,1135,2.79,1587,3.018,1590,2.542,1663,1.524,1664,1.766,1719,3.147,1934,3.979,1989,3.93,1992,4.465,1996,3.294,2000,5.397,2002,1.659,2003,2.261,2005,2.261,2006,3.53,2007,2.053,2009,2.564,2012,3.93,2017,3.826,2020,5.199,2022,4.276,2024,6.285,2031,2.79,2035,6.545,2044,2.79,2046,2.396,2080,4.489,2103,3.672,2107,2.564,2127,2.564,2238,3.466,2410,4.489,2606,1.71,2618,3.147,2765,1.895,3051,6.269,3053,5.776,3054,4.841,3119,3.147,3123,2.79,3188,3.93,3465,5.776,3466,2.79,3467,2.79,3468,5.199,3469,7.057,3470,3.133,3471,3.133,3472,4.802,3473,4.802,3474,4.802,3475,5.838,3476,3.133,3477,2.79,3478,3.133,3479,4.276,3480,3.133,3481,3.133,3482,3.133,3483,7.445,3484,3.133,3485,3.133,3486,3.133,3487,3.133,3488,2.79,3489,3.133,3490,3.133,3491,4.276,3492,4.802,3493,2.79,3494,3.133,3495,3.133,3496,4.802,3497,4.802,3498,5.829,3499,6.285,3500,3.133,3501,3.133,3502,6.631,3503,4.802,3504,3.133,3505,3.133,3506,3.133,3507,3.133,3508,4.802,3509,3.133,3510,3.133,3511,3.133,3512,3.133,3513,3.133,3514,4.802,3515,4.802,3516,4.802,3517,4.802,3518,3.133,3519,3.133,3520,3.133,3521,3.133,3522,3.133,3523,3.133]],["title/controllers/UserInsightsController.html",[246,1.018,2102,3.612]],["body/controllers/UserInsightsController.html",[7,0.007,30,0.047,31,0.052,32,0.042,35,1.052,39,0.385,41,1.211,42,0.827,43,0.433,44,0.591,46,1.253,48,0.143,50,0.455,108,4.086,113,1.649,149,1.746,189,2.347,236,0.057,237,0.102,238,1,240,1.619,241,1.564,244,0.004,245,0.004,246,0.772,248,0.965,250,1.324,252,0.18,253,1.802,263,0.834,266,2.955,267,3.502,272,2.624,279,5.236,283,1.1,284,2.901,287,3.646,290,2.926,292,3.059,315,3.646,319,2.587,320,2.814,321,1.615,322,3.236,323,3.571,324,3.236,325,2.755,326,2.642,327,1.324,328,0.587,329,1.472,350,1.272,352,2.926,353,2.388,356,2.066,365,1.461,370,2.167,386,2.223,388,2.167,389,2.741,391,1.191,396,1.305,411,0.966,488,2.439,504,4.086,505,2.167,508,3.646,509,3.694,510,1.699,511,1.843,614,1.946,620,2.458,623,1.431,660,1,677,1.298,678,1.38,713,2.284,714,1.656,715,1.744,716,1.615,717,1.744,767,6.012,770,4.064,771,2.877,773,4.491,779,2.253,1090,1.324,1105,3.192,1118,4.403,1250,3.192,1406,2.741,1586,2.587,1587,3.34,1590,2.814,1663,1.744,1719,2.349,1934,2.996,1989,5.184,1997,4.733,1998,6.141,2000,4.064,2002,1.898,2003,2.587,2004,4.35,2005,2.587,2006,3.83,2007,2.349,2009,2.934,2012,4.35,2017,4.151,2080,4.805,2081,3.646,2102,4.064,2105,2.741,2107,2.934,2127,2.934,2410,2.459,2618,3.483,2878,2.934,3053,2.934,3054,2.459,3117,2.934,3119,4.151,3188,4.35,3300,6.239,3341,3.192,3351,3.192,3465,5.734,3467,3.192,3468,6.663,3477,3.192,3488,3.192,3491,4.733,3493,3.192,3498,3.192,3499,3.192,3502,4.733,3524,3.192,3525,7.481,3526,3.584,3527,3.584,3528,3.584,3529,3.584,3530,3.584,3531,3.584,3532,3.584,3533,5.314,3534,3.584,3535,3.584,3536,3.584,3537,3.584,3538,5.314,3539,3.584,3540,5.314,3541,3.584,3542,3.584,3543,3.584,3544,3.584,3545,3.584,3546,3.584,3547,3.584,3548,3.584,3549,3.584,3550,3.584,3551,3.584,3552,3.584,3553,3.584,3554,5.314,3555,3.584,3556,3.584,3557,3.584,3558,3.584,3559,3.584,3560,3.584,3561,3.584,3562,3.584,3563,3.584,3564,3.584,3565,3.584,3566,3.584,3567,3.584,3568,3.584,3569,3.584]],["title/modules/UserModule.html",[0,1.207,24,2.755]],["body/modules/UserModule.html",[0,1.573,2,1.656,3,2.42,7,0.007,17,5.504,18,4.735,24,5.728,27,2.473,28,1.765,29,1.656,30,0.058,31,0.064,32,0.051,34,2.585,48,0.157,50,0.557,52,2.029,53,1.292,79,2.878,81,2.527,82,2.258,83,2.993,112,2.325,113,1.793,129,2.029,130,2.398,131,3.595,135,3.469,137,2.76,139,4.032,140,3.358,145,3.469,146,2.137,147,2.76,151,4.441,152,2.562,153,4.032,154,3.358,155,4.032,156,3.358,158,3.721,159,3.595,169,1.34,235,2.645,236,0.07,237,0.125,244,0.004,245,0.004,248,1.657,336,4.62,435,2.773,1456,2.878,1665,5.809,1712,3.911,1936,4.585,1937,5.809,1939,3.358,1956,3.911,2297,5.079,2307,3.013,2308,3.17,2404,4.752,2405,2.76,3108,5.432,3137,5.761,3138,3.911,3180,5.886,3205,3.013,3217,5.432,3227,3.911,3235,6.34,3241,5.279,3253,3.358,3269,5.432,3289,3.911,3296,5.886,3570,3.911,3571,3.911,3572,3.911,3573,4.392,3574,4.392,3575,5.432,3576,5.432,3577,4.392,3578,4.392,3579,4.392,3580,4.392,3581,4.392,3582,4.392]],["title/controllers/UserNotificationController.html",[246,1.018,3575,3.612]],["body/controllers/UserNotificationController.html",[7,0.007,30,0.077,31,0.086,32,0.069,35,1.483,39,0.358,41,1.128,42,0.652,43,0.39,44,0.55,46,1.167,48,0.15,50,0.748,113,1.715,153,4.911,154,4.51,236,0.094,237,0.168,244,0.005,245,0.005,246,1.271,248,1.588,250,2.179,252,0.297,253,1.745,263,0.777,266,2.826,267,3.746,272,2.509,279,4.71,283,1.064,292,2.902,315,4.045,321,2.658,322,3.462,324,3.462,325,2.947,326,2.826,327,2.179,328,0.965,329,2.422,350,2.093,352,2.724,353,2.224,391,1.109,396,0.982,456,2.179,510,2.795,623,2.532,659,2.179,660,1.645,677,2.135,678,2.271,713,3.221,1586,4.256,1659,5.73,1936,3.22,2002,3.122,3109,4.225,3141,4.045,3241,5.177,3253,4.51,3575,5.73,3583,5.252,3584,5.897,3585,8.946,3586,5.897,3587,7.718,3588,5.897,3589,5.897,3590,5.897,3591,5.897]],["title/injectables/UserNotificationService.html",[449,0.843,3241,2.969]],["body/injectables/UserNotificationService.html",[7,0.007,30,0.056,31,0.062,32,0.05,35,1.187,39,0.518,41,1.588,42,0.918,43,0.461,44,0.774,46,1.643,48,0.142,50,0.537,53,1.247,65,1.083,146,2.062,153,2.777,154,3.241,169,1.293,186,1.341,189,2.269,236,0.068,237,0.121,238,1.674,240,1.534,244,0.004,245,0.004,252,0.213,253,1.988,283,1.243,287,2.907,292,2.858,336,4.267,356,2.153,365,0.977,368,4.213,372,2.472,386,2.275,391,1.503,425,4.912,449,1.071,453,3.803,507,2.537,523,1.392,623,2.348,659,2.217,660,1.182,669,2.311,676,1.78,677,1.534,678,1.632,681,3.787,682,2.314,685,2.64,695,3.177,696,2.389,697,2.389,698,2.389,833,2.263,893,3.415,909,1.958,1090,2.574,1313,2.563,1527,6.204,1528,5.702,1529,3.774,1530,3.774,1535,2.777,1546,5.197,1549,3.469,1936,3.276,2033,4.063,2048,3.085,2111,4.589,3109,4.917,3205,2.907,3241,3.771,3245,6.747,3314,6.201,3386,6.747,3407,3.774,3592,3.774,3593,6,3594,6,3595,6,3596,6,3597,4.238,3598,4.238,3599,6,3600,6,3601,4.238,3602,6,3603,4.238,3604,6,3605,4.238,3606,4.238,3607,4.238,3608,6,3609,4.238,3610,6,3611,4.238,3612,6,3613,4.238,3614,4.238,3615,4.238,3616,4.238,3617,4.238,3618,4.238,3619,4.238,3620,4.238,3621,4.238,3622,4.238,3623,4.238,3624,4.238,3625,4.238,3626,4.238,3627,4.238,3628,6,3629,6,3630,4.238,3631,6.966,3632,4.238,3633,4.238,3634,4.238,3635,4.238,3636,4.238]],["title/classes/UserOnboardingDto.html",[237,0.134,285,3.409]],["body/classes/UserOnboardingDto.html",[7,0.007,30,0.084,31,0.093,32,0.075,39,0.478,43,0.485,48,0.126,113,1.558,167,4.047,236,0.102,237,0.224,244,0.005,245,0.005,252,0.321,263,1.037,285,5.681,310,6,328,1.044,371,3.122,396,1.311,399,7.002,411,1.441,446,1.455,466,4.181,618,1.911,658,2.31,740,3.463,743,2.278,759,3.756,760,3.383,780,5.4,782,5.841,1314,4.01,2230,4.879,3080,7.938,3105,5.222,3107,4.879,3637,7.603,3638,5.682,3639,6.38,3640,6.38,3641,6.38]],["title/controllers/UserRecommendationController.html",[246,1.018,3576,3.612]],["body/controllers/UserRecommendationController.html",[7,0.007,30,0.08,31,0.089,32,0.071,35,1.514,39,0.37,41,1.165,42,0.673,43,0.317,44,0.568,46,1.206,48,0.147,50,0.772,113,1.514,236,0.097,237,0.173,240,1.557,241,2.25,244,0.005,245,0.005,246,1.313,248,1.64,250,2.251,252,0.306,253,1.771,263,0.802,266,2.884,267,3.823,283,1.081,292,2.799,310,3.992,321,2.746,322,3.533,325,3.008,326,2.884,327,2.251,328,0.997,329,2.502,336,4.179,350,2.162,352,2.814,353,2.297,356,1.857,386,1.669,391,1.145,425,4.986,456,2.251,507,2.04,510,2.887,771,3.142,1587,4.807,2002,3.225,2404,4.299,2405,3.829,3109,4.312,3141,4.179,3205,4.179,3576,5.849,3642,5.425,3643,6.092,3644,8.769,3645,6.092,3646,6.092,3647,7.648,3648,6.092,3649,6.092,3650,6.092,3651,5.425,3652,6.092,3653,6.092,3654,6.092,3655,6.092]],["title/classes/UserRepoOptionsDto.html",[237,0.134,3656,3.24]],["body/classes/UserRepoOptionsDto.html",[7,0.007,30,0.08,31,0.089,32,0.071,39,0.533,43,0.456,44,0.883,48,0.097,236,0.097,237,0.174,241,2.785,244,0.005,245,0.005,252,0.307,263,1.156,283,1.081,446,1.415,483,3.596,543,3.05,614,1.587,618,1.828,620,2.516,621,3.138,622,2.772,623,2.52,625,3.937,626,4.317,627,4.183,629,2.505,630,3.686,632,3.441,633,3.441,637,3.231,638,4.317,639,3.332,640,3.441,641,4.947,642,3.559,643,4.183,644,3.138,645,3.441,646,3.559,647,3.441,648,3.559,649,3.827,650,2.969,651,2.892,652,3.441,653,3.441,654,3.559,659,2.255,660,1.702,1554,4.186,3656,5.252,3657,4.995]],["title/classes/UserRepoOptionsDto-1.html",[237,0.112,483,1.69,3656,2.697]],["body/classes/UserRepoOptionsDto-1.html",[7,0.007,30,0.089,31,0.099,32,0.079,39,0.412,43,0.456,48,0.131,167,4.203,236,0.108,237,0.233,241,2.581,244,0.005,245,0.005,252,0.341,263,0.894,283,1.177,288,6.251,328,1.111,396,1.131,446,1.511,618,2.033,658,2.457,740,2.986,743,2.089,759,3.597,771,3.358,782,5.966,1025,3.959,1554,5.607,3105,5.555,3119,5.357,3656,5.607,3657,6.691,3658,6.044,3659,8.771,3660,6.787,3661,6.787]],["title/modules/UserReposModule.html",[0,1.207,25,3.24]],["body/modules/UserReposModule.html",[0,2.082,2,2.545,3,3.203,7,0.007,25,6.558,27,3.273,28,2.712,29,2.545,30,0.088,31,0.098,32,0.079,34,2.835,48,0.145,50,0.856,52,3.117,53,1.985,112,3.573,113,1.612,114,4.629,116,4.629,169,2.058,235,3.501,236,0.108,237,0.192,244,0.005,245,0.005,435,3.671,1554,4.629,3662,6.01,3663,6.01,3664,6.01,3665,7.106,3666,6.748,3667,6.748,3668,6.748]],["title/injectables/UserReposService.html",[449,0.843,3665,3.409]],["body/injectables/UserReposService.html",[7,0.007,30,0.064,31,0.071,32,0.057,35,1.312,39,0.511,41,1.541,42,0.891,43,0.419,44,0.752,46,1.595,48,0.144,50,0.621,53,1.44,65,1.251,112,2.591,113,0.968,114,5.956,116,4.548,169,1.493,186,1.549,189,2.252,236,0.078,237,0.139,238,1.849,240,1.251,244,0.004,245,0.004,252,0.246,253,1.939,272,2.698,283,1.122,292,2.973,346,4.358,356,2.193,365,1.734,386,2.06,391,1.515,411,1.146,449,1.184,488,1.884,507,1.639,523,1.608,614,2.096,623,1.785,659,1.808,660,1.365,669,2.458,676,2.056,677,1.772,678,1.884,681,4.028,682,2.672,685,2.917,695,3.51,696,2.759,697,2.759,698,2.759,737,2.261,779,5.065,787,3.207,788,4.006,791,2.855,893,3.632,909,2.261,911,2.516,1090,1.808,1313,2.959,1554,5.956,1718,4.009,1736,4.009,1740,3.409,1746,3.532,1766,3.866,2033,4.385,2048,3.409,2094,4.006,2095,4.358,2111,5.07,2120,5.427,3656,5.528,3665,4.785,3669,4.358,3670,6.63,3671,4.894,3672,4.894,3673,6.63,3674,6.63,3675,4.894,3676,4.894,3677,4.894,3678,4.894,3679,4.894,3680,6.63,3681,4.894,3682,4.894,3683,4.894,3684,4.894,3685,4.894]],["title/injectables/UserService.html",[336,2.361,449,0.843]],["body/injectables/UserService.html",[7,0.007,30,0.038,31,0.042,32,0.033,35,0.886,39,0.513,41,1.59,42,0.968,43,0.432,44,0.776,46,1.646,48,0.13,50,0.363,53,0.842,65,0.732,83,2.683,113,1.855,167,3.48,169,0.873,178,2.524,185,2.079,189,2.491,236,0.046,237,0.081,238,1.249,240,0.732,244,0.003,245,0.003,252,0.144,253,1.998,272,2.511,280,1.799,283,1.198,285,4.501,288,2.189,290,2.881,292,1.499,295,2.343,298,4.501,299,4.501,301,4.376,308,4.501,310,2.934,336,2.238,343,2.549,344,2.549,345,2.549,347,2.549,356,1.937,357,4.643,359,3.665,361,1.057,362,1.176,363,2.549,365,1.949,366,3.665,370,4.535,374,2.189,375,3.665,377,2.189,378,2.189,379,2.189,380,2.189,381,2.189,382,1.515,383,2.189,384,2.189,386,2.348,388,4.535,389,5.735,391,1.459,399,3.424,411,1.217,449,0.799,451,2.343,481,1.016,488,2.606,507,1.846,523,0.94,552,2.707,585,1.799,629,0.757,630,1.202,649,1.431,651,1.356,669,1.902,676,1.202,685,2.978,833,1.688,893,2.811,909,2.547,911,2.302,961,3.695,982,1.15,985,2.78,1049,3.92,1090,2.037,1176,1.876,1200,1.963,1313,4.693,1396,2.814,1456,1.876,1461,2.189,1489,2.549,1546,3.783,1549,2.343,1550,2.549,1560,2.189,1569,3.665,1718,2.707,1736,2.707,1740,2.302,1763,5.54,1766,4.102,1936,1.563,2003,3.98,2033,3.216,2048,2.302,2324,2.549,3099,2.549,3100,2.549,3686,2.549,3687,4.477,3688,4.477,3689,4.477,3690,4.477,3691,4.477,3692,4.477,3693,4.477,3694,4.477,3695,4.477,3696,2.862,3697,2.862,3698,4.477,3699,2.862,3700,2.862,3701,2.862,3702,4.477,3703,2.862,3704,6.236,3705,2.862,3706,4.477,3707,2.862,3708,4.477,3709,2.862,3710,4.477,3711,2.862,3712,4.477,3713,2.862,3714,4.477,3715,2.862,3716,4.477,3717,2.862,3718,4.477,3719,2.862,3720,2.862,3721,2.862,3722,2.862,3723,2.862,3724,2.862,3725,2.862,3726,2.862,3727,2.862,3728,2.862,3729,2.862,3730,2.862,3731,4.477,3732,2.862,3733,5.514,3734,2.862,3735,2.862,3736,4.477,3737,4.477,3738,4.477,3739,2.862,3740,2.862,3741,2.862,3742,2.862,3743,2.862,3744,2.862,3745,2.862,3746,2.862,3747,2.862,3748,7.176,3749,2.862,3750,2.862,3751,4.477,3752,3.987,3753,4.477,3754,2.862,3755,2.862,3756,2.862,3757,2.862,3758,2.862,3759,2.862,3760,7.176,3761,2.862,3762,2.862,3763,2.862,3764,2.862,3765,2.862,3766,2.862,3767,2.862,3768,2.862,3769,4.477,3770,2.862,3771,2.862,3772,6.236,3773,4.477,3774,2.862,3775,2.862,3776,2.862,3777,2.862]],["title/modules/VoteModule.html",[0,1.207,26,3.409]],["body/modules/VoteModule.html",[0,2.019,2,2.419,3,3.106,7,0.007,18,5.264,26,6.95,27,3.174,28,2.578,29,2.419,30,0.084,31,0.093,32,0.075,34,3.318,48,0.151,50,0.813,52,2.964,53,1.887,79,4.204,81,2.635,82,3.298,87,4.776,88,4.905,169,1.957,235,3.395,236,0.102,237,0.183,244,0.005,245,0.005,248,2.127,435,3.56,614,1.668,616,4.4,2711,6.544,2737,6.711,2738,5.713,3778,5.713,3779,6.415,3780,5.713,3781,5.713,3782,6.415,3783,6.415]],["title/injectables/VoteService.html",[449,0.843,2737,3.24]],["body/injectables/VoteService.html",[7,0.007,30,0.068,31,0.076,32,0.061,35,1.369,39,0.502,41,1.485,42,0.858,43,0.404,44,0.724,46,1.536,48,0.132,50,0.661,53,1.534,65,1.333,87,3.153,88,3.987,169,1.59,189,2.325,236,0.083,237,0.148,238,1.929,240,1.333,244,0.005,245,0.005,252,0.262,253,1.873,272,2.768,283,1.228,292,3.161,356,2.089,386,2.266,391,1.554,449,1.235,488,2.989,523,1.713,614,1.799,669,2.522,673,6.512,676,2.19,685,3.638,737,2.409,893,3.726,909,3.196,911,3.557,1090,1.926,1371,3.987,1740,2.681,2048,3.557,2606,3.776,2607,3.577,2729,5.662,2737,4.745,2765,3.153,2772,4.533,2775,3.763,3784,4.643,3785,6.917,3786,6.917,3787,5.214,3788,5.214,3789,6.917,3790,5.214,3791,6.917,3792,5.214,3793,6.917,3794,5.214,3795,5.214,3796,5.214,3797,6.917,3798,6.917,3799,6.917,3800,8.843,3801,6.917,3802,5.214,3803,5.214,3804,5.214]],["title/changelog.html",[3805,3.007,3806,3.218,3807,3.502]],["body/changelog.html",[3,1.853,7,0.007,29,0.221,30,0.015,32,0.036,41,0.212,42,0.478,43,0.104,44,0.103,63,0.988,65,0.781,81,0.456,83,0.54,85,0.671,87,1.211,89,1.211,91,1.211,93,1.211,113,1.709,120,1.259,129,3.406,146,1.762,149,1.661,152,2.521,161,1.107,165,0.988,178,1.129,182,3.966,186,1.547,188,0.761,189,1.355,214,1.207,216,1.211,228,0.697,229,1.639,230,0.801,233,2.093,234,0.448,240,0.7,244,0.001,245,0.001,246,0.835,251,3.103,263,0.146,267,2.527,268,3.538,276,1.783,280,0.369,288,2.093,289,1.794,290,3.618,295,0.908,301,1.129,302,1.783,310,1.312,314,2.743,331,3.354,350,1.375,357,0.761,361,1.011,365,0.631,369,0.988,371,0.371,372,3.487,373,2.24,374,0.848,382,0.31,391,0.376,396,0.334,446,0.99,450,0.908,460,2.563,468,1.975,476,2.168,479,5.764,481,1.997,483,0.252,485,2.435,501,0.908,512,3.489,518,3.617,536,1.975,541,0.801,552,1.443,557,0.761,563,1.723,585,1.259,587,1.954,589,1.954,596,2.538,614,1.942,620,1.101,625,1.572,627,0.555,629,0.294,630,0.663,649,2.053,661,0.647,662,1.877,664,0.671,669,0.933,701,1.975,707,1.445,708,1.655,713,1.665,716,0.903,746,0.801,771,3.202,772,0.587,773,2.874,774,0.848,789,0.384,791,1.168,795,0.801,811,0.761,821,1.531,826,0.801,828,2.093,829,1.211,833,1.032,834,5.825,835,4.302,836,1.557,846,1.168,854,0.48,937,0.446,943,0.988,956,1.582,961,0.32,965,1.093,974,1.377,976,1.531,977,1.05,980,1.15,985,0.648,991,1.531,992,0.848,1001,3.805,1002,3.165,1003,2.111,1022,1.531,1026,1.954,1041,0.801,1045,0.908,1046,1.877,1047,1.531,1079,1.531,1081,2.563,1085,0.801,1090,0.41,1097,0.801,1110,2.503,1112,0.761,1118,2.581,1127,0.761,1139,4.302,1153,0.697,1175,0.908,1211,0.522,1218,0.988,1227,0.801,1258,0.988,1294,2.437,1309,0.988,1319,0.908,1337,0.848,1352,0.988,1353,0.48,1371,2.093,1393,3.738,1396,1.922,1406,0.448,1426,0.988,1442,3.226,1461,1.531,1521,1.72,1528,0.908,1533,0.908,1535,0.727,1539,0.988,1541,0.522,1553,0.988,1587,1.259,1648,0.342,1664,1.129,1675,0.448,1677,0.801,1678,0.48,1719,4.234,1768,0.848,1769,0.988,1827,0.801,1842,2.126,1859,7.782,1861,0.988,1867,0.522,1887,5.325,1916,0.848,1960,4.096,1967,0.908,1992,0.848,2073,0.848,2171,2.796,2196,0.988,2201,2.437,2228,1.783,2238,0.801,2286,0.988,2434,1.139,2484,1.783,2505,0.448,2508,0.448,2553,0.908,2602,0.848,2614,0.908,2668,0.448,2693,0.988,2703,0.908,2729,0.908,2821,5.121,2893,0.988,2928,0.48,2979,1.445,3005,0.908,3018,0.988,3054,0.761,3064,1.783,3086,1.406,3119,6.25,3127,0.988,3145,0.988,3222,0.988,3260,0.801,3281,2.126,3479,2.437,3587,1.783,3651,0.988,3752,1.783,3805,0.448,3807,1.783,3808,0.586,3809,2.002,3810,3.873,3811,2.002,3812,2.437,3813,7.27,3814,7.102,3815,8.841,3816,1.109,3817,1.109,3818,2.737,3819,4.889,3820,2.985,3821,1.109,3822,1.109,3823,1.109,3824,1.109,3825,8.765,3826,7.683,3827,1.109,3828,1.109,3829,1.109,3830,2.002,3831,1.109,3832,1.109,3833,1.109,3834,1.109,3835,1.109,3836,1.109,3837,1.109,3838,1.109,3839,2.387,3840,3.057,3841,6.702,3842,4.106,3843,6.282,3844,5.626,3845,4.322,3846,7.323,3847,0.586,3848,0.988,3849,1.109,3850,5.495,3851,3.352,3852,1.109,3853,1.109,3854,1.109,3855,4.524,3856,1.109,3857,1.109,3858,1.109,3859,1.109,3860,1.109,3861,3.057,3862,1.109,3863,1.109,3864,4.106,3865,2.387,3866,1.109,3867,1.109,3868,1.109,3869,1.109,3870,2.002,3871,1.109,3872,1.109,3873,2.737,3874,1.109,3875,1.109,3876,1.109,3877,3.352,3878,1.109,3879,1.109,3880,1.109,3881,3.352,3882,2.126,3883,1.579,3884,3.352,3885,1.109,3886,1.109,3887,1.109,3888,1.109,3889,1.109,3890,2.737,3891,1.109,3892,3.352,3893,1.109,3894,1.109,3895,1.579,3896,1.109,3897,1.109,3898,1.109,3899,1.109,3900,2.387,3901,1.109,3902,1.109,3903,1.109,3904,1.109,3905,1.109,3906,1.109,3907,1.109,3908,1.109,3909,1.109,3910,4.524,3911,2.387,3912,4.106,3913,2.002,3914,4.889,3915,4.889,3916,2.437,3917,2.002,3918,2.002,3919,2.002,3920,2.002,3921,2.002,3922,2.002,3923,6.842,3924,2.737,3925,2.737,3926,3.849,3927,2.737,3928,2.737,3929,2.737,3930,3.057,3931,2.737,3932,2.737,3933,1.579,3934,2.737,3935,2.002,3936,6.545,3937,6.775,3938,1.783,3939,1.109,3940,1.109,3941,1.109,3942,1.109,3943,1.109,3944,0.988,3945,1.109,3946,1.109,3947,9.099,3948,2.737,3949,2.002,3950,7.042,3951,2.002,3952,1.109,3953,1.109,3954,2.002,3955,1.109,3956,1.109,3957,2.002,3958,2.002,3959,2.737,3960,2.002,3961,2.002,3962,2.387,3963,2.387,3964,2.437,3965,2.737,3966,6.702,3967,1.109,3968,1.639,3969,2.002,3970,3.849,3971,2.737,3972,3.352,3973,2.737,3974,2.737,3975,2.737,3976,2.737,3977,2.002,3978,2.002,3979,1.109,3980,1.109,3981,2.002,3982,1.109,3983,2.723,3984,2.737,3985,2.737,3986,1.109,3987,1.109,3988,1.109,3989,4.889,3990,3.352,3991,2.002,3992,2.737,3993,2.002,3994,1.579,3995,1.579,3996,1.579,3997,1.579,3998,1.579,3999,1.109,4000,2.737,4001,1.109,4002,2.002,4003,3.873,4004,1.109,4005,1.109,4006,0.801,4007,1.109,4008,1.109,4009,1.109,4010,1.109,4011,1.109,4012,1.109,4013,1.109,4014,1.109,4015,1.109,4016,2.002,4017,2.387,4018,3.057,4019,1.579,4020,3.623,4021,1.579,4022,5.626,4023,1.109,4024,0.988,4025,1.109,4026,1.109,4027,1.109,4028,1.109,4029,1.579,4030,0.586,4031,4.029,4032,1.109,4033,1.109,4034,2.002,4035,1.109,4036,1.109,4037,0.586,4038,2.387,4039,1.109,4040,1.109,4041,1.783,4042,1.109,4043,1.109,4044,1.109,4045,1.109,4046,1.109,4047,1.109,4048,1.109,4049,2.002,4050,0.586,4051,0.586,4052,0.586,4053,1.109,4054,0.586,4055,0.586,4056,0.586,4057,1.109,4058,1.109,4059,1.109,4060,0.586,4061,4.354,4062,1.579,4063,0.586,4064,0.586,4065,2.002,4066,0.586,4067,0.586,4068,1.109,4069,1.109,4070,1.109,4071,1.109,4072,1.109,4073,0.586,4074,0.586,4075,0.586,4076,0.586,4077,2.002,4078,3.45,4079,3.057,4080,2.387,4081,2.387,4082,2.387,4083,2.387,4084,5.357,4085,2.387,4086,2.387,4087,2.387,4088,2.126,4089,2.437,4090,2.387,4091,2.387,4092,2.387,4093,3.057,4094,4.524,4095,2.387,4096,3.057,4097,2.387,4098,2.002,4099,2.002,4100,2.002,4101,2.002,4102,2.002,4103,2.002,4104,2.002,4105,2.002,4106,2.002,4107,1.579,4108,1.579,4109,2.002,4110,2.002,4111,2.985,4112,2.002,4113,2.002,4114,2.002,4115,2.002,4116,2.002,4117,2.002,4118,4.524,4119,4.524,4120,2.387,4121,2.387,4122,1.109,4123,1.109,4124,2.002,4125,2.002,4126,1.109,4127,1.109,4128,2.002,4129,2.002,4130,2.002,4131,2.002,4132,2.985,4133,2.387,4134,4.197,4135,2.387,4136,2.002,4137,1.109,4138,1.109,4139,1.109,4140,1.579,4141,1.406,4142,1.109,4143,1.109,4144,0.586,4145,4.889,4146,3.873,4147,0.586,4148,0.586,4149,0.586,4150,0.586,4151,1.109,4152,1.109,4153,1.109,4154,4.712,4155,2.002,4156,2.387,4157,2.002,4158,4.322,4159,3.352,4160,2.002,4161,2.737,4162,4.322,4163,2.002,4164,2.002,4165,2.002,4166,2.002,4167,2.002,4168,2.002,4169,1.109,4170,1.109,4171,4.202,4172,1.109,4173,0.586,4174,1.109,4175,1.579,4176,0.586,4177,0.586,4178,1.579,4179,1.109,4180,1.109,4181,1.109,4182,1.109,4183,0.586,4184,1.109,4185,1.109,4186,1.109,4187,1.109,4188,1.109,4189,2.387,4190,1.109,4191,1.109,4192,1.109,4193,1.109,4194,1.109,4195,1.109,4196,1.109,4197,1.109,4198,1.109,4199,0.988,4200,1.109,4201,1.579,4202,1.579,4203,1.109,4204,1.109,4205,1.109,4206,1.109,4207,1.109,4208,1.109,4209,2.002,4210,1.109,4211,1.109,4212,1.109,4213,1.109,4214,1.109,4215,1.109,4216,1.109,4217,1.109,4218,1.109,4219,2.002,4220,1.109,4221,1.109,4222,1.109,4223,1.109,4224,0.586,4225,1.579,4226,4.712,4227,2.002,4228,1.109,4229,1.109,4230,1.109,4231,1.109,4232,1.109,4233,1.109,4234,3.352,4235,1.109,4236,1.109,4237,1.109,4238,1.109,4239,1.109,4240,1.109,4241,3.226,4242,1.109,4243,1.109,4244,0.988,4245,1.109,4246,1.109,4247,1.109,4248,1.109,4249,1.579,4250,4.202,4251,1.783,4252,1.109,4253,1.109,4254,1.109,4255,1.109,4256,1.109,4257,1.109,4258,0.586,4259,2.002,4260,1.109,4261,1.109,4262,1.109,4263,1.109,4264,1.109,4265,1.109,4266,1.109,4267,1.109,4268,1.109,4269,2.387,4270,1.109,4271,1.109,4272,3.45,4273,1.109,4274,1.109,4275,1.109,4276,2.002,4277,1.109,4278,1.109,4279,1.109,4280,1.109,4281,1.109,4282,1.109,4283,1.109,4284,1.579,4285,2.387,4286,1.109,4287,1.406,4288,1.109,4289,3.352,4290,1.109,4291,0.586,4292,0.988,4293,1.109,4294,1.109,4295,2.002,4296,1.109,4297,1.109,4298,2.737,4299,1.109,4300,0.988,4301,1.109,4302,1.109,4303,1.109,4304,1.109,4305,1.109,4306,1.109,4307,1.109,4308,0.988,4309,2.002,4310,1.109,4311,1.406,4312,2.002,4313,1.109,4314,1.109,4315,1.109,4316,1.109,4317,1.109,4318,1.109,4319,1.109,4320,5.626,4321,2.387,4322,3.057,4323,2.387,4324,1.109,4325,1.109,4326,0.908,4327,1.109,4328,1.109,4329,1.109,4330,1.109,4331,1.109,4332,1.109,4333,1.109,4334,1.109,4335,1.109,4336,1.109,4337,1.109,4338,1.109,4339,1.109,4340,1.109,4341,1.109,4342,1.109,4343,1.109,4344,1.109,4345,1.109,4346,1.109,4347,2.737,4348,1.109,4349,1.109,4350,1.109,4351,1.109,4352,1.109,4353,1.109,4354,0.988,4355,2.002,4356,1.109,4357,1.579,4358,1.579,4359,1.109,4360,0.988,4361,1.109,4362,1.109,4363,1.109,4364,1.109,4365,2.002,4366,1.109,4367,1.109,4368,1.109,4369,1.109,4370,1.109,4371,1.109,4372,1.109,4373,1.579,4374,1.109,4375,1.109,4376,1.109,4377,1.109,4378,1.109,4379,5.054,4380,1.109,4381,1.109,4382,1.109,4383,1.109,4384,1.109,4385,1.109,4386,1.109,4387,1.109,4388,1.109,4389,1.109,4390,1.109,4391,1.109,4392,1.109,4393,1.109,4394,2.737,4395,0.908,4396,1.109,4397,1.109,4398,1.783,4399,1.109,4400,1.109,4401,1.783,4402,1.109,4403,1.109,4404,1.109,4405,1.109,4406,1.109,4407,1.109,4408,1.109,4409,2.387,4410,1.109,4411,1.109,4412,1.109,4413,1.109,4414,1.109,4415,1.109,4416,1.109,4417,1.579,4418,1.109,4419,0.586,4420,0.586,4421,0.586,4422,0.586,4423,0.586,4424,0.586,4425,0.586,4426,0.586,4427,0.586,4428,0.586,4429,0.586,4430,0.586,4431,0.586,4432,0.586,4433,2.737,4434,1.783,4435,2.002,4436,1.109,4437,1.109,4438,1.109,4439,1.109,4440,1.109,4441,1.109,4442,1.109,4443,2.737,4444,1.109,4445,1.109,4446,0.586,4447,0.586,4448,0.586,4449,3.657,4450,0.586,4451,0.586,4452,0.586,4453,0.586,4454,0.586,4455,0.586,4456,2.723,4457,0.586,4458,0.586,4459,0.586,4460,0.586,4461,0.908,4462,0.586,4463,0.586,4464,0.586,4465,0.586,4466,0.586,4467,0.586,4468,0.586,4469,0.586,4470,0.522,4471,0.988,4472,0.586,4473,0.586,4474,0.586,4475,0.586,4476,3.226,4477,0.586,4478,0.586,4479,0.586,4480,0.522,4481,0.586,4482,0.586,4483,0.522,4484,0.522,4485,0.586,4486,0.586,4487,0.586,4488,0.586,4489,0.586,4490,0.586,4491,0.586,4492,0.586,4493,0.586,4494,0.586,4495,0.586,4496,1.109,4497,0.586,4498,0.586,4499,0.586,4500,0.586,4501,0.586,4502,0.586,4503,0.586,4504,1.109,4505,0.48,4506,0.586,4507,0.586,4508,0.586,4509,0.586,4510,0.586,4511,0.586,4512,0.586,4513,0.586,4514,0.586,4515,0.586,4516,0.586,4517,0.586,4518,0.586,4519,0.586,4520,0.586,4521,0.586,4522,0.586,4523,0.586,4524,0.586,4525,0.586,4526,0.586,4527,0.586,4528,1.406,4529,0.586,4530,0.586,4531,0.586,4532,0.586,4533,0.586,4534,0.586,4535,0.586,4536,0.586,4537,0.586,4538,0.586,4539,0.586,4540,0.586,4541,0.586,4542,0.586,4543,1.579,4544,0.586,4545,0.586,4546,0.586,4547,0.586,4548,0.586,4549,0.586,4550,0.586,4551,0.586,4552,0.586,4553,0.48,4554,0.586,4555,0.586,4556,0.586,4557,0.586,4558,0.586,4559,0.586,4560,0.586,4561,0.586,4562,0.586,4563,1.109,4564,0.586,4565,0.988,4566,0.586,4567,0.586,4568,0.586,4569,1.109,4570,1.109,4571,0.586,4572,1.579,4573,0.586,4574,0.586,4575,1.109,4576,0.586,4577,0.586,4578,0.586,4579,0.586,4580,0.586,4581,0.586,4582,0.586,4583,0.586,4584,0.586,4585,0.586,4586,0.586,4587,0.586,4588,1.109,4589,0.586,4590,0.586,4591,0.586,4592,0.586,4593,0.522,4594,0.586,4595,0.586,4596,0.586,4597,0.586,4598,0.586,4599,0.586,4600,0.586,4601,0.586,4602,0.586,4603,0.586,4604,0.586,4605,0.586,4606,0.586,4607,0.586,4608,0.586,4609,0.586,4610,0.586,4611,0.586,4612,0.586,4613,0.522,4614,0.586,4615,0.586,4616,0.586,4617,0.586,4618,0.586,4619,0.586,4620,0.586,4621,0.586,4622,0.586,4623,0.586,4624,0.586]],["title/coverage.html",[4625,5.297]],["body/coverage.html",[7,0.007,32,0.028,43,0.124,72,1.957,73,1.957,74,1.957,75,1.957,76,1.957,77,1.957,81,0.982,83,1.163,85,1.445,87,1.445,89,1.445,91,1.445,93,1.445,102,1.828,105,1.828,108,1.394,110,1.566,113,1.312,114,2.66,116,1.64,117,1.64,125,1.64,127,1.64,129,1.104,130,3.38,132,1.445,133,2.66,135,1.348,139,1.566,141,1.566,143,1.502,145,1.348,146,1.887,148,1.566,149,2.39,151,1.725,152,1.394,153,1.566,155,1.566,158,1.445,162,2.262,189,0.716,237,0.269,244,0.003,245,0.003,246,1.98,247,1.828,249,2.129,251,1.64,285,1.725,292,0.8,298,1.725,299,1.725,301,1.348,308,1.725,329,0.982,333,1.828,336,1.195,338,1.566,340,1.566,373,1.957,433,1.725,441,2.66,442,1.828,444,2.966,445,3.175,449,1.668,455,1.394,490,1.828,491,3.623,492,4.345,493,2.129,497,1.725,512,2.446,514,1.64,524,2.129,556,1.828,557,3.357,558,2.129,560,1.725,566,1.64,570,3.175,590,1.828,591,2.129,593,1.725,596,2.542,598,1.64,609,1.64,611,1.828,614,0.622,617,1.725,619,1.957,620,1.85,621,4.143,623,0.644,664,1.445,666,2.129,677,0.865,681,1.195,699,1.828,700,2.129,704,1.725,711,1.725,714,1.104,716,1.077,718,1.502,720,3.357,732,1.64,733,2.129,734,3.175,767,1.725,768,3.175,769,3.175,773,2.446,779,1.502,793,1.828,794,3.175,801,1.828,802,2.129,803,2.129,808,1.828,809,3.175,810,3.175,824,1.725,825,2.129,849,1.725,850,2.129,851,2.129,860,1.64,891,2.129,914,2.129,915,3.175,956,2.349,957,2.129,961,5.48,987,0.982,1031,2.129,1039,2.129,1069,2.129,1087,2.129,1120,3.175,1121,2.129,1150,4.064,1163,2.129,1172,2.129,1203,2.129,1315,2.129,1318,2.129,1336,2.129,1351,2.129,1370,2.129,1385,2.966,1386,2.129,1430,4.223,1431,2.129,1460,2.129,1493,2.129,1517,1.566,1518,3.175,1520,1.566,1523,1.725,1524,2.129,1526,2.129,1546,1.64,1554,3.863,1559,2.129,1582,1.828,1583,2.129,1592,1.64,1605,2.129,1615,1.828,1616,2.129,1665,1.502,1670,1.725,1714,2.129,1768,1.828,1770,2.129,1771,2.129,1785,1.64,1786,2.129,1800,4.064,1801,2.129,1831,3.175,1837,1.725,1838,2.129,1865,1.828,1866,2.129,1914,1.828,1915,2.129,1937,1.502,1959,2.129,1968,1.957,1983,1.828,1984,2.129,1998,1.725,2006,1.445,2017,1.566,2018,3.175,2019,2.129,2066,1.957,2067,2.966,2080,1.64,2081,1.64,2082,2.129,2102,1.828,2103,1.828,2109,2.129,2150,2.129,2170,2.129,2171,1.725,2185,3.742,2186,2.129,2191,1.828,2213,2.129,2231,1.828,2232,2.129,2247,1.725,2251,1.64,2265,1.828,2266,2.129,2272,1.64,2276,2.129,2293,2.129,2297,1.445,2353,2.129,2391,2.129,2392,2.129,2404,1.229,2416,1.828,2417,2.129,2420,1.394,2424,1.725,2434,1.725,2446,1.957,2448,2.129,2482,3.532,2483,2.129,2513,2.129,2592,1.828,2593,2.129,2594,2.129,2625,1.64,2637,1.828,2638,2.129,2639,2.129,2664,1.64,2675,1.828,2676,2.129,2677,2.129,2701,1.64,2711,1.828,2712,2.129,2713,2.129,2737,1.64,2754,2.129,2783,2.129,2808,2.129,2841,1.64,2845,2.129,2859,1.725,2860,3.742,2863,3.175,2864,3.175,2875,1.957,2877,1.957,2950,2.129,2971,2.129,2972,2.129,3013,2.129,3016,2.129,3043,1.957,3044,2.129,3047,3.175,3051,1.828,3057,1.828,3058,4.064,3063,2.129,3098,2.129,3104,2.129,3108,1.828,3109,4.356,3110,2.129,3137,1.64,3157,2.129,3180,1.828,3181,2.129,3217,1.828,3218,2.129,3235,1.64,3236,2.129,3241,1.502,3269,1.828,3270,2.129,3296,1.828,3297,2.129,3371,2.129,3465,3.175,3466,2.129,3524,2.129,3575,1.828,3576,1.828,3583,2.129,3592,2.129,3637,2.129,3638,2.129,3642,2.129,3656,2.66,3657,3.175,3658,2.129,3665,1.725,3669,2.129,3686,2.129,3784,2.129,4199,2.129,4250,1.828,4292,2.129,4471,7.405,4625,1.957,4626,2.39,4627,6.629,4628,2.39,4629,8.518,4630,9.525,4631,8.604,4632,3.175,4633,2.129,4634,2.129,4635,6.19,4636,8.518,4637,2.39,4638,5.631,4639,2.129,4640,2.129,4641,2.129,4642,3.454,4643,2.129,4644,2.129,4645,3.454,4646,2.129,4647,2.129,4648,2.129,4649,7.726,4650,8.422,4651,4.894,4652,4.894,4653,2.129,4654,2.129,4655,2.39,4656,2.129,4657,1.957,4658,2.39,4659,2.39,4660,2.39,4661,2.39]],["title/miscellaneous/enumerations.html",[4662,2.471,4663,5.065]],["body/miscellaneous/enumerations.html",[7,0.007,42,0.767,149,2.558,152,4.051,161,2.514,244,0.005,245,0.005,252,0.264,361,3.273,362,3.639,491,2.154,619,4.293,620,3.014,621,4.82,628,5.684,630,4.209,634,5.012,643,3.471,662,4.764,663,5.684,664,4.199,701,5.012,720,3.598,771,2.853,1057,4.293,1067,4.551,1210,5.684,1219,5.684,1303,5.684,1314,4.365,1419,5.012,1430,3.172,1546,4.764,1552,6.185,1561,5.012,1614,5.684,1745,4.764,1789,4.199,2067,4.011,2073,6.337,2074,5.684,2075,5.684,2076,5.311,2077,5.684,2078,5.684,2079,5.684,2342,6.185,2348,6.185,2482,3.786,2499,6.185,2500,6.185,2501,5.311,2502,6.185,2503,6.185,2504,5.684,2505,5.311,2506,5.684,2507,5.684,2508,5.311,4657,5.684,4662,3.297,4663,4.671,4664,5.245,4665,5.245,4666,5.245,4667,6.944,4668,6.944,4669,6.944,4670,4.671,4671,5.245,4672,4.671]],["title/miscellaneous/functions.html",[4662,2.471,4673,5.065]],["body/miscellaneous/functions.html",[7,0.006,244,0.006,245,0.006,252,0.385,4653,6.823,4654,8.216,4662,4.815,4673,6.823,4674,7.661]],["title/index.html",[252,0.198,3805,3.007,3806,3.218]],["body/index.html",[7,0.006,29,1.769,31,0.068,32,0.075,129,2.976,149,2.116,161,3.179,176,3.84,182,3.386,233,3.587,234,5.625,244,0.004,245,0.004,350,1.665,372,3.757,462,3.218,512,3.677,542,3.386,582,3.386,596,4.221,614,1.675,629,1.704,630,1.971,669,1.965,789,3.074,821,6.055,846,4.618,976,3.587,992,3.587,1046,3.218,1047,5.625,1112,3.218,1118,2.948,1153,2.948,1227,4.649,1240,3.84,1960,5.625,2173,3.218,2215,4.178,2831,4.178,2979,4.649,3107,3.587,3119,4.221,3260,5.989,3848,4.178,3916,4.178,3923,7.052,3938,4.178,3964,5.736,3968,3.84,3970,6.551,3983,8.081,4006,3.386,4024,4.178,4041,4.178,4061,7.052,4078,4.178,4088,4.178,4089,4.178,4132,4.178,4141,4.178,4171,3.587,4241,4.178,4244,5.736,4250,3.587,4251,5.736,4272,4.178,4287,4.178,4300,4.178,4308,4.178,4311,4.178,4326,6.481,4395,3.84,4398,4.178,4401,7.052,4434,5.736,4449,4.178,4456,7.052,4476,7.391,4483,4.178,4484,8.516,4505,3.84,4528,5.736,4553,6.021,4593,4.178,4613,4.178,4625,3.84,4675,4.691,4676,4.691,4677,5.736,4678,4.691,4679,4.691,4680,6.441,4681,4.178,4682,4.691,4683,4.691,4684,4.691,4685,4.691,4686,4.691,4687,4.691,4688,4.691,4689,4.691,4690,4.691,4691,4.691,4692,4.691,4693,4.691,4694,4.691,4695,4.691,4696,4.178,4697,4.178,4698,6.441,4699,4.691,4700,4.691,4701,4.178,4702,4.178,4703,4.691,4704,4.691,4705,8.298,4706,4.691,4707,4.691,4708,6.441,4709,4.691,4710,4.691,4711,4.691,4712,4.691,4713,4.691,4714,4.691,4715,4.691,4716,4.691,4717,6.441,4718,4.691,4719,4.691,4720,6.441,4721,4.691,4722,4.691,4723,4.691,4724,4.691,4725,4.691,4726,4.691,4727,4.691,4728,6.441,4729,4.691,4730,6.441,4731,6.441,4732,4.691,4733,4.691,4734,4.691,4735,4.691,4736,4.691,4737,4.691,4738,4.691,4739,4.691,4740,4.691,4741,4.691,4742,4.691,4743,4.691,4744,6.441,4745,6.441,4746,4.691,4747,4.691,4748,4.691,4749,4.691,4750,4.691,4751,4.691,4752,6.441,4753,4.691,4754,4.691,4755,4.691,4756,4.691,4757,4.691,4758,4.691,4759,4.691,4760,4.691,4761,4.691,4762,4.691,4763,4.691,4764,4.691,4765,4.691,4766,4.691,4767,6.441,4768,4.691,4769,4.691,4770,4.691,4771,4.691,4772,3.84]],["title/license.html",[3805,3.007,3806,3.218,4006,2.838]],["body/license.html",[7,0.005,29,2.437,161,2.34,244,0.005,245,0.005,502,4.235,834,4.235,846,3.769,980,3.607,991,4.942,1240,5.289,1473,5.289,1571,5.289,1960,6.067,1967,5.289,2928,5.289,3260,4.664,3944,5.755,3968,6.494,4006,4.664,4250,4.942,4505,6.494,4681,8.587,4772,5.289,4773,8.585,4774,6.462,4775,7.934,4776,6.462,4777,6.462,4778,6.462,4779,6.462,4780,6.462,4781,6.462,4782,6.462,4783,6.462,4784,6.462,4785,6.462,4786,6.462,4787,6.462,4788,6.462,4789,6.462,4790,6.462,4791,6.462,4792,6.462,4793,7.934,4794,6.462,4795,6.462,4796,6.462,4797,6.462,4798,6.462,4799,6.462,4800,7.934,4801,7.934,4802,6.462,4803,6.462,4804,6.462,4805,6.462,4806,6.462,4807,6.462,4808,6.462,4809,6.462,4810,6.462,4811,6.462,4812,6.462,4813,6.462,4814,6.462,4815,6.462,4816,6.462,4817,6.462,4818,6.462,4819,6.462,4820,6.462,4821,6.462,4822,6.462,4823,6.462,4824,6.462,4825,6.462]],["title/modules.html",[2,2.44]],["body/modules.html",[1,4.708,2,2.321,6,4.223,7,0.005,8,4.443,9,4.443,10,4.034,11,4.443,12,4.443,13,4.443,14,4.443,15,4.443,16,4.223,17,4.034,18,3.471,19,4.443,20,4.443,21,4.223,22,4.443,23,4.443,24,3.591,25,4.223,26,4.443,244,0.005,245,0.005,432,4.223,2142,4.708,2332,4.223,4111,8.891,4826,9.983,4827,9.983,4828,9.995,4829,5.482,4830,6.156]],["title/overview.html",[4831,5.763]],["body/overview.html",[1,7.46,2,1.2,3,1.911,4,2.833,5,2.833,6,6.271,7,0.007,8,5.799,9,5.128,10,5.265,11,5.128,12,6.063,13,4.254,14,5.128,15,6.329,16,5.345,17,6.113,18,4.997,19,5.799,20,5.799,21,5.345,22,6.253,23,5.799,24,5.613,25,5.345,26,5.799,27,1.952,28,1.278,29,1.2,186,1.007,244,0.003,245,0.003,248,0.857,329,3.201,336,3.895,338,5.106,340,5.106,428,2.833,429,2.833,430,2.833,431,2.833,432,5.345,433,5.624,443,2.604,455,4.545,483,1.367,514,4.043,523,1.045,566,4.043,598,4.043,605,2.833,606,2.833,607,2.833,609,5.345,618,0.953,718,4.897,849,5.624,860,4.043,884,2.833,885,2.833,886,2.833,1003,1.636,1592,4.043,1600,2.833,1601,2.833,1665,5.28,1707,2.833,1709,2.833,1710,2.833,1768,2.433,1937,4.897,2006,4.712,2017,3.862,2081,5.345,2097,2.833,2098,2.833,2100,2.833,2142,5.959,2143,2.833,2144,2.833,2145,2.833,2163,2.833,2164,2.833,2165,2.833,2240,2.833,2251,4.043,2272,4.043,2297,4.859,2328,2.833,2329,2.833,2330,2.833,2331,2.833,2332,5.345,2404,4.319,2443,2.833,2444,2.833,2445,2.833,2490,2.833,2492,2.833,2493,2.833,2625,5.345,2664,5.345,2701,5.345,2737,5.345,2748,2.833,2750,2.833,2751,2.833,2777,2.833,2778,2.833,2780,2.833,2803,2.833,2804,2.833,2805,2.833,2838,2.833,2839,2.833,2840,2.833,2841,5.345,2856,2.833,2857,2.833,2859,4.761,2944,2.833,2945,2.833,2947,2.833,3137,4.043,3235,5.345,3241,3.704,3570,2.833,3571,2.833,3572,2.833,3662,2.833,3663,2.833,3664,2.833,3665,5.624,3778,2.833,3780,2.833,3781,2.833,3882,4.327,4831,2.833,4832,3.181,4833,3.181]],["title/properties.html",[446,1.051,3926,3.502]],["body/properties.html",[7,0.007,62,5.106,161,3.034,244,0.006,245,0.006,331,4.853,396,1.178,446,1.307,669,2.158,754,6.858,846,4.887,1028,5.791,1235,5.791,1719,4.636,3812,6.3,4006,5.106,4171,5.41,4360,6.3,4470,6.3,4565,6.3,4772,5.791,4829,6.3,4834,7.074,4835,7.074,4836,7.074,4837,7.074,4838,7.074,4839,7.074,4840,7.074,4841,7.074,4842,7.074,4843,7.074,4844,7.074,4845,7.074,4846,7.074,4847,7.074,4848,7.074,4849,7.074]],["title/miscellaneous/typealiases.html",[4662,2.471,4850,5.687]],["body/miscellaneous/typealiases.html",[7,0.006,43,0.398,244,0.006,245,0.006,252,0.385,4632,6.271,4662,4.815,4851,7.661,4852,8.777,4853,6.823]],["title/miscellaneous/variables.html",[4461,4.655,4662,2.471]],["body/miscellaneous/variables.html",[7,0.007,30,0.052,43,0.205,72,4.657,73,4.657,74,4.657,75,4.657,76,4.657,77,4.657,113,1.126,149,1.869,174,5.471,176,5.471,178,3.208,180,5.067,182,4.106,189,2.002,195,5.067,228,3.576,244,0.004,245,0.004,252,0.198,283,0.735,292,1.905,325,1.547,356,1.778,391,1.257,396,0.655,411,1.019,446,0.727,476,2.52,481,2.874,485,2.473,507,1.905,582,2.839,588,3.106,629,2.438,630,3.87,714,2.628,716,2.564,780,2.698,835,3.008,854,3.22,1067,2.578,1283,5.067,1430,2.379,1546,3.903,1561,2.839,1571,4.657,1652,3.22,1776,5.067,1968,4.657,1971,3.503,2173,3.903,2195,3.503,2860,4.351,2863,3.22,2864,4.657,2875,4.657,2877,4.657,2878,3.22,2879,3.503,2880,3.503,2881,3.503,2882,3.503,2926,3.503,2979,2.839,3054,2.698,3820,3.503,4031,3.503,4134,5.067,4171,4.351,4326,3.22,4354,3.503,4395,3.22,4461,3.22,4480,3.503,4553,3.22,4632,3.22,4633,3.503,4634,5.067,4639,3.503,4640,5.067,4641,3.503,4642,5.067,4643,5.067,4644,5.067,4645,3.503,4646,5.952,4647,3.503,4648,3.503,4656,3.503,4657,4.657,4662,2.473,4670,3.503,4672,3.503,4677,3.503,4696,3.503,4697,5.067,4701,3.503,4702,3.503,4853,5.067,4854,3.934,4855,3.934,4856,3.934,4857,5.689,4858,5.689,4859,3.934,4860,3.934,4861,3.934,4862,3.934,4863,3.934,4864,3.934,4865,3.934,4866,3.934,4867,3.934,4868,3.934,4869,3.934,4870,3.934,4871,3.934,4872,3.934,4873,3.934,4874,8.351,4875,3.934,4876,3.934,4877,3.934,4878,3.934,4879,3.934,4880,3.934,4881,3.934,4882,3.934,4883,3.934,4884,3.934,4885,3.934,4886,3.934,4887,3.934,4888,3.934,4889,3.934,4890,3.934,4891,3.934,4892,3.934,4893,3.934,4894,5.689,4895,3.934,4896,5.689,4897,3.934,4898,3.934,4899,5.689,4900,3.934,4901,5.689,4902,3.934,4903,5.689,4904,3.934,4905,5.689,4906,5.689,4907,3.934,4908,3.934,4909,5.689,4910,3.934,4911,3.934,4912,3.934,4913,3.934,4914,3.934,4915,3.934,4916,3.934,4917,3.934,4918,3.934,4919,3.934,4920,3.934,4921,3.934,4922,3.934,4923,3.934,4924,3.934,4925,3.934,4926,5.689,4927,3.934,4928,3.934,4929,3.934,4930,3.934,4931,5.689,4932,3.934,4933,3.934,4934,3.934,4935,3.934,4936,3.934,4937,3.934,4938,3.934,4939,3.934,4940,3.934,4941,3.934,4942,3.934,4943,3.934,4944,3.934,4945,3.934,4946,3.934,4947,3.934,4948,3.934,4949,3.934,4950,3.934,4951,3.934,4952,3.934,4953,3.934,4954,3.934,4955,3.934,4956,3.934,4957,5.689,4958,5.689,4959,3.934,4960,3.934]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":961,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{}}}],["0.0.0.0",{"_index":4696,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["0.7",{"_index":4880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":4630,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4638,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4652,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":4660,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":4658,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4650,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":4628,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4629,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4631,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4636,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4649,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4651,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4627,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4635,"title":{},"body":{"coverage.html":{}}}],["0046b05",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":835,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbUserHighlight.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["01301c9",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["01t00:30:00z",{"_index":4955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["02",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["03600f8",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["03bf95b",{"_index":4306,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1139,"title":{},"body":{"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserNotification.html":{},"changelog.html":{}}}],["04082d7",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1002,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"changelog.html":{}}}],["0848443",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["08f1679",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":4145,"title":{},"body":{"changelog.html":{}}}],["09c96fe",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["0b6d16a",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["0b85d93",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["0e8a16",{"_index":1265,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["0eb10bb",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["0fe8b4d",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["0})@column({type",{"_index":1196,"title":{},"body":{"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{}}}],["1",{"_index":483,"title":{"classes/UserRepoOptionsDto-1.html":{}},"body":{"interfaces/ChatResponse.html":{},"classes/ContributionPageOptionsDto.html":{},"entities/DbEmoji.html":{},"entities/DbPRInsight.html":{},"entities/DbSubscription.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/OpenAiService.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/StripeService.html":{},"classes/UserRepoOptionsDto.html":{},"changelog.html":{},"overview.html":{}}}],["1.0.0",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["1.10.0",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["1.11.0",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["1.12.0",{"_index":4276,"title":{},"body":{"changelog.html":{}}}],["1.13.0",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["1.14.0",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["1.15.0",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["1.15.1",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["1.16.0",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["1.17.0",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["1.17.1",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["1.18.0",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["1.18.1",{"_index":4196,"title":{},"body":{"changelog.html":{}}}],["1.19.0",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["1.20.0",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["1.21.0",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["1.21.1",{"_index":4183,"title":{},"body":{"changelog.html":{}}}],["1.22.0",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["1.23.0",{"_index":4174,"title":{},"body":{"changelog.html":{}}}],["1.24.0",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["1.25.0",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["1.26.0",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["1.27.0",{"_index":4136,"title":{},"body":{"changelog.html":{}}}],["1.28.0",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["1.29.0",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["1.29.1",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["1.30.0",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["1.30.1",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["1.30.2",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["1.31.0",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["1.31.1",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["1.32.0",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["1.33.0",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["1.33.1",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["1.34.0",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["1.35.0",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["1.36.0",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["1.37.0",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["1.38.0",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["1.38.1",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["1.38.2",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["1.38.3",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["1.39.0",{"_index":3812,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["1.4.0",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["1.6.10",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["1.6.11",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["1.6.12",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["1.6.13",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["1.6.14",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["1.6.15",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["1.6.16",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["1.6.17",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["1.6.3",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["1.6.4",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["1.6.5",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["1.6.6",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["1.6.7",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["1.6.8",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["1.6.9",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["1.7.1",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["1.7.10",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["1.7.11",{"_index":4448,"title":{},"body":{"changelog.html":{}}}],["1.7.12",{"_index":4446,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["1.7.3",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["1.7.5",{"_index":4469,"title":{},"body":{"changelog.html":{}}}],["1.7.6",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["1.7.7",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["1.7.8",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["1.7.9",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["1.8.1",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["1.8.2",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["1.9.0",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":481,"title":{},"body":{"interfaces/ChatResponse.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/OpenAiService.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"controllers/StripeWebhookController.html":{},"classes/SupabaseAuthDto.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1067,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbUserNotification.html":{},"classes/InsightOptionsDto.html":{},"classes/PageMetaDto.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["100'})@column({type",{"_index":1054,"title":{},"body":{"entities/DbEmoji.html":{}}}],["1000",{"_index":639,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/RepoFilterService.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["10000",{"_index":4909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1024",{"_index":4874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["103",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["1045024650",{"_index":1299,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["1045024650})@primarycolumn('integer",{"_index":1255,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["109d081",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["10})@column({type",{"_index":1228,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(10000)@isoptional",{"_index":640,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["11",{"_index":2821,"title":{},"body":{"injectables/StripeService.html":{},"changelog.html":{}}}],["113e98b",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["115",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["116",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["117",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["118",{"_index":4112,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["120",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["12237133",{"_index":1023,"title":{},"body":{"entities/DbContribution.html":{}}}],["12237133})@primarycolumn('bigint",{"_index":988,"title":{},"body":{"entities/DbContribution.html":{}}}],["1225197",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["124",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["125",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["127.0.0.1",{"_index":4695,"title":{},"body":{"index.html":{}}}],["128",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["130",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["131",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["133",{"_index":1553,"title":{},"body":{"entities/DbUserNotification.html":{},"changelog.html":{}}}],["133'})@column({type",{"_index":1538,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["135",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["136",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["13:24:51.000000",{"_index":848,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/SupabaseAuthDto.html":{}}}],["13:24:51.000000'})@column({type",{"_index":993,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbInsightMember.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserNotification.html":{}}}],["13:24:51.000000'})@createdatecolumn({type",{"_index":979,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["13:24:51.000000'})@deletedatecolumn({type",{"_index":1093,"title":{},"body":{"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{}}}],["13:24:51.000000'})@updatedatecolumn({type",{"_index":1113,"title":{},"body":{"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{}}}],["13:24:51.000000})@isdatestring()@isoptional",{"_index":837,"title":{},"body":{"classes/CreateUserHighlightDto.html":{}}}],["14",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["141",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["143",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["144",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["147",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["14b6a44",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1026,"title":{},"body":{"entities/DbContribution.html":{},"injectables/StripeService.html":{},"changelog.html":{}}}],["150",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["151",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["154",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["155",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["155e99e",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["157",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["158",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["159",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["15})@column({type",{"_index":970,"title":{},"body":{"entities/DbContribution.html":{}}}],["16",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["161",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["164",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["165",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["166050d",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["16678a7",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["168",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["1680fb3",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["170",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["171",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["173",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["176",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["177",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["179",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["17c54b9",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["17d7725",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["182",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["185",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["189",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":836,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{}}}],["190",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["191",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["192",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["195",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["196",{"_index":1333,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["196})@primarygeneratedcolumn",{"_index":1322,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["1bbeaf6",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["1c3378e",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["1edaeda",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["1f021a4",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["1})@column({type",{"_index":1048,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbSubscription.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":647,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["2",{"_index":2240,"title":{},"body":{"controllers/PullRequestController.html":{},"overview.html":{}}}],["2/3",{"_index":4637,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1081,"title":{},"body":{"entities/DbEndorsement.html":{},"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"changelog.html":{}}}],["200",{"_index":4873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2016",{"_index":978,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/SupabaseAuthDto.html":{}}}],["2022",{"_index":1001,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/StripeService.html":{},"changelog.html":{}}}],["2023",{"_index":834,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserNotification.html":{},"changelog.html":{},"license.html":{}}}],["20491d8",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["2073883",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["20880c7",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["20bc1e7",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["22:04:29.000000",{"_index":1027,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["22:04:29.000000'})@column({type",{"_index":1245,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["22:04:29.000000'})@createdatecolumn({type",{"_index":1248,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["22:04:29.000000'})@updatedatecolumn({type",{"_index":1004,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["22:04:39.000000",{"_index":1201,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["22:04:39.000000'})@column({type",{"_index":1187,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["22d3cc1",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["234343",{"_index":2489,"title":{},"body":{"classes/RepoInfo.html":{}}}],["234343})@isnumber",{"_index":2487,"title":{},"body":{"classes/RepoInfo.html":{}}}],["237133",{"_index":1037,"title":{},"body":{"entities/DbCustomer.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/SupabaseAuthDto.html":{}}}],["237133})@column",{"_index":1133,"title":{},"body":{"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["237133})@column('bigint",{"_index":1487,"title":{},"body":{"entities/DbUserHighlight.html":{},"entities/DbUserRepo.html":{}}}],["237133})@column({type",{"_index":1071,"title":{},"body":{"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlightReaction.html":{}}}],["237133})@primarycolumn('bigint",{"_index":1032,"title":{},"body":{"entities/DbCustomer.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{}}}],["237133})@primarycolumn()@primarygeneratedcolumn",{"_index":1095,"title":{},"body":{"entities/DbInsight.html":{},"entities/DbInsightRepo.html":{}}}],["23b2a83",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":3882,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["247e0ba",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1110,"title":{},"body":{"entities/DbInsight.html":{},"entities/DbUserNotification.html":{},"changelog.html":{}}}],["250",{"_index":1824,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["25060",{"_index":4899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["250})@isnumber()@min(100)@max(500",{"_index":1805,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["255",{"_index":966,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbInsight.html":{}}}],["26",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["272c09a",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["273f337",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":1003,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"changelog.html":{},"overview.html":{}}}],["286e864",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["287",{"_index":1202,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["287})@column({type",{"_index":1179,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["28a3b76",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["28f6699",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["293c4d3",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["2a8d198",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["2bdec65",{"_index":4366,"title":{},"body":{"changelog.html":{}}}],["2c0b15f",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["2c0b3d1",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["2ce16fd",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["2d6609a",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["2ddb855",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["2ee076b",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["2f966a3",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["3.5",{"_index":4936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30",{"_index":649,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"classes/UserRepoOptionsDto.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["3000",{"_index":4877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3001",{"_index":4702,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["30})@type(undefined)@isin(['7",{"_index":652,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["31",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["31333",{"_index":1086,"title":{},"body":{"entities/DbEndorsement.html":{},"entities/DbUserCollaboration.html":{}}}],["31333})@column({type",{"_index":1074,"title":{},"body":{"entities/DbEndorsement.html":{},"entities/DbUserCollaboration.html":{}}}],["31e4d60",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":1539,"title":{},"body":{"entities/DbUserNotification.html":{},"changelog.html":{}}}],["3282435",{"_index":4374,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":4832,"title":{},"body":{"overview.html":{}}}],["334268d",{"_index":4342,"title":{},"body":{"changelog.html":{}}}],["33fea7e",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["34d521d",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["3549897",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["35a08da",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["36",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["3774b36",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["3782b21",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":4833,"title":{},"body":{"overview.html":{}}}],["38f1dc9",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["3918a78",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["39bdd16",{"_index":4135,"title":{},"body":{"changelog.html":{}}}],["3a662d0",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["3d2b7eb",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["400",{"_index":1979,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["41",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":4252,"title":{},"body":{"changelog.html":{}}}],["42211",{"_index":762,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"entities/DbSubscription.html":{}}}],["42211})@column({type",{"_index":1424,"title":{},"body":{"entities/DbSubscription.html":{}}}],["42211})@isnumber",{"_index":744,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["426820139",{"_index":3661,"title":{},"body":{"classes/UserRepoOptionsDto-1.html":{}}}],["43",{"_index":4257,"title":{},"body":{"changelog.html":{}}}],["43311",{"_index":1551,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["43311})@column({type",{"_index":1531,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["436f2db",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["4456742596",{"_index":1261,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["4552c66",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["4601be2",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["475e5dd",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["47dc78b",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["487c1a2",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["498",{"_index":1038,"title":{},"body":{"entities/DbCustomer.html":{},"entities/DbUserNotification.html":{}}}],["498})@column({type",{"_index":1034,"title":{},"body":{"entities/DbCustomer.html":{},"entities/DbUserNotification.html":{}}}],["4b264d5",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["4c3782f",{"_index":4305,"title":{},"body":{"changelog.html":{}}}],["4deaadd",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1314,"title":{},"body":{"entities/DbPullRequest.html":{},"classes/InsightOptionsDto.html":{},"injectables/RepoFilterService.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserOnboardingDto.html":{},"miscellaneous/enumerations.html":{}}}],["5'})@isstring",{"_index":3640,"title":{},"body":{"classes/UserOnboardingDto.html":{}}}],["5'})@isstring()@isoptional",{"_index":3081,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["50",{"_index":637,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbCustomer.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"controllers/StripeWebhookController.html":{},"classes/UserRepoOptionsDto.html":{}}}],["500",{"_index":1079,"title":{},"body":{"entities/DbEndorsement.html":{},"entities/DbUserCollaboration.html":{},"injectables/HttpLoggerMiddleware.html":{},"changelog.html":{}}}],["5238f58",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["5385049",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["544673a",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["55",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["5699f6a",{"_index":4286,"title":{},"body":{"changelog.html":{}}}],["56eb3bd",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["5736810",{"_index":763,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["5736810})@isnumber",{"_index":747,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["58",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["58540e7",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["58bf922",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["5925b74",{"_index":4364,"title":{},"body":{"changelog.html":{}}}],["59dd7bf",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["5e1cb54",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["5e24505",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["5e7c6c7",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["5eddeb1",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["5ee770b",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["5f79c49",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["5f9be41",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["5})@column({type",{"_index":1242,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["607cf5d",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["60].map(async",{"_index":2263,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["611b923",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["612",{"_index":1301,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["612})@column('integer",{"_index":1276,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["618225f",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["61ac1e7",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["61b67d5",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["62b3eea",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["63",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["630f3b5",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["63639b4",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["638f9ec",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["63d6a92",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["648dbeb",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["64d869f",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":4199,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["66fb61e",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["672ea80",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["673dca9",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["68",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["69b2067",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["6a4810f",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["6b157e5",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["6b832e4",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["6d23c24",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["6df9486",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["6fa4a7d",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1827,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"changelog.html":{}}}],["70a6e7b",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["71359796",{"_index":1025,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbPRInsight.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/UserRepoOptionsDto-1.html":{}}}],["71359796})@column",{"_index":1326,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["71359796})@column({type",{"_index":999,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbUserHighlightReaction.html":{}}}],["71359796})@primarycolumn({type",{"_index":1189,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["71a164d",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["7249714",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["7338f09",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["73d1c74",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["74",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["742b073",{"_index":4271,"title":{},"body":{"changelog.html":{}}}],["762c1cb",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["77",{"_index":4179,"title":{},"body":{"changelog.html":{}}}],["7728bc8",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["77c734c",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["78133",{"_index":764,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"entities/DbEndorsement.html":{}}}],["78133})@column({type",{"_index":1076,"title":{},"body":{"entities/DbEndorsement.html":{}}}],["78133})@isnumber",{"_index":749,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["797",{"_index":790,"title":{},"body":{"classes/CreateInsightDto.html":{}}}],["79bf61d",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["7adfb6b",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["7c846ec",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["7cfc04b",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["7db9008",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["7e2756b",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["7e29c6e",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["7e9b8a4",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["7fe63aa",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["7})@isnumber()@min(0)@max(10",{"_index":1819,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["8080:3001",{"_index":4731,"title":{},"body":{"index.html":{}}}],["80a866f",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["81",{"_index":4176,"title":{},"body":{"changelog.html":{}}}],["81e8bbc",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["828b7d2",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["83c6888",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["83fe57d",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["85a7549",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["860fff3",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["867d740",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["86e013f",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["87",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["88",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["8810e03",{"_index":4310,"title":{},"body":{"changelog.html":{}}}],["8837b2a",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["88e08d2",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["88e0adc",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["89",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["8952f19",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["89b5329",{"_index":4208,"title":{},"body":{"changelog.html":{}}}],["8aee8e5",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["8bfda45",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["8c6884c",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":2228,"title":{},"body":{"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["90'])@isint()@isoptional",{"_index":653,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["911df68",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["92",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["9427269",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["94331ba",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["9484df4",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["94ba4e1",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["957b86e",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["971adeb",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["9895327",{"_index":4233,"title":{},"body":{"changelog.html":{}}}],["98980b0",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["99ac2c6",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["9b12042",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["9bee970",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["9c605d0",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["9fc3be7",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["_stripe",{"_index":2809,"title":{},"body":{"injectables/StripeService.html":{}}}],["_token",{"_index":1630,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["a057e0e",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["a08abfd",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["a0db0aa",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["a17b835",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["a229a3b",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["a398b89",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["a5a4789",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["a9e1df6",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["abb24de",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["ability",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":4799,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["ac31556",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["accept",{"_index":3061,"title":{},"body":{"classes/UpdateUserCollaborationDto.html":{}}}],["accept'})@isstring()@isin(['accept",{"_index":3059,"title":{},"body":{"classes/UpdateUserCollaborationDto.html":{}}}],["acceptance",{"_index":1436,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["accepted",{"_index":1178,"title":{},"body":{"entities/DbPRInsight.html":{},"injectables/PullRequestInsightsService.html":{}}}],["accepted_prs",{"_index":1173,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["accepting",{"_index":3123,"title":{},"body":{"controllers/UserCollaborationController.html":{},"controllers/UserInsightMemberController.html":{}}}],["access",{"_index":1122,"title":{},"body":{"entities/DbInsightMember.html":{},"injectables/InsightsService.html":{},"classes/UpdateInsightMemberDto.html":{},"controllers/UserInsightMemberController.html":{}}}],["accessing",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["accessors",{"_index":2214,"title":{},"body":{"classes/PageOptionsDto.html":{},"injectables/StripeService.html":{}}}],["accessroles",{"_index":2036,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["account",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":3944,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["actions",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":1419,"title":{},"body":{"entities/DbSubscription.html":{},"classes/InsightOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"controllers/StripeWebhookController.html":{},"miscellaneous/enumerations.html":{}}}],["active'})@column({type",{"_index":1418,"title":{},"body":{"entities/DbSubscription.html":{}}}],["ad2c624",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["adapter",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":3119,"title":{},"body":{"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"classes/UserRepoOptionsDto-1.html":{},"changelog.html":{},"index.html":{}}}],["addcustomer",{"_index":892,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/StripeService.html":{}}}],["addcustomer(id",{"_index":2812,"title":{},"body":{"injectables/StripeService.html":{}}}],["addcustomer(userid",{"_index":899,"title":{},"body":{"injectables/CustomerService.html":{}}}],["added",{"_index":1227,"title":{},"body":{"entities/DbPullRequest.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"injectables/UserHighlightsService.html":{},"changelog.html":{},"index.html":{}}}],["addgroupby(\"author_login",{"_index":2387,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["addhighlightforuser",{"_index":3316,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["addhighlightreactionforuser",{"_index":3299,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["addhighlightreactionforuser(highlightid",{"_index":3308,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["addinsight",{"_index":2110,"title":{},"body":{"injectables/InsightsService.html":{}}}],["addinsight(insight",{"_index":2117,"title":{},"body":{"injectables/InsightsService.html":{}}}],["addinsightforuser",{"_index":3300,"title":{},"body":{"controllers/UserHighlightsController.html":{},"controllers/UserInsightsController.html":{}}}],["addinsightforuser(@body",{"_index":3537,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["addinsightforuser(createhighlightdto",{"_index":3315,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["addinsightforuser(createinsightdto",{"_index":3526,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["addinsightmember",{"_index":2020,"title":{},"body":{"injectables/InsightMemberService.html":{},"controllers/UserInsightMemberController.html":{}}}],["addinsightmember(createinsightmemberdto",{"_index":3470,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["addinsightmember(insightmember",{"_index":2029,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["addinsightrepo",{"_index":2083,"title":{},"body":{"injectables/InsightRepoService.html":{}}}],["addinsightrepo(insightid",{"_index":2088,"title":{},"body":{"injectables/InsightRepoService.html":{}}}],["additional",{"_index":4175,"title":{},"body":{"changelog.html":{}}}],["additions",{"_index":1204,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["addmemberforinsight",{"_index":3472,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["addorderby(`\"${orderfield",{"_index":690,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["addorderby(`\"contribution\".\"created_at",{"_index":692,"title":{},"body":{"injectables/ContributionService.html":{}}}],["addorderby(`\"pull_requests\".\"updated_at",{"_index":2371,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["addorderby(`\"repo\".\"created_at",{"_index":2577,"title":{},"body":{"injectables/RepoService.html":{}}}],["addorderby(`\"repos\".\"${orderfield",{"_index":2581,"title":{},"body":{"injectables/RepoService.html":{}}}],["addorderby(`\"updated_at",{"_index":2389,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["adds",{"_index":2618,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["addselect",{"_index":1763,"title":{},"body":{"injectables/EndorsementService.html":{},"injectables/RepoService.html":{},"injectables/UserService.html":{}}}],["addselect(\"count(emoji_id",{"_index":3450,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["addselect(\"insight_members.invitation_email",{"_index":2060,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["addselect(\"max(pull_requests.updated_at",{"_index":2386,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["addselect(\"r2votes.deleted_at",{"_index":3797,"title":{},"body":{"injectables/VoteService.html":{}}}],["addselect(\"repos.full_name",{"_index":2377,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["addselect(\"repos.id",{"_index":2379,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["addselect(\"user_follows.deleted_at",{"_index":3261,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["addselect(\"users.login",{"_index":3409,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["addselect(\"users.name",{"_index":2058,"title":{},"body":{"injectables/InsightMemberService.html":{},"injectables/UserHighlightsService.html":{}}}],["addselect((qb",{"_index":2550,"title":{},"body":{"injectables/RepoService.html":{}}}],["addselect(`${interval}::integer",{"_index":2320,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["addusercollaboration",{"_index":3112,"title":{},"body":{"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{}}}],["addusercollaboration(createusercollaborationdto",{"_index":3116,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["addusercollaboration(usercollaboration",{"_index":3162,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["adduserfollowerbyuserid",{"_index":3237,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["adduserfollowerbyuserid(userid",{"_index":3244,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["adduserfollowernotification",{"_index":3593,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["adduserfollowernotification(userid",{"_index":3600,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["adduserhighlight",{"_index":3372,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["adduserhighlight(userid",{"_index":3383,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["adduserhighlightnotification",{"_index":3594,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["adduserhighlightnotification(userid",{"_index":3602,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["adduserhighlightreaction",{"_index":3373,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["adduserhighlightreaction(userid",{"_index":3385,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["addusernotification",{"_index":3595,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["addusernotification(usernotification",{"_index":3604,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["adduserrepo",{"_index":3670,"title":{},"body":{"injectables/UserReposService.html":{}}}],["adduserrepo(userid",{"_index":3674,"title":{},"body":{"injectables/UserReposService.html":{}}}],["adjust",{"_index":4287,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["adjustments",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":3054,"title":{},"body":{"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["admin).'})@isoptional",{"_index":3090,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["advised",{"_index":4740,"title":{},"body":{"index.html":{}}}],["ae43450",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["ae44652",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["aef9df6",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["af531e4",{"_index":4444,"title":{},"body":{"changelog.html":{}}}],["afde490",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["ai.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/PullRequestModule.html":{}}}],["ai.module.ts",{"_index":2166,"title":{},"body":{"modules/OpenAiModule.html":{}}}],["ai.service",{"_index":535,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/OpenAiModule.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["ai.service.ts",{"_index":445,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{},"coverage.html":{}}}],["ai.service.ts:10",{"_index":2168,"title":{},"body":{"injectables/OpenAiService.html":{}}}],["ai.service.ts:13",{"_index":2169,"title":{},"body":{"injectables/OpenAiService.html":{}}}],["ai/open",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ChatResponse.html":{},"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"injectables/PullRequestDescriptionService.html":{},"modules/PullRequestModule.html":{},"coverage.html":{}}}],["alias",{"_index":2531,"title":{},"body":{"injectables/RepoService.html":{}}}],["aliases",{"_index":4851,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliasname",{"_index":2535,"title":{},"body":{"injectables/RepoService.html":{}}}],["aliastable",{"_index":2537,"title":{},"body":{"injectables/RepoService.html":{}}}],["alias}count",{"_index":2536,"title":{},"body":{"injectables/RepoService.html":{}}}],["alias}countselect",{"_index":2538,"title":{},"body":{"injectables/RepoService.html":{}}}],["all_prs",{"_index":1174,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["allof",{"_index":4889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["allow_promotion_codes",{"_index":2828,"title":{},"body":{"injectables/StripeService.html":{}}}],["along",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["alpha.10",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["alpha.4",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["alpha.5",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["alpha.6",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["alpha.7",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["alpha.8",{"_index":4149,"title":{},"body":{"changelog.html":{}}}],["alpha.9",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":2606,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"injectables/VoteService.html":{}}}],["and/or",{"_index":4791,"title":{},"body":{"license.html":{}}}],["ands",{"_index":1634,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["andwhere",{"_index":2589,"title":{},"body":{"injectables/RepoService.html":{}}}],["andwhere(\"insight_members.access",{"_index":2057,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["andwhere(\"insight_members.user_id",{"_index":2056,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["andwhere(\"r2stargazes.user_id",{"_index":2797,"title":{},"body":{"injectables/StargazeService.html":{}}}],["andwhere(\"r2stars.user_id",{"_index":2769,"title":{},"body":{"injectables/StarService.html":{}}}],["andwhere(\"r2submits.user_id",{"_index":2964,"title":{},"body":{"injectables/SubmitService.html":{}}}],["andwhere(\"r2votes.user_id",{"_index":3799,"title":{},"body":{"injectables/VoteService.html":{}}}],["andwhere(\"user_follows.deleted_at",{"_index":3258,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["andwhere(\"user_follows.following_user_id",{"_index":3257,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["andwhere(\"user_highlight_reactions.emoji_id",{"_index":3455,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["andwhere(\"user_highlight_reactions.user_id",{"_index":3454,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["andwhere(\"user_notifications.read_at",{"_index":3618,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["andwhere(\"user_notifications.type",{"_index":3617,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["andwhere(`now",{"_index":2376,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["any(\"repo\".\"topics",{"_index":2588,"title":{},"body":{"injectables/RepoService.html":{}}}],["any(\"repos\".\"topics",{"_index":2465,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["any(\"spam_pull_requests\".\"label_names",{"_index":2478,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["anything",{"_index":576,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["api",{"_index":4171,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["api.certificate",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["api.config.ts",{"_index":4643,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api.connection",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["api.database",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["api.host",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["api.maxqueryexecutiontime",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["api.opensauced.pizza",{"_index":4677,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["api.opensauced.pizzaalternatively",{"_index":4732,"title":{},"body":{"index.html":{}}}],["api.password",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["api.port",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["api.username",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["api_host",{"_index":4693,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":509,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["apibearerauth",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}}}],["apibody",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/EndorsementController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["apiconfig",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiconflictresponse",{"_index":2624,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{}}}],["apiconnection",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/ContributorModule.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"modules/HighlightModule.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"injectables/PullRequestService.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"modules/UserModule.html":{},"injectables/UserNotificationService.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["apidocs",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["apiextramodels(pagedto",{"_index":4887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apihideproperty",{"_index":1017,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbInsight.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["apihideproperty()@column({type",{"_index":1279,"title":{},"body":{"entities/DbPullRequest.html":{},"entities/DbSubscription.html":{}}}],["apihideproperty()@deletedatecolumn({type",{"_index":984,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["apihideproperty()@manytoone(undefined",{"_index":995,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbInsight.html":{},"entities/DbInsightRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserTopRepo.html":{}}}],["apihideproperty()@onetomany(undefined",{"_index":1056,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbInsight.html":{},"entities/DbUserHighlight.html":{}}}],["apikey",{"_index":4931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apimodelproperty",{"_index":1018,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["apimodelproperty({description",{"_index":959,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["apimodelpropertyoptional",{"_index":1019,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["apimodelpropertyoptional({description",{"_index":973,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["apinotfoundresponse",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{}}}],["apiokresponse",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{},"miscellaneous/variables.html":{}}}],["apioperation",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}}}],["apipaginatedresponse",{"_index":714,"title":{},"body":{"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HighlightController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse(dbcontribution",{"_index":2409,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["apipaginatedresponse(dbemoji",{"_index":1597,"title":{},"body":{"controllers/EmojiController.html":{}}}],["apipaginatedresponse(dbendorsement",{"_index":1680,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/UserEndorsementController.html":{}}}],["apipaginatedresponse(dbinsight",{"_index":3535,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["apipaginatedresponse(dbinsightmember",{"_index":3495,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["apipaginatedresponse(dbpullrequest",{"_index":2254,"title":{},"body":{"controllers/PullRequestController.html":{},"controllers/UserController.html":{}}}],["apipaginatedresponse(dbpullrequestcontributor",{"_index":725,"title":{},"body":{"controllers/ContributorController.html":{}}}],["apipaginatedresponse(dbrepo",{"_index":2438,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserController.html":{}}}],["apipaginatedresponse(dbusercollaboration",{"_index":3142,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["apipaginatedresponse(dbuserhighlight",{"_index":1943,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserController.html":{}}}],["apipaginatedresponse(dbuserhighlightrepo",{"_index":1947,"title":{},"body":{"controllers/HighlightController.html":{}}}],["apiproperty",{"_index":759,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/RepoInfo.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"classes/UserRepoOptionsDto-1.html":{}}}],["apiproperty({description",{"_index":740,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/PageMetaDto.html":{},"classes/RepoInfo.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"classes/UserRepoOptionsDto-1.html":{}}}],["apiproperty({type",{"_index":2179,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":655,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateUserHighlightDto.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/FilterOptionsDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{}}}],["apipropertyoptional()@isstring()@isoptional",{"_index":1795,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{}}}],["apipropertyoptional({description",{"_index":650,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateUserHighlightDto.html":{},"classes/FilterOptionsDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["apipropertyoptional({enum",{"_index":632,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":638,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["apipropertyoptional({type",{"_index":1792,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{}}}],["apitags",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}}}],["apitags(\"authentication",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"contributors",{"_index":723,"title":{},"body":{"controllers/ContributorController.html":{}}}],["apitags(\"emojis",{"_index":1596,"title":{},"body":{"controllers/EmojiController.html":{}}}],["apitags(\"endorsements",{"_index":1673,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/UserEndorsementController.html":{}}}],["apitags(\"health",{"_index":1883,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"highlights",{"_index":1941,"title":{},"body":{"controllers/HighlightController.html":{}}}],["apitags(\"insights",{"_index":2009,"title":{},"body":{"controllers/InsightController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["apitags(\"pull",{"_index":517,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{}}}],["apitags(\"repository",{"_index":2407,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["apitags(\"stripe",{"_index":2883,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["apitags(\"user",{"_index":3141,"title":{},"body":{"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}}}],["apitoken",{"_index":1778,"title":{},"body":{"guards/EndorsementTokenGuard.html":{}}}],["apiunauthorizedresponse",{"_index":2001,"title":{},"body":{"controllers/InsightController.html":{}}}],["apiunprocessableentityresponse",{"_index":3491,"title":{},"body":{"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["apiversion",{"_index":2820,"title":{},"body":{"injectables/StripeService.html":{}}}],["app",{"_index":4701,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["appearing",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":4699,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":474,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["applies",{"_index":2453,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["applydecorators",{"_index":4886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applyquerybuilderfilters",{"_index":2449,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["applyquerybuilderfilters(qb",{"_index":2451,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approved",{"_index":1357,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["apps",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["apt",{"_index":2280,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["arg",{"_index":1293,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["arising",{"_index":4824,"title":{},"body":{"license.html":{}}}],["array",{"_index":780,"title":{},"body":{"classes/CreateInsightDto.html":{},"classes/PageDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(createinsightdto.repos",{"_index":3539,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["artifact",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":1614,"title":{},"body":{"injectables/EmojiService.html":{},"injectables/InsightMemberService.html":{},"miscellaneous/enumerations.html":{}}}],["assets",{"_index":4748,"title":{},"body":{"index.html":{}}}],["assign",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["assignee",{"_index":1230,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["assignee_avatar",{"_index":1205,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["assignee_login",{"_index":1206,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["associated",{"_index":4782,"title":{},"body":{"license.html":{}}}],["associating",{"_index":4213,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseStrategy.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["attach",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["attempt",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"controllers/UserCollaborationController.html":{},"changelog.html":{},"coverage.html":{}}}],["auth.controller",{"_index":439,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/EndorsementModule.html":{}}}],["auth/dtos/user",{"_index":3721,"title":{},"body":{"injectables/UserService.html":{}}}],["auth/supabase.guard",{"_index":510,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}}}],["auth/supabase.user.decorator",{"_index":2002,"title":{},"body":{"controllers/InsightController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}}}],["authcontroller",{"_index":247,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":3017,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticate(req",{"_index":3020,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticated",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InsightController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthDto.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{},"changelog.html":{}}}],["authguard",{"_index":3014,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authguard(\"supabase",{"_index":3015,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EndorsementModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1235,"title":{},"body":{"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"properties.html":{}}}],["author_avatar",{"_index":1207,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["author_login",{"_index":1208,"title":{},"body":{"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"injectables/PullRequestService.html":{}}}],["authorization",{"_index":471,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["authorized",{"_index":1991,"title":{},"body":{"controllers/InsightController.html":{}}}],["authors",{"_index":4815,"title":{},"body":{"license.html":{}}}],["authuser${relation",{"_index":2573,"title":{},"body":{"injectables/RepoService.html":{}}}],["authuser${relation}.user_id",{"_index":2574,"title":{},"body":{"injectables/RepoService.html":{}}}],["autoloadentities",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":4830,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":1231,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["await",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/ContributionService.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["aws:main",{"_index":1308,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["aws:main'})@column({type",{"_index":1290,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["b0169e7",{"_index":4338,"title":{},"body":{"changelog.html":{}}}],["b174a3f",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["b1a67da",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["b1eda28",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["b457783",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["b4c9879",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["b4d3785",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["b57f47b",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["b5b6ac5",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["b7c3395",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["b8b22da",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["b8e8c88",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["b991dad",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["b9d5a6e",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["b9f3798",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["ba8dfbb",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":1193,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["backend",{"_index":4836,"title":{},"body":{"properties.html":{}}}],["backfill",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["badge",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["badges",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":508,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserInsightsController.html":{}}}],["bag",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":563,"title":{},"body":{"controllers/CodeRefactorSuggestionController.html":{},"controllers/EndorsementController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/RepoFilterService.html":{},"changelog.html":{}}}],["baseentity",{"_index":1010,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{}}}],["basefilterquerybuilder",{"_index":2514,"title":{},"body":{"injectables/RepoService.html":{}}}],["basefilterquerybuilder(range",{"_index":2520,"title":{},"body":{"injectables/RepoService.html":{}}}],["baseline",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["basequerybuilder",{"_index":893,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeSubscriptionService.html":{},"injectables/SubmitService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["bash",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["bb26d27",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["bc3a37d",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["bd25889",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["bd6d621",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["bd905ab",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["bdougie",{"_index":820,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserNotification.html":{},"classes/PullRequestPageOptionsDto.html":{}}}],["bdougie'})@column({type",{"_index":1470,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["bdougie'})@isstring",{"_index":817,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{}}}],["bdougie'})@isstring()@isoptional",{"_index":2340,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{}}}],["be5fae7",{"_index":4131,"title":{},"body":{"changelog.html":{}}}],["bearer",{"_index":472,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["beautiful",{"_index":4238,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":4024,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["being",{"_index":4708,"title":{},"body":{"index.html":{}}}],["below",{"_index":542,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{},"index.html":{}}}],["beneficial",{"_index":4710,"title":{},"body":{"index.html":{}}}],["beta.1",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["beta.10",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["beta.11",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["beta.12",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["beta.13",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["beta.14",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["beta.15",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["beta.16",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["beta.17",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["beta.18",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["beta.19",{"_index":4419,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["beta.6",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["beta.7",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["beta.8",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["beta.9",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["beta.api.opensauced.pizza",{"_index":4678,"title":{},"body":{"index.html":{}}}],["better",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["bigint",{"_index":971,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbInsight.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbSubscription.html":{},"entities/DbUserNotification.html":{}}}],["billing_address_collection",{"_index":2826,"title":{},"body":{"injectables/StripeService.html":{}}}],["binaries",{"_index":4682,"title":{},"body":{"index.html":{}}}],["bio",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["blocking",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/EndorsementController.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["body.interests",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.timezone",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":772,"title":{},"body":{"classes/CreateInsightDto.html":{},"entities/DbInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbSubscription.html":{},"entities/DbUserHighlight.html":{},"guards/EndorsementTokenGuard.html":{},"classes/PageMetaDto.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"changelog.html":{}}}],["bootstrap",{"_index":4654,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boxes",{"_index":1864,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["branch",{"_index":992,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbPullRequest.html":{},"changelog.html":{},"index.html":{}}}],["break",{"_index":4738,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["brian",{"_index":1142,"title":{},"body":{"entities/DbInsightMember.html":{},"entities/DbUserHighlight.html":{}}}],["browse",{"_index":4828,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":4826,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":1859,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{},"changelog.html":{}}}],["bugs",{"_index":4845,"title":{},"body":{"properties.html":{}}}],["build",{"_index":3923,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["builder",{"_index":2048,"title":{},"body":{"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["building",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":4728,"title":{},"body":{"index.html":{}}}],["business",{"_index":4716,"title":{},"body":{"index.html":{}}}],["c",{"_index":4774,"title":{},"body":{"license.html":{}}}],["c000984",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["c013b70",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["c127cea",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["c24937f",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["c292277",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["c4addf6",{"_index":4223,"title":{},"body":{"changelog.html":{}}}],["c54dcd9",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["c6c07c6",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["c8115b6",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["c8dab92",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["ca",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"classes/SupabaseAuthDto.html":{}}}],["ca9a69c",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["cae5dbd",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["canaccess",{"_index":3497,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["canactivate",{"_index":1772,"title":{},"body":{"guards/EndorsementTokenGuard.html":{}}}],["canactivate(host",{"_index":1775,"title":{},"body":{"guards/EndorsementTokenGuard.html":{}}}],["cancel",{"_index":1399,"title":{},"body":{"entities/DbSubscription.html":{}}}],["cancel_at",{"_index":1387,"title":{},"body":{"entities/DbSubscription.html":{},"controllers/StripeWebhookController.html":{}}}],["cancel_at_period_end",{"_index":1388,"title":{},"body":{"entities/DbSubscription.html":{},"controllers/StripeWebhookController.html":{}}}],["cancel_url",{"_index":2834,"title":{},"body":{"injectables/StripeService.html":{}}}],["canceled",{"_index":1403,"title":{},"body":{"entities/DbSubscription.html":{}}}],["canceled_at",{"_index":1389,"title":{},"body":{"entities/DbSubscription.html":{},"controllers/StripeWebhookController.html":{}}}],["canupdate",{"_index":3502,"title":{},"body":{"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["canusermanageinsight",{"_index":2021,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["canusermanageinsight(userid",{"_index":2034,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["capabilities",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["capturing",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["card",{"_index":2825,"title":{},"body":{"injectables/StripeService.html":{}}}],["cascade",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":4709,"title":{},"body":{"index.html":{}}}],["catch",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/PullRequestDescriptionService.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserService.html":{}}}],["cb83f9d",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["cb9206d",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["cc46460",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["cd306f8",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["cd8f21d",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["cda2cb2",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["certificate",{"_index":4906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cfe2a69",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":1241,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["changed_files",{"_index":1209,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["changelog",{"_index":3807,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["channel",{"_index":4766,"title":{},"body":{"index.html":{}}}],["character",{"_index":963,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserNotification.html":{}}}],["characters",{"_index":544,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["charge",{"_index":4779,"title":{},"body":{"license.html":{}}}],["chatresponse",{"_index":442,"title":{"interfaces/ChatResponse.html":{}},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{},"coverage.html":{}}}],["check",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["check/insert",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{},"changelog.html":{}}}],["checkadduser",{"_index":3687,"title":{},"body":{"injectables/UserService.html":{}}}],["checkadduser(user",{"_index":3700,"title":{},"body":{"injectables/UserService.html":{}}}],["checkauthsession",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkin",{"_index":4746,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"changelog.html":{}}}],["checkout.session.completed",{"_index":2879,"title":{},"body":{"controllers/StripeWebhookController.html":{},"miscellaneous/variables.html":{}}}],["checkoutsession",{"_index":2938,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["checkoutsession.customer",{"_index":2943,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["checkoutsession.mode",{"_index":2940,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["checkoutsession.subscription",{"_index":2941,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["checkowner",{"_index":2037,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["checks",{"_index":3281,"title":{},"body":{"controllers/UserFollowsController.html":{},"changelog.html":{}}}],["chinese",{"_index":1816,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["choices",{"_index":447,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["chore",{"_index":1857,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["ci",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["cito",{"_index":4700,"title":{},"body":{"index.html":{}}}],["claim",{"_index":4818,"title":{},"body":{"license.html":{}}}],["class",{"_index":237,"title":{"classes/ContributionPageOptionsDto.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"classes/DatabaseLoggerMiddleware.html":{},"classes/DbPullRequestContributor.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoInfo.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["classes",{"_index":618,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"classes/DatabaseLoggerMiddleware.html":{},"classes/DbPullRequestContributor.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoInfo.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"overview.html":{}}}],["clc",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/HttpLoggerMiddleware.html":{}}}],["clc.green(`{msg",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.magentabright(message",{"_index":1981,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["clc.red(`+${string(time)}ms",{"_index":951,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["clc.red(message",{"_index":1978,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["clc.yellow(`+${string(date.now",{"_index":4892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clc.yellow(`[{context",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["clean",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["cli_split_kwargs",{"_index":1310,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["cli_split_kwargs'})@column('text",{"_index":1288,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["click",{"_index":4749,"title":{},"body":{"index.html":{}}}],["cliduration",{"_index":1968,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":4838,"title":{},"body":{"properties.html":{}}}],["close",{"_index":1244,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["closed",{"_index":1303,"title":{},"body":{"entities/DbPullRequest.html":{},"classes/PullRequestPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["closed'})@column('text",{"_index":1286,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["closed_at",{"_index":1210,"title":{},"body":{"entities/DbPullRequest.html":{},"classes/PullRequestPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["closes",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":428,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":430,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":431,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":429,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_contributionmodule",{"_index":605,"title":{},"body":{"modules/ContributionModule.html":{},"overview.html":{}}}],["cluster_contributionmodule_exports",{"_index":607,"title":{},"body":{"modules/ContributionModule.html":{},"overview.html":{}}}],["cluster_contributionmodule_imports",{"_index":608,"title":{},"body":{"modules/ContributionModule.html":{}}}],["cluster_contributionmodule_providers",{"_index":606,"title":{},"body":{"modules/ContributionModule.html":{},"overview.html":{}}}],["cluster_contributormodule",{"_index":727,"title":{},"body":{"modules/ContributorModule.html":{}}}],["cluster_contributormodule_imports",{"_index":728,"title":{},"body":{"modules/ContributorModule.html":{}}}],["cluster_customermodule",{"_index":884,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_customermodule_exports",{"_index":886,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_customermodule_providers",{"_index":885,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_emojimodule",{"_index":1600,"title":{},"body":{"modules/EmojiModule.html":{},"overview.html":{}}}],["cluster_emojimodule_providers",{"_index":1601,"title":{},"body":{"modules/EmojiModule.html":{},"overview.html":{}}}],["cluster_endorsementmodule",{"_index":1707,"title":{},"body":{"modules/EndorsementModule.html":{},"overview.html":{}}}],["cluster_endorsementmodule_exports",{"_index":1709,"title":{},"body":{"modules/EndorsementModule.html":{},"overview.html":{}}}],["cluster_endorsementmodule_imports",{"_index":1708,"title":{},"body":{"modules/EndorsementModule.html":{}}}],["cluster_endorsementmodule_providers",{"_index":1710,"title":{},"body":{"modules/EndorsementModule.html":{},"overview.html":{}}}],["cluster_highlightmodule",{"_index":1953,"title":{},"body":{"modules/HighlightModule.html":{}}}],["cluster_highlightmodule_imports",{"_index":1954,"title":{},"body":{"modules/HighlightModule.html":{}}}],["cluster_insightsmodule",{"_index":2097,"title":{},"body":{"modules/InsightsModule.html":{},"overview.html":{}}}],["cluster_insightsmodule_exports",{"_index":2100,"title":{},"body":{"modules/InsightsModule.html":{},"overview.html":{}}}],["cluster_insightsmodule_imports",{"_index":2099,"title":{},"body":{"modules/InsightsModule.html":{}}}],["cluster_insightsmodule_providers",{"_index":2098,"title":{},"body":{"modules/InsightsModule.html":{},"overview.html":{}}}],["cluster_logmodule",{"_index":2143,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_logmodule_exports",{"_index":2144,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_logmodule_providers",{"_index":2145,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_openaimodule",{"_index":2163,"title":{},"body":{"modules/OpenAiModule.html":{},"overview.html":{}}}],["cluster_openaimodule_exports",{"_index":2165,"title":{},"body":{"modules/OpenAiModule.html":{},"overview.html":{}}}],["cluster_openaimodule_providers",{"_index":2164,"title":{},"body":{"modules/OpenAiModule.html":{},"overview.html":{}}}],["cluster_pullrequestmodule",{"_index":2328,"title":{},"body":{"modules/PullRequestModule.html":{},"overview.html":{}}}],["cluster_pullrequestmodule_exports",{"_index":2329,"title":{},"body":{"modules/PullRequestModule.html":{},"overview.html":{}}}],["cluster_pullrequestmodule_imports",{"_index":2330,"title":{},"body":{"modules/PullRequestModule.html":{},"overview.html":{}}}],["cluster_pullrequestmodule_providers",{"_index":2331,"title":{},"body":{"modules/PullRequestModule.html":{},"overview.html":{}}}],["cluster_repofiltermodule",{"_index":2443,"title":{},"body":{"modules/RepoFilterModule.html":{},"overview.html":{}}}],["cluster_repofiltermodule_exports",{"_index":2445,"title":{},"body":{"modules/RepoFilterModule.html":{},"overview.html":{}}}],["cluster_repofiltermodule_providers",{"_index":2444,"title":{},"body":{"modules/RepoFilterModule.html":{},"overview.html":{}}}],["cluster_repomodule",{"_index":2490,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_exports",{"_index":2492,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_imports",{"_index":2491,"title":{},"body":{"modules/RepoModule.html":{}}}],["cluster_repomodule_providers",{"_index":2493,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_stargazemodule",{"_index":2777,"title":{},"body":{"modules/StargazeModule.html":{},"overview.html":{}}}],["cluster_stargazemodule_exports",{"_index":2780,"title":{},"body":{"modules/StargazeModule.html":{},"overview.html":{}}}],["cluster_stargazemodule_imports",{"_index":2779,"title":{},"body":{"modules/StargazeModule.html":{}}}],["cluster_stargazemodule_providers",{"_index":2778,"title":{},"body":{"modules/StargazeModule.html":{},"overview.html":{}}}],["cluster_starmodule",{"_index":2748,"title":{},"body":{"modules/StarModule.html":{},"overview.html":{}}}],["cluster_starmodule_exports",{"_index":2750,"title":{},"body":{"modules/StarModule.html":{},"overview.html":{}}}],["cluster_starmodule_imports",{"_index":2749,"title":{},"body":{"modules/StarModule.html":{}}}],["cluster_starmodule_providers",{"_index":2751,"title":{},"body":{"modules/StarModule.html":{},"overview.html":{}}}],["cluster_stripemodule",{"_index":2803,"title":{},"body":{"modules/StripeModule.html":{},"overview.html":{}}}],["cluster_stripemodule_exports",{"_index":2804,"title":{},"body":{"modules/StripeModule.html":{},"overview.html":{}}}],["cluster_stripemodule_providers",{"_index":2805,"title":{},"body":{"modules/StripeModule.html":{},"overview.html":{}}}],["cluster_stripesubscriptionmodule",{"_index":2838,"title":{},"body":{"modules/StripeSubscriptionModule.html":{},"overview.html":{}}}],["cluster_stripesubscriptionmodule_exports",{"_index":2840,"title":{},"body":{"modules/StripeSubscriptionModule.html":{},"overview.html":{}}}],["cluster_stripesubscriptionmodule_providers",{"_index":2839,"title":{},"body":{"modules/StripeSubscriptionModule.html":{},"overview.html":{}}}],["cluster_stripewebhookmodule",{"_index":2856,"title":{},"body":{"modules/StripeWebHookModule.html":{},"overview.html":{}}}],["cluster_stripewebhookmodule_exports",{"_index":2857,"title":{},"body":{"modules/StripeWebHookModule.html":{},"overview.html":{}}}],["cluster_stripewebhookmodule_imports",{"_index":2858,"title":{},"body":{"modules/StripeWebHookModule.html":{}}}],["cluster_submitmodule",{"_index":2944,"title":{},"body":{"modules/SubmitModule.html":{},"overview.html":{}}}],["cluster_submitmodule_exports",{"_index":2947,"title":{},"body":{"modules/SubmitModule.html":{},"overview.html":{}}}],["cluster_submitmodule_imports",{"_index":2946,"title":{},"body":{"modules/SubmitModule.html":{}}}],["cluster_submitmodule_providers",{"_index":2945,"title":{},"body":{"modules/SubmitModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":3570,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":3572,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":3573,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":3571,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_userreposmodule",{"_index":3662,"title":{},"body":{"modules/UserReposModule.html":{},"overview.html":{}}}],["cluster_userreposmodule_exports",{"_index":3663,"title":{},"body":{"modules/UserReposModule.html":{},"overview.html":{}}}],["cluster_userreposmodule_providers",{"_index":3664,"title":{},"body":{"modules/UserReposModule.html":{},"overview.html":{}}}],["cluster_votemodule",{"_index":3778,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["cluster_votemodule_exports",{"_index":3780,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["cluster_votemodule_imports",{"_index":3779,"title":{},"body":{"modules/VoteModule.html":{}}}],["cluster_votemodule_providers",{"_index":3781,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["coalesce(count(\"open_pull_requests\".\"id",{"_index":2561,"title":{},"body":{"injectables/RepoService.html":{}}}],["coalesce(count(\"pull_requests\".\"id",{"_index":3741,"title":{},"body":{"injectables/UserService.html":{}}}],["coalesce(count(\"user_follows\".\"id",{"_index":3736,"title":{},"body":{"injectables/UserService.html":{}}}],["coalesce(count(\"user_highlights\".\"id",{"_index":3732,"title":{},"body":{"injectables/UserService.html":{}}}],["coalesce(count(\"user_notifications\".\"id",{"_index":3724,"title":{},"body":{"injectables/UserService.html":{}}}],["code",{"_index":512,"title":{},"body":{"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"entities/DbInsight.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"injectables/PullRequestDescriptionService.html":{},"modules/PullRequestModule.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["code'})@apibearerauth()@useguards(supabaseguard)@apibadrequestresponse({description",{"_index":503,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{}}}],["code'})@column({type",{"_index":1109,"title":{},"body":{"entities/DbInsight.html":{}}}],["codeblock",{"_index":586,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{}}}],["codeexplanationcontroller",{"_index":490,"title":{"controllers/CodeExplanationController.html":{}},"body":{"controllers/CodeExplanationController.html":{},"modules/PullRequestModule.html":{},"coverage.html":{}}}],["codeexplanationservice",{"_index":514,"title":{"injectables/CodeExplanationService.html":{}},"body":{"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"modules/PullRequestModule.html":{},"coverage.html":{},"overview.html":{}}}],["codename",{"_index":4864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coderefactorsuggestioncontroller",{"_index":556,"title":{"controllers/CodeRefactorSuggestionController.html":{}},"body":{"controllers/CodeRefactorSuggestionController.html":{},"modules/PullRequestModule.html":{},"coverage.html":{}}}],["coderefactorsuggestionservice",{"_index":566,"title":{"injectables/CodeRefactorSuggestionService.html":{}},"body":{"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"modules/PullRequestModule.html":{},"coverage.html":{},"overview.html":{}}}],["codes",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["codetestsuggestioncontroller",{"_index":590,"title":{"controllers/CodeTestSuggestionController.html":{}},"body":{"controllers/CodeTestSuggestionController.html":{},"modules/PullRequestModule.html":{},"coverage.html":{}}}],["codetestsuggestionservice",{"_index":598,"title":{"injectables/CodeTestSuggestionService.html":{}},"body":{"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/PullRequestModule.html":{},"coverage.html":{},"overview.html":{}}}],["collaborate",{"_index":813,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{}}}],["collaborating",{"_index":1443,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration",{"_index":811,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{},"entities/DbUserCollaboration.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"controllers/UserCollaborationController.html":{},"changelog.html":{}}}],["collaboration'})@apibadrequestresponse({description",{"_index":3120,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["collaboration'})@apibearerauth()@useguards(supabaseguard)@apiokresponse({type",{"_index":3135,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["collaboration.controller",{"_index":3580,"title":{},"body":{"modules/UserModule.html":{}}}],["collaboration.controller.ts",{"_index":3110,"title":{},"body":{"controllers/UserCollaborationController.html":{},"coverage.html":{}}}],["collaboration.controller.ts:110",{"_index":3136,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["collaboration.controller.ts:137",{"_index":3132,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["collaboration.controller.ts:55",{"_index":3129,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["collaboration.controller.ts:74",{"_index":3125,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["collaboration.dto",{"_index":3139,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["collaboration.dto.ts",{"_index":810,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"coverage.html":{}}}],["collaboration.dto.ts:11",{"_index":818,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{}}}],["collaboration.dto.ts:12",{"_index":3060,"title":{},"body":{"classes/UpdateUserCollaborationDto.html":{}}}],["collaboration.dto.ts:21",{"_index":816,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{}}}],["collaboration.entity",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"modules/UserModule.html":{}}}],["collaboration.entity.ts",{"_index":1431,"title":{},"body":{"entities/DbUserCollaboration.html":{},"coverage.html":{}}}],["collaboration.entity.ts:101",{"_index":1451,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration.entity.ts:111",{"_index":1439,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration.entity.ts:121",{"_index":1446,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration.entity.ts:131",{"_index":1437,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration.entity.ts:29",{"_index":1440,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration.entity.ts:36",{"_index":1455,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration.entity.ts:43",{"_index":1449,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration.entity.ts:51",{"_index":1453,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration.entity.ts:59",{"_index":1448,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration.entity.ts:70",{"_index":1445,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration.entity.ts:81",{"_index":1450,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration.entity.ts:91",{"_index":1438,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaboration.service",{"_index":3138,"title":{},"body":{"controllers/UserCollaborationController.html":{},"modules/UserModule.html":{}}}],["collaboration.service.ts",{"_index":3157,"title":{},"body":{"injectables/UserCollaborationService.html":{},"coverage.html":{}}}],["collaboration.service.ts:12",{"_index":3160,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["collaboration.service.ts:18",{"_index":3164,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["collaboration.service.ts:24",{"_index":3166,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["collaboration.service.ts:38",{"_index":3163,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["collaboration.service.ts:42",{"_index":3169,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["collaboration.service.ts:46",{"_index":3168,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["collaboration.service.ts:50",{"_index":3165,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["collaboration.user_id",{"_index":3149,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["collaboration_emailed_at",{"_index":1432,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["collaborations",{"_index":3127,"title":{},"body":{"controllers/UserCollaborationController.html":{},"changelog.html":{}}}],["collection",{"_index":2196,"title":{},"body":{"classes/PageMetaDto.html":{},"changelog.html":{}}}],["color",{"_index":1264,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["colorize",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["colors.util",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/HttpLoggerMiddleware.html":{}}}],["column",{"_index":1009,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["column(\"bigint",{"_index":1490,"title":{},"body":{"entities/DbUserHighlight.html":{},"entities/DbUserRepo.html":{}}}],["column(\"boolean",{"_index":1305,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["column(\"integer",{"_index":1302,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["column(\"text",{"_index":1304,"title":{},"body":{"entities/DbPullRequest.html":{},"entities/DbUserHighlight.html":{}}}],["column({type",{"_index":1269,"title":{},"body":{"entities/DbPullRequest.html":{},"entities/DbUserHighlightReaction.html":{}}}],["columns",{"_index":1513,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["come",{"_index":812,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{}}}],["command",{"_index":4705,"title":{},"body":{"index.html":{}}}],["comment",{"_index":751,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"entities/DbEndorsement.html":{}}}],["comments",{"_index":1211,"title":{},"body":{"entities/DbPullRequest.html":{},"changelog.html":{}}}],["commit",{"_index":1842,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{},"changelog.html":{}}}],["commitmessages",{"_index":1839,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["committing",{"_index":4741,"title":{},"body":{"index.html":{}}}],["common",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["common/constants/order",{"_index":679,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{}}}],["common/decorators/api",{"_index":715,"title":{},"body":{"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HighlightController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["common/dtos/filter",{"_index":2252,"title":{},"body":{"controllers/PullRequestController.html":{},"injectables/PullRequestInsightsService.html":{}}}],["common/dtos/page",{"_index":659,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"classes/DbUserHighlightReactionResponse.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightsService.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserRepoOptionsDto.html":{},"injectables/UserReposService.html":{}}}],["common/dtos/page.dto",{"_index":678,"title":{},"body":{"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"controllers/HighlightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"controllers/PullRequestController.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{}}}],["common/filters/repo",{"_index":2307,"title":{},"body":{"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"injectables/PullRequestService.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"modules/UserModule.html":{}}}],["common/middleware/database",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["common/middleware/http",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["community",{"_index":4759,"title":{},"body":{"index.html":{}}}],["company",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["complete",{"_index":4747,"title":{},"body":{"index.html":{}}}],["completely",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["completing",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["completion",{"_index":547,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["completionsurl",{"_index":4938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complexity",{"_index":4839,"title":{},"body":{"properties.html":{}}}],["component",{"_index":4593,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["computed",{"_index":1183,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["concurrency",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":4798,"title":{},"body":{"license.html":{}}}],["config",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"api.logging",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/LogModule.html":{}}}],["configmodule.forroot",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ChatResponse.html":{},"injectables/CustomLogger.html":{},"guards/EndorsementTokenGuard.html":{},"controllers/HealthController.html":{},"injectables/OpenAiService.html":{},"injectables/StripeService.html":{},"controllers/StripeWebhookController.html":{}}}],["configservice.get(\"db",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["configure",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmation",{"_index":2976,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["confirmed_at",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"injectables/UserService.html":{}}}],["conflict",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["conflictexception",{"_index":2765,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserFollowService.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"injectables/VoteService.html":{}}}],["conflictexception(\"the",{"_index":3505,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["conflictexception(\"you",{"_index":2772,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/UserFollowService.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"injectables/VoteService.html":{}}}],["connect",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["connected_at",{"_index":3752,"title":{},"body":{"injectables/UserService.html":{},"changelog.html":{}}}],["connection",{"_index":1571,"title":{},"body":{"entities/DbUserTopRepo.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["connections",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["connector",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["console.error(\"openai",{"_index":554,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["console.log",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["console.logs",{"_index":4247,"title":{},"body":{"changelog.html":{}}}],["consolelogger",{"_index":852,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["consoleloggeroptions",{"_index":859,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["const",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/ContributionService.html":{},"injectables/CustomerService.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["constants/order",{"_index":2223,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["constructor",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/ContributionService.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"controllers/HealthController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/PullRequestController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseStrategy.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["constructor(configservice",{"_index":1773,"title":{},"body":{"guards/EndorsementTokenGuard.html":{},"injectables/OpenAiService.html":{},"injectables/StripeService.html":{}}}],["constructor(context",{"_index":858,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["constructor(contributionrepository",{"_index":668,"title":{},"body":{"injectables/ContributionService.html":{}}}],["constructor(customerrepository",{"_index":896,"title":{},"body":{"injectables/CustomerService.html":{}}}],["constructor(data",{"_index":2172,"title":{},"body":{"classes/PageDto.html":{}}}],["constructor(emojirepository",{"_index":1606,"title":{},"body":{"injectables/EmojiService.html":{}}}],["constructor(endorsementrepository",{"_index":1720,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["constructor(insightmemberrepository",{"_index":2025,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["constructor(insightreporepository",{"_index":2085,"title":{},"body":{"injectables/InsightRepoService.html":{}}}],["constructor(insightrepository",{"_index":2114,"title":{},"body":{"injectables/InsightsService.html":{}}}],["constructor(logsrepository",{"_index":2152,"title":{},"body":{"injectables/LogService.html":{}}}],["constructor(name",{"_index":924,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["constructor(openaiservice",{"_index":527,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["constructor(prinsightrepository",{"_index":2296,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["constructor(private",{"_index":456,"title":{},"body":{"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"guards/EndorsementTokenGuard.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StripeService.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}}}],["constructor(pullrequestrepository",{"_index":2357,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["constructor(reporepository",{"_index":2517,"title":{},"body":{"injectables/RepoService.html":{}}}],["constructor(repostargazerepository",{"_index":2786,"title":{},"body":{"injectables/StargazeService.html":{}}}],["constructor(repostarrepository",{"_index":2757,"title":{},"body":{"injectables/StarService.html":{}}}],["constructor(reposubmitrepository",{"_index":2953,"title":{},"body":{"injectables/SubmitService.html":{}}}],["constructor(repovoterepository",{"_index":3787,"title":{},"body":{"injectables/VoteService.html":{}}}],["constructor(subscriptionrepository",{"_index":2847,"title":{},"body":{"injectables/StripeSubscriptionService.html":{}}}],["constructor(undefined",{"_index":2190,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["constructor(usercollaborationrepository",{"_index":3159,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["constructor(userfollowrepository",{"_index":3240,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["constructor(userhighlightrepository",{"_index":3379,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["constructor(usernotificationrepository",{"_index":3597,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["constructor(userreporepository",{"_index":3671,"title":{},"body":{"injectables/UserReposService.html":{}}}],["constructor(userrepository",{"_index":3696,"title":{},"body":{"injectables/UserService.html":{}}}],["consumer",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(httploggermiddleware).forroutes(`v1",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["contact",{"_index":4689,"title":{},"body":{"index.html":{}}}],["contain",{"_index":3084,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["container",{"_index":4449,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["content",{"_index":454,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/OpenAiService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["contents",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateLogDto.html":{},"injectables/CustomLogger.html":{},"entities/DbEndorsement.html":{},"entities/DbLog.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":4958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continuous",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":4821,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":4754,"title":{},"body":{"index.html":{}}}],["contributed",{"_index":969,"title":{},"body":{"entities/DbContribution.html":{}}}],["contributing",{"_index":4752,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":976,"title":{},"body":{"entities/DbContribution.html":{},"controllers/RepoContributionsController.html":{},"changelog.html":{},"index.html":{}}}],["contribution.entity",{"_index":612,"title":{},"body":{"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"controllers/RepoContributionsController.html":{}}}],["contribution.service",{"_index":613,"title":{},"body":{"modules/ContributionModule.html":{},"controllers/RepoContributionsController.html":{}}}],["contribution/contribution.entity",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["contribution/contribution.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["contributionmodule",{"_index":8,"title":{"modules/ContributionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"modules.html":{},"overview.html":{}}}],["contributionorderfieldsenum",{"_index":628,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"miscellaneous/enumerations.html":{}}}],["contributionorderfieldsenum.count",{"_index":631,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{}}}],["contributionpageoptionsdto",{"_index":617,"title":{"classes/ContributionPageOptionsDto.html":{}},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/RepoContributionsController.html":{},"coverage.html":{}}}],["contributionrepository",{"_index":671,"title":{},"body":{"injectables/ContributionService.html":{}}}],["contributions",{"_index":1022,"title":{},"body":{"entities/DbContribution.html":{},"controllers/RepoContributionsController.html":{},"injectables/RepoService.html":{},"changelog.html":{}}}],["contributions.controller",{"_index":615,"title":{},"body":{"modules/ContributionModule.html":{}}}],["contributions.controller.ts",{"_index":2392,"title":{},"body":{"controllers/RepoContributionsController.html":{},"coverage.html":{}}}],["contributions.controller.ts:23",{"_index":2403,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["contributions.controller.ts:40",{"_index":2400,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["contributions.repo_id",{"_index":2549,"title":{},"body":{"injectables/RepoService.html":{}}}],["contributionscount",{"_index":2504,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["contributionservice",{"_index":609,"title":{"injectables/ContributionService.html":{}},"body":{"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"controllers/RepoContributionsController.html":{},"coverage.html":{},"overview.html":{}}}],["contributor",{"_index":664,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"controllers/ContributorController.html":{},"entities/DbContribution.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["contributor.controller",{"_index":730,"title":{},"body":{"modules/ContributorModule.html":{}}}],["contributor.dto",{"_index":721,"title":{},"body":{"controllers/ContributorController.html":{},"injectables/PullRequestService.html":{}}}],["contributor.dto.ts",{"_index":1315,"title":{},"body":{"classes/DbPullRequestContributor.html":{},"coverage.html":{}}}],["contributor.dto.ts:14",{"_index":1317,"title":{},"body":{"classes/DbPullRequestContributor.html":{}}}],["contributor.dto.ts:8",{"_index":1316,"title":{},"body":{"classes/DbPullRequestContributor.html":{}}}],["contributor.tolowercase",{"_index":2375,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["contributor/contributor.module",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["contributorcontroller",{"_index":699,"title":{"controllers/ContributorController.html":{}},"body":{"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"coverage.html":{}}}],["contributormodule",{"_index":9,"title":{"modules/ContributorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContributorModule.html":{},"modules.html":{},"overview.html":{}}}],["contributors",{"_index":701,"title":{},"body":{"controllers/ContributorController.html":{},"classes/InsightOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["controller",{"_index":246,"title":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{},"changelog.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"contributors",{"_index":722,"title":{},"body":{"controllers/ContributorController.html":{}}}],["controller(\"emojis",{"_index":1595,"title":{},"body":{"controllers/EmojiController.html":{}}}],["controller(\"endorsements",{"_index":1672,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["controller(\"health",{"_index":1882,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"highlights",{"_index":1940,"title":{},"body":{"controllers/HighlightController.html":{}}}],["controller(\"insights",{"_index":2008,"title":{},"body":{"controllers/InsightController.html":{}}}],["controller(\"prs",{"_index":516,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{}}}],["controller(\"repos",{"_index":2406,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["controller(\"stripe",{"_index":2884,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["controller(\"user/collaborations",{"_index":3140,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["controller(\"user/endorsements",{"_index":3228,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["controller(\"user/highlights",{"_index":3347,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["controller(\"user/insights",{"_index":3493,"title":{},"body":{"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["controller(\"user/notifications",{"_index":3590,"title":{},"body":{"controllers/UserNotificationController.html":{}}}],["controller(\"user/recommendations",{"_index":3650,"title":{},"body":{"controllers/UserRecommendationController.html":{}}}],["controller(\"users",{"_index":3206,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserFollowsController.html":{}}}],["controllers",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"modules/ContributionModule.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"controllers/InsightController.html":{},"modules/InsightsModule.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"modules/PullRequestModule.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"modules/SubmitModule.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{},"modules/VoteModule.html":{},"overview.html":{}}}],["conversation",{"_index":4761,"title":{},"body":{"index.html":{}}}],["conversion",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["cool",{"_index":814,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{},"entities/DbUserCollaboration.html":{}}}],["copies",{"_index":4793,"title":{},"body":{"license.html":{}}}],["copy",{"_index":4505,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["copyright",{"_index":4773,"title":{},"body":{"license.html":{}}}],["corners",{"_index":1863,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["correct",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["correctly",{"_index":4308,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["count",{"_index":662,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"entities/DbPRInsight.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["counting",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["countqueryresult",{"_index":3434,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["counts",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["couple",{"_index":4743,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":4625,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cr.repo_id",{"_index":3562,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["create",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/EndorsementService.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["create(createendorsementdto",{"_index":1724,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["createcheckoutsession",{"_index":2810,"title":{},"body":{"injectables/StripeService.html":{}}}],["createcheckoutsession(customer",{"_index":2814,"title":{},"body":{"injectables/StripeService.html":{}}}],["created",{"_index":3222,"title":{},"body":{"controllers/UserEndorsementController.html":{},"changelog.html":{}}}],["created_at",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"controllers/StripeWebhookController.html":{},"classes/SupabaseAuthDto.html":{},"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["createdatecolumn",{"_index":1015,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["createendorsement",{"_index":1617,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["createendorsement(_token",{"_index":1625,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["createendorsementdto",{"_index":732,"title":{"classes/CreateEndorsementDto.html":{}},"body":{"classes/CreateEndorsementDto.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"classes/UpdateEndorsementDto.html":{},"coverage.html":{}}}],["createhighlightdto",{"_index":3319,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["createinsightdto",{"_index":767,"title":{"classes/CreateInsightDto.html":{}},"body":{"classes/CreateInsightDto.html":{},"classes/UpdateInsightDto.html":{},"controllers/UserInsightsController.html":{},"coverage.html":{}}}],["createinsightdto.is_public",{"_index":3542,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["createinsightdto.name",{"_index":3538,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["createinsightdto.repos.foreach(async",{"_index":3543,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["createinsightdto:14",{"_index":3049,"title":{},"body":{"classes/UpdateInsightDto.html":{}}}],["createinsightdto:22",{"_index":3048,"title":{},"body":{"classes/UpdateInsightDto.html":{}}}],["createinsightdto:32",{"_index":3050,"title":{},"body":{"classes/UpdateInsightDto.html":{}}}],["createinsightmemberdto",{"_index":793,"title":{"classes/CreateInsightMemberDto.html":{}},"body":{"classes/CreateInsightMemberDto.html":{},"controllers/UserInsightMemberController.html":{},"coverage.html":{}}}],["createinsightmemberdto.email",{"_index":3512,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["createlog",{"_index":2151,"title":{},"body":{"injectables/LogService.html":{}}}],["createlog(log",{"_index":2155,"title":{},"body":{"injectables/LogService.html":{}}}],["createlogdto",{"_index":801,"title":{"classes/CreateLogDto.html":{}},"body":{"classes/CreateLogDto.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["createparamdecorator((_data",{"_index":4957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder",{"_index":3429,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["createquerybuilder(\"repo",{"_index":2544,"title":{},"body":{"injectables/RepoService.html":{}}}],["createquerybuilder(\"repos",{"_index":2560,"title":{},"body":{"injectables/RepoService.html":{}}}],["createquerybuilder(\"user_highlight_reactions",{"_index":3457,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["creates",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EndorsementController.html":{}}}],["createusercollaborationdto",{"_index":808,"title":{"classes/CreateUserCollaborationDto.html":{}},"body":{"classes/CreateUserCollaborationDto.html":{},"controllers/UserCollaborationController.html":{},"coverage.html":{}}}],["createuserhighlightdto",{"_index":824,"title":{"classes/CreateUserHighlightDto.html":{}},"body":{"classes/CreateUserHighlightDto.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"coverage.html":{}}}],["creating",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":977,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{}}}],["creator",{"_index":742,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"entities/DbEndorsement.html":{}}}],["creator_user_id",{"_index":735,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"entities/DbEndorsement.html":{}}}],["ctx",{"_index":1780,"title":{},"body":{"guards/EndorsementTokenGuard.html":{}}}],["ctx.getrequest",{"_index":1782,"title":{},"body":{"guards/EndorsementTokenGuard.html":{}}}],["current",{"_index":1406,"title":{},"body":{"entities/DbSubscription.html":{},"classes/PageMetaDto.html":{},"controllers/UserInsightsController.html":{},"changelog.html":{}}}],["current_period_end_at",{"_index":1390,"title":{},"body":{"entities/DbSubscription.html":{},"controllers/StripeWebhookController.html":{}}}],["current_period_start_at",{"_index":1391,"title":{},"body":{"entities/DbSubscription.html":{},"controllers/StripeWebhookController.html":{}}}],["currentrepoids",{"_index":3560,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["currentrepoids.find((id",{"_index":3565,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["currentrepos",{"_index":3548,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["currentrepos.filter",{"_index":3552,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["currentrepos.map((cr",{"_index":3561,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["custom",{"_index":2148,"title":{},"body":{"modules/LogModule.html":{}}}],["customer",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbCustomer.html":{},"injectables/StripeService.html":{}}}],["customer.entity",{"_index":888,"title":{},"body":{"modules/CustomerModule.html":{},"injectables/CustomerService.html":{}}}],["customer.service",{"_index":889,"title":{},"body":{"modules/CustomerModule.html":{}}}],["customer.stripe_customer_id",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{}}}],["customer.subscription.created",{"_index":2880,"title":{},"body":{"controllers/StripeWebhookController.html":{},"miscellaneous/variables.html":{}}}],["customer.subscription.deleted",{"_index":2882,"title":{},"body":{"controllers/StripeWebhookController.html":{},"miscellaneous/variables.html":{}}}],["customer.subscription.updated",{"_index":2881,"title":{},"body":{"controllers/StripeWebhookController.html":{},"miscellaneous/variables.html":{}}}],["customer/customer.entity",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["customer/customer.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/StripeWebHookModule.html":{}}}],["customer/customer.service",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"controllers/StripeWebhookController.html":{}}}],["customerdata",{"_index":2886,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["customerid",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{},"controllers/StripeWebhookController.html":{}}}],["customermodule",{"_index":10,"title":{"modules/CustomerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomerModule.html":{},"modules/StripeWebHookModule.html":{},"modules.html":{},"overview.html":{}}}],["customerrepository",{"_index":898,"title":{},"body":{"injectables/CustomerService.html":{}}}],["customers",{"_index":1036,"title":{},"body":{"entities/DbCustomer.html":{}}}],["customerservice",{"_index":340,"title":{"injectables/CustomerService.html":{}},"body":{"controllers/AuthController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/StripeWebhookController.html":{},"coverage.html":{},"overview.html":{}}}],["customlogger",{"_index":849,"title":{"injectables/CustomLogger.html":{}},"body":{"injectables/CustomLogger.html":{},"modules/LogModule.html":{},"coverage.html":{},"overview.html":{}}}],["customprops",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["cypress",{"_index":4725,"title":{},"body":{"index.html":{}}}],["d051987",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["d08173f",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["d08b3ff",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["d0d5ca5",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["d2745ff",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["d315ea4",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["d3afb4b",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["d3cb75a",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["d50b86f",{"_index":4172,"title":{},"body":{"changelog.html":{}}}],["d77ea52",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":4819,"title":{},"body":{"license.html":{}}}],["data",{"_index":485,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"injectables/RepoFilterService.html":{},"injectables/UserHighlightsService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["data.choices[0]?.message.content",{"_index":487,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["database",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["databaseloggermiddleware",{"_index":105,"title":{"classes/DatabaseLoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"classes/DatabaseLoggerMiddleware.html":{},"coverage.html":{}}}],["databaseloggermiddleware(\"lg",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["databaseloggermiddleware(\"os",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["datasource",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":833,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["date(\"1970",{"_index":4954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(confirmed_at",{"_index":3758,"title":{},"body":{"injectables/UserService.html":{}}}],["date(github.created_at",{"_index":3755,"title":{},"body":{"injectables/UserService.html":{}}}],["date(github.updated_at",{"_index":3756,"title":{},"body":{"injectables/UserService.html":{}}}],["date(highlight.shipped_at",{"_index":3444,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["date(updatehighlightdto.shipped_at",{"_index":3355,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["date.now",{"_index":1972,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["day",{"_index":1175,"title":{},"body":{"entities/DbPRInsight.html":{},"injectables/PullRequestInsightsService.html":{},"changelog.html":{}}}],["days",{"_index":651,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbPRInsight.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"injectables/PullRequestInsightsService.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"injectables/RepoFilterService.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"classes/UserRepoOptionsDto.html":{},"injectables/UserService.html":{}}}],["db",{"_index":1541,"title":{},"body":{"entities/DbUserNotification.html":{},"changelog.html":{}}}],["dbapiconfig",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbc66f3",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["dbcontribution",{"_index":85,"title":{"entities/DbContribution.html":{}},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"controllers/RepoContributionsController.html":{},"injectables/RepoService.html":{},"changelog.html":{},"coverage.html":{}}}],["dbcontribution})@apinotfoundresponse({description",{"_index":2399,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["dbcustomer",{"_index":117,"title":{"entities/DbCustomer.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"entities/DbCustomer.html":{},"coverage.html":{}}}],["dbemoji",{"_index":143,"title":{"entities/DbEmoji.html":{}},"body":{"modules/AppModule.html":{},"entities/DbEmoji.html":{},"entities/DbUserHighlightReaction.html":{},"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"coverage.html":{}}}],["dbemoji})@apinotfoundresponse({description",{"_index":1589,"title":{},"body":{"controllers/EmojiController.html":{}}}],["dbendorsement",{"_index":158,"title":{"entities/DbEndorsement.html":{}},"body":{"modules/AppModule.html":{},"entities/DbEndorsement.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"controllers/UserEndorsementController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["dbendorsement})@apibody({type",{"_index":1628,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["dbendorsement})@apinotfoundresponse({description",{"_index":1661,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["dbinsight",{"_index":108,"title":{"entities/DbInsight.html":{}},"body":{"modules/AppModule.html":{},"entities/DbInsight.html":{},"entities/DbInsightRepo.html":{},"controllers/InsightController.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"coverage.html":{}}}],["dbinsightmember",{"_index":141,"title":{"entities/DbInsightMember.html":{}},"body":{"modules/AppModule.html":{},"entities/DbInsightMember.html":{},"injectables/InsightMemberService.html":{},"modules/InsightsModule.html":{},"controllers/UserInsightMemberController.html":{},"coverage.html":{}}}],["dbinsightmember})@apinotfoundresponse({description",{"_index":3474,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["dbinsightrepo",{"_index":110,"title":{"entities/DbInsightRepo.html":{}},"body":{"modules/AppModule.html":{},"entities/DbInsight.html":{},"entities/DbInsightRepo.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"coverage.html":{}}}],["dbinsight})@apinotfoundresponse({description",{"_index":1989,"title":{},"body":{"controllers/InsightController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["dblog",{"_index":127,"title":{"entities/DbLog.html":{}},"body":{"modules/AppModule.html":{},"entities/DbLog.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["dbloggingconfig",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbprinsight",{"_index":148,"title":{"entities/DbPRInsight.html":{}},"body":{"modules/AppModule.html":{},"entities/DbPRInsight.html":{},"controllers/PullRequestController.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"coverage.html":{}}}],["dbpullrequest",{"_index":132,"title":{"entities/DbPullRequest.html":{}},"body":{"modules/AppModule.html":{},"modules/ContributorModule.html":{},"entities/DbPullRequest.html":{},"controllers/PullRequestController.html":{},"modules/PullRequestModule.html":{},"injectables/PullRequestService.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["dbpullrequestcontributor",{"_index":711,"title":{"classes/DbPullRequestContributor.html":{}},"body":{"controllers/ContributorController.html":{},"classes/DbPullRequestContributor.html":{},"injectables/PullRequestService.html":{},"coverage.html":{}}}],["dbpullrequest})@apinotfoundresponse({description",{"_index":3198,"title":{},"body":{"controllers/UserController.html":{}}}],["dbrepo",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"entities/DbContribution.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserTopRepo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"modules/VoteModule.html":{},"changelog.html":{},"coverage.html":{}}}],["dbrepotouserstargazers",{"_index":93,"title":{"entities/DbRepoToUserStargazers.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepoToUserStargazers.html":{},"injectables/RepoService.html":{},"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"changelog.html":{},"coverage.html":{}}}],["dbrepotouserstargazers})@apinotfoundresponse({description",{"_index":2648,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["dbrepotouserstars",{"_index":89,"title":{"entities/DbRepoToUserStars.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepoToUserStars.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"changelog.html":{},"coverage.html":{}}}],["dbrepotouserstars})@apinotfoundresponse({description",{"_index":2604,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["dbrepotousersubmissions",{"_index":91,"title":{"entities/DbRepoToUserSubmissions.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepoToUserSubmissions.html":{},"injectables/RepoService.html":{},"controllers/RepoSubmitController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"changelog.html":{},"coverage.html":{}}}],["dbrepotousersubmissions})@apinotfoundresponse({description",{"_index":2686,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["dbrepotouservotes",{"_index":87,"title":{"entities/DbRepoToUserVotes.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepoToUserVotes.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{}}}],["dbrepotouservotes})@apinotfoundresponse({description",{"_index":2722,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["dbrepo})@apinotfoundresponse({description",{"_index":2426,"title":{},"body":{"controllers/RepoController.html":{},"controllers/UserController.html":{}}}],["dbsubscription",{"_index":125,"title":{"entities/DbSubscription.html":{}},"body":{"modules/AppModule.html":{},"entities/DbSubscription.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"coverage.html":{}}}],["dbuser",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/DbInsight.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserTopRepo.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{}}}],["dbusercollaboration",{"_index":155,"title":{"entities/DbUserCollaboration.html":{}},"body":{"modules/AppModule.html":{},"entities/DbUserCollaboration.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["dbusercollaboration})@apinotfoundresponse({description",{"_index":3118,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["dbuserhighlight",{"_index":135,"title":{"entities/DbUserHighlight.html":{}},"body":{"modules/AppModule.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"controllers/UserController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["dbuserhighlight.create(await",{"_index":3436,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["dbuserhighlightreaction",{"_index":145,"title":{"entities/DbUserHighlightReaction.html":{}},"body":{"modules/AppModule.html":{},"entities/DbEmoji.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/HighlightOptionsDto.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["dbuserhighlightreactionresponse",{"_index":1517,"title":{"classes/DbUserHighlightReactionResponse.html":{}},"body":{"classes/DbUserHighlightReactionResponse.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"coverage.html":{}}}],["dbuserhighlightreactionresponse})@apinotfoundresponse({description",{"_index":1931,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserHighlightsController.html":{}}}],["dbuserhighlightreaction})@apinotfoundresponse({description",{"_index":3311,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["dbuserhighlightrepo",{"_index":1523,"title":{"classes/DbUserHighlightRepo.html":{}},"body":{"classes/DbUserHighlightRepo.html":{},"controllers/HighlightController.html":{},"controllers/UserHighlightsController.html":{},"coverage.html":{}}}],["dbuserhighlightrepo})@apibadrequestresponse({description",{"_index":3333,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["dbuserhighlight})@apinotfoundresponse({description",{"_index":3189,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserHighlightsController.html":{}}}],["dbusernotification",{"_index":153,"title":{"entities/DbUserNotification.html":{}},"body":{"modules/AppModule.html":{},"entities/DbUserNotification.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"coverage.html":{}}}],["dbusernotification})@apinotfoundresponse({description",{"_index":3588,"title":{},"body":{"controllers/UserNotificationController.html":{}}}],["dbuserrepo",{"_index":116,"title":{"entities/DbUserRepo.html":{}},"body":{"modules/AppModule.html":{},"entities/DbUserRepo.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"coverage.html":{}}}],["dbusertoprepo",{"_index":151,"title":{"entities/DbUserTopRepo.html":{}},"body":{"modules/AppModule.html":{},"entities/DbUserTopRepo.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["dbusertouserfollows",{"_index":139,"title":{"entities/DbUserToUserFollows.html":{}},"body":{"modules/AppModule.html":{},"entities/DbUserToUserFollows.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["dbusertouserfollows})@apinotfoundresponse({description",{"_index":3287,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["dbuser})@apinotfoundresponse({description",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["dd",{"_index":2319,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["dd5e668",{"_index":4432,"title":{},"body":{"changelog.html":{}}}],["de371dc",{"_index":4264,"title":{},"body":{"changelog.html":{}}}],["de9cea0",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":4783,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":4825,"title":{},"body":{"license.html":{}}}],["debug",{"_index":854,"title":{},"body":{"injectables/CustomLogger.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["debug(message",{"_index":862,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["decodeuricomponent(options.repo.tolowercase",{"_index":2462,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["decodeuricomponent(pageoptionsdto.repo",{"_index":3421,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["decorator",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"classes/ContributionPageOptionsDto.html":{},"controllers/ContributorController.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"controllers/InsightController.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"classes/PullRequestPageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoInfo.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/StripeWebhookController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"changelog.html":{}}}],["default",{"_index":629,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/CreateEndorsementDto.html":{},"injectables/CustomLogger.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"injectables/PullRequestInsightsService.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/RepoFilterService.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"classes/UserRepoOptionsDto.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default_payment_method",{"_index":2891,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["defaultdb",{"_index":4905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["delete",{"_index":1664,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/InsightController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"changelog.html":{}}}],["delete(\"/:id",{"_index":2013,"title":{},"body":{"controllers/InsightController.html":{},"controllers/UserHighlightsController.html":{}}}],["delete(\"/:id/reactions/:emojiid",{"_index":3365,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["delete(\"/:id/star",{"_index":2633,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["delete(\"/:id/stargaze",{"_index":2671,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["delete(\"/:id/submit",{"_index":2708,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["delete(\"/:id/vote",{"_index":2744,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete(\"/:owner/:repo/star",{"_index":2636,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["delete(\"/:owner/:repo/stargaze",{"_index":2674,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["delete(\"/:owner/:repo/submit",{"_index":2710,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["delete(\"/:owner/:repo/vote",{"_index":2747,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete(\"/:username/follow",{"_index":3294,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["delete(\":id",{"_index":1704,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/UserCollaborationController.html":{}}}],["delete(\":id/members/:memberid",{"_index":3522,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["delete('/:id')@apioperation({operationid",{"_index":1995,"title":{},"body":{"controllers/InsightController.html":{},"controllers/UserHighlightsController.html":{}}}],["delete('/:id/reactions/:emojiid')@apioperation({operationid",{"_index":3324,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["delete('/:id/star')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2601,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["delete('/:id/stargaze')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2646,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["delete('/:id/submit')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2684,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["delete('/:id/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2720,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete('/:owner/:repo/star')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2610,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["delete('/:owner/:repo/stargaze')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2652,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["delete('/:owner/:repo/submit')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2689,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["delete('/:owner/:repo/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2725,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete('/:username/follow')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":3284,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["delete(':id')@apioperation({operationid",{"_index":1632,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/UserCollaborationController.html":{}}}],["delete(':id/members/:memberid')@apioperation({operationid",{"_index":3484,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["deleted",{"_index":1250,"title":{},"body":{"entities/DbPullRequest.html":{},"controllers/UserInsightsController.html":{}}}],["deleted_at",{"_index":958,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/InsightsService.html":{},"injectables/UserHighlightsService.html":{}}}],["deletedatecolumn",{"_index":1014,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["deleteendoresementbyid",{"_index":1618,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["deleteendoresementbyid(@param(\"id",{"_index":1705,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["deleteendoresementbyid(id",{"_index":1631,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["deletehighlightforuser",{"_index":3301,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["deletehighlightforuser(userid",{"_index":3320,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["deletehighlightreactionforuser",{"_index":3302,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["deletehighlightreactionforuser(userid",{"_index":3323,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["deletes",{"_index":1635,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/UserHighlightsController.html":{}}}],["deleteuserhighlight",{"_index":3374,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["deleteuserhighlight(highlightid",{"_index":3389,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["deleteuserhighlightreaction",{"_index":3375,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["deleteuserhighlightreaction(id",{"_index":3391,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["deletion",{"_index":1092,"title":{},"body":{"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{}}}],["deletions",{"_index":1212,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["demo",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/ContributorModule.html":{},"modules/CustomerModule.html":{},"modules/EmojiModule.html":{},"modules/EndorsementModule.html":{},"modules/HighlightModule.html":{},"modules/InsightsModule.html":{},"modules/LogModule.html":{},"modules/OpenAiModule.html":{},"modules/PullRequestModule.html":{},"modules/RepoFilterModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/StripeModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/StripeWebHookModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/UserReposModule.html":{},"modules/VoteModule.html":{},"changelog.html":{},"overview.html":{}}}],["dependency",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["deploy",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":4434,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deprecated",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":1745,"title":{},"body":{"injectables/EndorsementService.html":{},"injectables/InsightsService.html":{},"injectables/RepoFilterService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"controllers/InsightController.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoInfo.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"classes/UserOnboardingDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"changelog.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["description.controller",{"_index":2336,"title":{},"body":{"modules/PullRequestModule.html":{}}}],["description.controller.ts",{"_index":2266,"title":{},"body":{"controllers/PullRequestDescriptionController.html":{},"coverage.html":{}}}],["description.controller.ts:22",{"_index":2270,"title":{},"body":{"controllers/PullRequestDescriptionController.html":{}}}],["description.dto",{"_index":2271,"title":{},"body":{"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["description.dto.ts",{"_index":1838,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{},"coverage.html":{}}}],["description.dto.ts:13",{"_index":1845,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["description.dto.ts:23",{"_index":1849,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["description.dto.ts:32",{"_index":1855,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["description.dto.ts:42",{"_index":1848,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["description.dto.ts:50",{"_index":1847,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["description.dto.ts:59",{"_index":1844,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["description.service",{"_index":2273,"title":{},"body":{"controllers/PullRequestDescriptionController.html":{},"modules/PullRequestModule.html":{}}}],["description.service.ts",{"_index":2276,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{},"coverage.html":{}}}],["description.service.ts:10",{"_index":2279,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["description.service.ts:19",{"_index":2278,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["description.service.ts:7",{"_index":2277,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["descriptionlength",{"_index":1802,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["designed",{"_index":4837,"title":{},"body":{"properties.html":{}}}],["dev",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["developer",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":4326,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["df56c4f",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["diagram",{"_index":4078,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["diagrams",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["diff",{"_index":1840,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["diff/commit",{"_index":2283,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["digital",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["direction.constant",{"_index":680,"title":{},"body":{"injectables/ContributionService.html":{},"classes/PageOptionsDto.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{}}}],["direction.constant.ts",{"_index":4667,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["directly",{"_index":2286,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{},"changelog.html":{}}}],["disable",{"_index":461,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{},"injectables/UserHighlightsService.html":{}}}],["discord.find",{"_index":4762,"title":{},"body":{"index.html":{}}}],["disk",{"_index":1885,"title":{},"body":{"controllers/HealthController.html":{}}}],["disk_percentage",{"_index":4878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_size",{"_index":4881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diskhealthindicator",{"_index":1881,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":1046,"title":{},"body":{"entities/DbEmoji.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"changelog.html":{},"index.html":{}}}],["display_email",{"_index":3099,"title":{},"body":{"classes/UpdateUserEmailPreferencesDto.html":{},"injectables/UserService.html":{}}}],["display_local_time",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["display_order",{"_index":1040,"title":{},"body":{"entities/DbEmoji.html":{}}}],["distinct",{"_index":2384,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["distinct(true",{"_index":3424,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["distribute",{"_index":4789,"title":{},"body":{"license.html":{}}}],["dit",{"_index":4733,"title":{},"body":{"index.html":{}}}],["doadmin",{"_index":4901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doc",{"_index":766,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"entities/DbEndorsement.html":{}}}],["doc'})@column({type",{"_index":1083,"title":{},"body":{"entities/DbEndorsement.html":{}}}],["doc'})@isstring",{"_index":757,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["docker",{"_index":4476,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["docker>=20.10.12",{"_index":4687,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["docr",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3820,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":4440,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":4250,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":4480,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["dot",{"_index":4834,"title":{},"body":{"properties.html":{}}}],["douglas",{"_index":1149,"title":{},"body":{"entities/DbInsightMember.html":{},"entities/DbUserHighlight.html":{}}}],["douglas'})@column({type",{"_index":1143,"title":{},"body":{"entities/DbInsightMember.html":{},"entities/DbUserHighlight.html":{}}}],["down",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["downstarbyrepoid",{"_index":2755,"title":{},"body":{"injectables/StarService.html":{}}}],["downstarbyrepoid(repoid",{"_index":2761,"title":{},"body":{"injectables/StarService.html":{}}}],["downstargazebyrepoid",{"_index":2784,"title":{},"body":{"injectables/StargazeService.html":{}}}],["downstargazebyrepoid(repoid",{"_index":2790,"title":{},"body":{"injectables/StargazeService.html":{}}}],["downstargazeonebyid",{"_index":2640,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["downstargazeonebyid(id",{"_index":2645,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["downstargazeonebyownerandrepo",{"_index":2641,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["downstargazeonebyownerandrepo(owner",{"_index":2651,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["downstaronebyid",{"_index":2595,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downstaronebyid(@param(\"id",{"_index":2634,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downstaronebyid(id",{"_index":2600,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downstaronebyownerandrepo",{"_index":2596,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downstaronebyownerandrepo(owner",{"_index":2609,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downsubmitbyrepoid",{"_index":2951,"title":{},"body":{"injectables/SubmitService.html":{}}}],["downsubmitbyrepoid(repoid",{"_index":2957,"title":{},"body":{"injectables/SubmitService.html":{}}}],["downsubmitonebyid",{"_index":2678,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["downsubmitonebyid(id",{"_index":2683,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["downsubmitonebyownerandrepo",{"_index":2679,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["downsubmitonebyownerandrepo(owner",{"_index":2688,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["downvotebyrepoid",{"_index":3785,"title":{},"body":{"injectables/VoteService.html":{}}}],["downvotebyrepoid(repoid",{"_index":3791,"title":{},"body":{"injectables/VoteService.html":{}}}],["downvoteonebyid",{"_index":2714,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyid(@param(\"id",{"_index":2745,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyid(id",{"_index":2719,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyownerandrepo",{"_index":2715,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyownerandrepo(owner",{"_index":2724,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["draft",{"_index":1213,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["dry",{"_index":4483,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dto/create",{"_index":1667,"title":{},"body":{"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{}}}],["dtos",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["dtos/contribution",{"_index":683,"title":{},"body":{"injectables/ContributionService.html":{},"controllers/RepoContributionsController.html":{}}}],["dtos/create",{"_index":511,"title":{},"body":{"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/LogService.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["dtos/filter",{"_index":2457,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["dtos/highlight",{"_index":1935,"title":{},"body":{"controllers/HighlightController.html":{}}}],["dtos/insight",{"_index":2127,"title":{},"body":{"injectables/InsightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["dtos/pull",{"_index":2250,"title":{},"body":{"controllers/PullRequestController.html":{},"injectables/PullRequestService.html":{}}}],["dtos/repo",{"_index":2433,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["dtos/supabase",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["dtos/update",{"_index":2003,"title":{},"body":{"controllers/InsightController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserService.html":{}}}],["dtos/user",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserReposService.html":{}}}],["duration",{"_index":1970,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["duration.ts",{"_index":4640,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["during",{"_index":4737,"title":{},"body":{"index.html":{}}}],["dutch",{"_index":1814,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["e",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserService.html":{}}}],["e043912",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["e0d38ca",{"_index":4356,"title":{},"body":{"changelog.html":{}}}],["e145e2d",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["e1fe498",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["e3161ab",{"_index":4182,"title":{},"body":{"changelog.html":{}}}],["e392288",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["e3d7bd7",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["e42223f",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["e5e2e03",{"_index":4307,"title":{},"body":{"changelog.html":{}}}],["e663170",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":2182,"title":{},"body":{"classes/PageDto.html":{}}}],["eba258a",{"_index":4441,"title":{},"body":{"changelog.html":{}}}],["echo",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["ed28e07",{"_index":4139,"title":{},"body":{"changelog.html":{}}}],["ed9729a",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["edit",{"_index":3053,"title":{},"body":{"classes/UpdateInsightMemberDto.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["email",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateInsightMemberDto.html":{},"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"injectables/StripeService.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{}}}],["email.tolowercase",{"_index":3777,"title":{},"body":{"injectables/UserService.html":{}}}],["emoji",{"_index":1045,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbUserHighlightReaction.html":{},"changelog.html":{}}}],["emoji.controller",{"_index":1603,"title":{},"body":{"modules/EmojiModule.html":{}}}],["emoji.service",{"_index":1593,"title":{},"body":{"controllers/EmojiController.html":{},"modules/EmojiModule.html":{}}}],["emoji/emoji.module",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["emoji/entities/emoji.entity",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"entities/DbUserHighlightReaction.html":{}}}],["emoji_id",{"_index":1494,"title":{},"body":{"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/HighlightOptionsDto.html":{},"injectables/UserHighlightsService.html":{}}}],["emojicontroller",{"_index":1582,"title":{"controllers/EmojiController.html":{}},"body":{"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"coverage.html":{}}}],["emojiid",{"_index":3309,"title":{},"body":{"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{}}}],["emojimodule",{"_index":11,"title":{"modules/EmojiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmojiModule.html":{},"modules.html":{},"overview.html":{}}}],["emojirepository",{"_index":1608,"title":{},"body":{"injectables/EmojiService.html":{}}}],["emojis",{"_index":1065,"title":{},"body":{"entities/DbEmoji.html":{},"controllers/EmojiController.html":{}}}],["emojiservice",{"_index":1592,"title":{"injectables/EmojiService.html":{}},"body":{"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"coverage.html":{},"overview.html":{}}}],["enable",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["encounter",{"_index":4707,"title":{},"body":{"index.html":{}}}],["encourage",{"_index":4753,"title":{},"body":{"index.html":{}}}],["end",{"_index":583,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"entities/DbSubscription.html":{}}}],["ended_at",{"_index":1392,"title":{},"body":{"entities/DbSubscription.html":{},"controllers/StripeWebhookController.html":{}}}],["endorsement",{"_index":741,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"entities/DbEndorsement.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{}}}],["endorsement.controller",{"_index":1712,"title":{},"body":{"modules/EndorsementModule.html":{},"modules/UserModule.html":{}}}],["endorsement.controller.ts",{"_index":3218,"title":{},"body":{"controllers/UserEndorsementController.html":{},"coverage.html":{}}}],["endorsement.controller.ts:25",{"_index":3223,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["endorsement.controller.ts:38",{"_index":3226,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["endorsement.dto",{"_index":1668,"title":{},"body":{"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"classes/UpdateEndorsementDto.html":{}}}],["endorsement.dto.ts",{"_index":734,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"classes/UpdateEndorsementDto.html":{},"coverage.html":{}}}],["endorsement.dto.ts:11",{"_index":745,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["endorsement.dto.ts:19",{"_index":748,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["endorsement.dto.ts:26",{"_index":750,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["endorsement.dto.ts:34",{"_index":753,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["endorsement.dto.ts:41",{"_index":756,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["endorsement.dto.ts:48",{"_index":758,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["endorsement.service",{"_index":1666,"title":{},"body":{"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{}}}],["endorsement/endorsement.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["endorsement/endorsement.service",{"_index":3227,"title":{},"body":{"controllers/UserEndorsementController.html":{},"modules/UserModule.html":{}}}],["endorsement/entities/endorsement.entity",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserEndorsementController.html":{},"modules/UserModule.html":{}}}],["endorsementcontroller",{"_index":1615,"title":{"controllers/EndorsementController.html":{}},"body":{"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"coverage.html":{}}}],["endorsementmodule",{"_index":12,"title":{"modules/EndorsementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EndorsementModule.html":{},"modules.html":{},"overview.html":{}}}],["endorsementrepository",{"_index":1722,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["endorsements",{"_index":1085,"title":{},"body":{"entities/DbEndorsement.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"controllers/UserEndorsementController.html":{},"changelog.html":{}}}],["endorsements.recipient_user_id=users.id",{"_index":1753,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["endorsements.repo_id=repos.id",{"_index":1751,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["endorsements.repo_id=users.id",{"_index":1761,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["endorsementservice",{"_index":1665,"title":{"injectables/EndorsementService.html":{}},"body":{"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"controllers/UserEndorsementController.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["endorsementservicetoken",{"_index":4883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endorsementtokenguard",{"_index":1670,"title":{"guards/EndorsementTokenGuard.html":{}},"body":{"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"guards/EndorsementTokenGuard.html":{},"coverage.html":{}}}],["endpoint",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["endpointconfig",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":1887,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":1871,"title":{},"body":{"controllers/HealthController.html":{}}}],["engines",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["english",{"_index":1807,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["english'})@isstring()@isin(['english",{"_index":1808,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["entire",{"_index":2284,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["entities",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"changelog.html":{},"overview.html":{}}}],["entities.map((notification",{"_index":3619,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["entities/emoji.entity",{"_index":1594,"title":{},"body":{"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{}}}],["entities/endorsement.entity",{"_index":1669,"title":{},"body":{"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{}}}],["entities/insight",{"_index":2046,"title":{},"body":{"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"controllers/UserInsightMemberController.html":{}}}],["entities/insight.entity",{"_index":2005,"title":{},"body":{"controllers/InsightController.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["entities/pull",{"_index":2249,"title":{},"body":{"controllers/PullRequestController.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"injectables/PullRequestService.html":{}}}],["entities/repo.entity",{"_index":2432,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{}}}],["entities/user",{"_index":1936,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":956,"title":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/RepoService.html":{},"changelog.html":{},"coverage.html":{}}}],["enum",{"_index":661,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbUserNotification.html":{},"classes/FilterOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"changelog.html":{}}}],["enumerations",{"_index":4663,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":633,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["env",{"_index":4251,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["environment",{"_index":4132,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["environments",{"_index":4676,"title":{},"body":{"index.html":{}}}],["epoch",{"_index":4953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["equal",{"_index":1295,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["error",{"_index":552,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/CustomLogger.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/PullRequestDescriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["error(message",{"_index":864,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["error(response.statustext",{"_index":489,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["error).tostring",{"_index":2918,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["error.message",{"_index":555,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["errors",{"_index":3970,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["escape",{"_index":3418,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["eslint",{"_index":460,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{},"injectables/UserHighlightsService.html":{},"changelog.html":{}}}],["etl",{"_index":4118,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":2928,"title":{},"body":{"controllers/StripeWebhookController.html":{},"changelog.html":{},"license.html":{}}}],["event.data.object",{"_index":2933,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["event.type",{"_index":2937,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["everywhere",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["example",{"_index":743,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/PageMetaDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoInfo.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"classes/UserRepoOptionsDto-1.html":{}}}],["exception/responses",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["exclude",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{},"changelog.html":{}}}],["executioncontext",{"_index":1776,"title":{},"body":{"guards/EndorsementTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":3360,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["exist'})@apibadrequestresponse({description",{"_index":3312,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["existing",{"_index":2602,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{}}}],["existinguser",{"_index":3506,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["existinguser?.email",{"_index":3511,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["existinguser?.id",{"_index":3510,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["expand",{"_index":2890,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["experiment",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["experimental",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["explain",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["explanation",{"_index":501,"title":{},"body":{"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"changelog.html":{}}}],["explanation.controller",{"_index":2339,"title":{},"body":{"modules/PullRequestModule.html":{}}}],["explanation.controller.ts",{"_index":493,"title":{},"body":{"controllers/CodeExplanationController.html":{},"coverage.html":{}}}],["explanation.controller.ts:22",{"_index":506,"title":{},"body":{"controllers/CodeExplanationController.html":{}}}],["explanation.dto",{"_index":513,"title":{},"body":{"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{}}}],["explanation.dto.ts",{"_index":1801,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"coverage.html":{}}}],["explanation.dto.ts:13",{"_index":1806,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{}}}],["explanation.dto.ts:23",{"_index":1820,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{}}}],["explanation.dto.ts:33",{"_index":1818,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{}}}],["explanation.dto.ts:40",{"_index":1804,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{}}}],["explanation.service",{"_index":515,"title":{},"body":{"controllers/CodeExplanationController.html":{},"modules/PullRequestModule.html":{}}}],["explanation.service.ts",{"_index":524,"title":{},"body":{"injectables/CodeExplanationService.html":{},"coverage.html":{}}}],["explanation.service.ts:10",{"_index":533,"title":{},"body":{"injectables/CodeExplanationService.html":{}}}],["explanation.service.ts:17",{"_index":530,"title":{},"body":{"injectables/CodeExplanationService.html":{}}}],["explanation.service.ts:7",{"_index":528,"title":{},"body":{"injectables/CodeExplanationService.html":{}}}],["explore",{"_index":4923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["exports",{"_index":435,"title":{},"body":{"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/CustomerModule.html":{},"modules/EndorsementModule.html":{},"modules/InsightsModule.html":{},"modules/LogModule.html":{},"modules/OpenAiModule.html":{},"modules/PullRequestModule.html":{},"modules/RepoFilterModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/StripeModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/StripeWebHookModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/UserReposModule.html":{},"modules/VoteModule.html":{}}}],["exposing",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1967,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{},"changelog.html":{},"license.html":{}}}],["extend",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":622,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/CustomLogger.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"classes/DbUserHighlightReactionResponse.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["extra",{"_index":4161,"title":{},"body":{"changelog.html":{}}}],["extractjwt",{"_index":3026,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":3040,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractor",{"_index":3039,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extraneous",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["f0304d4",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["f05c29c",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["f212fb2",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["f29f5f2",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["f3808a5",{"_index":4281,"title":{},"body":{"changelog.html":{}}}],["f4570c3",{"_index":4396,"title":{},"body":{"changelog.html":{}}}],["f5385b3",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["f57c5b6",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["f5b6599",{"_index":4263,"title":{},"body":{"changelog.html":{}}}],["f5f2761",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["f5f942f",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["f73f891",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["f8c9324",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["f8d41f1",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["f96a793",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["f9defe2",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["fad79b1",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateInsightDto.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"guards/EndorsementTokenGuard.html":{},"injectables/InsightMemberService.html":{},"classes/PageMetaDto.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"controllers/UserInsightMemberController.html":{},"injectables/UserService.html":{}}}],["false})@column('boolean",{"_index":1252,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["false})@column({default",{"_index":1100,"title":{},"body":{"entities/DbInsight.html":{},"entities/DbRepoToUserSubmissions.html":{}}}],["false})@column({type",{"_index":1474,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["false})@isboolean",{"_index":775,"title":{},"body":{"classes/CreateInsightDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{}}}],["false})@isboolean()@isoptional",{"_index":3069,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["fastify",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["favorite",{"_index":1099,"title":{},"body":{"entities/DbInsight.html":{}}}],["fc74284",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["fcaddb5",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["fdc11ea",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["fe20c2d",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["fe4b9e9",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["feat",{"_index":4157,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":4347,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["fed79a1",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["feedback",{"_index":4280,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":450,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{},"changelog.html":{}}}],["fetcher",{"_index":464,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["fetcher(this.configservice.get(\"openai.completionsurl",{"_index":469,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["fetches",{"_index":3331,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["fetching",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["ff434b5",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1240,"title":{},"body":{"entities/DbPullRequest.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":1521,"title":{},"body":{"classes/DbUserHighlightReactionResponse.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"changelog.html":{}}}],["filter.module",{"_index":2334,"title":{},"body":{"modules/PullRequestModule.html":{},"modules/RepoModule.html":{}}}],["filter.module.ts",{"_index":2447,"title":{},"body":{"modules/RepoFilterModule.html":{}}}],["filter.service",{"_index":2308,"title":{},"body":{"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoService.html":{},"modules/UserModule.html":{}}}],["filter.service.ts",{"_index":2448,"title":{},"body":{"injectables/RepoFilterService.html":{},"coverage.html":{}}}],["filter.service.ts:15",{"_index":2455,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["filter.service.ts:85",{"_index":2452,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["filter/insightfilterfieldsenum",{"_index":2456,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["filtering",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["filteroptionsdto",{"_index":1785,"title":{"classes/FilterOptionsDto.html":{}},"body":{"classes/FilterOptionsDto.html":{},"controllers/PullRequestController.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/RepoFilterService.html":{},"coverage.html":{}}}],["filters",{"_index":708,"title":{},"body":{"controllers/ContributorController.html":{},"controllers/PullRequestController.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"injectables/UserHighlightsService.html":{},"changelog.html":{}}}],["filters.foreach(([sql",{"_index":2479,"title":{},"body":{"injectables/RepoFilterService.html":{},"injectables/UserHighlightsService.html":{}}}],["filters.push",{"_index":2470,"title":{},"body":{"injectables/RepoFilterService.html":{},"injectables/UserHighlightsService.html":{}}}],["filters.push([\"repos.stars",{"_index":2468,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["filters.push([`:topic",{"_index":2464,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["filters.push([`lower(repos.full_name)=:repo",{"_index":2461,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["filters.push([`now",{"_index":2315,"title":{},"body":{"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{}}}],["filters.push([`repos.id",{"_index":2459,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["filterservice",{"_index":2358,"title":{},"body":{"injectables/PullRequestService.html":{},"injectables/RepoService.html":{}}}],["find",{"_index":2238,"title":{},"body":{"controllers/PullRequestController.html":{},"controllers/RepoContributionsController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserInsightMemberController.html":{},"changelog.html":{}}}],["findall",{"_index":667,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/UserHighlightsService.html":{}}}],["findall(@query",{"_index":2439,"title":{},"body":{"controllers/RepoController.html":{}}}],["findall(pageoptionsdto",{"_index":672,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/UserHighlightsService.html":{}}}],["findallbycontributor",{"_index":2354,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["findallbycontributor(contributor",{"_index":2363,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["findallbycreatoruserid",{"_index":1715,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["findallbycreatoruserid(userid",{"_index":1727,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["findallbyownerandrepo",{"_index":2393,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["findallbyownerandrepo(owner",{"_index":2395,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["findallbyrecipientuserid",{"_index":1716,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["findallbyrecipientuserid(userid",{"_index":1729,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["findallbyrepoid",{"_index":2394,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["findallbyrepoid(id",{"_index":2401,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["findallbyrepoowneroruser",{"_index":1717,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["findallbyrepoowneroruser(repoowneroruser",{"_index":1731,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["findallbyrepoownerorusername",{"_index":1619,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["findallbyrepoownerorusername(repoowneroruser",{"_index":1638,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["findallbyuserid",{"_index":2111,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{}}}],["findallbyuserid(pageoptionsdto",{"_index":2120,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserReposService.html":{}}}],["findallbyuserid(userid",{"_index":3608,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["findallcontributorswithfilters",{"_index":2355,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["findallcontributorswithfilters(pageoptionsdto",{"_index":2365,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["findallemojis",{"_index":1584,"title":{},"body":{"controllers/EmojiController.html":{}}}],["findallemojis(@query",{"_index":1598,"title":{},"body":{"controllers/EmojiController.html":{}}}],["findallemojis(pageoptionsdto",{"_index":1585,"title":{},"body":{"controllers/EmojiController.html":{}}}],["findallendorsements",{"_index":1620,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["findallendorsements(@query",{"_index":1681,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["findallendorsements(pageoptionsdto",{"_index":1644,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["findallendorsementsbyrepo",{"_index":1621,"title":{},"body":{"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{}}}],["findallendorsementsbyrepo(owner",{"_index":1646,"title":{},"body":{"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{}}}],["findallendorsementsbyrepobyuser",{"_index":1691,"title":{},"body":{"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{}}}],["findallendorsementsbyrepobyuser(owner",{"_index":1734,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["findallhighlightreactions",{"_index":3376,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["findallhighlightreactions(highlightid",{"_index":3395,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["findallhighlightrepos",{"_index":1917,"title":{},"body":{"controllers/HighlightController.html":{},"injectables/UserHighlightsService.html":{}}}],["findallhighlightrepos(@query",{"_index":1948,"title":{},"body":{"controllers/HighlightController.html":{}}}],["findallhighlightrepos(pageoptionsdto",{"_index":1920,"title":{},"body":{"controllers/HighlightController.html":{},"injectables/UserHighlightsService.html":{}}}],["findallhighlights",{"_index":1918,"title":{},"body":{"controllers/HighlightController.html":{}}}],["findallhighlights(@query",{"_index":1944,"title":{},"body":{"controllers/HighlightController.html":{}}}],["findallhighlights(pageoptionsdto",{"_index":1924,"title":{},"body":{"controllers/HighlightController.html":{}}}],["findallhighlightsbyusername",{"_index":3182,"title":{},"body":{"controllers/UserController.html":{}}}],["findallhighlightsbyusername(username",{"_index":3186,"title":{},"body":{"controllers/UserController.html":{}}}],["findallinsightmembers",{"_index":2022,"title":{},"body":{"injectables/InsightMemberService.html":{},"controllers/UserInsightMemberController.html":{}}}],["findallinsightmembers(pageoptionsdto",{"_index":2039,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["findallinsightsbyuserid",{"_index":3468,"title":{},"body":{"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["findallinsightsbyuserid(pageoptionsdto",{"_index":3477,"title":{},"body":{"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["findallreposwithfilters",{"_index":2418,"title":{},"body":{"controllers/RepoController.html":{}}}],["findallreposwithfilters(@query",{"_index":2441,"title":{},"body":{"controllers/RepoController.html":{}}}],["findallreposwithfilters(pageoptionsdto",{"_index":2423,"title":{},"body":{"controllers/RepoController.html":{}}}],["findalltopreposbyusername",{"_index":3183,"title":{},"body":{"controllers/UserController.html":{}}}],["findalltopreposbyusername(username",{"_index":3191,"title":{},"body":{"controllers/UserController.html":{}}}],["findallusercollaborations",{"_index":3113,"title":{},"body":{"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{}}}],["findallusercollaborations(pageoptionsdto",{"_index":3126,"title":{},"body":{"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{}}}],["findallusercreatedendorsements",{"_index":1622,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/UserEndorsementController.html":{}}}],["findallusercreatedendorsements(@param(\"username",{"_index":1698,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["findallusercreatedendorsements(@userid",{"_index":3230,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["findallusercreatedendorsements(userid",{"_index":3220,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["findallusercreatedendorsements(username",{"_index":1650,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["findalluserreceivedendorsements",{"_index":1623,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/UserEndorsementController.html":{}}}],["findalluserreceivedendorsements(@param(\"username",{"_index":1702,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["findalluserreceivedendorsements(@userid",{"_index":3233,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["findalluserreceivedendorsements(userid",{"_index":3224,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["findalluserreceivedendorsements(username",{"_index":1654,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["findalluserstargazed",{"_index":2642,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["findalluserstargazed(pageoptionsdto",{"_index":2654,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["findalluserstarred",{"_index":2597,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["findalluserstarred(pageoptionsdto",{"_index":2612,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["findallusersubmitted",{"_index":2680,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["findallusersubmitted(pageoptionsdto",{"_index":2691,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["findalluservoted",{"_index":2716,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["findalluservoted(pageoptionsdto",{"_index":2727,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["findallwithfilters",{"_index":2356,"title":{},"body":{"injectables/PullRequestService.html":{},"injectables/RepoService.html":{}}}],["findallwithfilters(pageoptionsdto",{"_index":2367,"title":{},"body":{"injectables/PullRequestService.html":{},"injectables/RepoService.html":{}}}],["findbycustomerid",{"_index":894,"title":{},"body":{"injectables/CustomerService.html":{}}}],["findbycustomerid(id",{"_index":903,"title":{},"body":{"injectables/CustomerService.html":{}}}],["findbyid",{"_index":895,"title":{},"body":{"injectables/CustomerService.html":{}}}],["findbyid(id",{"_index":905,"title":{},"body":{"injectables/CustomerService.html":{}}}],["findcontributorpullrequests",{"_index":3184,"title":{},"body":{"controllers/UserController.html":{}}}],["findcontributorpullrequests(username",{"_index":3195,"title":{},"body":{"controllers/UserController.html":{}}}],["findendorsementbyid",{"_index":1624,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["findendorsementbyid(@param(\"id",{"_index":1695,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["findendorsementbyid(id",{"_index":1657,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["findinsightpagebyid",{"_index":1985,"title":{},"body":{"controllers/InsightController.html":{}}}],["findinsightpagebyid(@param(\"id",{"_index":2011,"title":{},"body":{"controllers/InsightController.html":{}}}],["findinsightpagebyid(id",{"_index":1987,"title":{},"body":{"controllers/InsightController.html":{}}}],["findonebyemail",{"_index":3688,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyemail(email",{"_index":3702,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyid",{"_index":1718,"title":{},"body":{"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{}}}],["findonebyid(@param(\"id",{"_index":2435,"title":{},"body":{"controllers/RepoController.html":{}}}],["findonebyid(id",{"_index":1736,"title":{},"body":{"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{}}}],["findonebyownerandrepo",{"_index":2419,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo(@param(\"owner",{"_index":2437,"title":{},"body":{"controllers/RepoController.html":{}}}],["findonebyownerandrepo(owner",{"_index":2428,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyusername",{"_index":3689,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyusername(username",{"_index":3706,"title":{},"body":{"injectables/UserService.html":{}}}],["findoneuserbyid",{"_index":3185,"title":{},"body":{"controllers/UserController.html":{}}}],["findoneuserbyid(@param(\"username",{"_index":3208,"title":{},"body":{"controllers/UserController.html":{}}}],["findoneuserbyid(username",{"_index":3200,"title":{},"body":{"controllers/UserController.html":{}}}],["findoneuserbyuserame",{"_index":3202,"title":{},"body":{"controllers/UserController.html":{}}}],["findoneuserhighlightreaction",{"_index":3377,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["findoneuserhighlightreaction(highlightid",{"_index":3400,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["findrecommendations",{"_index":2515,"title":{},"body":{"injectables/RepoService.html":{}}}],["findrecommendations(interests",{"_index":2528,"title":{},"body":{"injectables/RepoService.html":{}}}],["finds",{"_index":1633,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{}}}],["finduserfollowerbyid",{"_index":3238,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["finduserfollowerbyid(userid",{"_index":3248,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["finduserreporecommendations",{"_index":3644,"title":{},"body":{"controllers/UserRecommendationController.html":{}}}],["finduserreporecommendations(@userid",{"_index":3653,"title":{},"body":{"controllers/UserRecommendationController.html":{}}}],["finduserreporecommendations(userid",{"_index":3645,"title":{},"body":{"controllers/UserRecommendationController.html":{}}}],["first",{"_index":828,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserTopRepo.html":{},"changelog.html":{}}}],["fitness",{"_index":4811,"title":{},"body":{"license.html":{}}}],["fix",{"_index":3938,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fix(cli",{"_index":1292,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["fixed",{"_index":1858,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["fixes",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":1097,"title":{},"body":{"entities/DbInsight.html":{},"entities/DbRepoToUserSubmissions.html":{},"classes/PageMetaDto.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{}}}],["flight",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":4719,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1561,"title":{},"body":{"entities/DbUserToUserFollows.html":{},"controllers/RepoStargazeController.html":{},"controllers/UserFollowsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["follow.controller",{"_index":3578,"title":{},"body":{"modules/UserModule.html":{}}}],["follow.controller.ts",{"_index":3270,"title":{},"body":{"controllers/UserFollowsController.html":{},"coverage.html":{}}}],["follow.controller.ts:30",{"_index":3282,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["follow.controller.ts:48",{"_index":3278,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["follow.controller.ts:70",{"_index":3288,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["follow.service",{"_index":3289,"title":{},"body":{"controllers/UserFollowsController.html":{},"modules/UserModule.html":{}}}],["follow.service.ts",{"_index":3236,"title":{},"body":{"injectables/UserFollowService.html":{},"coverage.html":{}}}],["follow.service.ts:10",{"_index":3242,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["follow.service.ts:18",{"_index":3247,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["follow.service.ts:24",{"_index":3250,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["follow.service.ts:40",{"_index":3246,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["follow.service.ts:69",{"_index":3252,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["followed",{"_index":1535,"title":{},"body":{"entities/DbUserNotification.html":{},"controllers/RepoStargazeController.html":{},"injectables/StargazeService.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"injectables/UserNotificationService.html":{},"changelog.html":{}}}],["followeduserid",{"_index":3245,"title":{},"body":{"injectables/UserFollowService.html":{},"injectables/UserNotificationService.html":{}}}],["follower",{"_index":1564,"title":{},"body":{"entities/DbUserToUserFollows.html":{}}}],["followers",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["followeruserid",{"_index":3249,"title":{},"body":{"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{}}}],["followexists",{"_index":3259,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["followexists.deleted_at",{"_index":3263,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["following",{"_index":3260,"title":{},"body":{"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["following_user_id",{"_index":1560,"title":{},"body":{"entities/DbUserToUserFollows.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserService.html":{}}}],["follows",{"_index":2668,"title":{},"body":{"controllers/RepoStargazeController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"changelog.html":{}}}],["follows'})@apibearerauth()@useguards(supabaseguard)@apiokresponse({type",{"_index":3332,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["follows'})@apiokresponse({description",{"_index":2659,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["follows.entity",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"modules/UserModule.html":{}}}],["follows.entity.ts",{"_index":1559,"title":{},"body":{"entities/DbUserToUserFollows.html":{},"coverage.html":{}}}],["follows.entity.ts:15",{"_index":1566,"title":{},"body":{"entities/DbUserToUserFollows.html":{}}}],["follows.entity.ts:22",{"_index":1568,"title":{},"body":{"entities/DbUserToUserFollows.html":{}}}],["follows.entity.ts:29",{"_index":1565,"title":{},"body":{"entities/DbUserToUserFollows.html":{}}}],["follows.entity.ts:39",{"_index":1562,"title":{},"body":{"entities/DbUserToUserFollows.html":{}}}],["follows.entity.ts:49",{"_index":1567,"title":{},"body":{"entities/DbUserToUserFollows.html":{}}}],["follows.entity.ts:56",{"_index":1563,"title":{},"body":{"entities/DbUserToUserFollows.html":{}}}],["followuser",{"_index":3628,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["followuser.login",{"_index":3631,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["followuserbyid",{"_index":3276,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["followuserbyusername",{"_index":3271,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["followuserbyusername(username",{"_index":3274,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["follweruserid",{"_index":3397,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["force",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["formal",{"_index":1854,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["formal'})@isstring()@isin(['exciting",{"_index":1850,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["format",{"_index":1186,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["formatit",{"_index":4739,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":1590,"title":{},"body":{"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/InsightController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["found'})@apiconflictresponse({description",{"_index":2605,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserFollowsController.html":{}}}],["found'})@apiunauthorizedresponse({description",{"_index":1990,"title":{},"body":{"controllers/InsightController.html":{}}}],["francisco",{"_index":2998,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["free",{"_index":4778,"title":{},"body":{"license.html":{}}}],["french",{"_index":1810,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["from(`(${querybuilder.getquery",{"_index":3430,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["from(dbendorsement",{"_index":1760,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["from(dbpullrequest",{"_index":2383,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["from(entity",{"_index":2540,"title":{},"body":{"injectables/RepoService.html":{}}}],["from_user_id",{"_index":1527,"title":{},"body":{"entities/DbUserNotification.html":{},"injectables/UserNotificationService.html":{}}}],["full",{"_index":1153,"title":{},"body":{"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbUserHighlight.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserRepo.html":{},"classes/RepoInfo.html":{},"changelog.html":{},"index.html":{}}}],["full_name",{"_index":791,"title":{},"body":{"classes/CreateInsightDto.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbUserHighlight.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserRepo.html":{},"injectables/InsightRepoService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserReposService.html":{},"changelog.html":{}}}],["fullname",{"_index":2484,"title":{},"body":{"classes/RepoInfo.html":{},"changelog.html":{}}}],["function",{"_index":4292,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["functionality",{"_index":4345,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":4673,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":4796,"title":{},"body":{"license.html":{}}}],["garbage",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":536,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{},"changelog.html":{}}}],["generatecodeexplanation",{"_index":499,"title":{},"body":{"controllers/CodeExplanationController.html":{}}}],["generatecodeexplanationdto",{"_index":497,"title":{"classes/GenerateCodeExplanationDto.html":{}},"body":{"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"classes/GenerateCodeExplanationDto.html":{},"coverage.html":{}}}],["generatecoderefactor",{"_index":562,"title":{},"body":{"controllers/CodeRefactorSuggestionController.html":{}}}],["generatecoderefactorsuggestiondto",{"_index":560,"title":{"classes/GenerateCodeRefactorSuggestionDto.html":{}},"body":{"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"coverage.html":{}}}],["generatecodetest",{"_index":595,"title":{},"body":{"controllers/CodeTestSuggestionController.html":{}}}],["generatecodetestsuggestiondto",{"_index":593,"title":{"classes/GenerateCodeTestSuggestionDto.html":{}},"body":{"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"coverage.html":{}}}],["generatecompletion",{"_index":2167,"title":{},"body":{"injectables/OpenAiService.html":{}}}],["generatecompletion(systemmessage",{"_index":457,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["generated",{"_index":4311,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generatedescription",{"_index":571,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["generatedescription(options",{"_index":573,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["generateexplanation",{"_index":525,"title":{},"body":{"injectables/CodeExplanationService.html":{}}}],["generateexplanation(options",{"_index":529,"title":{},"body":{"injectables/CodeExplanationService.html":{}}}],["generateprdescription",{"_index":495,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/PullRequestDescriptionController.html":{}}}],["generateprdescription(@body",{"_index":520,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/PullRequestDescriptionController.html":{}}}],["generateprdescription(generatecodeexplanationdto",{"_index":496,"title":{},"body":{"controllers/CodeExplanationController.html":{}}}],["generateprdescription(generatecoderefactorsuggestiondto",{"_index":559,"title":{},"body":{"controllers/CodeRefactorSuggestionController.html":{}}}],["generateprdescription(generatecodetestsuggestiondto",{"_index":592,"title":{},"body":{"controllers/CodeTestSuggestionController.html":{}}}],["generateprdescription(generatepullrequestdescriptiondto",{"_index":2267,"title":{},"body":{"controllers/PullRequestDescriptionController.html":{}}}],["generateprompt",{"_index":526,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["generateprompt(language",{"_index":531,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["generateprompt(maxlength",{"_index":602,"title":{},"body":{"injectables/CodeTestSuggestionService.html":{}}}],["generatepullrequestdescriptiondto",{"_index":1837,"title":{"classes/GeneratePullRequestDescriptionDto.html":{}},"body":{"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"coverage.html":{}}}],["generates",{"_index":500,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/PullRequestDescriptionController.html":{}}}],["generatetestsuggestion",{"_index":601,"title":{},"body":{"injectables/CodeTestSuggestionService.html":{}}}],["generatetestsuggestion(options",{"_index":603,"title":{},"body":{"injectables/CodeTestSuggestionService.html":{}}}],["generation",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["german",{"_index":1811,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["get(\"/:id",{"_index":2010,"title":{},"body":{"controllers/InsightController.html":{},"controllers/RepoController.html":{},"controllers/UserHighlightsController.html":{}}}],["get(\"/:id/contributions",{"_index":2408,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["get(\"/:id/reactions",{"_index":1950,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserHighlightsController.html":{}}}],["get(\"/:owner/:repo",{"_index":2436,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/:owner/:repo/contributions",{"_index":2414,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["get(\"/:username",{"_index":3207,"title":{},"body":{"controllers/UserController.html":{}}}],["get(\"/:username/follow",{"_index":3290,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["get(\"/:username/highlights",{"_index":3212,"title":{},"body":{"controllers/UserController.html":{}}}],["get(\"/:username/prs",{"_index":3209,"title":{},"body":{"controllers/UserController.html":{}}}],["get(\"/:username/top",{"_index":3215,"title":{},"body":{"controllers/UserController.html":{}}}],["get(\"/created",{"_index":3229,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["get(\"/following",{"_index":3369,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["get(\"/following/repos",{"_index":3370,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["get(\"/insights",{"_index":2259,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["get(\"/list",{"_index":1942,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoController.html":{}}}],["get(\"/listuserstargazed",{"_index":2666,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["get(\"/listuserstarred",{"_index":2628,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["get(\"/listusersubmitted",{"_index":2704,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["get(\"/listuservoted",{"_index":2739,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["get(\"/received",{"_index":3232,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["get(\"/repos",{"_index":3652,"title":{},"body":{"controllers/UserRecommendationController.html":{}}}],["get(\"/repos/:owner/:repo",{"_index":1686,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["get(\"/repos/:owner/:repo/byuser",{"_index":1690,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["get(\"/repos/:repoowneroruser",{"_index":1683,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["get(\"/repos/list",{"_index":1946,"title":{},"body":{"controllers/HighlightController.html":{}}}],["get(\"/search",{"_index":724,"title":{},"body":{"controllers/ContributorController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoController.html":{}}}],["get(\"/service",{"_index":1886,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/session",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"/user/:username/created",{"_index":1697,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["get(\"/user/:username/received",{"_index":1701,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["get(\"/web",{"_index":1899,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\":id",{"_index":1694,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["get(\":id/members",{"_index":3494,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["get('/')@apioperation({operationid",{"_index":1586,"title":{},"body":{"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":1988,"title":{},"body":{"controllers/InsightController.html":{},"controllers/RepoController.html":{},"controllers/UserHighlightsController.html":{}}}],["get('/:id/contributions')@apioperation({operationid",{"_index":2402,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["get('/:id/reactions')@apioperation({operationid",{"_index":1929,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserHighlightsController.html":{}}}],["get('/:owner/:repo')@apioperation({operationid",{"_index":2429,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/:owner/:repo/contributions')@apioperation({operationid",{"_index":2396,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["get('/:username')@apioperation({operationid",{"_index":3201,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/:username/follow')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":3280,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["get('/:username/highlights')@apioperation({operationid",{"_index":3187,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/:username/prs')@apioperation({operationid",{"_index":3196,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/:username/top",{"_index":3192,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/created')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":3221,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["get('/following')@apioperation({operationid",{"_index":3336,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["get('/following/repos')@apioperation({operationid",{"_index":3330,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["get('/insights')@apioperation({operationid",{"_index":2237,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["get('/list')@apioperation({operationid",{"_index":1925,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoController.html":{}}}],["get('/listuserstargazed')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2655,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["get('/listuserstarred')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2613,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["get('/listusersubmitted')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2692,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["get('/listuservoted')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2728,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["get('/received')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":3225,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["get('/repos')@apioperation({operationid",{"_index":3646,"title":{},"body":{"controllers/UserRecommendationController.html":{}}}],["get('/repos/:owner/:repo')@apioperation({operationid",{"_index":1647,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["get('/repos/:repoowneroruser')@apioperation({operationid",{"_index":1639,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["get('/repos/list')@apioperation({operationid",{"_index":1921,"title":{},"body":{"controllers/HighlightController.html":{}}}],["get('/search')@apioperation({operationid",{"_index":705,"title":{},"body":{"controllers/ContributorController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":1869,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/session')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/user/:username/created')@apioperation({operationid",{"_index":1651,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["get('/user/:username/received')@apioperation({operationid",{"_index":1655,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":1873,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(':id')@apioperation({operationid",{"_index":1658,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["get(':id/members')@apioperation({operationid",{"_index":3478,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["getallhighlightreactions",{"_index":1919,"title":{},"body":{"controllers/HighlightController.html":{}}}],["getallhighlightreactions(@param(\"id",{"_index":1951,"title":{},"body":{"controllers/HighlightController.html":{}}}],["getallhighlightreactions(id",{"_index":1928,"title":{},"body":{"controllers/HighlightController.html":{}}}],["getallhighlightuserreactions",{"_index":3303,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["getallhighlightuserreactions(id",{"_index":3327,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["getdomain",{"_index":4646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getdomain(\"admin",{"_index":4925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getdomain(\"app",{"_index":4920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getdomain(\"docs",{"_index":4922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getdomain(\"explore",{"_index":4924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getdomain(\"hot",{"_index":4921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getfollowinghighlightrepos",{"_index":3304,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["getfollowinghighlightrepos(pageoptionsdto",{"_index":3329,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["getfollowinghighlights",{"_index":3305,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["getfollowinghighlights(pageoptionsdto",{"_index":3335,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["getfollowstatusbyusername",{"_index":3272,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["getfollowstatusbyusername(username",{"_index":3279,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["getinsight",{"_index":2294,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["getinsight(interval",{"_index":2301,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["getpullrequestinsights",{"_index":2233,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["getpullrequestinsights(@query",{"_index":2261,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["getpullrequestinsights(pageoptionsdto",{"_index":2236,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["getrepofilters",{"_index":2450,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["getrepofilters(options",{"_index":2454,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["getschemapath(model",{"_index":4891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(pagedto",{"_index":4890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsession",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["getsession(@user",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["getsession(user",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["getskip",{"_index":2220,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getstripe",{"_index":2816,"title":{},"body":{"injectables/StripeService.html":{}}}],["getting",{"_index":3805,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["getuserhighlight",{"_index":3306,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["getuserhighlight(@param(\"id",{"_index":3349,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["getuserhighlight(id",{"_index":3338,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["getusernotifications",{"_index":3585,"title":{},"body":{"controllers/UserNotificationController.html":{}}}],["getusernotifications(userid",{"_index":3586,"title":{},"body":{"controllers/UserNotificationController.html":{}}}],["ghcr.io/open",{"_index":4734,"title":{},"body":{"index.html":{}}}],["git",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":4847,"title":{},"body":{"properties.html":{}}}],["github",{"_index":585,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"entities/DbContribution.html":{},"injectables/PullRequestDescriptionService.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["github\")[0",{"_index":3746,"title":{},"body":{"injectables/UserService.html":{}}}],["github.com",{"_index":3426,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["github.com/open",{"_index":841,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbUserHighlight.html":{}}}],["github.created_at",{"_index":3757,"title":{},"body":{"injectables/UserService.html":{}}}],["github_sponsors_url",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["given",{"_index":537,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["globals",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["goes",{"_index":1192,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["gpt",{"_index":4935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":4777,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4829,"title":{},"body":{"modules.html":{},"properties.html":{}}}],["groupby(\"users.login",{"_index":1764,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["grouped",{"_index":1692,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["guard",{"_index":1768,"title":{"guards/EndorsementTokenGuard.html":{}},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["guarded",{"_index":2627,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["guards",{"_index":1769,"title":{},"body":{"guards/EndorsementTokenGuard.html":{},"changelog.html":{}}}],["guide",{"_index":4756,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":4757,"title":{},"body":{"index.html":{}}}],["hack",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":3731,"title":{},"body":{"injectables/UserService.html":{}}}],["handler",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["handlestripewebhook",{"_index":2865,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["handlestripewebhook(@req",{"_index":2921,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["handlestripewebhook(req",{"_index":2867,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["hasnextpage",{"_index":2187,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":2188,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["hasty",{"_index":4332,"title":{},"body":{"changelog.html":{}}}],["headers",{"_index":470,"title":{},"body":{"interfaces/ChatResponse.html":{},"controllers/EndorsementController.html":{},"guards/EndorsementTokenGuard.html":{},"injectables/OpenAiService.html":{}}}],["headers(\"x",{"_index":1676,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["health",{"_index":1867,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["health.controller",{"_index":1913,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":1879,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1876,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1865,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":13,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["healthstatusservice",{"_index":1870,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":1874,"title":{},"body":{"controllers/HealthController.html":{}}}],["hello@opensauced.pizza",{"_index":800,"title":{},"body":{"classes/CreateInsightMemberDto.html":{},"entities/DbInsightMember.html":{},"classes/UpdateUserDto.html":{}}}],["hello@opensauced.pizza'})@column({type",{"_index":1136,"title":{},"body":{"entities/DbInsightMember.html":{}}}],["hello@opensauced.pizza'})@isemail",{"_index":797,"title":{},"body":{"classes/CreateInsightMemberDto.html":{},"classes/UpdateUserDto.html":{}}}],["hereby",{"_index":4776,"title":{},"body":{"license.html":{}}}],["hey",{"_index":1441,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["hidden",{"_index":4295,"title":{},"body":{"changelog.html":{}}}],["hide",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserHighlightDto.html":{},"entities/DbEmoji.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"modules/UserModule.html":{},"injectables/UserNotificationService.html":{},"changelog.html":{},"coverage.html":{}}}],["highlight'})@apibadrequestresponse({description",{"_index":3317,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight'})@apiokresponse({type",{"_index":1930,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserHighlightsController.html":{}}}],["highlight.controller",{"_index":1956,"title":{},"body":{"modules/HighlightModule.html":{},"modules/UserModule.html":{}}}],["highlight.controller.ts",{"_index":3297,"title":{},"body":{"controllers/UserHighlightsController.html":{},"coverage.html":{}}}],["highlight.controller.ts:105",{"_index":3322,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight.controller.ts:124",{"_index":3328,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight.controller.ts:142",{"_index":3313,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight.controller.ts:165",{"_index":3326,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight.controller.ts:187",{"_index":3337,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight.controller.ts:203",{"_index":3334,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight.controller.ts:51",{"_index":3318,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight.controller.ts:66",{"_index":3339,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight.controller.ts:81",{"_index":3342,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight.created_at",{"_index":3356,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight.dto",{"_index":3344,"title":{},"body":{"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{}}}],["highlight.dto.ts",{"_index":825,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"coverage.html":{}}}],["highlight.dto.ts:11",{"_index":843,"title":{},"body":{"classes/CreateUserHighlightDto.html":{}}}],["highlight.dto.ts:20",{"_index":840,"title":{},"body":{"classes/CreateUserHighlightDto.html":{}}}],["highlight.dto.ts:30",{"_index":831,"title":{},"body":{"classes/CreateUserHighlightDto.html":{}}}],["highlight.dto.ts:39",{"_index":838,"title":{},"body":{"classes/CreateUserHighlightDto.html":{}}}],["highlight.entity",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"entities/DbUserHighlightReaction.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"controllers/UserController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"modules/UserModule.html":{}}}],["highlight.entity.ts",{"_index":1460,"title":{},"body":{"entities/DbUserHighlight.html":{},"coverage.html":{}}}],["highlight.entity.ts:104",{"_index":1479,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:115",{"_index":1465,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:126",{"_index":1472,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:137",{"_index":1471,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:145",{"_index":1486,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:153",{"_index":1478,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:29",{"_index":1469,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:36",{"_index":1488,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:43",{"_index":1484,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:50",{"_index":1481,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:60",{"_index":1468,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:70",{"_index":1475,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:80",{"_index":1463,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:90",{"_index":1482,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.entity.ts:97",{"_index":1464,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlight.highlight",{"_index":3441,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlight.shipped_at",{"_index":3443,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlight.title",{"_index":3442,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlight.url",{"_index":3440,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlight.user_id",{"_index":3364,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight/dtos/highlight",{"_index":3345,"title":{},"body":{"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{}}}],["highlight/entities/user",{"_index":3346,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["highlight/highlight.module",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["highlight_id",{"_index":1477,"title":{},"body":{"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"injectables/UserHighlightsService.html":{}}}],["highlight_reaction",{"_index":4672,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["highlightcontroller",{"_index":1914,"title":{"controllers/HighlightController.html":{}},"body":{"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"coverage.html":{}}}],["highlightid",{"_index":3314,"title":{},"body":{"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{}}}],["highlightmodule",{"_index":14,"title":{"modules/HighlightModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightModule.html":{},"modules.html":{},"overview.html":{}}}],["highlightoptionsdto",{"_index":1520,"title":{"classes/HighlightOptionsDto.html":{}},"body":{"classes/DbUserHighlightReactionResponse.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"coverage.html":{}}}],["highlightreaction",{"_index":1057,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbUserHighlight.html":{},"miscellaneous/enumerations.html":{}}}],["highlightreaction.emoji",{"_index":1058,"title":{},"body":{"entities/DbEmoji.html":{}}}],["highlightreaction.highlight",{"_index":1492,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlightreaction.highlight)@joincolumn({name",{"_index":1476,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["highlights",{"_index":1916,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserController.html":{},"controllers/UserHighlightsController.html":{},"changelog.html":{}}}],["highlights.service",{"_index":1939,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserController.html":{},"controllers/UserHighlightsController.html":{},"modules/UserModule.html":{}}}],["highlights.service.ts",{"_index":3371,"title":{},"body":{"injectables/UserHighlightsService.html":{},"coverage.html":{}}}],["highlights.service.ts:139",{"_index":3394,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlights.service.ts:15",{"_index":3381,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlights.service.ts:154",{"_index":3384,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlights.service.ts:166",{"_index":3403,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlights.service.ts:170",{"_index":3390,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlights.service.ts:174",{"_index":3396,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlights.service.ts:193",{"_index":3401,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlights.service.ts:210",{"_index":3387,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlights.service.ts:24",{"_index":3388,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlights.service.ts:242",{"_index":3392,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlights.service.ts:30",{"_index":3399,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlights.service.ts:51",{"_index":3393,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlights.service.ts:99",{"_index":3398,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["highlightuserid",{"_index":3386,"title":{},"body":{"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{}}}],["holders",{"_index":4816,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":4843,"title":{},"body":{"properties.html":{}}}],["host",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"guards/EndorsementTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":1781,"title":{},"body":{"guards/EndorsementTokenGuard.html":{}}}],["hot",{"_index":4354,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{}}}],["http(s)?:\\/\\/)?([\\w]+\\.)?github\\.com",{"_index":3420,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["httpcode",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["httphealthindicator",{"_index":1877,"title":{},"body":{"controllers/HealthController.html":{}}}],["httploggermiddleware",{"_index":102,"title":{"injectables/HttpLoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpLoggerMiddleware.html":{},"coverage.html":{}}}],["httpmodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["https://api.github.com/repos/denoland/fresh/labels/showcase",{"_index":1262,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["https://avatars.githubusercontent.com/u/25160953?v=4",{"_index":1312,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["https://avatars.githubusercontent.com/u/25160953?v=4'})@column('text",{"_index":1236,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["https://github.com/open",{"_index":754,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"entities/DbContribution.html":{},"properties.html":{}}}],["https://github.com/sponsors/open",{"_index":2984,"title":{},"body":{"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{}}}],["https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png?v8",{"_index":1068,"title":{},"body":{"entities/DbEmoji.html":{}}}],["https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png?v8'})@column({type",{"_index":1061,"title":{},"body":{"entities/DbEmoji.html":{}}}],["https://opensauced.pizza",{"_index":3010,"title":{},"body":{"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{}}}],["https://opensauced.pizza'})@isurl()@isoptional",{"_index":3092,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["https://www.linkedin.com/in/brianldouglas",{"_index":2995,"title":{},"body":{"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{}}}],["https://www.linkedin.com/in/brianldouglas'})@isurl()@isoptional",{"_index":3074,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["httpstatus",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["human",{"_index":1184,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["humorous",{"_index":1853,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["id",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"injectables/CustomerService.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoInfo.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StripeService.html":{},"controllers/StripeWebhookController.html":{},"classes/SupabaseAuthDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["id'})@apinotfoundresponse({description",{"_index":1636,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["id'})@apiokresponse({type",{"_index":1660,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/InsightController.html":{},"controllers/RepoController.html":{}}}],["identifier",{"_index":987,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/SupabaseAuthDto.html":{},"coverage.html":{}}}],["identities",{"_index":3743,"title":{},"body":{"injectables/UserService.html":{}}}],["identities!.filter((identity",{"_index":3744,"title":{},"body":{"injectables/UserService.html":{}}}],["identity.provider",{"_index":3745,"title":{},"body":{"injectables/UserService.html":{}}}],["ids",{"_index":3659,"title":{},"body":{"classes/UserRepoOptionsDto-1.html":{}}}],["ignore",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"classes/UpdateUserCollaborationDto.html":{}}}],["image",{"_index":4750,"title":{},"body":{"index.html":{}}}],["immediate",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":4226,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":916,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{},"guards/EndorsementTokenGuard.html":{},"injectables/HttpLoggerMiddleware.html":{}}}],["implied",{"_index":4807,"title":{},"body":{"license.html":{}}}],["import",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/ContributorModule.html":{},"modules/CustomerModule.html":{},"modules/EmojiModule.html":{},"modules/EndorsementModule.html":{},"modules/HealthModule.html":{},"modules/HighlightModule.html":{},"modules/InsightsModule.html":{},"modules/LogModule.html":{},"modules/PullRequestModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/StripeModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/StripeWebHookModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/UserReposModule.html":{},"modules/VoteModule.html":{}}}],["improve",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":4802,"title":{},"body":{"license.html":{}}}],["includeemail",{"_index":3704,"title":{},"body":{"injectables/UserService.html":{}}}],["including",{"_index":3968,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["inclusion",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["increase",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":252,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexer",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["indicated",{"_index":2988,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["indicating",{"_index":1098,"title":{},"body":{"entities/DbInsight.html":{},"classes/PageMetaDto.html":{}}}],["individual",{"_index":4137,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["info.dto",{"_index":788,"title":{},"body":{"classes/CreateInsightDto.html":{},"injectables/InsightRepoService.html":{},"injectables/UserReposService.html":{}}}],["info.dto.ts",{"_index":2483,"title":{},"body":{"classes/RepoInfo.html":{},"coverage.html":{}}}],["info.dto.ts:11",{"_index":2488,"title":{},"body":{"classes/RepoInfo.html":{}}}],["info.dto.ts:19",{"_index":2486,"title":{},"body":{"classes/RepoInfo.html":{}}}],["information",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateInsightDto.html":{},"controllers/PullRequestDescriptionController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateInsightDto.html":{},"controllers/UserInsightMemberController.html":{},"changelog.html":{}}}],["information'})@apibearerauth()@useguards(supabaseguard)@apibadrequestresponse({description",{"_index":2269,"title":{},"body":{"controllers/PullRequestDescriptionController.html":{}}}],["information'})@apibearerauth()@useguards(supabaseguard)@apiokresponse({type",{"_index":3487,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["information'})@apiokresponse({type",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["informative",{"_index":1852,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["inherited",{"_index":641,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["initial",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":449,"title":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/ContributionService.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/HttpLoggerMiddleware.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}},"body":{"interfaces/ChatResponse.html":{},"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/ContributionService.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"injectables/HttpLoggerMiddleware.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["injectables",{"_index":523,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/ContributionService.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/HttpLoggerMiddleware.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"overview.html":{}}}],["injectdatasource",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["injectdatasource(\"apiconnection",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["injectdatasource(\"logconnection",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["injectrepository",{"_index":676,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/CustomerService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeSubscriptionService.html":{},"injectables/SubmitService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["injectrepository(dbcontribution",{"_index":684,"title":{},"body":{"injectables/ContributionService.html":{}}}],["injectrepository(dbcustomer",{"_index":907,"title":{},"body":{"injectables/CustomerService.html":{}}}],["injectrepository(dbemoji",{"_index":1611,"title":{},"body":{"injectables/EmojiService.html":{}}}],["injectrepository(dbendorsement",{"_index":1741,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["injectrepository(dbinsight",{"_index":2128,"title":{},"body":{"injectables/InsightsService.html":{}}}],["injectrepository(dbinsightmember",{"_index":2047,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["injectrepository(dbinsightrepo",{"_index":2092,"title":{},"body":{"injectables/InsightRepoService.html":{}}}],["injectrepository(dblog",{"_index":2158,"title":{},"body":{"injectables/LogService.html":{}}}],["injectrepository(dbprinsight",{"_index":2309,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["injectrepository(dbpullrequest",{"_index":2369,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["injectrepository(dbrepo",{"_index":2534,"title":{},"body":{"injectables/RepoService.html":{}}}],["injectrepository(dbrepotouserstargazers",{"_index":2794,"title":{},"body":{"injectables/StargazeService.html":{}}}],["injectrepository(dbrepotouserstars",{"_index":2766,"title":{},"body":{"injectables/StarService.html":{}}}],["injectrepository(dbrepotousersubmissions",{"_index":2961,"title":{},"body":{"injectables/SubmitService.html":{}}}],["injectrepository(dbrepotouservotes",{"_index":3795,"title":{},"body":{"injectables/VoteService.html":{}}}],["injectrepository(dbsubscription",{"_index":2853,"title":{},"body":{"injectables/StripeSubscriptionService.html":{}}}],["injectrepository(dbuser",{"_index":3722,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(dbusercollaboration",{"_index":3170,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["injectrepository(dbuserhighlight",{"_index":3404,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["injectrepository(dbuserhighlightreaction",{"_index":3405,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["injectrepository(dbusernotification",{"_index":3613,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["injectrepository(dbuserrepo",{"_index":3679,"title":{},"body":{"injectables/UserReposService.html":{}}}],["injectrepository(dbusertouserfollows",{"_index":3254,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["innerjoin(\"insights",{"_index":2062,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["innerjoin(\"repos",{"_index":1750,"title":{},"body":{"injectables/EndorsementService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{}}}],["innerjoin(\"users",{"_index":3407,"title":{},"body":{"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{}}}],["innerjoinandselect(\"user_collaborations.request_user",{"_index":3177,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["innerjoinandselect(\"user_collaborations.user",{"_index":3176,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["innerjoinandselect(`insights.user",{"_index":2131,"title":{},"body":{"injectables/InsightsService.html":{}}}],["insert",{"_index":1144,"title":{},"body":{"entities/DbInsightMember.html":{},"entities/DbPullRequest.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{}}}],["inserting/updating",{"_index":2917,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["insight",{"_index":773,"title":{},"body":{"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"changelog.html":{},"coverage.html":{}}}],["insight'})@apibadrequestresponse({description",{"_index":1997,"title":{},"body":{"controllers/InsightController.html":{},"controllers/UserInsightsController.html":{}}}],["insight'})@apibearerauth()@useguards(supabaseguard)@apiokresponse({type",{"_index":3473,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["insight.controller",{"_index":2104,"title":{},"body":{"modules/InsightsModule.html":{}}}],["insight.controller.ts",{"_index":3524,"title":{},"body":{"controllers/UserInsightsController.html":{},"coverage.html":{}}}],["insight.controller.ts:106",{"_index":3532,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["insight.controller.ts:58",{"_index":3529,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["insight.controller.ts:76",{"_index":3527,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["insight.dto",{"_index":2004,"title":{},"body":{"controllers/InsightController.html":{},"classes/UpdateInsightDto.html":{},"controllers/UserInsightsController.html":{}}}],["insight.dto.ts",{"_index":769,"title":{},"body":{"classes/CreateInsightDto.html":{},"classes/UpdateInsightDto.html":{},"coverage.html":{}}}],["insight.dto.ts:14",{"_index":778,"title":{},"body":{"classes/CreateInsightDto.html":{}}}],["insight.dto.ts:22",{"_index":776,"title":{},"body":{"classes/CreateInsightDto.html":{}}}],["insight.dto.ts:32",{"_index":784,"title":{},"body":{"classes/CreateInsightDto.html":{}}}],["insight.entity",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"entities/DbInsightRepo.html":{},"controllers/PullRequestController.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{}}}],["insight.entity.ts",{"_index":1172,"title":{},"body":{"entities/DbPRInsight.html":{},"coverage.html":{}}}],["insight.entity.ts:14",{"_index":1190,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["insight.entity.ts:26",{"_index":1197,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["insight.entity.ts:37",{"_index":1188,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["insight.entity.ts:48",{"_index":1181,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["insight.entity.ts:59",{"_index":1180,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["insight.entity.ts:70",{"_index":1199,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["insight.id",{"_index":3499,"title":{},"body":{"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["insight.repos",{"_index":1162,"title":{},"body":{"entities/DbInsightRepo.html":{}}}],["insight.repos)@joincolumn({name",{"_index":1157,"title":{},"body":{"entities/DbInsightRepo.html":{}}}],["insight.repos.filter((insightrepo",{"_index":3549,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["insight/dtos/insight",{"_index":1798,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"injectables/RepoFilterService.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{}}}],["insight/entities/insight",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["insight/entities/insight.entity",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["insight/insights.module",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["insight_id",{"_index":1123,"title":{},"body":{"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"controllers/UserInsightMemberController.html":{}}}],["insight_members",{"_index":1148,"title":{},"body":{"entities/DbInsightMember.html":{},"injectables/InsightsService.html":{}}}],["insight_members.insight_id=insights.id",{"_index":2063,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["insight_members.user_id=users.id",{"_index":2064,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["insight_members_invitation_email",{"_index":2061,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["insight_members_name",{"_index":2059,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["insight_repos",{"_index":1161,"title":{},"body":{"entities/DbInsightRepo.html":{},"injectables/InsightsService.html":{}}}],["insightcontroller",{"_index":1983,"title":{"controllers/InsightController.html":{}},"body":{"controllers/InsightController.html":{},"modules/InsightsModule.html":{},"coverage.html":{}}}],["insightfilterfieldsenum",{"_index":1789,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"injectables/RepoFilterService.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["insightfilterfieldsenum'})@isenum(insightfilterfieldsenum)@isoptional",{"_index":1790,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{}}}],["insightfilterfieldsenum.mostspammed",{"_index":2475,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["insightfilterfieldsenum.recent",{"_index":2467,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["insightfilterfieldsenum.top100",{"_index":2469,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["insightid",{"_index":2035,"title":{},"body":{"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"controllers/UserInsightMemberController.html":{}}}],["insightmember",{"_index":2031,"title":{},"body":{"injectables/InsightMemberService.html":{},"controllers/UserInsightMemberController.html":{}}}],["insightmember.access",{"_index":3516,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["insightmemberrepository",{"_index":2028,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["insightmemberservice",{"_index":2017,"title":{"injectables/InsightMemberService.html":{}},"body":{"injectables/InsightMemberService.html":{},"modules/InsightsModule.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"coverage.html":{},"overview.html":{}}}],["insightoptionsdto",{"_index":2066,"title":{"classes/InsightOptionsDto.html":{}},"body":{"classes/InsightOptionsDto.html":{},"coverage.html":{}}}],["insightpageoptionsdto",{"_index":2080,"title":{"classes/InsightPageOptionsDto.html":{}},"body":{"classes/InsightPageOptionsDto.html":{},"injectables/InsightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"coverage.html":{}}}],["insightrepo",{"_index":1105,"title":{},"body":{"entities/DbInsight.html":{},"controllers/UserInsightsController.html":{}}}],["insightrepo.deleted_at",{"_index":3550,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["insightrepo.insight",{"_index":1106,"title":{},"body":{"entities/DbInsight.html":{}}}],["insightreporepository",{"_index":2087,"title":{},"body":{"injectables/InsightRepoService.html":{}}}],["insightreposervice",{"_index":2081,"title":{"injectables/InsightRepoService.html":{}},"body":{"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"controllers/UserInsightsController.html":{},"coverage.html":{},"overview.html":{}}}],["insightrepository",{"_index":2116,"title":{},"body":{"injectables/InsightsService.html":{}}}],["insights",{"_index":1118,"title":{},"body":{"entities/DbInsight.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"controllers/PullRequestController.html":{},"classes/SupabaseAuthDto.html":{},"controllers/UserInsightsController.html":{},"changelog.html":{},"index.html":{}}}],["insights.id",{"_index":2139,"title":{},"body":{"injectables/InsightsService.html":{}}}],["insights.id=insight_repos.insight_id",{"_index":2133,"title":{},"body":{"injectables/InsightsService.html":{}}}],["insights.service",{"_index":2007,"title":{},"body":{"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"modules/InsightsModule.html":{},"controllers/PullRequestController.html":{},"modules/PullRequestModule.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["insights.service.ts",{"_index":2293,"title":{},"body":{"injectables/PullRequestInsightsService.html":{},"coverage.html":{}}}],["insights.service.ts:10",{"_index":2298,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["insights.service.ts:17",{"_index":2300,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["insights.service.ts:21",{"_index":2304,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["insights.service.ts:44",{"_index":2302,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["insights_role",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{}}}],["insightservice",{"_index":2026,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["insightsmodule",{"_index":15,"title":{"modules/InsightsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InsightsModule.html":{},"modules.html":{},"overview.html":{}}}],["insightsreposervice",{"_index":3534,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["insightsservice",{"_index":2006,"title":{"injectables/InsightsService.html":{}},"body":{"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"coverage.html":{},"overview.html":{}}}],["inspection",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":4698,"title":{},"body":{"index.html":{}}}],["installed",{"_index":4683,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":553,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["instead",{"_index":4141,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instructions",{"_index":580,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{}}}],["integer",{"_index":1049,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsightMember.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlightReaction.html":{},"injectables/UserService.html":{}}}],["integration",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":4841,"title":{},"body":{"properties.html":{}}}],["interest",{"_index":2586,"title":{},"body":{"injectables/RepoService.html":{}}}],["interests",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RepoService.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["interests.dto",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["interests.dto.ts",{"_index":3104,"title":{},"body":{"classes/UpdateUserProfileInterestsDto.html":{},"coverage.html":{}}}],["interests.dto.ts:12",{"_index":3106,"title":{},"body":{"classes/UpdateUserProfileInterestsDto.html":{}}}],["interests.map(async",{"_index":2585,"title":{},"body":{"injectables/RepoService.html":{}}}],["interface",{"_index":441,"title":{"interfaces/ChatResponse.html":{},"interfaces/PageMetaParameters.html":{}},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{},"interfaces/PageMetaParameters.html":{},"coverage.html":{}}}],["interfaces",{"_index":443,"title":{},"body":{"interfaces/ChatResponse.html":{},"interfaces/PageMetaParameters.html":{},"overview.html":{}}}],["internal",{"_index":1271,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["interval",{"_index":1176,"title":{},"body":{"entities/DbPRInsight.html":{},"controllers/PullRequestController.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"injectables/UserService.html":{}}}],["invalid",{"_index":504,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["invitation",{"_index":1135,"title":{},"body":{"entities/DbInsightMember.html":{},"controllers/UserInsightMemberController.html":{}}}],["invitation_email",{"_index":1124,"title":{},"body":{"entities/DbInsightMember.html":{},"controllers/UserInsightMemberController.html":{}}}],["invitation_emailed_at",{"_index":1125,"title":{},"body":{"entities/DbInsightMember.html":{}}}],["invite",{"_index":796,"title":{},"body":{"classes/CreateInsightMemberDto.html":{},"entities/DbUserNotification.html":{}}}],["invites",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["is_accepted",{"_index":1352,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{},"changelog.html":{}}}],["is_favorite",{"_index":1088,"title":{},"body":{"entities/DbInsight.html":{}}}],["is_onboarded",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["is_open_sauced_member",{"_index":3751,"title":{},"body":{"injectables/UserService.html":{}}}],["is_public",{"_index":770,"title":{},"body":{"classes/CreateInsightDto.html":{},"entities/DbInsight.html":{},"classes/UpdateInsightDto.html":{},"controllers/UserInsightsController.html":{}}}],["is_waitlisted",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"injectables/UserService.html":{}}}],["isarray",{"_index":782,"title":{},"body":{"classes/CreateInsightDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/PageDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"classes/UserRepoOptionsDto-1.html":{}}}],["isarray()@apiproperty({isarray",{"_index":2175,"title":{},"body":{"classes/PageDto.html":{}}}],["isboolean",{"_index":786,"title":{},"body":{"classes/CreateInsightDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{}}}],["iscreatinglogs",{"_index":2162,"title":{},"body":{"injectables/LogService.html":{}}}],["isdatestring",{"_index":844,"title":{},"body":{"classes/CreateUserHighlightDto.html":{}}}],["isemail",{"_index":799,"title":{},"body":{"classes/CreateInsightMemberDto.html":{},"classes/UpdateUserDto.html":{}}}],["isenum",{"_index":656,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{}}}],["isenum(contributionorderfieldsenum",{"_index":665,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{}}}],["isenum(insightfilterfieldsenum",{"_index":1799,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{}}}],["isenum(orderdirectionenum",{"_index":2226,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(pullrequestorderfieldsenum",{"_index":2351,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{}}}],["isenum(pullrequeststatusenum",{"_index":2352,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{}}}],["isenum(repoorderfieldsenum",{"_index":2509,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["isglobal",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["isin",{"_index":1823,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/PageOptionsDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{}}}],["isin([\"accept",{"_index":3062,"title":{},"body":{"classes/UpdateUserCollaborationDto.html":{}}}],["isin([\"english",{"_index":1830,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["isin([\"exciting",{"_index":1856,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["isin([\"view",{"_index":3056,"title":{},"body":{"classes/UpdateInsightMemberDto.html":{}}}],["isin([7",{"_index":2227,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isint",{"_index":2222,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["ismember",{"_index":3503,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["isnumber",{"_index":761,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/RepoInfo.html":{}}}],["isoptional",{"_index":657,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserHighlightDto.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/FilterOptionsDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isstring",{"_index":804,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["isstring",{"_index":760,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoInfo.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserOnboardingDto.html":{}}}],["isstring()@isoptional",{"_index":752,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"classes/FilterOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{}}}],["issues",{"_index":2500,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["isurl",{"_index":3094,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isvalid",{"_index":1784,"title":{},"body":{"guards/EndorsementTokenGuard.html":{}}}],["italian",{"_index":1812,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["item",{"_index":1766,"title":{},"body":{"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/PullRequestInsightsService.html":{},"controllers/RepoContributionsController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{}}}],["item.id",{"_index":2413,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["itemcount",{"_index":695,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{}}}],["items",{"_index":2195,"title":{},"body":{"classes/PageMetaDto.html":{},"miscellaneous/variables.html":{}}}],["javascript",{"_index":2230,"title":{},"body":{"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{}}}],["javascript'})@isstring()@isoptional",{"_index":2229,"title":{},"body":{"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{}}}],["javscript",{"_index":2070,"title":{},"body":{"classes/InsightOptionsDto.html":{}}}],["javscript'})@isstring()@isoptional",{"_index":2071,"title":{},"body":{"classes/InsightOptionsDto.html":{}}}],["job",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["jobs",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":4041,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["join(\"\\n",{"_index":545,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["joincolumn",{"_index":1013,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbInsight.html":{},"entities/DbInsightRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserTopRepo.html":{}}}],["js",{"_index":3720,"title":{},"body":{"injectables/UserService.html":{}}}],["js/dist/module/lib/types",{"_index":452,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["json",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["json.stringify",{"_index":475,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["json.stringify(parameters",{"_index":955,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["json.stringify(subscription.metadata",{"_index":2896,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["jwt",{"_index":3028,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["key's",{"_index":4694,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":4842,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":4806,"title":{},"body":{"license.html":{}}}],["kindly",{"_index":4688,"title":{},"body":{"index.html":{}}}],["korean",{"_index":1817,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["la_kwdofcv7488aaaabcar",{"_index":1267,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["label",{"_index":1257,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["label_names",{"_index":1214,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["labels",{"_index":1215,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["landing",{"_index":4919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["language",{"_index":534,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["last",{"_index":990,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/PullRequestController.html":{},"classes/SupabaseAuthDto.html":{}}}],["last_merged_at",{"_index":663,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"miscellaneous/enumerations.html":{}}}],["last_sign_in_at",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{}}}],["last_updated_at",{"_index":1216,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["latest",{"_index":2893,"title":{},"body":{"controllers/StripeWebhookController.html":{},"changelog.html":{}}}],["leave",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["left",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["leftjoin(\"users",{"_index":1752,"title":{},"body":{"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{}}}],["leftjoinandmapmany(\"repo.contributions",{"_index":2548,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(\"repo.user",{"_index":2546,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(`insights.repos",{"_index":2132,"title":{},"body":{"injectables/InsightsService.html":{}}}],["leftjoinandselect(dbrepotouserstars",{"_index":2547,"title":{},"body":{"injectables/RepoService.html":{}}}],["lenght",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["length",{"_index":965,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserNotification.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"changelog.html":{}}}],["letters",{"_index":3085,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["level",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateLogDto.html":{},"injectables/CustomLogger.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbLog.html":{}}}],["levelfirst",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["leverage",{"_index":4723,"title":{},"body":{"index.html":{}}}],["liability",{"_index":4820,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4817,"title":{},"body":{"license.html":{}}}],["lib",{"_index":4718,"title":{},"body":{"index.html":{}}}],["library",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":4006,"title":{"license.html":{}},"body":{"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":625,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/RepoFilterService.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{},"changelog.html":{}}}],["limit(1",{"_index":2321,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["limit(pageoptionsdto.limit",{"_index":694,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{}}}],["limitation",{"_index":4785,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4808,"title":{},"body":{"license.html":{}}}],["limits",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":463,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{},"injectables/UserHighlightsService.html":{}}}],["line_items",{"_index":2829,"title":{},"body":{"injectables/StripeService.html":{}}}],["lines",{"_index":1226,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["link",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["linkedin",{"_index":2994,"title":{},"body":{"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{}}}],["linkedin_url",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["links",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["lint",{"_index":4298,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":4244,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["lintthis",{"_index":4736,"title":{},"body":{"index.html":{}}}],["list",{"_index":4031,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["listallpullrequests",{"_index":2234,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["listallpullrequests(@query",{"_index":2255,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["listallpullrequests(pageoptionsdto",{"_index":2243,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["listing",{"_index":1587,"title":{},"body":{"controllers/EmojiController.html":{},"controllers/RepoContributionsController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserRecommendationController.html":{},"changelog.html":{}}}],["literal",{"_index":448,"title":{},"body":{"interfaces/ChatResponse.html":{}}}],["live",{"_index":4675,"title":{},"body":{"index.html":{}}}],["load",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["loading",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["loadrelationcountandmap(\"repo.contributionscount",{"_index":2555,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.stargazerscount",{"_index":2558,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.starscount",{"_index":2559,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.submissionscount",{"_index":2557,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.votescount",{"_index":2556,"title":{},"body":{"injectables/RepoService.html":{}}}],["local",{"_index":2979,"title":{},"body":{"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["localhost",{"_index":4697,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["log",{"_index":855,"title":{},"body":{"injectables/CustomLogger.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/LogService.html":{}}}],["log(level",{"_index":926,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["log(message",{"_index":867,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["log.dto",{"_index":2157,"title":{},"body":{"injectables/LogService.html":{}}}],["log.dto.ts",{"_index":803,"title":{},"body":{"classes/CreateLogDto.html":{},"coverage.html":{}}}],["log.dto.ts:10",{"_index":807,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:14",{"_index":806,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:6",{"_index":805,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.entity",{"_index":2147,"title":{},"body":{"modules/LogModule.html":{},"injectables/LogService.html":{}}}],["log.service",{"_index":875,"title":{},"body":{"injectables/CustomLogger.html":{},"modules/LogModule.html":{}}}],["log/log.entity",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["logconnection",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{}}}],["logger",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/HttpLoggerMiddleware.html":{},"modules/LogModule.html":{},"controllers/StripeWebhookController.html":{},"changelog.html":{}}}],["logger(`http",{"_index":1964,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["logger(`stripewebhook",{"_index":2885,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["logger.middleware",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["logger.middleware.ts",{"_index":915,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{},"injectables/HttpLoggerMiddleware.html":{},"coverage.html":{}}}],["logger.middleware.ts:11",{"_index":1963,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["logger.middleware.ts:12",{"_index":932,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logger.middleware.ts:20",{"_index":934,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logger.middleware.ts:28",{"_index":936,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logger.middleware.ts:38",{"_index":930,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logger.middleware.ts:42",{"_index":939,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logger.middleware.ts:46",{"_index":928,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logger.middleware.ts:6",{"_index":925,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logger.middleware.ts:61",{"_index":941,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logger.middleware.ts:9",{"_index":1965,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["logger.service",{"_index":874,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.ts",{"_index":851,"title":{},"body":{"injectables/CustomLogger.html":{},"coverage.html":{}}}],["logger.ts:19",{"_index":868,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.ts:29",{"_index":866,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.ts:39",{"_index":872,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.ts:49",{"_index":863,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.ts:59",{"_index":870,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.ts:8",{"_index":861,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["loggermodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forrootasync",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":4134,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["logging.certificate",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.config.ts",{"_index":4644,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging.connection",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.database",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.host",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.maxqueryexecutiontime",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.password",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.port",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.username",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["logic",{"_index":4717,"title":{},"body":{"index.html":{}}}],["login",{"_index":1461,"title":{},"body":{"entities/DbUserHighlight.html":{},"classes/SupabaseAuthDto.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["loglevels",{"_index":877,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logmigration",{"_index":918,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logmigration(message",{"_index":929,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logmodule",{"_index":2142,"title":{"modules/LogModule.html":{}},"body":{"modules/LogModule.html":{},"modules.html":{},"overview.html":{}}}],["logquery",{"_index":919,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logquery(query",{"_index":931,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logqueryerror",{"_index":920,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logqueryerror(error",{"_index":933,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logqueryslow",{"_index":921,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logqueryslow(time",{"_index":935,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logs",{"_index":1170,"title":{},"body":{"entities/DbLog.html":{}}}],["logschemabuild",{"_index":922,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logschemabuild(message",{"_index":938,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["logservice",{"_index":860,"title":{"injectables/LogService.html":{}},"body":{"injectables/CustomLogger.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"coverage.html":{},"overview.html":{}}}],["logsrepository",{"_index":2154,"title":{},"body":{"injectables/LogService.html":{}}}],["logsservice",{"_index":853,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["lower(\"open_pull_requests\".\"state",{"_index":2563,"title":{},"body":{"injectables/RepoService.html":{}}}],["lower(author_login",{"_index":3742,"title":{},"body":{"injectables/UserService.html":{}}}],["lowercase",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":4684,"title":{},"body":{"index.html":{}}}],["made",{"_index":1466,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["main",{"_index":1309,"title":{},"body":{"entities/DbPullRequest.html":{},"changelog.html":{}}}],["main'})@column('text",{"_index":1281,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["make",{"_index":3064,"title":{},"body":{"classes/UpdateUserDto.html":{},"changelog.html":{}}}],["maker",{"_index":3096,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["maker'})@isstring",{"_index":3078,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["managed",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["managesubscriptionstatuschange",{"_index":2866,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["managesubscriptionstatuschange(subscriptionid",{"_index":2872,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["managing",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":4398,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["manytoone",{"_index":1012,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbInsight.html":{},"entities/DbInsightRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserTopRepo.html":{}}}],["marknotificationsasread",{"_index":3596,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["marknotificationsasread(notificationids",{"_index":3610,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["matches",{"_index":3095,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["matches(/^(?!.*?admin)(?!.*?twitter)\\w{0,15}$/i",{"_index":3097,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["matching",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":2210,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["max",{"_index":1821,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/PageOptionsDto.html":{}}}],["max(10",{"_index":1829,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["max(10000",{"_index":2225,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(500",{"_index":1826,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["maximum",{"_index":543,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"injectables/PullRequestDescriptionService.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["maxlength",{"_index":532,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["maxlength(500",{"_index":823,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{}}}],["maxqueryexecutiontime",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["means",{"_index":1194,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["mechanics",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["member",{"_index":795,"title":{},"body":{"classes/CreateInsightMemberDto.html":{},"entities/DbInsightMember.html":{},"classes/UpdateInsightMemberDto.html":{},"controllers/UserInsightMemberController.html":{},"changelog.html":{}}}],["member'})@apibadrequestresponse({description",{"_index":3475,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["member'})@apibody({type",{"_index":3489,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["member.controller",{"_index":2106,"title":{},"body":{"modules/InsightsModule.html":{}}}],["member.controller.ts",{"_index":3466,"title":{},"body":{"controllers/UserInsightMemberController.html":{},"coverage.html":{}}}],["member.controller.ts:136",{"_index":3490,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["member.controller.ts:173",{"_index":3485,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["member.controller.ts:59",{"_index":3481,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["member.controller.ts:89",{"_index":3476,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["member.dto",{"_index":3492,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["member.dto.ts",{"_index":794,"title":{},"body":{"classes/CreateInsightMemberDto.html":{},"classes/UpdateInsightMemberDto.html":{},"coverage.html":{}}}],["member.dto.ts:11",{"_index":798,"title":{},"body":{"classes/CreateInsightMemberDto.html":{}}}],["member.dto.ts:12",{"_index":3055,"title":{},"body":{"classes/UpdateInsightMemberDto.html":{}}}],["member.entity",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"injectables/InsightMemberService.html":{},"modules/InsightsModule.html":{},"controllers/UserInsightMemberController.html":{}}}],["member.entity.ts",{"_index":1121,"title":{},"body":{"entities/DbInsightMember.html":{},"coverage.html":{}}}],["member.entity.ts:108",{"_index":1137,"title":{},"body":{"entities/DbInsightMember.html":{}}}],["member.entity.ts:25",{"_index":1132,"title":{},"body":{"entities/DbInsightMember.html":{}}}],["member.entity.ts:32",{"_index":1134,"title":{},"body":{"entities/DbInsightMember.html":{}}}],["member.entity.ts:39",{"_index":1147,"title":{},"body":{"entities/DbInsightMember.html":{}}}],["member.entity.ts:50",{"_index":1145,"title":{},"body":{"entities/DbInsightMember.html":{}}}],["member.entity.ts:61",{"_index":1128,"title":{},"body":{"entities/DbInsightMember.html":{}}}],["member.entity.ts:71",{"_index":1129,"title":{},"body":{"entities/DbInsightMember.html":{}}}],["member.entity.ts:81",{"_index":1146,"title":{},"body":{"entities/DbInsightMember.html":{}}}],["member.entity.ts:88",{"_index":1130,"title":{},"body":{"entities/DbInsightMember.html":{}}}],["member.entity.ts:98",{"_index":1140,"title":{},"body":{"entities/DbInsightMember.html":{}}}],["member.service",{"_index":2107,"title":{},"body":{"modules/InsightsModule.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["member.service.ts",{"_index":2019,"title":{},"body":{"injectables/InsightMemberService.html":{},"coverage.html":{}}}],["member.service.ts:13",{"_index":2027,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["member.service.ts:20",{"_index":2032,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["member.service.ts:26",{"_index":2041,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["member.service.ts:40",{"_index":2030,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["member.service.ts:44",{"_index":2045,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["member.service.ts:48",{"_index":2043,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["member.service.ts:52",{"_index":2038,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["member.service.ts:80",{"_index":2040,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["memberid",{"_index":3483,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["members",{"_index":3479,"title":{},"body":{"controllers/UserInsightMemberController.html":{},"changelog.html":{}}}],["memory",{"_index":1884,"title":{},"body":{"controllers/HealthController.html":{}}}],["memory_heap",{"_index":4871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_rss",{"_index":4875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memoryhealthindicator",{"_index":1880,"title":{},"body":{"controllers/HealthController.html":{}}}],["mentioned",{"_index":541,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{},"changelog.html":{}}}],["merchantability",{"_index":4810,"title":{},"body":{"license.html":{}}}],["merge",{"_index":991,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbPullRequest.html":{},"changelog.html":{},"license.html":{}}}],["mergeable",{"_index":1217,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["merged",{"_index":1218,"title":{},"body":{"entities/DbPullRequest.html":{},"changelog.html":{}}}],["merged_at",{"_index":1219,"title":{},"body":{"entities/DbPullRequest.html":{},"classes/PullRequestPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["message",{"_index":453,"title":{},"body":{"interfaces/ChatResponse.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"injectables/CustomLogger.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbLog.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserNotification.html":{},"injectables/HttpLoggerMiddleware.html":{},"injectables/OpenAiService.html":{},"classes/UpdateUserDto.html":{},"injectables/UserNotificationService.html":{}}}],["messageformat",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["messages",{"_index":478,"title":{},"body":{"interfaces/ChatResponse.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"injectables/OpenAiService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["meta",{"_index":2171,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"changelog.html":{},"coverage.html":{}}}],["meta.dto",{"_index":682,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"classes/PageDto.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{}}}],["meta.dto.ts",{"_index":2186,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:15",{"_index":2199,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":2197,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:27",{"_index":2202,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:33",{"_index":2194,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:39",{"_index":2192,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":2200,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta_id",{"_index":1528,"title":{},"body":{"entities/DbUserNotification.html":{},"injectables/UserNotificationService.html":{},"changelog.html":{}}}],["metadata",{"_index":1393,"title":{},"body":{"entities/DbSubscription.html":{},"injectables/StripeService.html":{},"controllers/StripeWebhookController.html":{},"changelog.html":{}}}],["method",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ChatResponse.html":{},"injectables/HttpLoggerMiddleware.html":{},"injectables/OpenAiService.html":{}}}],["methods",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseStrategy.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["middleware",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["middlewareconsumer",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["migration",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["migrations",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["min",{"_index":1822,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/PageOptionsDto.html":{}}}],["min(0",{"_index":1828,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["min(1",{"_index":2224,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(100",{"_index":1825,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["minimal",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":2076,"title":{},"body":{"classes/InsightOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["minimumcontributors",{"_index":2075,"title":{},"body":{"classes/InsightOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["minlength",{"_index":819,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{}}}],["minlength(20",{"_index":822,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{}}}],["minlength(3",{"_index":847,"title":{},"body":{"classes/CreateUserHighlightDto.html":{}}}],["minor",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["misaligned",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":4662,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":3964,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mit",{"_index":4772,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mkdocs",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["mm",{"_index":2318,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["mocking",{"_index":4727,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2831,"title":{},"body":{"injectables/StripeService.html":{},"index.html":{}}}],["model",{"_index":476,"title":{},"body":{"interfaces/ChatResponse.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/OpenAiService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["modelname",{"_index":4933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":4787,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/ContributorModule.html":{},"modules/CustomerModule.html":{},"modules/EmojiModule.html":{},"modules/EndorsementModule.html":{},"modules/HealthModule.html":{},"modules/HighlightModule.html":{},"modules/InsightsModule.html":{},"modules/LogModule.html":{},"modules/OpenAiModule.html":{},"modules/PullRequestModule.html":{},"modules/RepoFilterModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/StripeModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/StripeWebHookModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/UserReposModule.html":{},"modules/VoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/ContributorModule.html":{},"modules/CustomerModule.html":{},"modules/EmojiModule.html":{},"modules/EndorsementModule.html":{},"modules/HealthModule.html":{},"modules/HighlightModule.html":{},"modules/InsightsModule.html":{},"modules/LogModule.html":{},"modules/OpenAiModule.html":{},"modules/PullRequestModule.html":{},"modules/RepoFilterModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/StripeModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/StripeWebHookModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/UserReposModule.html":{},"modules/VoteModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/ContributorModule.html":{},"modules/CustomerModule.html":{},"modules/EmojiModule.html":{},"modules/EndorsementModule.html":{},"modules/HealthModule.html":{},"modules/HighlightModule.html":{},"modules/InsightsModule.html":{},"modules/LogModule.html":{},"modules/OpenAiModule.html":{},"modules/PullRequestModule.html":{},"modules/RepoFilterModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/StripeModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/StripeWebHookModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/UserReposModule.html":{},"modules/VoteModule.html":{},"modules.html":{},"overview.html":{}}}],["months",{"_index":2260,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["months'})@apiokresponse({type",{"_index":2241,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["more",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["mostactive",{"_index":2077,"title":{},"body":{"classes/InsightOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["mostspammed",{"_index":2078,"title":{},"body":{"classes/InsightOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["mount",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["mounted",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":4088,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mrpizza",{"_index":3000,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["much",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["n",{"_index":482,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["name",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"classes/CreateInsightDto.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"controllers/HighlightController.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["names",{"_index":1258,"title":{},"body":{"entities/DbPullRequest.html":{},"changelog.html":{}}}],["naming",{"_index":4293,"title":{},"body":{"changelog.html":{}}}],["ncommit",{"_index":2290,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["need",{"_index":4680,"title":{},"body":{"index.html":{}}}],["needs",{"_index":4722,"title":{},"body":{"index.html":{}}}],["nest",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["nestjs",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{},"controllers/UserCollaborationController.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"injectables/CustomLogger.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["nestjs/common/services/console",{"_index":873,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["nestjs/common/utils/cli",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/HttpLoggerMiddleware.html":{}}}],["nestjs/config",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ChatResponse.html":{},"injectables/CustomLogger.html":{},"guards/EndorsementTokenGuard.html":{},"controllers/HealthController.html":{},"modules/LogModule.html":{},"injectables/OpenAiService.html":{},"injectables/StripeService.html":{},"controllers/StripeWebhookController.html":{}}}],["nestjs/passport",{"_index":437,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/swagger",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"classes/ContributionPageOptionsDto.html":{},"controllers/ContributorController.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbInsight.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"controllers/InsightController.html":{},"classes/InsightOptionsDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"classes/PullRequestPageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoInfo.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/StripeWebhookController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto-1.html":{}}}],["nestjs/swagger/dist/decorators/api",{"_index":1020,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["nestjs/terminus",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["nestjs/typeorm",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/ContributorModule.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"modules/HighlightModule.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"injectables/PullRequestService.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"modules/UserModule.html":{},"injectables/UserNotificationService.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["nestjs/typeorm/dist/interfaces/typeorm",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["nestlogger",{"_index":942,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["nestlogger(name",{"_index":945,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["nestmiddleware",{"_index":1966,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["never",{"_index":3021,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["new",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcustomer",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["newcustomer.stripe_customer_id",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["newinsight",{"_index":3540,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["newinsightmember",{"_index":3508,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["newlog",{"_index":2159,"title":{},"body":{"injectables/LogService.html":{}}}],["newuser",{"_index":3753,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.save",{"_index":3759,"title":{},"body":{"injectables/UserService.html":{}}}],["newuserhighlight",{"_index":3438,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["newuserrepo",{"_index":3682,"title":{},"body":{"injectables/UserReposService.html":{}}}],["next",{"_index":462,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/HttpLoggerMiddleware.html":{},"injectables/OpenAiService.html":{},"classes/PageMetaDto.html":{},"injectables/UserHighlightsService.html":{},"index.html":{}}}],["nextfunction",{"_index":1962,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["node",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["node>=16.7.0",{"_index":4685,"title":{},"body":{"index.html":{}}}],["node_id",{"_index":1266,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["non",{"_index":587,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"changelog.html":{}}}],["noninfringement",{"_index":4814,"title":{},"body":{"license.html":{}}}],["normalize",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["notable",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":4691,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":1740,"title":{},"body":{"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["notfoundexception(\"unable",{"_index":3772,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception(\"you",{"_index":2775,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/UserFollowService.html":{},"injectables/VoteService.html":{}}}],["notice",{"_index":4800,"title":{},"body":{"license.html":{}}}],["notifcation.service",{"_index":3253,"title":{},"body":{"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{}}}],["notifcation.service.ts",{"_index":3592,"title":{},"body":{"injectables/UserNotificationService.html":{},"coverage.html":{}}}],["notifcation.service.ts:13",{"_index":3598,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["notifcation.service.ts:20",{"_index":3607,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["notifcation.service.ts:26",{"_index":3609,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["notifcation.service.ts:46",{"_index":3605,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["notifcation.service.ts:57",{"_index":3601,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["notifcation.service.ts:69",{"_index":3603,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["notifcation.service.ts:81",{"_index":3611,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["notification",{"_index":1533,"title":{},"body":{"entities/DbUserNotification.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{}}}],["notification.constants",{"_index":1549,"title":{},"body":{"entities/DbUserNotification.html":{},"injectables/UserNotificationService.html":{},"injectables/UserService.html":{}}}],["notification.constants.ts",{"_index":4657,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["notification.controller",{"_index":3579,"title":{},"body":{"modules/UserModule.html":{}}}],["notification.controller.ts",{"_index":3583,"title":{},"body":{"controllers/UserNotificationController.html":{},"coverage.html":{}}}],["notification.controller.ts:25",{"_index":3589,"title":{},"body":{"controllers/UserNotificationController.html":{}}}],["notification.entity",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{}}}],["notification.entity.ts",{"_index":1526,"title":{},"body":{"entities/DbUserNotification.html":{},"coverage.html":{}}}],["notification.entity.ts:15",{"_index":1534,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["notification.entity.ts:22",{"_index":1548,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["notification.entity.ts:29",{"_index":1532,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["notification.entity.ts:40",{"_index":1547,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["notification.entity.ts:50",{"_index":1537,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["notification.entity.ts:60",{"_index":1542,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["notification.entity.ts:70",{"_index":1544,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["notification.entity.ts:80",{"_index":1540,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["notification.id",{"_index":3620,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["notification_count",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{}}}],["notificationids",{"_index":3612,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["notificationids.map(async",{"_index":3634,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["notifications",{"_index":3587,"title":{},"body":{"controllers/UserNotificationController.html":{},"changelog.html":{}}}],["notified_at",{"_index":1529,"title":{},"body":{"entities/DbUserNotification.html":{},"injectables/UserNotificationService.html":{}}}],["now",{"_index":982,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"controllers/UserFollowsController.html":{},"injectables/UserService.html":{}}}],["npm",{"_index":3983,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm>=8.0.0",{"_index":4686,"title":{},"body":{"index.html":{}}}],["null",{"_index":1313,"title":{},"body":{"entities/DbPullRequest.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{}}}],["number",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ChatResponse.html":{},"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"classes/CreateEndorsementDto.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/EndorsementService.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/OpenAiService.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"classes/PullRequestPageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["number(highlight.user_id",{"_index":3362,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["number(insight.user.id",{"_index":2015,"title":{},"body":{"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{}}}],["number(parsefloat(process.env.disk_percengate",{"_index":4879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.disk_size",{"_index":4882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_heap",{"_index":4872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_rss",{"_index":4876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.typeorm_max_query_execution_time_api",{"_index":4908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.typeorm_max_query_execution_time_logging",{"_index":4917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numbers",{"_index":3086,"title":{},"body":{"classes/UpdateUserDto.html":{},"changelog.html":{}}}],["numerical",{"_index":1191,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["oas3",{"_index":4835,"title":{},"body":{"properties.html":{}}}],["object",{"_index":2458,"title":{},"body":{"injectables/RepoFilterService.html":{},"controllers/StripeWebhookController.html":{},"injectables/UserHighlightsService.html":{}}}],["objectliteral",{"_index":2306,"title":{},"body":{"injectables/PullRequestInsightsService.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{}}}],["objects",{"_index":781,"title":{},"body":{"classes/CreateInsightDto.html":{},"classes/UpdateInsightDto.html":{}}}],["obtaining",{"_index":4781,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["octo",{"_index":4770,"title":{},"body":{"index.html":{}}}],["offset(pageoptionsdto.skip",{"_index":693,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{}}}],["old",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["onboarded",{"_index":2989,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["onboarding",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"classes/UserRepoOptionsDto-1.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["onboarding.dto",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["onboarding.dto.ts",{"_index":3638,"title":{},"body":{"classes/UserOnboardingDto.html":{},"coverage.html":{}}}],["onboarding.dto.ts:12",{"_index":3639,"title":{},"body":{"classes/UserOnboardingDto.html":{}}}],["onboarding.dto.ts:20",{"_index":3641,"title":{},"body":{"classes/UserOnboardingDto.html":{}}}],["onboarding/insight",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["onetomany",{"_index":1063,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbInsight.html":{},"entities/DbUserHighlight.html":{}}}],["open",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/CreateInsightDto.html":{},"classes/CreateUserHighlightDto.html":{},"entities/DbInsight.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbUserHighlight.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserRepo.html":{},"classes/FilterOptionsDto.html":{},"controllers/HealthController.html":{},"classes/HighlightOptionsDto.html":{},"modules/OpenAiModule.html":{},"classes/PullRequestContributorOptionsDto.html":{},"injectables/PullRequestDescriptionService.html":{},"modules/PullRequestModule.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoInfo.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["open_pull_requests",{"_index":2562,"title":{},"body":{"injectables/RepoService.html":{}}}],["open_pull_requests\".\"repo_id",{"_index":2564,"title":{},"body":{"injectables/RepoService.html":{}}}],["openaiconfig",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["openaimodule",{"_index":16,"title":{"modules/OpenAiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OpenAiModule.html":{},"modules/PullRequestModule.html":{},"modules.html":{},"overview.html":{}}}],["openaiservice",{"_index":455,"title":{"injectables/OpenAiService.html":{}},"body":{"interfaces/ChatResponse.html":{},"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"injectables/PullRequestDescriptionService.html":{},"coverage.html":{},"overview.html":{}}}],["openapi",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["opening",{"_index":4742,"title":{},"body":{"index.html":{}}}],["opensauced",{"_index":1677,"title":{},"body":{"controllers/EndorsementController.html":{},"guards/EndorsementTokenGuard.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"changelog.html":{}}}],["opensauced'})@isstring()@isoptional",{"_index":3067,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["opensauced.pizza\"}`).tostring",{"_index":4929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operation",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["operationid",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}}}],["optional",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateUserDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["options",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/CustomLogger.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/RepoFilterService.html":{},"changelog.html":{}}}],["options.code}\\n",{"_index":546,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{}}}],["options.commitmessages",{"_index":2289,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["options.commitmessages.join",{"_index":2291,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["options.descriptionlength",{"_index":550,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["options.diff",{"_index":2287,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["options.diff}\\n",{"_index":2288,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["options.dto",{"_index":660,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"classes/DbUserHighlightReactionResponse.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"classes/FilterOptionsDto.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightsService.html":{},"interfaces/PageMetaParameters.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"injectables/PullRequestInsightsService.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserRepoOptionsDto.html":{},"injectables/UserReposService.html":{}}}],["options.dto.ts",{"_index":621,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["options.dto.ts:13",{"_index":1958,"title":{},"body":{"classes/HighlightOptionsDto.html":{}}}],["options.dto.ts:14",{"_index":1791,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{}}}],["options.dto.ts:16",{"_index":2218,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:19",{"_index":2510,"title":{},"body":{"classes/RepoSearchOptionsDto.html":{}}}],["options.dto.ts:21",{"_index":636,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/InsightOptionsDto.html":{}}}],["options.dto.ts:22",{"_index":1797,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{}}}],["options.dto.ts:26",{"_index":2068,"title":{},"body":{"classes/InsightOptionsDto.html":{}}}],["options.dto.ts:27",{"_index":2345,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{}}}],["options.dto.ts:28",{"_index":2216,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:30",{"_index":1794,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":2511,"title":{},"body":{"classes/RepoSearchOptionsDto.html":{}}}],["options.dto.ts:33",{"_index":2217,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":2072,"title":{},"body":{"classes/InsightOptionsDto.html":{}}}],["options.dto.ts:35",{"_index":1796,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{}}}],["options.dto.ts:37",{"_index":2498,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["options.dto.ts:39",{"_index":2069,"title":{},"body":{"classes/InsightOptionsDto.html":{}}}],["options.dto.ts:43",{"_index":2219,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{}}}],["options.dto.ts:45",{"_index":2221,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:51",{"_index":2346,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{}}}],["options.dto.ts:56",{"_index":2347,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{}}}],["options.dto.ts:64",{"_index":2350,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{}}}],["options.dto.ts:72",{"_index":2341,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{}}}],["options.filter",{"_index":2466,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["options.interface",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["options.repo",{"_index":2460,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["options.repoids",{"_index":2325,"title":{},"body":{"injectables/PullRequestInsightsService.html":{},"injectables/RepoFilterService.html":{}}}],["options.repoids.split",{"_index":2326,"title":{},"body":{"injectables/PullRequestInsightsService.html":{},"injectables/RepoFilterService.html":{}}}],["options.temperature",{"_index":551,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["options.tone",{"_index":2292,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["options.topic",{"_index":2463,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["order",{"_index":1047,"title":{},"body":{"entities/DbEmoji.html":{},"injectables/RepoFilterService.html":{},"changelog.html":{},"index.html":{}}}],["orderby",{"_index":624,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{}}}],["orderby(\"endorsements.created_at",{"_index":1748,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["orderby(\"insights.updated_at",{"_index":2140,"title":{},"body":{"injectables/InsightsService.html":{}}}],["orderby(\"user_collaborations.updated_at",{"_index":3179,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["orderby(\"user_highlights.updated_at",{"_index":3414,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["orderby(\"users.name",{"_index":2065,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["orderby(`\"repo\".\"is_fork",{"_index":2575,"title":{},"body":{"injectables/RepoService.html":{}}}],["orderdirection",{"_index":626,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["orderdirectionenum",{"_index":643,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"classes/UserRepoOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["orderdirectionenum.asc",{"_index":2576,"title":{},"body":{"injectables/RepoService.html":{}}}],["orderdirectionenum.desc",{"_index":644,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"classes/UserRepoOptionsDto.html":{}}}],["orderfield",{"_index":687,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["org",{"_index":1640,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["origin",{"_index":1006,"title":{},"body":{"entities/DbContribution.html":{}}}],["originalurl",{"_index":1974,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["orwhere",{"_index":2138,"title":{},"body":{"injectables/InsightsService.html":{}}}],["orwhere(\"lower(users.login",{"_index":1757,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["os.${string(config.get(\"api.codename\")).tolowercase",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["otherwise",{"_index":4823,"title":{},"body":{"license.html":{}}}],["out",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/ContributorModule.html":{},"modules/CustomerModule.html":{},"modules/EmojiModule.html":{},"modules/EndorsementModule.html":{},"modules/HighlightModule.html":{},"modules/InsightsModule.html":{},"modules/LogModule.html":{},"modules/OpenAiModule.html":{},"modules/PullRequestModule.html":{},"modules/RepoFilterModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/StripeModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/StripeWebHookModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/UserReposModule.html":{},"modules/VoteModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["outputs",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":589,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"changelog.html":{}}}],["over",{"_index":2239,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["overview",{"_index":4831,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":4764,"title":{},"body":{"index.html":{}}}],["owner",{"_index":1648,"title":{},"body":{"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{}}}],["owneroruser",{"_index":1755,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["owner}/${repo",{"_index":2569,"title":{},"body":{"injectables/RepoService.html":{}}}],["owner}/${repo}`.tolowercase",{"_index":1758,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["p",{"_index":4730,"title":{},"body":{"index.html":{}}}],["package",{"_index":3926,"title":{"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":4744,"title":{},"body":{"index.html":{}}}],["packages",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":620,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"classes/CreateInsightDto.html":{},"entities/DbInsight.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"controllers/InsightController.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightsService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/UpdateInsightDto.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"classes/UserRepoOptionsDto.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["pagecount",{"_index":2189,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":677,"title":{"classes/PageDto.html":{}},"body":{"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"controllers/HighlightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"classes/PageDto.html":{},"controllers/PullRequestController.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"coverage.html":{}}}],["pagedto(entities",{"_index":698,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{}}}],["pagemetadto",{"_index":681,"title":{"classes/PageMetaDto.html":{}},"body":{"injectables/ContributionService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"coverage.html":{}}}],["pagemetadto})@validatenested()@type(undefined",{"_index":2180,"title":{},"body":{"classes/PageDto.html":{}}}],["pagemetaparameters",{"_index":2191,"title":{"interfaces/PageMetaParameters.html":{}},"body":{"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"coverage.html":{}}}],["pageoptionsdto",{"_index":623,"title":{"classes/PageOptionsDto.html":{}},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"classes/DbUserHighlightReactionResponse.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"classes/FilterOptionsDto.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightsService.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserRepoOptionsDto.html":{},"injectables/UserReposService.html":{},"coverage.html":{}}}],["pageoptionsdto.limit",{"_index":2207,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.orderby",{"_index":688,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["pageoptionsdto.orderdirection",{"_index":691,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["pageoptionsdto.page",{"_index":2205,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.range",{"_index":2372,"title":{},"body":{"injectables/PullRequestService.html":{},"injectables/RepoService.html":{}}}],["pageoptionsdto.repo",{"_index":2580,"title":{},"body":{"injectables/RepoService.html":{},"injectables/UserHighlightsService.html":{}}}],["pageoptionsdto.repoids",{"_index":2579,"title":{},"body":{"injectables/RepoService.html":{}}}],["pageoptionsdto:16",{"_index":648,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["pageoptionsdto:28",{"_index":642,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["pageoptionsdto:33",{"_index":646,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["pageoptionsdto:43",{"_index":654,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["pages",{"_index":2201,"title":{},"body":{"classes/PageMetaDto.html":{},"changelog.html":{}}}],["paginate",{"_index":3188,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["paginated",{"_index":716,"title":{},"body":{"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HighlightController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginates",{"_index":709,"title":{},"body":{"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HighlightController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserEndorsementController.html":{}}}],["paginating",{"_index":2397,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["pagination",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":1663,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["param(\"emojiid",{"_index":3361,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["param(\"id",{"_index":2410,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["param(\"memberid",{"_index":3514,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["param(\"owner",{"_index":1687,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"repo",{"_index":1688,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"repoowneroruser",{"_index":1684,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["param(\"username",{"_index":3210,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserFollowsController.html":{}}}],["parameters",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"controllers/HighlightController.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseStrategy.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["parameters.dto",{"_index":2203,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["parameters.dto.ts",{"_index":2213,"title":{},"body":{"interfaces/PageMetaParameters.html":{},"coverage.html":{}}}],["parseint(`${countqueryresult?.count",{"_index":2388,"title":{},"body":{"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/UserHighlightsService.html":{}}}],["parseint(`${uuid",{"_index":2888,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["parseint(github.id",{"_index":3747,"title":{},"body":{"injectables/UserService.html":{}}}],["parseint(request.user?.user_metadata.sub",{"_index":4960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint8",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["parseintpipe",{"_index":1934,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["partial",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"injectables/UserNotificationService.html":{}}}],["partialtype",{"_index":3045,"title":{},"body":{"classes/UpdateEndorsementDto.html":{}}}],["partialtype(createendorsementdto",{"_index":3046,"title":{},"body":{"classes/UpdateEndorsementDto.html":{}}}],["particular",{"_index":4812,"title":{},"body":{"license.html":{}}}],["passed",{"_index":2285,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["passport",{"_index":3027,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["passportmodule",{"_index":436,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":3025,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["passportstrategy(supabaseauthstrategy",{"_index":3030,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["password",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["patch(\"/:id",{"_index":3351,"title":{},"body":{"controllers/UserHighlightsController.html":{},"controllers/UserInsightsController.html":{}}}],["patch(\"/profile",{"_index":420,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch(\"/profile/email",{"_index":426,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch(\"/profile/interests",{"_index":423,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch(\":id/members/:memberid",{"_index":3513,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["patch('/:id')@apioperation({operationid",{"_index":3341,"title":{},"body":{"controllers/UserHighlightsController.html":{},"controllers/UserInsightsController.html":{}}}],["patch('/profile')@apioperation({operationid",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/profile/email')@apioperation({operationid",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/profile/interests')@apioperation({operationid",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch(':id')@apioperation({operationid",{"_index":3134,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["patch(':id/members/:memberid')@apioperation({operationid",{"_index":3486,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["path",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["paths",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["pattern",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["payment_method_types",{"_index":2824,"title":{},"body":{"injectables/StripeService.html":{}}}],["pending",{"_index":1127,"title":{},"body":{"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"injectables/InsightsService.html":{},"classes/UpdateInsightMemberDto.html":{},"controllers/UserInsightMemberController.html":{},"changelog.html":{}}}],["pending'})@column({type",{"_index":1126,"title":{},"body":{"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{}}}],["per",{"_index":2198,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["performance",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["period",{"_index":1407,"title":{},"body":{"entities/DbSubscription.html":{}}}],["permission",{"_index":4775,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4794,"title":{},"body":{"license.html":{}}}],["person",{"_index":4780,"title":{},"body":{"license.html":{}}}],["persons",{"_index":4795,"title":{},"body":{"license.html":{}}}],["persuasive",{"_index":1851,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["pgmigrate",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["picktype",{"_index":1519,"title":{},"body":{"classes/DbUserHighlightReactionResponse.html":{},"classes/HighlightOptionsDto.html":{}}}],["picktype(dbuserhighlightreaction",{"_index":1522,"title":{},"body":{"classes/DbUserHighlightReactionResponse.html":{},"classes/HighlightOptionsDto.html":{}}}],["pid,hostname,context",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["pinned",{"_index":1462,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["pino",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["pinohttp",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["pipelines",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["pizza",{"_index":3077,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pizza'})@isstring()@isoptional",{"_index":3065,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pizzas",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":4755,"title":{},"body":{"index.html":{}}}],["port",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":4804,"title":{},"body":{"license.html":{}}}],["portuguese",{"_index":1813,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["post",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/EndorsementController.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["post(\"/:id/reactions/:emojiid",{"_index":3359,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["post(\"/checkout/session",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"/description/generate",{"_index":2274,"title":{},"body":{"controllers/PullRequestDescriptionController.html":{}}}],["post(\"/explanation/generate",{"_index":519,"title":{},"body":{"controllers/CodeExplanationController.html":{}}}],["post(\"/onboarding",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"/suggestion/generate",{"_index":568,"title":{},"body":{"controllers/CodeRefactorSuggestionController.html":{}}}],["post(\"/test/generate",{"_index":599,"title":{},"body":{"controllers/CodeTestSuggestionController.html":{}}}],["post(\"/waitlist",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"/webhooks",{"_index":2920,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["post(\":id/members",{"_index":3501,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["post('/')@apioperation({operationid",{"_index":3117,"title":{},"body":{"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightsController.html":{}}}],["post('/')@useguards(endorsementtokenguard)@apioperation({operationid",{"_index":1626,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["post('/:id/reactions/:emojiid')@apioperation({operationid",{"_index":3310,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["post('/checkout/session')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/description/generate')@apioperation({operationid",{"_index":2268,"title":{},"body":{"controllers/PullRequestDescriptionController.html":{}}}],["post('/explanation/generate')@apioperation({operationid",{"_index":498,"title":{},"body":{"controllers/CodeExplanationController.html":{}}}],["post('/onboarding')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/suggestion/generate')@apioperation({operationid",{"_index":561,"title":{},"body":{"controllers/CodeRefactorSuggestionController.html":{}}}],["post('/test/generate')@apioperation({operationid",{"_index":594,"title":{},"body":{"controllers/CodeTestSuggestionController.html":{}}}],["post('/waitlist')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/webhooks')@apiokresponse",{"_index":2869,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["post(':id/members')@apioperation({operationid",{"_index":3471,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["postcreatecheckoutsession",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["postcreatecheckoutsession(@user",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["postcreatecheckoutsession(user",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":4896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postonboarding",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["postonboarding(@userid",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{}}}],["postonboarding(userid",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["postwaitlist",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["postwaitlist(@userid",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["postwaitlist(userid",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["powered",{"_index":4360,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["pr",{"_index":829,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbUserHighlight.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"changelog.html":{}}}],["pr!'})@column('text",{"_index":1480,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["pr!})@isoptional()@isstring",{"_index":839,"title":{},"body":{"classes/CreateUserHighlightDto.html":{}}}],["pr\".\"repo_id\"=\"repos\".\"id",{"_index":2313,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["preferences",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{},"changelog.html":{}}}],["prefix",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}}}],["prefs.dto",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["prefs.dto.ts",{"_index":3098,"title":{},"body":{"classes/UpdateUserEmailPreferencesDto.html":{},"coverage.html":{}}}],["prefs.dto.ts:11",{"_index":3101,"title":{},"body":{"classes/UpdateUserEmailPreferencesDto.html":{}}}],["prefs.dto.ts:19",{"_index":3103,"title":{},"body":{"classes/UpdateUserEmailPreferencesDto.html":{}}}],["prepare",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["prerequisites",{"_index":4679,"title":{},"body":{"index.html":{}}}],["present",{"_index":2281,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["prettier",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["pretty",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["preview",{"_index":4729,"title":{},"body":{"index.html":{}}}],["previous",{"_index":2193,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["price",{"_index":1414,"title":{},"body":{"entities/DbSubscription.html":{},"injectables/StripeService.html":{}}}],["price_12345",{"_index":1429,"title":{},"body":{"entities/DbSubscription.html":{}}}],["price_12345'})@column({type",{"_index":1415,"title":{},"body":{"entities/DbSubscription.html":{}}}],["price_id",{"_index":1394,"title":{},"body":{"entities/DbSubscription.html":{},"controllers/StripeWebhookController.html":{}}}],["primarycolumn",{"_index":1011,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{}}}],["primarycolumn(\"bigint",{"_index":1024,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{}}}],["primarycolumn(\"integer",{"_index":1300,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["primarycolumn(\"text",{"_index":1428,"title":{},"body":{"entities/DbSubscription.html":{}}}],["primarygeneratedcolumn",{"_index":1064,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["primarygeneratedcolumn(\"uuid",{"_index":1171,"title":{},"body":{"entities/DbLog.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":1166,"title":{},"body":{"entities/DbLog.html":{}}}],["prinsightrepository",{"_index":2299,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["print",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/ContributionService.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"controllers/HealthController.html":{},"injectables/HttpLoggerMiddleware.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"controllers/PullRequestController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["proceed",{"_index":4758,"title":{},"body":{"index.html":{}}}],["process",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["process.env.ci",{"_index":4870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.domain",{"_index":4928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":4866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.stripe_webhook_secret",{"_index":4944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.supabase_api_key",{"_index":3035,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_jwt_secret",{"_index":3038,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_url",{"_index":3033,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["production",{"_index":4553,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"classes/UpdateUserDto.html":{},"changelog.html":{}}}],["profile'})@apibearerauth()@useguards(supabaseguard)@apiokresponse({type",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile'})@apibody({type",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["project",{"_index":821,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{},"entities/DbUserCollaboration.html":{},"changelog.html":{},"index.html":{}}}],["project'})@isstring()@minlength(20)@maxlength(500",{"_index":815,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{}}}],["project?'})@column({type",{"_index":1444,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["promise",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"controllers/PullRequestController.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["promise.all",{"_index":2262,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["promise.all(repostoremoverequests",{"_index":3559,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["promise.all(repotoaddrequests",{"_index":3569,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["promise.all(updates",{"_index":3636,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["promises",{"_index":2584,"title":{},"body":{"injectables/RepoService.html":{}}}],["promo",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["proper",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":446,"title":{"properties.html":{}},"body":{"interfaces/ChatResponse.html":{},"classes/ContributionPageOptionsDto.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoInfo.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/StripeService.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"changelog.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property.decorator",{"_index":1021,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["provide",{"_index":4470,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["provided",{"_index":502,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/RepoFilterService.html":{},"controllers/UserFollowsController.html":{},"license.html":{}}}],["providers",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/CustomerModule.html":{},"modules/EmojiModule.html":{},"modules/EndorsementModule.html":{},"modules/InsightsModule.html":{},"modules/LogModule.html":{},"modules/OpenAiModule.html":{},"modules/PullRequestModule.html":{},"modules/RepoFilterModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/StripeModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/StripeWebHookModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/UserReposModule.html":{},"modules/VoteModule.html":{}}}],["prquery",{"_index":2311,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["prs",{"_index":494,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{}}}],["public",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateUserHighlightDto.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"changelog.html":{}}}],["public.users",{"_index":4318,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":4788,"title":{},"body":{"license.html":{}}}],["published",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["pull",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"entities/DbContribution.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbUserHighlight.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"modules/PullRequestModule.html":{},"controllers/UserController.html":{},"injectables/UserHighlightsService.html":{},"modules/UserModule.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["pull_requests",{"_index":1200,"title":{},"body":{"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"injectables/PullRequestService.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"injectables/UserService.html":{}}}],["pull_requests\".\"repo_id\"=\"repos\".\"id",{"_index":2373,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["pull_requests_full_name",{"_index":2378,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["pull_requests_repo_id",{"_index":2380,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["pull_requests_velocity\".\"created_at",{"_index":2566,"title":{},"body":{"injectables/RepoService.html":{}}}],["pullrequestcontributoroptionsdto",{"_index":704,"title":{"classes/PullRequestContributorOptionsDto.html":{}},"body":{"controllers/ContributorController.html":{},"classes/PullRequestContributorOptionsDto.html":{},"injectables/PullRequestService.html":{},"coverage.html":{}}}],["pullrequestcontroller",{"_index":2231,"title":{"controllers/PullRequestController.html":{}},"body":{"controllers/PullRequestController.html":{},"modules/PullRequestModule.html":{},"coverage.html":{}}}],["pullrequestdescriptioncontroller",{"_index":2265,"title":{"controllers/PullRequestDescriptionController.html":{}},"body":{"controllers/PullRequestDescriptionController.html":{},"modules/PullRequestModule.html":{},"coverage.html":{}}}],["pullrequestdescriptionservice",{"_index":2272,"title":{"injectables/PullRequestDescriptionService.html":{}},"body":{"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"modules/PullRequestModule.html":{},"coverage.html":{},"overview.html":{}}}],["pullrequestinsightsservice",{"_index":2251,"title":{"injectables/PullRequestInsightsService.html":{}},"body":{"controllers/PullRequestController.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"coverage.html":{},"overview.html":{}}}],["pullrequestmodule",{"_index":17,"title":{"modules/PullRequestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContributorModule.html":{},"modules/PullRequestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["pullrequestorderfieldsenum",{"_index":2342,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["pullrequestorderfieldsenum.updated_at",{"_index":2343,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{}}}],["pullrequestpageoptionsdto",{"_index":2247,"title":{"classes/PullRequestPageOptionsDto.html":{}},"body":{"controllers/PullRequestController.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"coverage.html":{}}}],["pullrequestrepository",{"_index":2360,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["pullrequestservice",{"_index":718,"title":{"injectables/PullRequestService.html":{}},"body":{"controllers/ContributorController.html":{},"controllers/PullRequestController.html":{},"modules/PullRequestModule.html":{},"injectables/PullRequestService.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["pullrequestsinsightservice",{"_index":2253,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["pullrequeststatusenum",{"_index":2348,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["pullrequeststatusenum'})@isenum(pullrequeststatusenum)@isoptional",{"_index":2349,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{}}}],["purpose",{"_index":4813,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4488,"title":{},"body":{"changelog.html":{}}}],["push",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":2623,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserFollowsController.html":{}}}],["put(\"/:id/star",{"_index":2629,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["put(\"/:id/stargaze",{"_index":2667,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["put(\"/:id/submit",{"_index":2705,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["put(\"/:id/vote",{"_index":2740,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put(\"/:owner/:repo/star",{"_index":2632,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["put(\"/:owner/:repo/stargaze",{"_index":2670,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["put(\"/:owner/:repo/submit",{"_index":2707,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["put(\"/:owner/:repo/vote",{"_index":2743,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put(\"/:username/follow",{"_index":3292,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["put('/:id/star')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2617,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["put('/:id/stargaze')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2658,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["put('/:id/submit')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2696,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["put('/:id/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2732,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put('/:owner/:repo/star')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2621,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["put('/:owner/:repo/stargaze')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2662,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["put('/:owner/:repo/submit')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2699,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["put('/:owner/:repo/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":2735,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put('/:username/follow')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":3275,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["qb",{"_index":2305,"title":{},"body":{"injectables/PullRequestInsightsService.html":{},"injectables/RepoFilterService.html":{}}}],["qb.andwhere(sql",{"_index":2481,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["qb.where(sql",{"_index":2480,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["quality",{"_index":4735,"title":{},"body":{"index.html":{}}}],["quantity",{"_index":1395,"title":{},"body":{"entities/DbSubscription.html":{},"injectables/StripeService.html":{},"controllers/StripeWebhookController.html":{}}}],["queries",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["query",{"_index":713,"title":{},"body":{"controllers/ContributorController.html":{},"classes/DatabaseLoggerMiddleware.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HighlightController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"changelog.html":{}}}],["querybuilder",{"_index":685,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/CustomerService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["querybuilder.addgroupby(\"emoji_id",{"_index":3453,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["querybuilder.addselect(\"users.email",{"_index":3729,"title":{},"body":{"injectables/UserService.html":{}}}],["querybuilder.andwhere",{"_index":3427,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["querybuilder.andwhere(\"user_highlight_reactions.user_id",{"_index":3452,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["querybuilder.andwhere(\"user_highlights.user_id",{"_index":3412,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["querybuilder.andwhere(sql",{"_index":3423,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["querybuilder.getcount",{"_index":696,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{}}}],["querybuilder.getmany",{"_index":697,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{}}}],["querybuilder.getone",{"_index":911,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["querybuilder.getoneorfail",{"_index":3268,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["querybuilder.getrawmany",{"_index":2390,"title":{},"body":{"injectables/PullRequestService.html":{},"injectables/UserHighlightsService.html":{}}}],["querybuilder.getrawone",{"_index":2327,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["querybuilder.innerjoin",{"_index":2571,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.offset(pageoptionsdto.skip).limit(pageoptionsdto.limit",{"_index":1746,"title":{},"body":{"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserReposService.html":{}}}],["querybuilder.orderby(\"emoji.display_order",{"_index":1613,"title":{},"body":{"injectables/EmojiService.html":{}}}],["querybuilder.orderby(\"endorsements.created_at",{"_index":1744,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["querybuilder.setparameters",{"_index":2324,"title":{},"body":{"injectables/PullRequestInsightsService.html":{},"injectables/UserService.html":{}}}],["querybuilder.skip(pageoptionsdto.skip).take(pageoptionsdto.limit",{"_index":2141,"title":{},"body":{"injectables/InsightsService.html":{}}}],["querybuilder.where(\"contribution.repo_id",{"_index":689,"title":{},"body":{"injectables/ContributionService.html":{}}}],["querybuilder.where(\"customer.id=:id",{"_index":910,"title":{},"body":{"injectables/CustomerService.html":{}}}],["querybuilder.where(\"customer.stripe_customer_id=:id",{"_index":912,"title":{},"body":{"injectables/CustomerService.html":{}}}],["querybuilder.where(\"endorsements.creator_user_id",{"_index":1747,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["querybuilder.where(\"endorsements.id",{"_index":1765,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["querybuilder.where(\"id",{"_index":3681,"title":{},"body":{"injectables/UserReposService.html":{}}}],["querybuilder.where(\"insight_members.id",{"_index":2050,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["querybuilder.where(\"r2stars.repo_id",{"_index":2768,"title":{},"body":{"injectables/StarService.html":{}}}],["querybuilder.where(\"r2submits.repo_id",{"_index":2963,"title":{},"body":{"injectables/SubmitService.html":{}}}],["querybuilder.where(\"repo.full_name",{"_index":2568,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.where(\"repo.id",{"_index":2567,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.where(\"user_collaborations.id",{"_index":3172,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["querybuilder.where(\"user_highlights.user_id",{"_index":3437,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["querybuilder.where(\"user_repos.user_id",{"_index":3685,"title":{},"body":{"injectables/UserReposService.html":{}}}],["querybuilder.where(`users.email",{"_index":3776,"title":{},"body":{"injectables/UserService.html":{}}}],["querybuilder.where(sql",{"_index":3422,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["queryrunner",{"_index":927,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["queryrunner?.data.iscreatinglogs",{"_index":946,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["questions",{"_index":4760,"title":{},"body":{"index.html":{}}}],["range",{"_index":627,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"injectables/RepoFilterService.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"classes/UserRepoOptionsDto.html":{},"changelog.html":{}}}],["rate",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["rawbodyrequest",{"_index":2868,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["re",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":3107,"title":{},"body":{"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserHighlightsController.html":{},"classes/UserOnboardingDto.html":{},"index.html":{}}}],["reacted",{"_index":3633,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["reaction",{"_index":1042,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbUserHighlightReaction.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{}}}],["reaction'})@apibadrequestresponse({description",{"_index":3325,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["reaction.emoji",{"_index":1516,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.emoji)@joincolumn({name",{"_index":1498,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.entity",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"entities/DbEmoji.html":{},"entities/DbUserHighlight.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/HighlightOptionsDto.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"modules/UserModule.html":{}}}],["reaction.entity.ts",{"_index":1493,"title":{},"body":{"entities/DbUserHighlightReaction.html":{},"coverage.html":{}}}],["reaction.entity.ts:107",{"_index":1509,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.entity.ts:115",{"_index":1499,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.entity.ts:27",{"_index":1505,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.entity.ts:37",{"_index":1504,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.entity.ts:47",{"_index":1510,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.entity.ts:57",{"_index":1501,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.entity.ts:68",{"_index":1496,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.entity.ts:79",{"_index":1507,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.entity.ts:83",{"_index":1497,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.entity.ts:91",{"_index":1506,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.entity.ts:99",{"_index":1503,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.highlight",{"_index":1514,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.highlight)@joincolumn({name",{"_index":1502,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.user",{"_index":1515,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction.user)@joincolumn({name",{"_index":1508,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["reaction_count",{"_index":1495,"title":{},"body":{"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/HighlightOptionsDto.html":{},"injectables/UserHighlightsService.html":{}}}],["reactionexists",{"_index":3459,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["reactionexists.deleted_at",{"_index":3460,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["reactions",{"_index":1041,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbUserHighlight.html":{},"controllers/HighlightController.html":{},"controllers/UserHighlightsController.html":{},"changelog.html":{}}}],["reactions'})@apibadrequestresponse({description",{"_index":1932,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserHighlightsController.html":{}}}],["read",{"_index":1543,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["read_at",{"_index":1530,"title":{},"body":{"entities/DbUserNotification.html":{},"injectables/UserNotificationService.html":{}}}],["readable",{"_index":1185,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["readme",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"classes/ContributionPageOptionsDto.html":{},"controllers/ContributorController.html":{},"classes/CreateLogDto.html":{},"injectables/CustomLogger.html":{},"classes/DatabaseLoggerMiddleware.html":{},"classes/DbUserHighlightReactionResponse.html":{},"controllers/EndorsementController.html":{},"classes/FilterOptionsDto.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"controllers/InsightController.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"classes/PullRequestPageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{}}}],["real",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["rebaseable",{"_index":1220,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["receipient",{"_index":1454,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["receive_collaboration",{"_index":3100,"title":{},"body":{"classes/UpdateUserEmailPreferencesDto.html":{},"injectables/UserService.html":{}}}],["received",{"_index":1652,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/UserEndorsementController.html":{},"miscellaneous/variables.html":{}}}],["recent",{"_index":2073,"title":{},"body":{"classes/InsightOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["recieve",{"_index":3102,"title":{},"body":{"classes/UpdateUserEmailPreferencesDto.html":{}}}],["recipient",{"_index":746,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"classes/CreateUserCollaborationDto.html":{},"entities/DbEndorsement.html":{},"controllers/UserCollaborationController.html":{},"changelog.html":{}}}],["recipient_user_id",{"_index":736,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"entities/DbEndorsement.html":{}}}],["recommendation",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["recommendation.controller",{"_index":3581,"title":{},"body":{"modules/UserModule.html":{}}}],["recommendation.controller.ts",{"_index":3642,"title":{},"body":{"controllers/UserRecommendationController.html":{},"coverage.html":{}}}],["recommendation.controller.ts:23",{"_index":3649,"title":{},"body":{"controllers/UserRecommendationController.html":{}}}],["recommendations",{"_index":3651,"title":{},"body":{"controllers/UserRecommendationController.html":{},"changelog.html":{}}}],["recommended",{"_index":3647,"title":{},"body":{"controllers/UserRecommendationController.html":{}}}],["record",{"_index":1675,"title":{},"body":{"controllers/EndorsementController.html":{},"guards/EndorsementTokenGuard.html":{},"injectables/RepoService.html":{},"changelog.html":{}}}],["record'})@apiokresponse({type",{"_index":1627,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["record)[\"stripe",{"_index":2924,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["ref",{"_index":1283,"title":{},"body":{"entities/DbPullRequest.html":{},"miscellaneous/variables.html":{}}}],["refactor",{"_index":557,"title":{},"body":{"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"modules/PullRequestModule.html":{},"changelog.html":{},"coverage.html":{}}}],["refactoring",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["referal",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["referencedcolumnname",{"_index":997,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbInsight.html":{},"entities/DbInsightRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserTopRepo.html":{}}}],["references",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["regex",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["regexp_replace(regexp_replace(user_highlights.url",{"_index":3419,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["registeras(\"api",{"_index":4863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"db",{"_index":4894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"endpoint",{"_index":4918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"openai",{"_index":4930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"stripe",{"_index":4940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registration",{"_index":2975,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["registry",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["rejectunauthorized",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["relation",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["relations",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["relationship",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["relationships",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":4061,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["releasing",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["relevantevents",{"_index":2877,"title":{},"body":{"controllers/StripeWebhookController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["relevantevents.has(event.type",{"_index":2930,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["remaining",{"_index":4403,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":1719,"title":{},"body":{"injectables/EndorsementService.html":{},"controllers/InsightController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"changelog.html":{},"properties.html":{}}}],["remove(id",{"_index":1738,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["removed",{"_index":2607,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["removeinsight",{"_index":2112,"title":{},"body":{"injectables/InsightsService.html":{}}}],["removeinsight(id",{"_index":2123,"title":{},"body":{"injectables/InsightsService.html":{}}}],["removeinsightforuser",{"_index":1986,"title":{},"body":{"controllers/InsightController.html":{}}}],["removeinsightforuser(@param(\"id",{"_index":2014,"title":{},"body":{"controllers/InsightController.html":{}}}],["removeinsightforuser(id",{"_index":1994,"title":{},"body":{"controllers/InsightController.html":{}}}],["removeinsightmember",{"_index":2023,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["removeinsightmember(id",{"_index":2042,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["removeinsightmemberbyid",{"_index":3469,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["removeinsightmemberbyid(id",{"_index":3482,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["removeinsightrepo",{"_index":2084,"title":{},"body":{"injectables/InsightRepoService.html":{}}}],["removeinsightrepo(id",{"_index":2090,"title":{},"body":{"injectables/InsightRepoService.html":{}}}],["removes",{"_index":1996,"title":{},"body":{"controllers/InsightController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserInsightMemberController.html":{}}}],["removeusercollaboration",{"_index":3158,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["removeusercollaboration(id",{"_index":3167,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["removeusercollaborationbyid",{"_index":3114,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["removeusercollaborationbyid(@param(\"id",{"_index":3153,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["removeusercollaborationbyid(id",{"_index":3130,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["removeuserfollowerbyid",{"_index":3239,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["removeuserfollowerbyid(userid",{"_index":3251,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["removing",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":614,"title":{},"body":{"modules/ContributionModule.html":{},"entities/DbContribution.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserHighlight.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserRepo.html":{},"entities/DbUserTopRepo.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"injectables/InsightRepoService.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightsController.html":{},"classes/UserRepoOptionsDto.html":{},"injectables/UserReposService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["repo'})@apiokresponse({type",{"_index":2430,"title":{},"body":{"controllers/RepoController.html":{}}}],["repo.contributions",{"_index":1030,"title":{},"body":{"entities/DbContribution.html":{},"injectables/RepoService.html":{}}}],["repo.contributions)@joincolumn({name",{"_index":996,"title":{},"body":{"entities/DbContribution.html":{}}}],["repo.controller",{"_index":2495,"title":{},"body":{"modules/RepoModule.html":{}}}],["repo.entity",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"entities/DbInsight.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"controllers/HighlightController.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"controllers/UserHighlightsController.html":{},"modules/UserModule.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{}}}],["repo.entity.ts",{"_index":1150,"title":{},"body":{"entities/DbInsightRepo.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserRepo.html":{},"entities/DbUserTopRepo.html":{},"coverage.html":{}}}],["repo.entity.ts:15",{"_index":1556,"title":{},"body":{"entities/DbUserRepo.html":{}}}],["repo.entity.ts:22",{"_index":1557,"title":{},"body":{"entities/DbUserRepo.html":{}}}],["repo.entity.ts:26",{"_index":1572,"title":{},"body":{"entities/DbUserTopRepo.html":{}}}],["repo.entity.ts:29",{"_index":1156,"title":{},"body":{"entities/DbInsightRepo.html":{},"entities/DbUserRepo.html":{}}}],["repo.entity.ts:33",{"_index":1578,"title":{},"body":{"entities/DbUserTopRepo.html":{}}}],["repo.entity.ts:36",{"_index":1159,"title":{},"body":{"entities/DbInsightRepo.html":{},"entities/DbUserRepo.html":{}}}],["repo.entity.ts:40",{"_index":1575,"title":{},"body":{"entities/DbUserTopRepo.html":{}}}],["repo.entity.ts:43",{"_index":1160,"title":{},"body":{"entities/DbInsightRepo.html":{}}}],["repo.entity.ts:46",{"_index":1555,"title":{},"body":{"entities/DbUserRepo.html":{}}}],["repo.entity.ts:50",{"_index":1155,"title":{},"body":{"entities/DbInsightRepo.html":{},"entities/DbUserTopRepo.html":{}}}],["repo.entity.ts:60",{"_index":1151,"title":{},"body":{"entities/DbInsightRepo.html":{},"entities/DbUserTopRepo.html":{}}}],["repo.entity.ts:67",{"_index":1570,"title":{},"body":{"entities/DbUserTopRepo.html":{}}}],["repo.entity.ts:70",{"_index":1152,"title":{},"body":{"entities/DbInsightRepo.html":{}}}],["repo.entity.ts:75",{"_index":1577,"title":{},"body":{"entities/DbUserTopRepo.html":{}}}],["repo.entity.ts:78",{"_index":1158,"title":{},"body":{"entities/DbInsightRepo.html":{}}}],["repo.entity.ts:8",{"_index":1525,"title":{},"body":{"classes/DbUserHighlightRepo.html":{}}}],["repo.entity.ts:83",{"_index":1574,"title":{},"body":{"entities/DbUserTopRepo.html":{}}}],["repo.fullname",{"_index":2095,"title":{},"body":{"injectables/InsightRepoService.html":{},"injectables/UserReposService.html":{}}}],["repo.id",{"_index":2094,"title":{},"body":{"injectables/InsightRepoService.html":{},"injectables/RepoService.html":{},"injectables/UserReposService.html":{}}}],["repo.repo_id",{"_index":3555,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["repo.repotouser${relation",{"_index":2572,"title":{},"body":{"injectables/RepoService.html":{}}}],["repo.repotouserstargazers",{"_index":1335,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"injectables/RepoService.html":{}}}],["repo.repotouserstargazers)@joincolumn({name",{"_index":1324,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["repo.repotouserstars",{"_index":1350,"title":{},"body":{"entities/DbRepoToUserStars.html":{},"injectables/RepoService.html":{}}}],["repo.repotouserstars)@joincolumn({name",{"_index":1341,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["repo.repotousersubmissions",{"_index":1369,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{},"injectables/RepoService.html":{}}}],["repo.repotousersubmissions)@joincolumn({name",{"_index":1360,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["repo.repotousertoprepos",{"_index":1581,"title":{},"body":{"entities/DbUserTopRepo.html":{}}}],["repo.repotousertoprepos)@joincolumn({name",{"_index":1573,"title":{},"body":{"entities/DbUserTopRepo.html":{}}}],["repo.repotouservotes",{"_index":1384,"title":{},"body":{"entities/DbRepoToUserVotes.html":{},"injectables/RepoService.html":{}}}],["repo.repotouservotes)@joincolumn({name",{"_index":1375,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["repo.service",{"_index":2105,"title":{},"body":{"modules/InsightsModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"controllers/UserInsightsController.html":{}}}],["repo.service.ts",{"_index":2082,"title":{},"body":{"injectables/InsightRepoService.html":{},"coverage.html":{}}}],["repo.service.ts:15",{"_index":2089,"title":{},"body":{"injectables/InsightRepoService.html":{}}}],["repo.service.ts:19",{"_index":2091,"title":{},"body":{"injectables/InsightRepoService.html":{}}}],["repo.service.ts:9",{"_index":2086,"title":{},"body":{"injectables/InsightRepoService.html":{}}}],["repo/dtos/repo",{"_index":787,"title":{},"body":{"classes/CreateInsightDto.html":{},"injectables/InsightRepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/UserReposService.html":{}}}],["repo/dtos/user",{"_index":3657,"title":{},"body":{"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"coverage.html":{}}}],["repo/entities/repo.entity",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"entities/DbContribution.html":{},"entities/DbUserTopRepo.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"modules/VoteModule.html":{}}}],["repo/entities/repo.to.user.stargazers.entity",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{}}}],["repo/entities/repo.to.user.stars.entity",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoStarController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{}}}],["repo/entities/repo.to.user.submissions.entity",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoSubmitController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{}}}],["repo/entities/repo.to.user.votes.entity",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["repo/repo.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/VoteModule.html":{}}}],["repo/repo.service",{"_index":2405,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/UserRecommendationController.html":{}}}],["repo/user",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/DbUserRepo.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"coverage.html":{}}}],["repo_id",{"_index":737,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"entities/DbContribution.html":{},"entities/DbEndorsement.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserRepo.html":{},"entities/DbUserTopRepo.html":{},"injectables/InsightRepoService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/UserReposService.html":{},"injectables/VoteService.html":{}}}],["repocontributionscontroller",{"_index":611,"title":{"controllers/RepoContributionsController.html":{}},"body":{"modules/ContributionModule.html":{},"controllers/RepoContributionsController.html":{},"coverage.html":{}}}],["repocontroller",{"_index":2416,"title":{"controllers/RepoController.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"coverage.html":{}}}],["repofilterfieldsenum",{"_index":2499,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["repofiltermodule",{"_index":2332,"title":{"modules/RepoFilterModule.html":{}},"body":{"modules/PullRequestModule.html":{},"modules/RepoFilterModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["repofilterservice",{"_index":2297,"title":{"injectables/RepoFilterService.html":{}},"body":{"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["repoid",{"_index":673,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["repoids",{"_index":1787,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"injectables/PullRequestInsightsService.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/RepoFilterService.html":{},"classes/RepoSearchOptionsDto.html":{}}}],["repoinfo",{"_index":779,"title":{"classes/RepoInfo.html":{}},"body":{"classes/CreateInsightDto.html":{},"injectables/InsightRepoService.html":{},"classes/RepoInfo.html":{},"classes/UpdateInsightDto.html":{},"controllers/UserInsightsController.html":{},"injectables/UserReposService.html":{},"coverage.html":{}}}],["repoinfo.id",{"_index":3554,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["repomodule",{"_index":18,"title":{"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/VoteModule.html":{},"modules.html":{},"overview.html":{}}}],["repoorderfieldsenum",{"_index":634,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["repoorderfieldsenum.stars",{"_index":2496,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{}}}],["repoowneroruser",{"_index":1643,"title":{},"body":{"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{}}}],["repoowneroruser.tolowercase",{"_index":1756,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["repopageoptionsdto",{"_index":2420,"title":{"classes/RepoPageOptionsDto.html":{}},"body":{"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["repopageoptionsdto:37",{"_index":2512,"title":{},"body":{"classes/RepoSearchOptionsDto.html":{}}}],["reporepository",{"_index":2519,"title":{},"body":{"injectables/RepoService.html":{}}}],["report",{"_index":4713,"title":{},"body":{"index.html":{}}}],["repos",{"_index":771,"title":{},"body":{"classes/CreateInsightDto.html":{},"entities/DbInsight.html":{},"injectables/EndorsementService.html":{},"controllers/HighlightController.html":{},"classes/InsightOptionsDto.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"classes/RepoPageOptionsDto.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/UpdateInsightDto.html":{},"controllers/UserController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["repos\".\"id",{"_index":2565,"title":{},"body":{"injectables/RepoService.html":{}}}],["repos')@apioperation({operationid",{"_index":3193,"title":{},"body":{"controllers/UserController.html":{}}}],["repos'})@apibody({type",{"_index":3531,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["repos.dto.ts",{"_index":3658,"title":{},"body":{"classes/UserRepoOptionsDto-1.html":{},"coverage.html":{}}}],["repos.dto.ts:12",{"_index":3660,"title":{},"body":{"classes/UserRepoOptionsDto-1.html":{}}}],["repos.id",{"_index":2471,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["repos.module",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["repos.module.ts",{"_index":3666,"title":{},"body":{"modules/UserReposModule.html":{}}}],["repos.service",{"_index":3667,"title":{},"body":{"modules/UserReposModule.html":{}}}],["repos.service.ts",{"_index":3669,"title":{},"body":{"injectables/UserReposService.html":{},"coverage.html":{}}}],["repos.service.ts:13",{"_index":3672,"title":{},"body":{"injectables/UserReposService.html":{}}}],["repos.service.ts:19",{"_index":3676,"title":{},"body":{"injectables/UserReposService.html":{}}}],["repos.service.ts:25",{"_index":3678,"title":{},"body":{"injectables/UserReposService.html":{}}}],["repos.service.ts:39",{"_index":3675,"title":{},"body":{"injectables/UserReposService.html":{}}}],["repos.service.ts:49",{"_index":3677,"title":{},"body":{"injectables/UserReposService.html":{}}}],["repos_id",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["reposearchoptionsdto",{"_index":2424,"title":{"classes/RepoSearchOptionsDto.html":{}},"body":{"controllers/RepoController.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["reposervice",{"_index":2404,"title":{"injectables/RepoService.html":{}},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/UserRecommendationController.html":{},"coverage.html":{},"overview.html":{}}}],["repositories",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":669,"title":{},"body":{"injectables/ContributionService.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"injectables/CustomerService.html":{},"entities/DbContribution.html":{},"entities/DbEndorsement.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserTopRepo.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeSubscriptionService.html":{},"injectables/SubmitService.html":{},"classes/UpdateInsightDto.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["repostarcontroller",{"_index":2592,"title":{"controllers/RepoStarController.html":{}},"body":{"controllers/RepoStarController.html":{},"modules/StarModule.html":{},"coverage.html":{}}}],["repostargazecontroller",{"_index":2637,"title":{"controllers/RepoStargazeController.html":{}},"body":{"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{},"coverage.html":{}}}],["repostargazerepository",{"_index":2788,"title":{},"body":{"injectables/StargazeService.html":{}}}],["repostarrepository",{"_index":2759,"title":{},"body":{"injectables/StarService.html":{}}}],["repostoadd",{"_index":3563,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["repostoadd.map(async",{"_index":3567,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["repostoremove",{"_index":3551,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["repostoremove.map(async",{"_index":3557,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["repostoremoverequests",{"_index":3556,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["reposubmitcontroller",{"_index":2675,"title":{"controllers/RepoSubmitController.html":{}},"body":{"controllers/RepoSubmitController.html":{},"modules/SubmitModule.html":{},"coverage.html":{}}}],["reposubmitrepository",{"_index":2955,"title":{},"body":{"injectables/SubmitService.html":{}}}],["repotoaddrequests",{"_index":3566,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["repotouserstargazers",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["repotouserstars",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["repotousersubmissions",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["repotouservotes",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["repovotecontroller",{"_index":2711,"title":{"controllers/RepoVoteController.html":{}},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"coverage.html":{}}}],["repovoterepository",{"_index":3789,"title":{},"body":{"injectables/VoteService.html":{}}}],["representation",{"_index":4769,"title":{},"body":{"index.html":{}}}],["representing",{"_index":975,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/SupabaseAuthDto.html":{}}}],["req",{"_index":2871,"title":{},"body":{"controllers/StripeWebhookController.html":{},"injectables/SupabaseStrategy.html":{}}}],["req.headers",{"_index":2923,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["request",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/ContributorController.html":{},"classes/CreateUserCollaborationDto.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"guards/EndorsementTokenGuard.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HighlightController.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"classes/UpdateUserCollaborationDto.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["request'})@apibearerauth()@useguards(supabaseguard)@apinotfoundresponse({description",{"_index":3131,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["request'})@apibody({type",{"_index":505,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["request'})@apiconflictresponse({description",{"_index":3121,"title":{},"body":{"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{}}}],["request'})@apiunprocessableentityresponse({description",{"_index":3488,"title":{},"body":{"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["request.controller",{"_index":2335,"title":{},"body":{"modules/PullRequestModule.html":{}}}],["request.controller.ts",{"_index":2232,"title":{},"body":{"controllers/PullRequestController.html":{},"coverage.html":{}}}],["request.controller.ts:29",{"_index":2245,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["request.controller.ts:40",{"_index":2248,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["request.controller.ts:50",{"_index":2242,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["request.entity",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributorModule.html":{},"controllers/PullRequestController.html":{},"modules/PullRequestModule.html":{},"injectables/PullRequestService.html":{},"controllers/UserController.html":{}}}],["request.entity.ts",{"_index":1203,"title":{},"body":{"entities/DbPullRequest.html":{},"coverage.html":{}}}],["request.entity.ts:105",{"_index":1289,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:125",{"_index":1270,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:135",{"_index":1260,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:142",{"_index":1239,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:149",{"_index":1237,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:15",{"_index":1256,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:159",{"_index":1234,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:169",{"_index":1233,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:179",{"_index":1249,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:189",{"_index":1246,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:199",{"_index":1275,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:209",{"_index":1298,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:219",{"_index":1272,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:22",{"_index":1280,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:226",{"_index":1247,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:233",{"_index":1229,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:240",{"_index":1251,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:247",{"_index":1243,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:258",{"_index":1254,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:29",{"_index":1277,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:36",{"_index":1287,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:43",{"_index":1253,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:50",{"_index":1274,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:57",{"_index":1273,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:64",{"_index":1278,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:71",{"_index":1297,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:81",{"_index":1285,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:91",{"_index":1291,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.entity.ts:98",{"_index":1282,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["request.headers[\"x",{"_index":1783,"title":{},"body":{"guards/EndorsementTokenGuard.html":{}}}],["request.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributorModule.html":{},"modules/UserModule.html":{}}}],["request.module.ts",{"_index":2333,"title":{},"body":{"modules/PullRequestModule.html":{}}}],["request.service",{"_index":719,"title":{},"body":{"controllers/ContributorController.html":{},"controllers/PullRequestController.html":{},"modules/PullRequestModule.html":{},"controllers/UserController.html":{}}}],["request.service.ts",{"_index":2353,"title":{},"body":{"injectables/PullRequestService.html":{},"coverage.html":{}}}],["request.service.ts:111",{"_index":2366,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["request.service.ts:17",{"_index":2359,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["request.service.ts:24",{"_index":2361,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["request.service.ts:30",{"_index":2362,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["request.service.ts:46",{"_index":2364,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["request.service.ts:68",{"_index":2368,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["request.user",{"_index":4959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request_emailed_at",{"_index":1433,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["request_user",{"_index":1434,"title":{},"body":{"entities/DbUserCollaboration.html":{},"injectables/UserCollaborationService.html":{}}}],["request_user_id",{"_index":1435,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["requested",{"_index":3122,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["requester",{"_index":3145,"title":{},"body":{"controllers/UserCollaborationController.html":{},"changelog.html":{}}}],["requester.role",{"_index":3147,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["requesting",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["requestmethod",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["requests",{"_index":518,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/ContributorController.html":{},"entities/DbContribution.html":{},"entities/DbPRInsight.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"changelog.html":{}}}],["requests'})@apibody({type",{"_index":3124,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["requests/code",{"_index":492,"title":{},"body":{"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"coverage.html":{}}}],["requests/dtos/create",{"_index":1800,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"coverage.html":{}}}],["requests/dtos/pull",{"_index":720,"title":{},"body":{"controllers/ContributorController.html":{},"classes/DbPullRequestContributor.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["requests/entities/pull",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributorModule.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["requests/pull",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"injectables/PullRequestService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["require(\"node",{"_index":467,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["required",{"_index":2827,"title":{},"body":{"injectables/StripeService.html":{}}}],["requirements",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["reserved",{"_index":3088,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["reset",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/ContributorModule.html":{},"modules/CustomerModule.html":{},"modules/EmojiModule.html":{},"modules/EndorsementModule.html":{},"modules/HighlightModule.html":{},"modules/InsightsModule.html":{},"modules/LogModule.html":{},"modules/OpenAiModule.html":{},"modules/PullRequestModule.html":{},"modules/RepoFilterModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/StripeModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/StripeWebHookModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/UserReposModule.html":{},"modules/VoteModule.html":{},"overview.html":{}}}],["response",{"_index":468,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/HttpLoggerMiddleware.html":{},"injectables/OpenAiService.html":{},"injectables/PullRequestDescriptionService.html":{},"changelog.html":{}}}],["response.decorator",{"_index":717,"title":{},"body":{"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HighlightController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["response.decorator.ts",{"_index":4634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.dto.ts",{"_index":2972,"title":{},"body":{"classes/SupabaseAuthDto.html":{},"coverage.html":{}}}],["response.dto.ts:104",{"_index":2999,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:110",{"_index":2980,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:116",{"_index":2996,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:122",{"_index":2985,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:128",{"_index":3003,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:14",{"_index":3012,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:20",{"_index":3004,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:26",{"_index":2982,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:32",{"_index":2977,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:38",{"_index":2993,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:44",{"_index":2978,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:50",{"_index":3008,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:56",{"_index":2990,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:62",{"_index":2992,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:68",{"_index":2987,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:74",{"_index":2973,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:8",{"_index":2986,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:80",{"_index":3001,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:86",{"_index":3011,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:92",{"_index":3007,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:98",{"_index":2974,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.json",{"_index":486,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["response.ok",{"_index":484,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["response.on(\"finish",{"_index":1973,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["restriction",{"_index":4784,"title":{},"body":{"license.html":{}}}],["results",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results[index",{"_index":2591,"title":{},"body":{"injectables/RepoService.html":{}}}],["retrieve",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["retrieve/update",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["retrieves",{"_index":1659,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/HighlightController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserNotificationController.html":{}}}],["retrieving",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["return",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"classes/PageOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseStrategy.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseStrategy.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["revert",{"_index":4156,"title":{},"body":{"changelog.html":{}}}],["reverts",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":4279,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":4786,"title":{},"body":{"license.html":{}}}],["rogue",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["role",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["rounded",{"_index":1862,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["route",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["rule",{"_index":4715,"title":{},"body":{"index.html":{}}}],["rules",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":4484,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runner",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":4528,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["russian",{"_index":1815,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["san",{"_index":2997,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["sauced",{"_index":846,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbInsight.html":{},"entities/DbRepoToUserSubmissions.html":{},"controllers/HealthController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["sauced!})@isstring()@minlength(3)@maxlength(500",{"_index":830,"title":{},"body":{"classes/CreateUserHighlightDto.html":{}}}],["sauced'})@isurl()@isoptional",{"_index":3072,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["sauced/api",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["sauced/api.opensauced.pizza",{"_index":3848,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sauced/api.opensauced.pizza#readme",{"_index":4844,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza.git",{"_index":4848,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza/issues",{"_index":4846,"title":{},"body":{"properties.html":{}}}],["sauced/hot/pull/320",{"_index":1029,"title":{},"body":{"entities/DbContribution.html":{}}}],["sauced/hot/pull/320'})@column({type",{"_index":1007,"title":{},"body":{"entities/DbContribution.html":{}}}],["sauced/insights",{"_index":792,"title":{},"body":{"classes/CreateInsightDto.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbUserHighlight.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserRepo.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoInfo.html":{}}}],["sauced/insights'})@column({type",{"_index":1154,"title":{},"body":{"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserRepo.html":{}}}],["sauced/insights'})@isstring",{"_index":2485,"title":{},"body":{"classes/RepoInfo.html":{}}}],["sauced/insights'})@isstring()@isoptional",{"_index":1793,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{}}}],["sauced/insights/pull/1",{"_index":845,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbUserHighlight.html":{}}}],["sauced/insights/pull/1'})@column('text",{"_index":1483,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["sauced/insights/pull/1'})@isstring",{"_index":842,"title":{},"body":{"classes/CreateUserHighlightDto.html":{}}}],["sauced/insights/pull/1})@column('text",{"_index":1467,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["sauced/insights/pulls",{"_index":765,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["sauced/insights/pulls'})@isstring",{"_index":755,"title":{},"body":{"classes/CreateEndorsementDto.html":{}}}],["sauced/open",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["sauced/triage",{"_index":4690,"title":{},"body":{"index.html":{}}}],["saucedopen",{"_index":3006,"title":{},"body":{"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{}}}],["saucedopen'})@isstring()@matches(/^(?!.*?admin)(?!.*?twitter)\\w{0,15}$/i",{"_index":3083,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["save",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["saving",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":4395,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["scoping",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":4613,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["search",{"_index":2434,"title":{},"body":{"controllers/RepoController.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"coverage.html":{}}}],["searchallpullrequestcontributors",{"_index":702,"title":{},"body":{"controllers/ContributorController.html":{}}}],["searchallpullrequestcontributors(pageoptionsdto",{"_index":703,"title":{},"body":{"controllers/ContributorController.html":{}}}],["searchallpullrequests",{"_index":2235,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["searchallpullrequests(@query",{"_index":2257,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["searchallpullrequests(pageoptionsdto",{"_index":2246,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["searches",{"_index":706,"title":{},"body":{"controllers/ContributorController.html":{},"controllers/PullRequestController.html":{}}}],["secretkey",{"_index":4941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secs",{"_index":4951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["see",{"_index":4751,"title":{},"body":{"index.html":{}}}],["select",{"_index":985,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/InsightsService.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["select(\"count(distinct",{"_index":2539,"title":{},"body":{"injectables/RepoService.html":{}}}],["select(\"count(full_name",{"_index":3433,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["select(\"emoji_id",{"_index":3449,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["select(\"pull_requests.author_login",{"_index":2385,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["select(\"users.login",{"_index":1762,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["select(['repo.id",{"_index":2545,"title":{},"body":{"injectables/RepoService.html":{}}}],["select(`coalesce(count(\"pr\".\"id",{"_index":2312,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["select(`to_char(now",{"_index":2316,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["selected",{"_index":1182,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["selectquerybuilder",{"_index":2033,"title":{},"body":{"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{}}}],["sell",{"_index":4792,"title":{},"body":{"license.html":{}}}],["sent",{"_index":1138,"title":{},"body":{"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{}}}],["server",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["servers",{"_index":4262,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{},"changelog.html":{},"index.html":{}}}],["services",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["session",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StripeService.html":{},"changelog.html":{}}}],["session.id",{"_index":2837,"title":{},"body":{"injectables/StripeService.html":{}}}],["session_email",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessionid",{"_index":2836,"title":{},"body":{"injectables/StripeService.html":{}}}],["set",{"_index":2878,"title":{},"body":{"controllers/StripeWebhookController.html":{},"controllers/UserInsightsController.html":{},"miscellaneous/variables.html":{}}}],["setparameters(querybuilder.getparameters",{"_index":3432,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["shall",{"_index":4801,"title":{},"body":{"license.html":{}}}],["shipped",{"_index":832,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbUserHighlight.html":{}}}],["shipped_at",{"_index":826,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbUserHighlight.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"changelog.html":{}}}],["short",{"_index":1108,"title":{},"body":{"entities/DbInsight.html":{}}}],["short_code",{"_index":1089,"title":{},"body":{"entities/DbInsight.html":{}}}],["show",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["showcase",{"_index":1263,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["showcase})@column({type",{"_index":1259,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["sig",{"_index":2922,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["sign",{"_index":1306,"title":{},"body":{"entities/DbPullRequest.html":{},"classes/SupabaseAuthDto.html":{}}}],["sign'})@column('text",{"_index":1296,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["signature",{"_index":2925,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["simple",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["simplify",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["singleline",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["skip",{"_index":2215,"title":{},"body":{"classes/PageOptionsDto.html":{},"index.html":{}}}],["slow",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["snippet",{"_index":538,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{}}}],["soft",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":4681,"title":{},"body":{"index.html":{},"license.html":{}}}],["sort",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"modules/ContributorModule.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"modules/EmojiModule.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateEndorsementDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"index.html":{}}}],["source_branch",{"_index":1221,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["source_comment_url",{"_index":738,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"entities/DbEndorsement.html":{}}}],["source_context_url",{"_index":739,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"entities/DbEndorsement.html":{}}}],["source_label",{"_index":1222,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["spam",{"_index":1198,"title":{},"body":{"entities/DbPRInsight.html":{},"injectables/RepoFilterService.html":{}}}],["spam\"].foreach((type",{"_index":2322,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["spam_prs",{"_index":1177,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["spam_pull_requests",{"_index":2477,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["spam_pull_requests.repo_id",{"_index":2476,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["spammed",{"_index":2079,"title":{},"body":{"classes/InsightOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["spanish",{"_index":1809,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{}}}],["spec",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["specific",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["specifications",{"_index":540,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["split",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":2983,"title":{},"body":{"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{}}}],["sql",{"_index":943,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{},"changelog.html":{}}}],["src/.../api",{"_index":4855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.config.ts",{"_index":4854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cli",{"_index":4856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../contribution",{"_index":4664,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../db",{"_index":4857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoint.config.ts",{"_index":4858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../insight",{"_index":4665,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":4674,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../openai.config.ts",{"_index":4859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../order",{"_index":4666,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../pull",{"_index":4668,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../repo",{"_index":4669,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../stripe",{"_index":4860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stripe.config.ts",{"_index":4861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../supabase.user.decorator.ts",{"_index":4853,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":4670,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":4862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:194",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:109",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:127",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:140",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:171",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:185",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:204",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:34",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":434,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dtos/supabase",{"_index":2971,"title":{},"body":{"classes/SupabaseAuthDto.html":{},"coverage.html":{}}}],["src/auth/dtos/user",{"_index":3637,"title":{},"body":{"classes/UserOnboardingDto.html":{},"coverage.html":{}}}],["src/auth/supabase.guard.ts",{"_index":3013,"title":{},"body":{"injectables/SupabaseGuard.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts",{"_index":3016,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts:18",{"_index":3024,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:22",{"_index":3022,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:7",{"_index":3019,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.user.decorator.ts",{"_index":4632,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/order",{"_index":4671,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/decorators/api",{"_index":4633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/filter",{"_index":1786,"title":{},"body":{"classes/FilterOptionsDto.html":{},"coverage.html":{}}}],["src/common/dtos/page",{"_index":2185,"title":{},"body":{"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts",{"_index":2170,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts:11",{"_index":2178,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dtos/page.dto.ts:16",{"_index":2174,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/filters/repo",{"_index":2446,"title":{},"body":{"modules/RepoFilterModule.html":{},"injectables/RepoFilterService.html":{},"coverage.html":{}}}],["src/common/middleware/database",{"_index":914,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{},"coverage.html":{}}}],["src/common/middleware/http",{"_index":1959,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{},"coverage.html":{}}}],["src/common/util/cli",{"_index":4639,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/api.config.ts",{"_index":4641,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/db",{"_index":4642,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/endpoint.config.ts",{"_index":4645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/openai.config.ts",{"_index":4647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/stripe.config.ts",{"_index":4648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contribution/contribution.entity.ts",{"_index":957,"title":{},"body":{"entities/DbContribution.html":{},"coverage.html":{}}}],["src/contribution/contribution.entity.ts:101",{"_index":1008,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:109",{"_index":998,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:27",{"_index":989,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:37",{"_index":1000,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:47",{"_index":972,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:54",{"_index":994,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:64",{"_index":983,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:74",{"_index":1005,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:81",{"_index":986,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:91",{"_index":967,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.module.ts",{"_index":610,"title":{},"body":{"modules/ContributionModule.html":{}}}],["src/contribution/contribution.service.ts",{"_index":666,"title":{},"body":{"injectables/ContributionService.html":{},"coverage.html":{}}}],["src/contribution/contribution.service.ts:11",{"_index":670,"title":{},"body":{"injectables/ContributionService.html":{}}}],["src/contribution/contribution.service.ts:17",{"_index":674,"title":{},"body":{"injectables/ContributionService.html":{}}}],["src/contribution/dtos/contribution",{"_index":619,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/contribution/repo",{"_index":2391,"title":{},"body":{"controllers/RepoContributionsController.html":{},"coverage.html":{}}}],["src/contributor/contributor.controller.ts",{"_index":700,"title":{},"body":{"controllers/ContributorController.html":{},"coverage.html":{}}}],["src/contributor/contributor.controller.ts:22",{"_index":712,"title":{},"body":{"controllers/ContributorController.html":{}}}],["src/contributor/contributor.module.ts",{"_index":729,"title":{},"body":{"modules/ContributorModule.html":{}}}],["src/customer/customer.entity.ts",{"_index":1031,"title":{},"body":{"entities/DbCustomer.html":{},"coverage.html":{}}}],["src/customer/customer.entity.ts:12",{"_index":1033,"title":{},"body":{"entities/DbCustomer.html":{}}}],["src/customer/customer.entity.ts:22",{"_index":1035,"title":{},"body":{"entities/DbCustomer.html":{}}}],["src/customer/customer.module.ts",{"_index":887,"title":{},"body":{"modules/CustomerModule.html":{}}}],["src/customer/customer.service.ts",{"_index":891,"title":{},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["src/customer/customer.service.ts:14",{"_index":902,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:18",{"_index":906,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:26",{"_index":904,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:34",{"_index":901,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:8",{"_index":897,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/emoji/emoji.controller.ts",{"_index":1583,"title":{},"body":{"controllers/EmojiController.html":{},"coverage.html":{}}}],["src/emoji/emoji.controller.ts:23",{"_index":1591,"title":{},"body":{"controllers/EmojiController.html":{}}}],["src/emoji/emoji.module.ts",{"_index":1602,"title":{},"body":{"modules/EmojiModule.html":{}}}],["src/emoji/emoji.service.ts",{"_index":1605,"title":{},"body":{"injectables/EmojiService.html":{},"coverage.html":{}}}],["src/emoji/emoji.service.ts:11",{"_index":1607,"title":{},"body":{"injectables/EmojiService.html":{}}}],["src/emoji/emoji.service.ts:17",{"_index":1609,"title":{},"body":{"injectables/EmojiService.html":{}}}],["src/emoji/emoji.service.ts:21",{"_index":1610,"title":{},"body":{"injectables/EmojiService.html":{}}}],["src/emoji/entities/emoji.entity.ts",{"_index":1039,"title":{},"body":{"entities/DbEmoji.html":{},"coverage.html":{}}}],["src/emoji/entities/emoji.entity.ts:25",{"_index":1053,"title":{},"body":{"entities/DbEmoji.html":{}}}],["src/emoji/entities/emoji.entity.ts:32",{"_index":1055,"title":{},"body":{"entities/DbEmoji.html":{}}}],["src/emoji/entities/emoji.entity.ts:39",{"_index":1062,"title":{},"body":{"entities/DbEmoji.html":{}}}],["src/emoji/entities/emoji.entity.ts:46",{"_index":1050,"title":{},"body":{"entities/DbEmoji.html":{}}}],["src/emoji/entities/emoji.entity.ts:56",{"_index":1043,"title":{},"body":{"entities/DbEmoji.html":{}}}],["src/emoji/entities/emoji.entity.ts:66",{"_index":1060,"title":{},"body":{"entities/DbEmoji.html":{}}}],["src/emoji/entities/emoji.entity.ts:73",{"_index":1044,"title":{},"body":{"entities/DbEmoji.html":{}}}],["src/emoji/entities/emoji.entity.ts:77",{"_index":1059,"title":{},"body":{"entities/DbEmoji.html":{}}}],["src/endorsement/dto/create",{"_index":733,"title":{},"body":{"classes/CreateEndorsementDto.html":{},"coverage.html":{}}}],["src/endorsement/dto/update",{"_index":3044,"title":{},"body":{"classes/UpdateEndorsementDto.html":{},"coverage.html":{}}}],["src/endorsement/endorsement",{"_index":1770,"title":{},"body":{"guards/EndorsementTokenGuard.html":{},"coverage.html":{}}}],["src/endorsement/endorsement.controller.ts",{"_index":1616,"title":{},"body":{"controllers/EndorsementController.html":{},"coverage.html":{}}}],["src/endorsement/endorsement.controller.ts:107",{"_index":1653,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["src/endorsement/endorsement.controller.ts:120",{"_index":1656,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["src/endorsement/endorsement.controller.ts:132",{"_index":1637,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["src/endorsement/endorsement.controller.ts:26",{"_index":1629,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["src/endorsement/endorsement.controller.ts:40",{"_index":1645,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["src/endorsement/endorsement.controller.ts:51",{"_index":1642,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["src/endorsement/endorsement.controller.ts:65",{"_index":1649,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["src/endorsement/endorsement.controller.ts:96",{"_index":1662,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["src/endorsement/endorsement.module.ts",{"_index":1711,"title":{},"body":{"modules/EndorsementModule.html":{}}}],["src/endorsement/endorsement.service.ts",{"_index":1714,"title":{},"body":{"injectables/EndorsementService.html":{},"coverage.html":{}}}],["src/endorsement/endorsement.service.ts:112",{"_index":1735,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["src/endorsement/endorsement.service.ts:13",{"_index":1721,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["src/endorsement/endorsement.service.ts:135",{"_index":1737,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["src/endorsement/endorsement.service.ts:149",{"_index":1739,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["src/endorsement/endorsement.service.ts:19",{"_index":1723,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["src/endorsement/endorsement.service.ts:23",{"_index":1725,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["src/endorsement/endorsement.service.ts:27",{"_index":1726,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["src/endorsement/endorsement.service.ts:42",{"_index":1728,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["src/endorsement/endorsement.service.ts:57",{"_index":1730,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["src/endorsement/endorsement.service.ts:74",{"_index":1732,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["src/endorsement/endorsement.service.ts:94",{"_index":1733,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["src/endorsement/entities/endorsement.entity.ts",{"_index":1069,"title":{},"body":{"entities/DbEndorsement.html":{},"coverage.html":{}}}],["src/endorsement/entities/endorsement.entity.ts:14",{"_index":1073,"title":{},"body":{"entities/DbEndorsement.html":{}}}],["src/endorsement/entities/endorsement.entity.ts:21",{"_index":1072,"title":{},"body":{"entities/DbEndorsement.html":{}}}],["src/endorsement/entities/endorsement.entity.ts:28",{"_index":1075,"title":{},"body":{"entities/DbEndorsement.html":{}}}],["src/endorsement/entities/endorsement.entity.ts:35",{"_index":1077,"title":{},"body":{"entities/DbEndorsement.html":{}}}],["src/endorsement/entities/endorsement.entity.ts:42",{"_index":1080,"title":{},"body":{"entities/DbEndorsement.html":{}}}],["src/endorsement/entities/endorsement.entity.ts:49",{"_index":1082,"title":{},"body":{"entities/DbEndorsement.html":{}}}],["src/endorsement/entities/endorsement.entity.ts:59",{"_index":1084,"title":{},"body":{"entities/DbEndorsement.html":{}}}],["src/endorsement/entities/endorsement.entity.ts:69",{"_index":1070,"title":{},"body":{"entities/DbEndorsement.html":{}}}],["src/health/health.controller.ts",{"_index":1866,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":1872,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:57",{"_index":1875,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":1912,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/highlight/dtos/highlight",{"_index":1518,"title":{},"body":{"classes/DbUserHighlightReactionResponse.html":{},"classes/HighlightOptionsDto.html":{},"coverage.html":{}}}],["src/highlight/entities/user",{"_index":1524,"title":{},"body":{"classes/DbUserHighlightRepo.html":{},"coverage.html":{}}}],["src/highlight/highlight.controller.ts",{"_index":1915,"title":{},"body":{"controllers/HighlightController.html":{},"coverage.html":{}}}],["src/highlight/highlight.controller.ts:25",{"_index":1927,"title":{},"body":{"controllers/HighlightController.html":{}}}],["src/highlight/highlight.controller.ts:36",{"_index":1923,"title":{},"body":{"controllers/HighlightController.html":{}}}],["src/highlight/highlight.controller.ts:48",{"_index":1933,"title":{},"body":{"controllers/HighlightController.html":{}}}],["src/highlight/highlight.module.ts",{"_index":1955,"title":{},"body":{"modules/HighlightModule.html":{}}}],["src/insight/dtos/create",{"_index":768,"title":{},"body":{"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"coverage.html":{}}}],["src/insight/dtos/insight",{"_index":2067,"title":{},"body":{"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/insight/dtos/update",{"_index":3047,"title":{},"body":{"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"coverage.html":{}}}],["src/insight/entities/insight",{"_index":1120,"title":{},"body":{"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"coverage.html":{}}}],["src/insight/entities/insight.entity.ts",{"_index":1087,"title":{},"body":{"entities/DbInsight.html":{},"coverage.html":{}}}],["src/insight/entities/insight.entity.ts:106",{"_index":1094,"title":{},"body":{"entities/DbInsight.html":{}}}],["src/insight/entities/insight.entity.ts:114",{"_index":1116,"title":{},"body":{"entities/DbInsight.html":{}}}],["src/insight/entities/insight.entity.ts:118",{"_index":1107,"title":{},"body":{"entities/DbInsight.html":{}}}],["src/insight/entities/insight.entity.ts:32",{"_index":1096,"title":{},"body":{"entities/DbInsight.html":{}}}],["src/insight/entities/insight.entity.ts:42",{"_index":1117,"title":{},"body":{"entities/DbInsight.html":{}}}],["src/insight/entities/insight.entity.ts:52",{"_index":1104,"title":{},"body":{"entities/DbInsight.html":{}}}],["src/insight/entities/insight.entity.ts:59",{"_index":1102,"title":{},"body":{"entities/DbInsight.html":{}}}],["src/insight/entities/insight.entity.ts:66",{"_index":1101,"title":{},"body":{"entities/DbInsight.html":{}}}],["src/insight/entities/insight.entity.ts:76",{"_index":1111,"title":{},"body":{"entities/DbInsight.html":{}}}],["src/insight/entities/insight.entity.ts:86",{"_index":1091,"title":{},"body":{"entities/DbInsight.html":{}}}],["src/insight/entities/insight.entity.ts:96",{"_index":1114,"title":{},"body":{"entities/DbInsight.html":{}}}],["src/insight/insight",{"_index":2018,"title":{},"body":{"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"coverage.html":{}}}],["src/insight/insight.controller.ts",{"_index":1984,"title":{},"body":{"controllers/InsightController.html":{},"coverage.html":{}}}],["src/insight/insight.controller.ts:32",{"_index":1993,"title":{},"body":{"controllers/InsightController.html":{}}}],["src/insight/insight.controller.ts:47",{"_index":1999,"title":{},"body":{"controllers/InsightController.html":{}}}],["src/insight/insights.module.ts",{"_index":2101,"title":{},"body":{"modules/InsightsModule.html":{}}}],["src/insight/insights.service.ts",{"_index":2109,"title":{},"body":{"injectables/InsightsService.html":{},"coverage.html":{}}}],["src/insight/insights.service.ts:12",{"_index":2115,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/insight/insights.service.ts:18",{"_index":2119,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/insight/insights.service.ts:24",{"_index":2122,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/insight/insights.service.ts:41",{"_index":2118,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/insight/insights.service.ts:45",{"_index":2126,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/insight/insights.service.ts:49",{"_index":2124,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/insight/insights.service.ts:53",{"_index":2121,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/insight/user",{"_index":3465,"title":{},"body":{"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"coverage.html":{}}}],["src/log/custom",{"_index":850,"title":{},"body":{"injectables/CustomLogger.html":{},"coverage.html":{}}}],["src/log/dtos/create",{"_index":802,"title":{},"body":{"classes/CreateLogDto.html":{},"coverage.html":{}}}],["src/log/log.entity.ts",{"_index":1163,"title":{},"body":{"entities/DbLog.html":{},"coverage.html":{}}}],["src/log/log.entity.ts:12",{"_index":1169,"title":{},"body":{"entities/DbLog.html":{}}}],["src/log/log.entity.ts:15",{"_index":1168,"title":{},"body":{"entities/DbLog.html":{}}}],["src/log/log.entity.ts:18",{"_index":1165,"title":{},"body":{"entities/DbLog.html":{}}}],["src/log/log.entity.ts:6",{"_index":1167,"title":{},"body":{"entities/DbLog.html":{}}}],["src/log/log.entity.ts:9",{"_index":1164,"title":{},"body":{"entities/DbLog.html":{}}}],["src/log/log.module.ts",{"_index":2146,"title":{},"body":{"modules/LogModule.html":{}}}],["src/log/log.service.ts",{"_index":2150,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/log/log.service.ts:14",{"_index":2156,"title":{},"body":{"injectables/LogService.html":{}}}],["src/log/log.service.ts:8",{"_index":2153,"title":{},"body":{"injectables/LogService.html":{}}}],["src/main.ts",{"_index":4653,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/open",{"_index":444,"title":{},"body":{"interfaces/ChatResponse.html":{},"modules/OpenAiModule.html":{},"injectables/OpenAiService.html":{},"coverage.html":{}}}],["src/pull",{"_index":491,"title":{},"body":{"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"modules/PullRequestModule.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/repo/dtos/repo",{"_index":2482,"title":{},"body":{"classes/RepoInfo.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/repo/entities/repo.entity.ts",{"_index":4655,"title":{},"body":{"coverage.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts",{"_index":1318,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:26",{"_index":1323,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:33",{"_index":1331,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:40",{"_index":1327,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:50",{"_index":1320,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:60",{"_index":1328,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:67",{"_index":1321,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:75",{"_index":1330,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:83",{"_index":1325,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts",{"_index":1336,"title":{},"body":{"entities/DbRepoToUserStars.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:26",{"_index":1340,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:33",{"_index":1347,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:40",{"_index":1343,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:50",{"_index":1338,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:60",{"_index":1344,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:67",{"_index":1339,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:75",{"_index":1346,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:83",{"_index":1342,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts",{"_index":1351,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:26",{"_index":1356,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:33",{"_index":1366,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:40",{"_index":1362,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:47",{"_index":1359,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:57",{"_index":1354,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:67",{"_index":1363,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:74",{"_index":1355,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:82",{"_index":1365,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:90",{"_index":1361,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts",{"_index":1370,"title":{},"body":{"entities/DbRepoToUserVotes.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:26",{"_index":1374,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:33",{"_index":1381,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:40",{"_index":1377,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:50",{"_index":1372,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:60",{"_index":1378,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:67",{"_index":1373,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:75",{"_index":1380,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:83",{"_index":1376,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/repo.controller.ts",{"_index":2417,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{}}}],["src/repo/repo.controller.ts:22",{"_index":2427,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:33",{"_index":2431,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:44",{"_index":2422,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:55",{"_index":2425,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.module.ts",{"_index":2494,"title":{},"body":{"modules/RepoModule.html":{}}}],["src/repo/repo.service.ts",{"_index":2513,"title":{},"body":{"injectables/RepoService.html":{},"coverage.html":{}}}],["src/repo/repo.service.ts:146",{"_index":2526,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:15",{"_index":2518,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:160",{"_index":2527,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:174",{"_index":2524,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:208",{"_index":2525,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:22",{"_index":2532,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:257",{"_index":2529,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:37",{"_index":2522,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:62",{"_index":2521,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/star/repo",{"_index":2593,"title":{},"body":{"controllers/RepoStarController.html":{},"coverage.html":{}}}],["src/star/star.module.ts",{"_index":2752,"title":{},"body":{"modules/StarModule.html":{}}}],["src/star/star.service.ts",{"_index":2754,"title":{},"body":{"injectables/StarService.html":{},"coverage.html":{}}}],["src/star/star.service.ts:13",{"_index":2760,"title":{},"body":{"injectables/StarService.html":{}}}],["src/star/star.service.ts:19",{"_index":2764,"title":{},"body":{"injectables/StarService.html":{}}}],["src/star/star.service.ts:42",{"_index":2762,"title":{},"body":{"injectables/StarService.html":{}}}],["src/star/star.service.ts:7",{"_index":2758,"title":{},"body":{"injectables/StarService.html":{}}}],["src/stargaze/repo",{"_index":2638,"title":{},"body":{"controllers/RepoStargazeController.html":{},"coverage.html":{}}}],["src/stargaze/stargaze.module.ts",{"_index":2781,"title":{},"body":{"modules/StargazeModule.html":{}}}],["src/stargaze/stargaze.service.ts",{"_index":2783,"title":{},"body":{"injectables/StargazeService.html":{},"coverage.html":{}}}],["src/stargaze/stargaze.service.ts:13",{"_index":2789,"title":{},"body":{"injectables/StargazeService.html":{}}}],["src/stargaze/stargaze.service.ts:19",{"_index":2793,"title":{},"body":{"injectables/StargazeService.html":{}}}],["src/stargaze/stargaze.service.ts:44",{"_index":2791,"title":{},"body":{"injectables/StargazeService.html":{}}}],["src/stargaze/stargaze.service.ts:7",{"_index":2787,"title":{},"body":{"injectables/StargazeService.html":{}}}],["src/stripe",{"_index":2860,"title":{},"body":{"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stripe/stripe.module.ts",{"_index":2806,"title":{},"body":{"modules/StripeModule.html":{}}}],["src/stripe/stripe.service.ts",{"_index":2808,"title":{},"body":{"injectables/StripeService.html":{},"coverage.html":{}}}],["src/stripe/stripe.service.ts:12",{"_index":2817,"title":{},"body":{"injectables/StripeService.html":{}}}],["src/stripe/stripe.service.ts:20",{"_index":2813,"title":{},"body":{"injectables/StripeService.html":{}}}],["src/stripe/stripe.service.ts:27",{"_index":2815,"title":{},"body":{"injectables/StripeService.html":{}}}],["src/stripe/stripe.service.ts:8",{"_index":2811,"title":{},"body":{"injectables/StripeService.html":{}}}],["src/submit/repo",{"_index":2676,"title":{},"body":{"controllers/RepoSubmitController.html":{},"coverage.html":{}}}],["src/submit/submit.module.ts",{"_index":2948,"title":{},"body":{"modules/SubmitModule.html":{}}}],["src/submit/submit.service.ts",{"_index":2950,"title":{},"body":{"injectables/SubmitService.html":{},"coverage.html":{}}}],["src/submit/submit.service.ts:13",{"_index":2956,"title":{},"body":{"injectables/SubmitService.html":{}}}],["src/submit/submit.service.ts:19",{"_index":2960,"title":{},"body":{"injectables/SubmitService.html":{}}}],["src/submit/submit.service.ts:42",{"_index":2958,"title":{},"body":{"injectables/SubmitService.html":{}}}],["src/submit/submit.service.ts:7",{"_index":2954,"title":{},"body":{"injectables/SubmitService.html":{}}}],["src/subscription/stripe",{"_index":1385,"title":{},"body":{"entities/DbSubscription.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"coverage.html":{}}}],["src/user",{"_index":1554,"title":{},"body":{"entities/DbUserRepo.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"coverage.html":{}}}],["src/user/dtos/create",{"_index":809,"title":{},"body":{"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"coverage.html":{}}}],["src/user/dtos/update",{"_index":3058,"title":{},"body":{"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"coverage.html":{}}}],["src/user/entities/user",{"_index":1430,"title":{},"body":{"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/user/user",{"_index":3109,"title":{},"body":{"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":3181,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:33",{"_index":3204,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:45",{"_index":3199,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:60",{"_index":3190,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:77",{"_index":3194,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.entity.ts",{"_index":4659,"title":{},"body":{"coverage.html":{}}}],["src/user/user.module.ts",{"_index":3574,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":3686,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:124",{"_index":3701,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:14",{"_index":3697,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:163",{"_index":3717,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:187",{"_index":3713,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:20",{"_index":3699,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:202",{"_index":3719,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:212",{"_index":3715,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:222",{"_index":3711,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:226",{"_index":3709,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:233",{"_index":3703,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:26",{"_index":3705,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:63",{"_index":3707,"title":{},"body":{"injectables/UserService.html":{}}}],["src/vote/repo",{"_index":2712,"title":{},"body":{"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["src/vote/vote.module.ts",{"_index":3782,"title":{},"body":{"modules/VoteModule.html":{}}}],["src/vote/vote.service.ts",{"_index":3784,"title":{},"body":{"injectables/VoteService.html":{},"coverage.html":{}}}],["src/vote/vote.service.ts:13",{"_index":3790,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:19",{"_index":3794,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:45",{"_index":3792,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:7",{"_index":3788,"title":{},"body":{"injectables/VoteService.html":{}}}],["ssl",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["stable",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["stack",{"_index":865,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["staff",{"_index":1358,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["star",{"_index":1337,"title":{},"body":{"entities/DbRepoToUserStars.html":{},"controllers/RepoStarController.html":{},"injectables/StarService.html":{},"changelog.html":{}}}],["star'})@apiokresponse({description",{"_index":2603,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller",{"_index":2753,"title":{},"body":{"modules/StarModule.html":{}}}],["star.controller.ts",{"_index":2594,"title":{},"body":{"controllers/RepoStarController.html":{},"coverage.html":{}}}],["star.controller.ts:116",{"_index":2611,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller.ts:35",{"_index":2615,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller.ts:55",{"_index":2619,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller.ts:74",{"_index":2622,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller.ts:97",{"_index":2608,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.service",{"_index":2626,"title":{},"body":{"controllers/RepoStarController.html":{},"modules/StarModule.html":{}}}],["star/star.module",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["starbyrepoid",{"_index":2756,"title":{},"body":{"injectables/StarService.html":{}}}],["starbyrepoid(repoid",{"_index":2763,"title":{},"body":{"injectables/StarService.html":{}}}],["starexists",{"_index":2770,"title":{},"body":{"injectables/StarService.html":{}}}],["starexists.deleted_at",{"_index":2771,"title":{},"body":{"injectables/StarService.html":{}}}],["stargaze",{"_index":1319,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"controllers/RepoStargazeController.html":{},"changelog.html":{}}}],["stargaze.controller",{"_index":2782,"title":{},"body":{"modules/StargazeModule.html":{}}}],["stargaze.controller.ts",{"_index":2639,"title":{},"body":{"controllers/RepoStargazeController.html":{},"coverage.html":{}}}],["stargaze.controller.ts:100",{"_index":2650,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.controller.ts:122",{"_index":2653,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.controller.ts:35",{"_index":2656,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.controller.ts:55",{"_index":2660,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.controller.ts:77",{"_index":2663,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.service",{"_index":2665,"title":{},"body":{"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{}}}],["stargaze/stargaze.module",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["stargazebyrepoid",{"_index":2785,"title":{},"body":{"injectables/StargazeService.html":{}}}],["stargazebyrepoid(repoid",{"_index":2792,"title":{},"body":{"injectables/StargazeService.html":{}}}],["stargazed",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["stargazeexists",{"_index":2798,"title":{},"body":{"injectables/StargazeService.html":{}}}],["stargazeexists.deleted_at",{"_index":2799,"title":{},"body":{"injectables/StargazeService.html":{}}}],["stargazemodule",{"_index":20,"title":{"modules/StargazeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StargazeModule.html":{},"modules.html":{},"overview.html":{}}}],["stargazeonebyid",{"_index":2643,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargazeonebyid(id",{"_index":2657,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargazeonebyownerandrepo",{"_index":2644,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargazeonebyownerandrepo(owner",{"_index":2661,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargazers",{"_index":2554,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoStargazeController.html":{}}}],["stargazerscount",{"_index":2507,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["stargazeservice",{"_index":2664,"title":{"injectables/StargazeService.html":{}},"body":{"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"coverage.html":{},"overview.html":{}}}],["starmodule",{"_index":19,"title":{"modules/StarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StarModule.html":{},"modules.html":{},"overview.html":{}}}],["staronebyid",{"_index":2598,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["staronebyid(@param(\"id",{"_index":2630,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["staronebyid(id",{"_index":2616,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["staronebyownerandrepo",{"_index":2599,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["staronebyownerandrepo(owner",{"_index":2620,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["starred",{"_index":2614,"title":{},"body":{"controllers/RepoStarController.html":{},"injectables/StarService.html":{},"changelog.html":{}}}],["stars",{"_index":2501,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"miscellaneous/enumerations.html":{}}}],["starscount",{"_index":2508,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["starservice",{"_index":2625,"title":{"injectables/StarService.html":{}},"body":{"controllers/RepoStarController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"coverage.html":{},"overview.html":{}}}],["start",{"_index":582,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"entities/DbSubscription.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["start:dev",{"_index":4703,"title":{},"body":{"index.html":{}}}],["started",{"_index":3806,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starttime",{"_index":1971,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{},"miscellaneous/variables.html":{}}}],["starttime)}ms",{"_index":4893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stash",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["state",{"_index":1223,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["statements",{"_index":4626,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":3916,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":1396,"title":{},"body":{"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"classes/PullRequestPageOptionsDto.html":{},"controllers/StripeWebhookController.html":{},"classes/UpdateUserCollaborationDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["statuscode",{"_index":1975,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["statusmessage",{"_index":1976,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["strategy",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["stray",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["stress",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ChatResponse.html":{},"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/HighlightOptionsDto.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"injectables/InsightsService.html":{},"injectables/OpenAiService.html":{},"classes/PullRequestContributorOptionsDto.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StripeService.html":{},"controllers/StripeWebhookController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"classes/UserOnboardingDto.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["string(id",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{}}}],["string(process.env.api_codename",{"_index":4865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_domain",{"_index":4869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_host",{"_index":4867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_port",{"_index":4868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.endorsement_service_token",{"_index":4884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.openai_api_key",{"_index":4932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.openai_completions_api_url",{"_index":4939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.openai_model_name",{"_index":4934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.stripe_checkout_session_cancel_url",{"_index":4950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.stripe_checkout_session_success_url",{"_index":4948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.stripe_secret_key",{"_index":4942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.stripe_subscription_price_id",{"_index":4946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.stripe_webhook_secret_live",{"_index":4943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_connection_api",{"_index":4895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_connection_logging",{"_index":4910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_database_api",{"_index":4904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_database_logging",{"_index":4915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_host_api",{"_index":4897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_host_logging",{"_index":4911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_password_api",{"_index":4902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_password_logging",{"_index":4914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_port_api",{"_index":4898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_port_logging",{"_index":4912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_ssl_cert_api",{"_index":4907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_ssl_cert_logging",{"_index":4916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_username_api",{"_index":4900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.typeorm_username_logging",{"_index":4913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(user_name",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{}}}],["stringifyparameters",{"_index":923,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["stringifyparameters(parameters",{"_index":940,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["string})@isstring",{"_index":1803,"title":{},"body":{"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{}}}],["string})@isstring()@isoptional",{"_index":1846,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["stripe",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"entities/DbCustomer.html":{},"injectables/StripeService.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"changelog.html":{}}}],["stripe(this.configservice.get(\"stripe.secretkey",{"_index":2819,"title":{},"body":{"injectables/StripeService.html":{}}}],["stripe.checkout.session",{"_index":2939,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["stripe.service",{"_index":2807,"title":{},"body":{"modules/StripeModule.html":{}}}],["stripe.subscription",{"_index":2934,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["stripe/stripe.module",{"_index":440,"title":{},"body":{"modules/AuthModule.html":{},"modules/StripeWebHookModule.html":{}}}],["stripe/stripe.service",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"controllers/StripeWebhookController.html":{}}}],["stripe_customer_id",{"_index":900,"title":{},"body":{"injectables/CustomerService.html":{},"entities/DbCustomer.html":{}}}],["stripeconfig",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stripecustomer",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["stripecustomer.id",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["stripemodule",{"_index":432,"title":{"modules/StripeModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/StripeModule.html":{},"modules/StripeWebHookModule.html":{},"modules.html":{},"overview.html":{}}}],["stripeservice",{"_index":338,"title":{"injectables/StripeService.html":{}},"body":{"controllers/AuthController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"controllers/StripeWebhookController.html":{},"coverage.html":{},"overview.html":{}}}],["stripesubscriptionmodule",{"_index":21,"title":{"modules/StripeSubscriptionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/StripeWebHookModule.html":{},"modules.html":{},"overview.html":{}}}],["stripesubscriptionservice",{"_index":2841,"title":{"injectables/StripeSubscriptionService.html":{}},"body":{"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"coverage.html":{},"overview.html":{}}}],["stripewebhookcontroller",{"_index":2859,"title":{"controllers/StripeWebhookController.html":{}},"body":{"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{},"coverage.html":{},"overview.html":{}}}],["stripewebhookmodule",{"_index":22,"title":{"modules/StripeWebHookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StripeWebHookModule.html":{},"modules.html":{},"overview.html":{}}}],["structure",{"_index":4089,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["structured",{"_index":4840,"title":{},"body":{"properties.html":{}}}],["stuff",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["style",{"_index":1861,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{},"changelog.html":{}}}],["styles",{"_index":4241,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sub",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["sub_1234",{"_index":1427,"title":{},"body":{"entities/DbSubscription.html":{}}}],["sub_1234'})@primarycolumn('text",{"_index":1411,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subdomain",{"_index":4926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subevents",{"_index":2931,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subevents.includes(event.type",{"_index":2932,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subject",{"_index":4797,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":4790,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1353,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{},"controllers/RepoSubmitController.html":{},"changelog.html":{}}}],["submission'})@apiokresponse({description",{"_index":2685,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submissions",{"_index":2553,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoSubmitController.html":{},"changelog.html":{}}}],["submissionscount",{"_index":2506,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["submit",{"_index":2703,"title":{},"body":{"controllers/RepoSubmitController.html":{},"injectables/SubmitService.html":{},"changelog.html":{}}}],["submit.controller",{"_index":2949,"title":{},"body":{"modules/SubmitModule.html":{}}}],["submit.controller.ts",{"_index":2677,"title":{},"body":{"controllers/RepoSubmitController.html":{},"coverage.html":{}}}],["submit.controller.ts:100",{"_index":2687,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submit.controller.ts:122",{"_index":2690,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submit.controller.ts:35",{"_index":2694,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submit.controller.ts:55",{"_index":2697,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submit.controller.ts:77",{"_index":2700,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submit.service",{"_index":2702,"title":{},"body":{"controllers/RepoSubmitController.html":{},"modules/SubmitModule.html":{}}}],["submit/submit.module",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["submitbyrepoid",{"_index":2952,"title":{},"body":{"injectables/SubmitService.html":{}}}],["submitbyrepoid(repoid",{"_index":2959,"title":{},"body":{"injectables/SubmitService.html":{}}}],["submitd",{"_index":2967,"title":{},"body":{"injectables/SubmitService.html":{}}}],["submitexists",{"_index":2965,"title":{},"body":{"injectables/SubmitService.html":{}}}],["submitexists.deleted_at",{"_index":2966,"title":{},"body":{"injectables/SubmitService.html":{}}}],["submitmodule",{"_index":23,"title":{"modules/SubmitModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubmitModule.html":{},"modules.html":{},"overview.html":{}}}],["submitonebyid",{"_index":2681,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submitonebyid(id",{"_index":2695,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submitonebyownerandrepo",{"_index":2682,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submitonebyownerandrepo(owner",{"_index":2698,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submitservice",{"_index":2701,"title":{"injectables/SubmitService.html":{}},"body":{"controllers/RepoSubmitController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"coverage.html":{},"overview.html":{}}}],["submitted",{"_index":2693,"title":{},"body":{"controllers/RepoSubmitController.html":{},"changelog.html":{}}}],["subquery",{"_index":2533,"title":{},"body":{"injectables/RepoService.html":{},"injectables/UserHighlightsService.html":{}}}],["subquery.getrawone",{"_index":3435,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["subquery_for_count",{"_index":3431,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["subquerycount",{"_index":2516,"title":{},"body":{"injectables/RepoService.html":{}}}],["subquerycount(subquery",{"_index":2530,"title":{},"body":{"injectables/RepoService.html":{}}}],["subquerycountprs",{"_index":2295,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["subquerycountprs(qb",{"_index":2303,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["subscribers",{"_index":2503,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["subscription",{"_index":1401,"title":{},"body":{"entities/DbSubscription.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{}}}],["subscription.cancel_at",{"_index":2901,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscription.cancel_at_period_end",{"_index":2900,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscription.canceled_at",{"_index":2903,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscription.customer",{"_index":2936,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscription.dto",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/StripeSubscriptionModule.html":{},"injectables/StripeSubscriptionService.html":{}}}],["subscription.dto.ts",{"_index":1386,"title":{},"body":{"entities/DbSubscription.html":{},"coverage.html":{}}}],["subscription.dto.ts:101",{"_index":1410,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:111",{"_index":1400,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:121",{"_index":1404,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:131",{"_index":1423,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:141",{"_index":1422,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:16",{"_index":1412,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:23",{"_index":1425,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:33",{"_index":1420,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:40",{"_index":1413,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:47",{"_index":1416,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:54",{"_index":1417,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:61",{"_index":1402,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:71",{"_index":1405,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:81",{"_index":1409,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.dto.ts:91",{"_index":1408,"title":{},"body":{"entities/DbSubscription.html":{}}}],["subscription.ended_at",{"_index":2908,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscription.id",{"_index":2895,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscription.items.data.length",{"_index":2899,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscription.items.data[0].price.id",{"_index":2898,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscription.module",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/StripeWebHookModule.html":{}}}],["subscription.module.ts",{"_index":2842,"title":{},"body":{"modules/StripeSubscriptionModule.html":{}}}],["subscription.service",{"_index":2843,"title":{},"body":{"modules/StripeSubscriptionModule.html":{},"controllers/StripeWebhookController.html":{}}}],["subscription.service.ts",{"_index":2845,"title":{},"body":{"injectables/StripeSubscriptionService.html":{},"coverage.html":{}}}],["subscription.service.ts:14",{"_index":2850,"title":{},"body":{"injectables/StripeSubscriptionService.html":{}}}],["subscription.service.ts:18",{"_index":2852,"title":{},"body":{"injectables/StripeSubscriptionService.html":{}}}],["subscription.service.ts:8",{"_index":2848,"title":{},"body":{"injectables/StripeSubscriptionService.html":{}}}],["subscription.status",{"_index":2897,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscription.trial_end",{"_index":2912,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscription.trial_start",{"_index":2910,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscription/stripe",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/StripeWebHookModule.html":{},"controllers/StripeWebhookController.html":{}}}],["subscriptiondata",{"_index":2894,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscriptionid",{"_index":2874,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["subscriptionpriceid",{"_index":4945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subscriptionrepository",{"_index":2849,"title":{},"body":{"injectables/StripeSubscriptionService.html":{}}}],["subscriptions",{"_index":1426,"title":{},"body":{"entities/DbSubscription.html":{},"changelog.html":{}}}],["subscriptionsessioncancelurl",{"_index":4949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subscriptionsessioncheckoutsuccessurl",{"_index":4947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substantial",{"_index":4803,"title":{},"body":{"license.html":{}}}],["success_url",{"_index":2832,"title":{},"body":{"injectables/StripeService.html":{}}}],["successful",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":4888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["such",{"_index":578,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["suggest",{"_index":581,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{}}}],["suggestion",{"_index":521,"title":{},"body":{"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{}}}],["suggestion.controller",{"_index":2337,"title":{},"body":{"modules/PullRequestModule.html":{}}}],["suggestion.controller.ts",{"_index":558,"title":{},"body":{"controllers/CodeRefactorSuggestionController.html":{},"coverage.html":{}}}],["suggestion.controller.ts:22",{"_index":564,"title":{},"body":{"controllers/CodeRefactorSuggestionController.html":{}}}],["suggestion.dto",{"_index":565,"title":{},"body":{"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{}}}],["suggestion.dto.ts",{"_index":1831,"title":{},"body":{"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"coverage.html":{}}}],["suggestion.dto.ts:13",{"_index":1833,"title":{},"body":{"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{}}}],["suggestion.dto.ts:23",{"_index":1835,"title":{},"body":{"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{}}}],["suggestion.dto.ts:30",{"_index":1836,"title":{},"body":{"classes/GenerateCodeTestSuggestionDto.html":{}}}],["suggestion.dto.ts:33",{"_index":1834,"title":{},"body":{"classes/GenerateCodeRefactorSuggestionDto.html":{}}}],["suggestion.dto.ts:40",{"_index":1832,"title":{},"body":{"classes/GenerateCodeRefactorSuggestionDto.html":{}}}],["suggestion.service",{"_index":567,"title":{},"body":{"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"modules/PullRequestModule.html":{}}}],["suggestion.service.ts",{"_index":570,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"coverage.html":{}}}],["suggestion.service.ts:10",{"_index":575,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{}}}],["suggestion.service.ts:18",{"_index":574,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{}}}],["suggestion.service.ts:7",{"_index":572,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{}}}],["suggestions",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["suite",{"_index":4704,"title":{},"body":{"index.html":{}}}],["summary",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/ContributorController.html":{},"controllers/EmojiController.html":{},"controllers/EndorsementController.html":{},"controllers/HealthController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}}}],["supabase",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"controllers/UserCollaborationController.html":{},"changelog.html":{},"properties.html":{}}}],["supabase.guard",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["supabase.strategy",{"_index":438,"title":{},"body":{"modules/AuthModule.html":{}}}],["supabase.user.decorator",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabase/supabase",{"_index":451,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{},"injectables/UserService.html":{}}}],["supabaseauthdto",{"_index":333,"title":{"classes/SupabaseAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"coverage.html":{}}}],["supabaseauthdto})@apinotfoundresponse({description",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabaseauthdto})@httpcode(httpstatus.ok",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabaseauthrequest",{"_index":4852,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["supabaseauthstrategy",{"_index":3029,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseauthuser",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{},"controllers/UserCollaborationController.html":{}}}],["supabaseguard",{"_index":329,"title":{"injectables/SupabaseGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseGuard.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{},"coverage.html":{},"overview.html":{}}}],["supabasejwtsecret",{"_index":3037,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasekey",{"_index":3034,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseoptions",{"_index":3036,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasestrategy",{"_index":433,"title":{"injectables/SupabaseStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":3032,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super",{"_index":3031,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super(context",{"_index":876,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["super.authenticate(req",{"_index":3042,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.debug.apply(this",{"_index":883,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["super.error.apply(this",{"_index":881,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["super.log.apply(this",{"_index":879,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["super.validate(user",{"_index":3041,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.warn.apply(this",{"_index":882,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["support",{"_index":4111,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["supporting",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["svg",{"_index":4827,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["switch",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":479,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{},"changelog.html":{}}}],["systemmessage",{"_index":480,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["t",{"_index":2173,"title":{},"body":{"classes/PageDto.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["t.setseconds(secs",{"_index":4956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"changelog.html":{},"coverage.html":{}}}],["tables",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4661,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["tagging",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1294,"title":{},"body":{"entities/DbPullRequest.html":{},"changelog.html":{}}}],["take",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"entities/DbPullRequest.html":{},"injectables/RepoService.html":{},"changelog.html":{}}}],["target_branch",{"_index":1224,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["target_label",{"_index":1225,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["targets",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["target}.id",{"_index":2542,"title":{},"body":{"injectables/RepoService.html":{}}}],["team",{"_index":789,"title":{},"body":{"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"controllers/UserInsightMemberController.html":{},"changelog.html":{},"index.html":{}}}],["team'})@column({type",{"_index":1103,"title":{},"body":{"entities/DbInsight.html":{}}}],["team'})@isstring",{"_index":777,"title":{},"body":{"classes/CreateInsightDto.html":{},"classes/UpdateInsightDto.html":{}}}],["tech",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["ted",{"_index":4849,"title":{},"body":{"properties.html":{}}}],["temperature",{"_index":459,"title":{},"body":{"interfaces/ChatResponse.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"injectables/OpenAiService.html":{}}}],["temporary",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["tense",{"_index":2282,"title":{},"body":{"injectables/PullRequestDescriptionService.html":{}}}],["terminusmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":596,"title":{},"body":{"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"modules/PullRequestModule.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["test.suggestion.controller",{"_index":2338,"title":{},"body":{"modules/PullRequestModule.html":{}}}],["test.suggestion.controller.ts",{"_index":591,"title":{},"body":{"controllers/CodeTestSuggestionController.html":{},"coverage.html":{}}}],["test.suggestion.controller.ts:22",{"_index":597,"title":{},"body":{"controllers/CodeTestSuggestionController.html":{}}}],["test:coveragefor",{"_index":4714,"title":{},"body":{"index.html":{}}}],["tester",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":4456,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["testyou",{"_index":4712,"title":{},"body":{"index.html":{}}}],["text",{"_index":588,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/CreateUserHighlightDto.html":{},"entities/DbEmoji.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPullRequest.html":{},"entities/DbSubscription.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserRepo.html":{},"miscellaneous/variables.html":{}}}],["th3nn3ss",{"_index":1311,"title":{},"body":{"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{}}}],["th3nn3ss'})@column('text",{"_index":1238,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["th3nn3ss:cli_split_kwargs",{"_index":1307,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["th3nn3ss:cli_split_kwargs'})@column({type",{"_index":1284,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["them'})@apibearerauth()@useguards(supabaseguard)@apipaginatedresponse(dbinsight)@apiokresponse({type",{"_index":3528,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["them'})@apibearerauth()@useguards(supabaseguard)@apipaginatedresponse(dbinsightmember)@apiokresponse({type",{"_index":3480,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["them'})@apipaginatedresponse(dbcontribution)@apiokresponse({type",{"_index":2398,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["them'})@apipaginatedresponse(dbemoji)@apiokresponse({type",{"_index":1588,"title":{},"body":{"controllers/EmojiController.html":{}}}],["them'})@apipaginatedresponse(dbendorsement)@apiokresponse({type",{"_index":1641,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/UserEndorsementController.html":{}}}],["them'})@apipaginatedresponse(dbpullrequest)@apiokresponse({type",{"_index":2244,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["them'})@apipaginatedresponse(dbpullrequestcontributor)@apiokresponse({type",{"_index":710,"title":{},"body":{"controllers/ContributorController.html":{}}}],["them'})@apipaginatedresponse(dbrepo)@apiokresponse({type",{"_index":2421,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserController.html":{}}}],["them'})@apipaginatedresponse(dbuserhighlight)@apiokresponse({type",{"_index":1926,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserController.html":{}}}],["them'})@apipaginatedresponse(dbuserhighlightrepo)@apiokresponse({type",{"_index":1922,"title":{},"body":{"controllers/HighlightController.html":{}}}],["this._stripe",{"_index":2818,"title":{},"body":{"injectables/StripeService.html":{}}}],["this.addusernotification",{"_index":3629,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["this.basefilterquerybuilder(range",{"_index":2578,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.basequerybuilder",{"_index":909,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["this.codeexplanationservice.generateexplanation(generatecodeexplanationdto",{"_index":522,"title":{},"body":{"controllers/CodeExplanationController.html":{}}}],["this.coderefactorsuggestionservice.generatedescription(generatecoderefactorsuggestiondto",{"_index":569,"title":{},"body":{"controllers/CodeRefactorSuggestionController.html":{}}}],["this.codetestsuggestionservice.generatetestsuggestion(generatecodetestsuggestiondto",{"_index":600,"title":{},"body":{"controllers/CodeTestSuggestionController.html":{}}}],["this.configservice.get(\"api.endorsementservicetoken",{"_index":1779,"title":{},"body":{"guards/EndorsementTokenGuard.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":1896,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":1898,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":1911,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":1903,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":1907,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":1909,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":1905,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":1901,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":1891,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":1893,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"openai.apikey",{"_index":473,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["this.configservice.get(\"openai.modelname",{"_index":477,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["this.configservice.get(\"stripe.subscriptionpriceid",{"_index":2830,"title":{},"body":{"injectables/StripeService.html":{}}}],["this.configservice.get(\"stripe.subscriptionsessioncancelurl",{"_index":2835,"title":{},"body":{"injectables/StripeService.html":{}}}],["this.configservice.get(\"stripe.subscriptionsessioncheckoutsuccessurl",{"_index":2833,"title":{},"body":{"injectables/StripeService.html":{}}}],["this.configservice.get(\"stripe.webhooksecret",{"_index":2927,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["this.contributionrepository.createquerybuilder(\"contribution",{"_index":686,"title":{},"body":{"injectables/ContributionService.html":{}}}],["this.contributionservice.findall(pageoptionsdto",{"_index":2412,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["this.customerrepository.createquerybuilder(\"customer",{"_index":908,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerrepository.save",{"_index":913,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerservice.addcustomer(id",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.customerservice.findbycustomerid(customerid",{"_index":2887,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["this.customerservice.findbyid(id",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.data",{"_index":2183,"title":{},"body":{"classes/PageDto.html":{}}}],["this.database.pingcheck(\"db",{"_index":1889,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":1897,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":1894,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.emojirepository.createquerybuilder(\"emoji",{"_index":1612,"title":{},"body":{"injectables/EmojiService.html":{}}}],["this.emojiservice.findall(pageoptionsdto",{"_index":1599,"title":{},"body":{"controllers/EmojiController.html":{}}}],["this.endorsementrepository.createquerybuilder(\"endorsements",{"_index":1742,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["this.endorsementrepository.manager.createquerybuilder",{"_index":1759,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["this.endorsementrepository.save(createendorsementdto",{"_index":1743,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["this.endorsementrepository.softdelete(id",{"_index":1767,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["this.endorsementservice.create(createendorsementdto",{"_index":1679,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["this.endorsementservice.findall(pageoptionsdto",{"_index":1682,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["this.endorsementservice.findallbycreatoruserid(user.id",{"_index":1700,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["this.endorsementservice.findallbycreatoruserid(userid",{"_index":3231,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["this.endorsementservice.findallbyrecipientuserid(user.id",{"_index":1703,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["this.endorsementservice.findallbyrecipientuserid(userid",{"_index":3234,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["this.endorsementservice.findallbyrepoowneroruser(repoowneroruser",{"_index":1685,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["this.endorsementservice.findallendorsementsbyrepo(owner",{"_index":1689,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["this.endorsementservice.findallendorsementsbyrepobyuser(owner",{"_index":1693,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["this.endorsementservice.findonebyid(id",{"_index":1696,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["this.endorsementservice.remove(id",{"_index":1706,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["this.filterservice.getrepofilters(pageoptionsdto",{"_index":2381,"title":{},"body":{"injectables/PullRequestService.html":{},"injectables/RepoService.html":{}}}],["this.findonebyid(id",{"_index":3748,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generateprompt(options.descriptionlength",{"_index":604,"title":{},"body":{"injectables/CodeTestSuggestionService.html":{}}}],["this.generateprompt(options.language",{"_index":549,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["this.hasnextpage",{"_index":2212,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":2211,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.health.check",{"_index":1888,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":1910,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":1902,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":1906,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":1908,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":1904,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":1900,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.insightmemberrepository.createquerybuilder(\"insight_members",{"_index":2049,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["this.insightmemberrepository.save(insightmember",{"_index":2051,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["this.insightmemberrepository.softdelete(id",{"_index":2053,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["this.insightmemberrepository.update(id",{"_index":2052,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["this.insightmemberservice.addinsightmember",{"_index":3509,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["this.insightmemberservice.canusermanageinsight",{"_index":3504,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["this.insightmemberservice.canusermanageinsight(userid",{"_index":3498,"title":{},"body":{"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["this.insightmemberservice.findallinsightmembers(pageoptionsdto",{"_index":3500,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["this.insightmemberservice.findonebyid(memberid",{"_index":3515,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["this.insightmemberservice.removeinsightmember(memberid",{"_index":3523,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["this.insightmemberservice.updateinsightmember(memberid",{"_index":3521,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["this.insightreporepository.save",{"_index":2093,"title":{},"body":{"injectables/InsightRepoService.html":{}}}],["this.insightreporepository.softdelete(id",{"_index":2096,"title":{},"body":{"injectables/InsightRepoService.html":{}}}],["this.insightrepository.createquerybuilder(\"insights",{"_index":2129,"title":{},"body":{"injectables/InsightsService.html":{}}}],["this.insightrepository.save(insight",{"_index":2134,"title":{},"body":{"injectables/InsightsService.html":{}}}],["this.insightrepository.softdelete(id",{"_index":2136,"title":{},"body":{"injectables/InsightsService.html":{}}}],["this.insightrepository.update(id",{"_index":2135,"title":{},"body":{"injectables/InsightsService.html":{}}}],["this.insightservice.findonebyid(insightid",{"_index":2054,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["this.insightsreposervice.addinsightrepo(insight.id",{"_index":3568,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["this.insightsreposervice.addinsightrepo(newinsight.id",{"_index":3544,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["this.insightsreposervice.removeinsightrepo(insightrepo.id",{"_index":3558,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["this.insightsservice.addinsight",{"_index":3541,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["this.insightsservice.findallbyuserid(pageoptionsdto",{"_index":3536,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["this.insightsservice.findonebyid(id",{"_index":2012,"title":{},"body":{"controllers/InsightController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["this.insightsservice.findonebyid(insightid",{"_index":3496,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["this.insightsservice.removeinsight(id",{"_index":2016,"title":{},"body":{"controllers/InsightController.html":{}}}],["this.insightsservice.updateinsight(id",{"_index":3545,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["this.itemcount",{"_index":2208,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.limit",{"_index":2206,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.logger",{"_index":944,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["this.logger.debug(message",{"_index":954,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["this.logger.error",{"_index":950,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{},"controllers/StripeWebhookController.html":{}}}],["this.logger.error(`${query",{"_index":949,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["this.logger.error(cliduration(starttime",{"_index":1977,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["this.logger.log(`${query",{"_index":947,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["this.logger.log(`inserted/updated",{"_index":2919,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["this.logger.log(cliduration(starttime",{"_index":1982,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["this.logger.log(message",{"_index":953,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["this.logger.warn(cliduration(starttime",{"_index":1980,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["this.logger.warn(message",{"_index":952,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["this.logsrepository.create(log",{"_index":2160,"title":{},"body":{"injectables/LogService.html":{}}}],["this.logsrepository.save(newlog",{"_index":2161,"title":{},"body":{"injectables/LogService.html":{}}}],["this.logsservice",{"_index":878,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["this.logsservice.createlog",{"_index":880,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["this.managesubscriptionstatuschange(subscription.id",{"_index":2935,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["this.managesubscriptionstatuschange(subscriptionid",{"_index":2942,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["this.marknotificationsasread(notificationids",{"_index":3621,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":1890,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":1892,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.meta",{"_index":2184,"title":{},"body":{"classes/PageDto.html":{}}}],["this.openaiservice.generatecompletion",{"_index":548,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["this.page",{"_index":2204,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":2209,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.prinsightrepository.createquerybuilder(\"pr",{"_index":2310,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["this.pullrequestdescriptionservice.generatedescription(generatepullrequestdescriptiondto",{"_index":2275,"title":{},"body":{"controllers/PullRequestDescriptionController.html":{}}}],["this.pullrequestrepository.createquerybuilder(\"pull_requests",{"_index":2370,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["this.pullrequestrepository.manager.createquerybuilder",{"_index":2382,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["this.pullrequestservice.findall(pageoptionsdto",{"_index":2256,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["this.pullrequestservice.findallbycontributor(username",{"_index":3211,"title":{},"body":{"controllers/UserController.html":{}}}],["this.pullrequestservice.findallcontributorswithfilters(pageoptionsdto",{"_index":726,"title":{},"body":{"controllers/ContributorController.html":{}}}],["this.pullrequestservice.findallwithfilters(pageoptionsdto",{"_index":2258,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["this.pullrequestsinsightservice.getinsight(interval",{"_index":2264,"title":{},"body":{"controllers/PullRequestController.html":{}}}],["this.repofilterservice.getrepofilters(options",{"_index":2314,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["this.reporepository",{"_index":2543,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.reporepository.createquerybuilder(\"repo",{"_index":2582,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.reposervice.findall(pageoptionsdto",{"_index":2440,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserController.html":{}}}],["this.reposervice.findallwithfilters(pageoptionsdto",{"_index":2442,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.reposervice.findonebyid(id",{"_index":2411,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["this.reposervice.findonebyownerandrepo(owner",{"_index":2415,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["this.reposervice.findrecommendations(interests",{"_index":3655,"title":{},"body":{"controllers/UserRecommendationController.html":{}}}],["this.repostargazerepository.createquerybuilder(\"r2stargazes\").withdeleted",{"_index":2795,"title":{},"body":{"injectables/StargazeService.html":{}}}],["this.repostargazerepository.restore(stargazeexists.id",{"_index":2800,"title":{},"body":{"injectables/StargazeService.html":{}}}],["this.repostargazerepository.save",{"_index":2801,"title":{},"body":{"injectables/StargazeService.html":{}}}],["this.repostargazerepository.softdelete(stargazeexists.id",{"_index":2802,"title":{},"body":{"injectables/StargazeService.html":{}}}],["this.repostarrepository.createquerybuilder(\"r2stars\").withdeleted",{"_index":2767,"title":{},"body":{"injectables/StarService.html":{}}}],["this.repostarrepository.restore(starexists.id",{"_index":2773,"title":{},"body":{"injectables/StarService.html":{}}}],["this.repostarrepository.save",{"_index":2774,"title":{},"body":{"injectables/StarService.html":{}}}],["this.repostarrepository.softdelete(starexists.id",{"_index":2776,"title":{},"body":{"injectables/StarService.html":{}}}],["this.reposubmitrepository.createquerybuilder(\"r2submits\").withdeleted",{"_index":2962,"title":{},"body":{"injectables/SubmitService.html":{}}}],["this.reposubmitrepository.restore(submitexists.id",{"_index":2968,"title":{},"body":{"injectables/SubmitService.html":{}}}],["this.reposubmitrepository.save",{"_index":2969,"title":{},"body":{"injectables/SubmitService.html":{}}}],["this.reposubmitrepository.softdelete(submitexists.id",{"_index":2970,"title":{},"body":{"injectables/SubmitService.html":{}}}],["this.repovoterepository.createquerybuilder(\"r2votes\").withdeleted",{"_index":3796,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.restore(voteexists.id",{"_index":3802,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.save",{"_index":3803,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.softdelete(voteexists.id",{"_index":3804,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.stargazeservice.downstargazebyrepoid(item.id",{"_index":2673,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["this.stargazeservice.stargazebyrepoid(item.id",{"_index":2669,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["this.starservice.downstarbyrepoid(item.id",{"_index":2635,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["this.starservice.starbyrepoid(item.id",{"_index":2631,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["this.stringifyparameters(parameters",{"_index":948,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["this.stripe.checkout.sessions.create",{"_index":2823,"title":{},"body":{"injectables/StripeService.html":{}}}],["this.stripe.customers.create",{"_index":2822,"title":{},"body":{"injectables/StripeService.html":{}}}],["this.stripeservice.addcustomer(id",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.stripeservice.createcheckoutsession(customerid",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.stripeservice.stripe.subscriptions.retrieve(subscriptionid",{"_index":2889,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["this.stripeservice.stripe.webhooks.constructevent(req.rawbody",{"_index":2929,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["this.stripesubscriptionservice.upsertsubscription(subscriptiondata",{"_index":2914,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["this.submitservice.downsubmitbyrepoid(item.id",{"_index":2709,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["this.submitservice.submitbyrepoid(item.id",{"_index":2706,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["this.subquerycount(qb",{"_index":2551,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.subquerycountprs(querybuilder",{"_index":2323,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["this.subscriptionrepository.createquerybuilder(\"subscription",{"_index":2854,"title":{},"body":{"injectables/StripeSubscriptionService.html":{}}}],["this.subscriptionrepository.save(subscription",{"_index":2855,"title":{},"body":{"injectables/StripeSubscriptionService.html":{}}}],["this.usercollaborationrepository.createquerybuilder(\"user_collaborations",{"_index":3171,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["this.usercollaborationrepository.save(usercollaboration",{"_index":3173,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["this.usercollaborationrepository.softdelete(id",{"_index":3175,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["this.usercollaborationrepository.update(id",{"_index":3174,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["this.usercollaborationservice.findallusercollaborations(pageoptionsdto",{"_index":3143,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["this.usercollaborationservice.findonebyid(id",{"_index":3148,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["this.usercollaborationservice.removeusercollaboration(id",{"_index":3156,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["this.usercollaborationservice.updateusercollaboration(id",{"_index":3152,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["this.userfollowrepository.createquerybuilder(\"user_follows\").withdeleted",{"_index":3255,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["this.userfollowrepository.restore(followexists.id",{"_index":3264,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["this.userfollowrepository.save",{"_index":3266,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["this.userfollowrepository.softdelete(followexists.id",{"_index":3267,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["this.userfollowservice.adduserfollowerbyuserid(userid",{"_index":3293,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["this.userfollowservice.finduserfollowerbyid(userid",{"_index":3291,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["this.userfollowservice.removeuserfollowerbyid(userid",{"_index":3295,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["this.userhighlightreactionrepository",{"_index":3456,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["this.userhighlightreactionrepository.createquerybuilder(\"user_highlight_reactions",{"_index":3448,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["this.userhighlightreactionrepository.restore(reactionexists.id",{"_index":3461,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["this.userhighlightreactionrepository.save",{"_index":3463,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["this.userhighlightreactionrepository.softdelete(id",{"_index":3464,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["this.userhighlightrepository.create",{"_index":3439,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["this.userhighlightrepository.createquerybuilder(\"user_highlights",{"_index":3406,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["this.userhighlightrepository.manager",{"_index":3428,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["this.userhighlightrepository.save(newuserhighlight",{"_index":3445,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["this.userhighlightrepository.softdelete(highlightid",{"_index":3447,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["this.userhighlightrepository.update(highlightid",{"_index":3446,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["this.userhighlightsservice.adduserhighlight(userid",{"_index":3348,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["this.userhighlightsservice.adduserhighlightreaction(userid",{"_index":3363,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["this.userhighlightsservice.deleteuserhighlight(highlight.id",{"_index":3358,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["this.userhighlightsservice.deleteuserhighlightreaction(userhighlightreaction.id",{"_index":3368,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["this.userhighlightsservice.findall(pageoptionsdto",{"_index":1945,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserHighlightsController.html":{}}}],["this.userhighlightsservice.findallbyuserid(pageoptionsdto",{"_index":3213,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userhighlightsservice.findallhighlightreactions(id",{"_index":1952,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserHighlightsController.html":{}}}],["this.userhighlightsservice.findallhighlightrepos(pageoptionsdto",{"_index":1949,"title":{},"body":{"controllers/HighlightController.html":{},"controllers/UserHighlightsController.html":{}}}],["this.userhighlightsservice.findonebyid(highlight.id",{"_index":3357,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["this.userhighlightsservice.findonebyid(highlightid",{"_index":3352,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["this.userhighlightsservice.findonebyid(id",{"_index":3350,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["this.userhighlightsservice.findoneuserhighlightreaction",{"_index":3367,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["this.userhighlightsservice.updateuserhighlight(highlight.id",{"_index":3353,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["this.usernotificationrepository.createquerybuilder(\"user_notifications",{"_index":3614,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["this.usernotificationrepository.save",{"_index":3622,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["this.usernotificationrepository.update(id",{"_index":3635,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["this.usernotificationservice.adduserfollowernotification(userid",{"_index":3265,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["this.usernotificationservice.adduserhighlightnotification(userid",{"_index":3462,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["this.usernotificationservice.findallbyuserid(userid",{"_index":3591,"title":{},"body":{"controllers/UserNotificationController.html":{}}}],["this.userreporepository.create",{"_index":3683,"title":{},"body":{"injectables/UserReposService.html":{}}}],["this.userreporepository.createquerybuilder(\"user_repos",{"_index":3680,"title":{},"body":{"injectables/UserReposService.html":{}}}],["this.userreporepository.save(newuserrepo",{"_index":3684,"title":{},"body":{"injectables/UserReposService.html":{}}}],["this.userrepository.create",{"_index":3754,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.createquerybuilder(\"users",{"_index":3723,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.update(id",{"_index":3760,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.update(user.id",{"_index":3750,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.checkadduser(user",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.findonebyemail(createinsightmemberdto.email",{"_index":3507,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["this.userservice.findonebyid(user.user_metadata.sub",{"_index":3146,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["this.userservice.findonebyid(userid",{"_index":425,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{}}}],["this.userservice.findonebyusername(createusercollaborationdto.username",{"_index":3144,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["this.userservice.findonebyusername(username",{"_index":1699,"title":{},"body":{"controllers/EndorsementController.html":{},"controllers/UserController.html":{},"controllers/UserFollowsController.html":{}}}],["this.userservice.updateemailpreferences(userid",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.updateinterests(userid",{"_index":424,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.updateonboarding(userid",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.updaterole(userid",{"_index":2916,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["this.userservice.updateuser(userid",{"_index":422,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.updatewaitliststatus(userid",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.voteservice.downvotebyrepoid(item.id",{"_index":2746,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["this.voteservice.votebyrepoid(item.id",{"_index":2742,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["thresholdpercent",{"_index":1895,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":488,"title":{},"body":{"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/EndorsementService.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["time",{"_index":937,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"changelog.html":{}}}],["timeout",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["timestamp",{"_index":974,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{}}}],["timezone",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{},"classes/UpdateUserDto.html":{},"classes/UserOnboardingDto.html":{},"injectables/UserService.html":{}}}],["title",{"_index":827,"title":{},"body":{"classes/CreateUserHighlightDto.html":{},"entities/DbInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbUserHighlight.html":{},"injectables/UserHighlightsService.html":{}}}],["tld",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["tmodel",{"_index":4885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todatetime",{"_index":2875,"title":{},"body":{"controllers/StripeWebhookController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["todatetime(subscription.cancel_at",{"_index":2902,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["todatetime(subscription.canceled_at",{"_index":2904,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["todatetime(subscription.created",{"_index":2907,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["todatetime(subscription.current_period_end",{"_index":2906,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["todatetime(subscription.current_period_start",{"_index":2905,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["todatetime(subscription.ended_at",{"_index":2909,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["todatetime(subscription.trial_end",{"_index":2913,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["todatetime(subscription.trial_start",{"_index":2911,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["today",{"_index":1195,"title":{},"body":{"entities/DbPRInsight.html":{}}}],["token",{"_index":1678,"title":{},"body":{"controllers/EndorsementController.html":{},"guards/EndorsementTokenGuard.html":{},"changelog.html":{}}}],["token.guard",{"_index":1671,"title":{},"body":{"controllers/EndorsementController.html":{},"modules/EndorsementModule.html":{}}}],["token.guard.ts",{"_index":1771,"title":{},"body":{"guards/EndorsementTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:5",{"_index":1774,"title":{},"body":{"guards/EndorsementTokenGuard.html":{}}}],["token.guard.ts:8",{"_index":1777,"title":{},"body":{"guards/EndorsementTokenGuard.html":{}}}],["tone",{"_index":1841,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["tools",{"_index":4724,"title":{},"body":{"index.html":{}}}],["top",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserTopRepo.html":{},"classes/InsightOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["top100",{"_index":2074,"title":{},"body":{"classes/InsightOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["top_repos",{"_index":2473,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["top_repos\".id",{"_index":2472,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["top_repos.stars",{"_index":2474,"title":{},"body":{"injectables/RepoFilterService.html":{}}}],["topic",{"_index":1788,"title":{},"body":{"classes/FilterOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/RepoFilterService.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{}}}],["topics",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["toprepos",{"_index":3216,"title":{},"body":{"controllers/UserController.html":{}}}],["tort",{"_index":4822,"title":{},"body":{"license.html":{}}}],["total",{"_index":968,"title":{},"body":{"entities/DbContribution.html":{},"controllers/HighlightController.html":{}}}],["transformer",{"_index":785,"title":{},"body":{"classes/CreateInsightDto.html":{},"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["translatetime",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["translation",{"_index":579,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["transport",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["trial",{"_index":1421,"title":{},"body":{"entities/DbSubscription.html":{}}}],["trial_end_at",{"_index":1397,"title":{},"body":{"entities/DbSubscription.html":{},"controllers/StripeWebhookController.html":{}}}],["trial_start_at",{"_index":1398,"title":{},"body":{"entities/DbSubscription.html":{},"controllers/StripeWebhookController.html":{}}}],["trigger",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateInsightDto.html":{},"guards/EndorsementTokenGuard.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"injectables/InsightMemberService.html":{},"injectables/LogService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/StripeService.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"injectables/UserService.html":{}}}],["true})@type(undefined",{"_index":2177,"title":{},"body":{"classes/PageDto.html":{}}}],["true})@validatenested({each",{"_index":2176,"title":{},"body":{"classes/PageDto.html":{}}}],["try",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/PullRequestDescriptionService.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserService.html":{}}}],["turbo",{"_index":4937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":3005,"title":{},"body":{"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"changelog.html":{}}}],["twitter_username",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["type",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"interfaces/ChatResponse.html":{},"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/ContributorController.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"classes/DbUserHighlightRepo.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"guards/EndorsementTokenGuard.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"controllers/HighlightController.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"controllers/PullRequestController.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/PullRequestInsightsService.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"classes/RepoInfo.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateInsightDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4850,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":465,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["typeorm",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContributionService.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbLog.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/EmojiService.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/PullRequestInsightsService.html":{},"injectables/PullRequestService.html":{},"injectables/RepoFilterService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeSubscriptionService.html":{},"injectables/SubmitService.html":{},"injectables/UserCollaborationService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["typeormhealthindicator",{"_index":1878,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormlogger",{"_index":917,"title":{},"body":{"classes/DatabaseLoggerMiddleware.html":{}}}],["typeormmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"modules/ContributorModule.html":{},"modules/CustomerModule.html":{},"modules/EmojiModule.html":{},"modules/EndorsementModule.html":{},"modules/HighlightModule.html":{},"modules/InsightsModule.html":{},"modules/LogModule.html":{},"modules/PullRequestModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/UserReposModule.html":{},"modules/VoteModule.html":{}}}],["typeormmodule.forfeature",{"_index":3582,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forfeature([dbcustomer",{"_index":890,"title":{},"body":{"modules/CustomerModule.html":{}}}],["typeormmodule.forfeature([dbemoji",{"_index":1604,"title":{},"body":{"modules/EmojiModule.html":{}}}],["typeormmodule.forfeature([dbendorsement",{"_index":1713,"title":{},"body":{"modules/EndorsementModule.html":{}}}],["typeormmodule.forfeature([dbinsight",{"_index":2108,"title":{},"body":{"modules/InsightsModule.html":{}}}],["typeormmodule.forfeature([dblog",{"_index":2149,"title":{},"body":{"modules/LogModule.html":{}}}],["typeormmodule.forfeature([dbpullrequest",{"_index":731,"title":{},"body":{"modules/ContributorModule.html":{},"modules/PullRequestModule.html":{}}}],["typeormmodule.forfeature([dbrepo",{"_index":616,"title":{},"body":{"modules/ContributionModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{}}}],["typeormmodule.forfeature([dbsubscription",{"_index":2844,"title":{},"body":{"modules/StripeSubscriptionModule.html":{}}}],["typeormmodule.forfeature([dbuserhighlight",{"_index":1957,"title":{},"body":{"modules/HighlightModule.html":{}}}],["typeormmodule.forfeature([dbuserrepo",{"_index":3668,"title":{},"body":{"modules/UserReposModule.html":{}}}],["typeormmodule.forrootasync",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":4401,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["types:auto",{"_index":4745,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["ucn2zrh2wgxkck7tt2jg4my6wbhkex9s",{"_index":4903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui",{"_index":1860,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["unable",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{}}}],["unauthorizedexception",{"_index":2000,"title":{},"body":{"controllers/InsightController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["unblock",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":466,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestController.html":{},"injectables/PullRequestInsightsService.html":{},"controllers/StripeWebhookController.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{}}}],["undefined})@column({type",{"_index":1232,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["undefined})@isarray",{"_index":3105,"title":{},"body":{"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"classes/UserRepoOptionsDto-1.html":{}}}],["undefined})@isenum(contributionorderfieldsenum)@isoptional",{"_index":635,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{}}}],["undefined})@isenum(orderdirectionenum)@isoptional",{"_index":645,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UserRepoOptionsDto.html":{}}}],["undefined})@isenum(pullrequestorderfieldsenum)@isoptional",{"_index":2344,"title":{},"body":{"classes/PullRequestPageOptionsDto.html":{}}}],["undefined})@isenum(repoorderfieldsenum)@isoptional",{"_index":2497,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{}}}],["undefined})@isoptional",{"_index":1843,"title":{},"body":{"classes/GeneratePullRequestDescriptionDto.html":{}}}],["undefined})@type(undefined)@isarray",{"_index":783,"title":{},"body":{"classes/CreateInsightDto.html":{},"classes/UpdateInsightDto.html":{}}}],["underscores",{"_index":3087,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["undo",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["unfollowed",{"_index":2649,"title":{},"body":{"controllers/RepoStargazeController.html":{},"injectables/StargazeService.html":{}}}],["unfollows",{"_index":2672,"title":{},"body":{"controllers/RepoStargazeController.html":{},"controllers/UserFollowsController.html":{}}}],["unfollows'})@apiokresponse({description",{"_index":2647,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["unfollowuserbyuserid",{"_index":3273,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["unfollowuserbyuserid(username",{"_index":3283,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["unfollowuserbyusername",{"_index":3285,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["unique",{"_index":960,"title":{},"body":{"entities/DbContribution.html":{},"classes/SupabaseAuthDto.html":{}}}],["unit",{"_index":4721,"title":{},"body":{"index.html":{}}}],["unix",{"_index":4952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unknown",{"_index":507,"title":{},"body":{"controllers/CodeExplanationController.html":{},"injectables/CodeExplanationService.html":{},"controllers/CodeRefactorSuggestionController.html":{},"injectables/CodeRefactorSuggestionService.html":{},"controllers/CodeTestSuggestionController.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/CustomLogger.html":{},"injectables/CustomerService.html":{},"classes/DatabaseLoggerMiddleware.html":{},"controllers/EmojiController.html":{},"injectables/EmojiService.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"controllers/HealthController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightRepoService.html":{},"injectables/InsightsService.html":{},"injectables/LogService.html":{},"injectables/OpenAiService.html":{},"controllers/PullRequestDescriptionController.html":{},"injectables/PullRequestDescriptionService.html":{},"injectables/StripeService.html":{},"injectables/StripeSubscriptionService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["unnecessary",{"_index":577,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["unprocessableentityexception",{"_index":3533,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["unread",{"_index":3002,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["up",{"_index":1442,"title":{},"body":{"entities/DbUserCollaboration.html":{},"changelog.html":{}}}],["update",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/SupabaseAuthDto.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["update/remove",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":1112,"title":{},"body":{"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"changelog.html":{},"index.html":{}}}],["updated_at",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/PullRequestService.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthDto.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["updatedatecolumn",{"_index":1016,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["updatedinsightmember",{"_index":3517,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["updatedinsightmember.access",{"_index":3520,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["updatedinsightmember.user_id",{"_index":3519,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["updatedusercollaboration",{"_index":3150,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["updateemailpreferences",{"_index":3690,"title":{},"body":{"injectables/UserService.html":{}}}],["updateemailpreferences(id",{"_index":3708,"title":{},"body":{"injectables/UserService.html":{}}}],["updateemailpreferencesforuserprofile",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateemailpreferencesforuserprofile(userid",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateendorsementdto",{"_index":3043,"title":{"classes/UpdateEndorsementDto.html":{}},"body":{"classes/UpdateEndorsementDto.html":{},"coverage.html":{}}}],["updatehighlightdto",{"_index":3343,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["updatehighlightdto.shipped_at",{"_index":3354,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["updatehighlightforuser",{"_index":3307,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["updatehighlightforuser(updatehighlightdto",{"_index":3340,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["updateinsight",{"_index":2113,"title":{},"body":{"injectables/InsightsService.html":{}}}],["updateinsight(id",{"_index":2125,"title":{},"body":{"injectables/InsightsService.html":{}}}],["updateinsightdto",{"_index":1998,"title":{"classes/UpdateInsightDto.html":{}},"body":{"controllers/InsightController.html":{},"classes/UpdateInsightDto.html":{},"controllers/UserInsightsController.html":{},"coverage.html":{}}}],["updateinsightdto.is_public",{"_index":3547,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["updateinsightdto.name",{"_index":3546,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["updateinsightdto.repos.filter",{"_index":3564,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["updateinsightdto.repos.find((repoinfo",{"_index":3553,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["updateinsightforuser",{"_index":3525,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["updateinsightforuser(id",{"_index":3530,"title":{},"body":{"controllers/UserInsightsController.html":{}}}],["updateinsightmember",{"_index":2024,"title":{},"body":{"injectables/InsightMemberService.html":{},"controllers/UserInsightMemberController.html":{}}}],["updateinsightmember(id",{"_index":2044,"title":{},"body":{"injectables/InsightMemberService.html":{},"controllers/UserInsightMemberController.html":{}}}],["updateinsightmemberdto",{"_index":3051,"title":{"classes/UpdateInsightMemberDto.html":{}},"body":{"classes/UpdateInsightMemberDto.html":{},"controllers/UserInsightMemberController.html":{},"coverage.html":{}}}],["updateinsightmemberdto.access",{"_index":3518,"title":{},"body":{"controllers/UserInsightMemberController.html":{}}}],["updateinterests",{"_index":3691,"title":{},"body":{"injectables/UserService.html":{}}}],["updateinterests(id",{"_index":3710,"title":{},"body":{"injectables/UserService.html":{}}}],["updateinterestsforuserprofile",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateinterestsforuserprofile(userid",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateonboarding",{"_index":3692,"title":{},"body":{"injectables/UserService.html":{}}}],["updateonboarding(id",{"_index":3712,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofileforuser",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateprofileforuser(@userid",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateprofileforuser(userid",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["updaterole",{"_index":3693,"title":{},"body":{"injectables/UserService.html":{}}}],["updaterole(id",{"_index":3714,"title":{},"body":{"injectables/UserService.html":{}}}],["updates",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserNotificationService.html":{}}}],["updateuser",{"_index":3694,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(id",{"_index":3716,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusercollaboration",{"_index":3115,"title":{},"body":{"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{}}}],["updateusercollaboration(id",{"_index":3133,"title":{},"body":{"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{}}}],["updateusercollaborationdto",{"_index":3057,"title":{"classes/UpdateUserCollaborationDto.html":{}},"body":{"classes/UpdateUserCollaborationDto.html":{},"controllers/UserCollaborationController.html":{},"coverage.html":{}}}],["updateusercollaborationdto.status",{"_index":3151,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["updateuserdto",{"_index":298,"title":{"classes/UpdateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuseremailpreferencesdto",{"_index":299,"title":{"classes/UpdateUserEmailPreferencesDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserhighlight",{"_index":3378,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["updateuserhighlight(highlightid",{"_index":3402,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["updateuserprofileinterestsdto",{"_index":308,"title":{"classes/UpdateUserProfileInterestsDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updatewaitliststatus",{"_index":3695,"title":{},"body":{"injectables/UserService.html":{}}}],["updatewaitliststatus(id",{"_index":3718,"title":{},"body":{"injectables/UserService.html":{}}}],["upgrades",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["upsert",{"_index":2892,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["upsertsubscription",{"_index":2846,"title":{},"body":{"injectables/StripeSubscriptionService.html":{}}}],["upsertsubscription(subscription",{"_index":2851,"title":{},"body":{"injectables/StripeSubscriptionService.html":{}}}],["url",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateUserHighlightDto.html":{},"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbPullRequest.html":{},"entities/DbUserHighlight.html":{},"classes/SupabaseAuthDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["url'})@column({type",{"_index":1078,"title":{},"body":{"entities/DbEndorsement.html":{}}}],["url(`https://${subdomain",{"_index":4927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urls",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":1960,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["use(request",{"_index":1961,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["usefactory",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/EndorsementController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}}}],["useguards(endorsementtokenguard",{"_index":1674,"title":{},"body":{"controllers/EndorsementController.html":{}}}],["useguards(supabaseguard",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CodeExplanationController.html":{},"controllers/CodeRefactorSuggestionController.html":{},"controllers/CodeTestSuggestionController.html":{},"controllers/InsightController.html":{},"controllers/PullRequestDescriptionController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserEndorsementController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"controllers/UserRecommendationController.html":{}}}],["useless",{"_index":3417,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["user",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ChatResponse.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"controllers/EndorsementController.html":{},"injectables/EndorsementService.html":{},"controllers/HighlightController.html":{},"controllers/InsightController.html":{},"modules/InsightsModule.html":{},"injectables/InsightsService.html":{},"injectables/OpenAiService.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"controllers/StripeWebhookController.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserController.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"classes/UserOnboardingDto.html":{},"controllers/UserRecommendationController.html":{},"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1141,"title":{},"body":{"entities/DbInsightMember.html":{},"classes/SupabaseAuthDto.html":{}}}],["user'})@apibearerauth()@apiokresponse()@useguards(supabaseguard",{"_index":3648,"title":{},"body":{"controllers/UserRecommendationController.html":{}}}],["user'})@apibearerauth()@useguards(supabaseguard)@apinotfoundresponse({description",{"_index":3321,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["user'})@apibearerauth()@useguards(supabaseguard)@apiokresponse({type",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InsightController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserHighlightsController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{}}}],["user'})@apibearerauth()@useguards(supabaseguard)@apipaginatedresponse(dbusercollaboration)@apiokresponse({type",{"_index":3128,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["user'})@apiokresponse({type",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.bio",{"_index":3763,"title":{},"body":{"injectables/UserService.html":{}}}],["user.collaborations",{"_index":1458,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["user.collaborations)@joincolumn({name",{"_index":1452,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["user.company",{"_index":3766,"title":{},"body":{"injectables/UserService.html":{}}}],["user.controller",{"_index":3577,"title":{},"body":{"modules/UserModule.html":{}}}],["user.display_email",{"_index":3774,"title":{},"body":{"injectables/UserService.html":{}}}],["user.display_local_time",{"_index":3768,"title":{},"body":{"injectables/UserService.html":{}}}],["user.dto",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":3063,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:102",{"_index":3073,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:11",{"_index":3079,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:19",{"_index":3071,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:28",{"_index":3066,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:37",{"_index":3093,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:50",{"_index":3091,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:59",{"_index":3068,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:68",{"_index":3076,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:77",{"_index":3070,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:86",{"_index":3082,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:94",{"_index":3075,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":3762,"title":{},"body":{"injectables/UserService.html":{}}}],["user.entity",{"_index":1456,"title":{},"body":{"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserTopRepo.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.github_sponsors_url",{"_index":3770,"title":{},"body":{"injectables/UserService.html":{}}}],["user.highlights",{"_index":1491,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["user.highlights)@joincolumn({name",{"_index":1485,"title":{},"body":{"entities/DbUserHighlight.html":{}}}],["user.id",{"_index":3214,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserFollowsController.html":{}}}],["user.insights",{"_index":1119,"title":{},"body":{"entities/DbInsight.html":{}}}],["user.insights)@joincolumn({name",{"_index":1115,"title":{},"body":{"entities/DbInsight.html":{}}}],["user.interests.join",{"_index":3773,"title":{},"body":{"injectables/UserService.html":{}}}],["user.interests?.split(\",\").filter(boolean",{"_index":3654,"title":{},"body":{"controllers/UserRecommendationController.html":{}}}],["user.is_open_sauced_member",{"_index":3749,"title":{},"body":{"injectables/UserService.html":{}}}],["user.linkedin_url",{"_index":3771,"title":{},"body":{"injectables/UserService.html":{}}}],["user.location",{"_index":3767,"title":{},"body":{"injectables/UserService.html":{}}}],["user.name",{"_index":3761,"title":{},"body":{"injectables/UserService.html":{}}}],["user.receive_collaboration",{"_index":3775,"title":{},"body":{"injectables/UserService.html":{}}}],["user.repotouserstargazers",{"_index":1334,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["user.repotouserstargazers)@joincolumn({name",{"_index":1329,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["user.repotouserstars",{"_index":1349,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["user.repotouserstars)@joincolumn({name",{"_index":1345,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["user.repotousersubmissions",{"_index":1368,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["user.repotousersubmissions)@joincolumn({name",{"_index":1364,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["user.repotouservotes",{"_index":1383,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["user.repotouservotes)@joincolumn({name",{"_index":1379,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["user.request_collaborations",{"_index":1459,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["user.request_collaborations)@joincolumn({name",{"_index":1447,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["user.service",{"_index":3205,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"modules/UserModule.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{}}}],["user.timezone",{"_index":3769,"title":{},"body":{"injectables/UserService.html":{}}}],["user.toprepos",{"_index":1580,"title":{},"body":{"entities/DbUserTopRepo.html":{}}}],["user.toprepos)@joincolumn({name",{"_index":1576,"title":{},"body":{"entities/DbUserTopRepo.html":{}}}],["user.twitter_username",{"_index":3765,"title":{},"body":{"injectables/UserService.html":{}}}],["user.url",{"_index":3764,"title":{},"body":{"injectables/UserService.html":{}}}],["user/collaborations",{"_index":3111,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["user/dtos/update",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{}}}],["user/endorsements",{"_index":3219,"title":{},"body":{"controllers/UserEndorsementController.html":{}}}],["user/entities/user",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"entities/DbEmoji.html":{},"classes/DbUserHighlightReactionResponse.html":{},"controllers/HighlightController.html":{},"modules/HighlightModule.html":{},"classes/HighlightOptionsDto.html":{}}}],["user/highlights",{"_index":3298,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["user/insights",{"_index":3467,"title":{},"body":{"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{}}}],["user/notifications",{"_index":3584,"title":{},"body":{"controllers/UserNotificationController.html":{}}}],["user/recommendations",{"_index":3643,"title":{},"body":{"controllers/UserRecommendationController.html":{}}}],["user/user",{"_index":1938,"title":{},"body":{"controllers/HighlightController.html":{}}}],["user/user.entity",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/DbInsight.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["user/user.module",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EndorsementModule.html":{},"modules/HighlightModule.html":{},"modules/InsightsModule.html":{},"modules/StripeWebHookModule.html":{}}}],["user/user.service",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EndorsementController.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserInsightMemberController.html":{}}}],["user_collaborations",{"_index":1457,"title":{},"body":{"entities/DbUserCollaboration.html":{}}}],["user_follows",{"_index":3737,"title":{},"body":{"injectables/UserService.html":{}}}],["user_follows.deleted_at",{"_index":3738,"title":{},"body":{"injectables/UserService.html":{}}}],["user_follows_deleted_at",{"_index":3262,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["user_highlight_reactions",{"_index":1511,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["user_highlights",{"_index":1489,"title":{},"body":{"entities/DbUserHighlight.html":{},"injectables/UserService.html":{}}}],["user_highlights.deleted_at",{"_index":3734,"title":{},"body":{"injectables/UserService.html":{}}}],["user_highlights.user_id",{"_index":3415,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["user_highlights.user_id=users.id",{"_index":3408,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["user_highlights_login",{"_index":3410,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["user_highlights_name",{"_index":3413,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["user_id",{"_index":1090,"title":{},"body":{"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"injectables/InsightsService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"injectables/UserNotificationService.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["user_id=:userid",{"_index":3416,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["user_metadata",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["user_name",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"injectables/UserService.html":{}}}],["user_notifications",{"_index":1550,"title":{},"body":{"entities/DbUserNotification.html":{},"injectables/UserService.html":{}}}],["user_notifications.read_at",{"_index":3726,"title":{},"body":{"injectables/UserService.html":{}}}],["user_notifications.type",{"_index":3725,"title":{},"body":{"injectables/UserService.html":{}}}],["user_notifications.user_id=users.id",{"_index":3615,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["user_repos",{"_index":1558,"title":{},"body":{"entities/DbUserRepo.html":{}}}],["user_top_repos",{"_index":1579,"title":{},"body":{"entities/DbUserTopRepo.html":{}}}],["usercollaboration",{"_index":3154,"title":{},"body":{"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{}}}],["usercollaboration.user_id",{"_index":3155,"title":{},"body":{"controllers/UserCollaborationController.html":{}}}],["usercollaborationcontroller",{"_index":3108,"title":{"controllers/UserCollaborationController.html":{}},"body":{"controllers/UserCollaborationController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercollaborationrepository",{"_index":3161,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["usercollaborationservice",{"_index":3137,"title":{"injectables/UserCollaborationService.html":{}},"body":{"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["usercontroller",{"_index":3180,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["userendorsementcontroller",{"_index":3217,"title":{"controllers/UserEndorsementController.html":{}},"body":{"controllers/UserEndorsementController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userfollowrepository",{"_index":3243,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["userfollowscontroller",{"_index":3269,"title":{"controllers/UserFollowsController.html":{}},"body":{"controllers/UserFollowsController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userfollowservice",{"_index":3235,"title":{"injectables/UserFollowService.html":{}},"body":{"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userhighlightreaction",{"_index":3366,"title":{},"body":{"controllers/UserHighlightsController.html":{}}}],["userhighlightreactionrepository",{"_index":3380,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["userhighlightrepository",{"_index":3382,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["userhighlightscontroller",{"_index":3296,"title":{"controllers/UserHighlightsController.html":{}},"body":{"controllers/UserHighlightsController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userhighlightsservice",{"_index":1937,"title":{"injectables/UserHighlightsService.html":{}},"body":{"controllers/HighlightController.html":{},"controllers/UserController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CustomerService.html":{},"injectables/EndorsementService.html":{},"controllers/InsightController.html":{},"injectables/InsightMemberService.html":{},"injectables/InsightsService.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/StripeService.html":{},"controllers/StripeWebhookController.html":{},"injectables/SubmitService.html":{},"controllers/UserCollaborationController.html":{},"injectables/UserCollaborationService.html":{},"controllers/UserEndorsementController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"controllers/UserInsightMemberController.html":{},"controllers/UserInsightsController.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserReposService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinsightmembercontroller",{"_index":2103,"title":{"controllers/UserInsightMemberController.html":{}},"body":{"modules/InsightsModule.html":{},"controllers/UserInsightMemberController.html":{},"coverage.html":{}}}],["userinsightscontroller",{"_index":2102,"title":{"controllers/UserInsightsController.html":{}},"body":{"modules/InsightsModule.html":{},"controllers/UserInsightsController.html":{},"coverage.html":{}}}],["userinterests",{"_index":2583,"title":{},"body":{"injectables/RepoService.html":{}}}],["userinterests[interest",{"_index":2590,"title":{},"body":{"injectables/RepoService.html":{}}}],["usermessage",{"_index":458,"title":{},"body":{"interfaces/ChatResponse.html":{},"injectables/OpenAiService.html":{}}}],["usermodule",{"_index":24,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EndorsementModule.html":{},"modules/HighlightModule.html":{},"modules/InsightsModule.html":{},"modules/StripeWebHookModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserCollaborationDto.html":{},"entities/DbPullRequest.html":{},"classes/DbPullRequestContributor.html":{},"controllers/EndorsementController.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"controllers/UserFollowsController.html":{},"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["username'})@apinotfoundresponse({description",{"_index":3277,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["username'})@apiokresponse({description",{"_index":3286,"title":{},"body":{"controllers/UserFollowsController.html":{}}}],["username'})@apiokresponse({type",{"_index":3203,"title":{},"body":{"controllers/UserController.html":{}}}],["username'})@apipaginatedresponse(dbpullrequest)@apiokresponse({type",{"_index":3197,"title":{},"body":{"controllers/UserController.html":{}}}],["usernames",{"_index":3089,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["usernotification",{"_index":3606,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["usernotification.from_user_id",{"_index":3626,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["usernotification.message",{"_index":3625,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["usernotification.meta_id",{"_index":3627,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["usernotification.type",{"_index":3623,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["usernotification.user_id",{"_index":3624,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["usernotificationcontroller",{"_index":3575,"title":{"controllers/UserNotificationController.html":{}},"body":{"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"coverage.html":{}}}],["usernotificationrepository",{"_index":3599,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["usernotificationservice",{"_index":3241,"title":{"injectables/UserNotificationService.html":{}},"body":{"injectables/UserFollowService.html":{},"injectables/UserHighlightsService.html":{},"modules/UserModule.html":{},"controllers/UserNotificationController.html":{},"injectables/UserNotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["usernotificationtypes",{"_index":1546,"title":{},"body":{"entities/DbUserNotification.html":{},"injectables/UserNotificationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["usernotificationtypes.follow",{"_index":3630,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["usernotificationtypes.highlightreaction",{"_index":3632,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["useronboardingdto",{"_index":285,"title":{"classes/UserOnboardingDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/UserOnboardingDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userprofile",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["userprofile.email",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["userrecommendationcontroller",{"_index":3576,"title":{"controllers/UserRecommendationController.html":{}},"body":{"modules/UserModule.html":{},"controllers/UserRecommendationController.html":{},"coverage.html":{}}}],["userrelations",{"_index":2523,"title":{},"body":{"injectables/RepoService.html":{}}}],["userrelations?.map((relation",{"_index":2570,"title":{},"body":{"injectables/RepoService.html":{}}}],["userrepooptionsdto",{"_index":3656,"title":{"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{}},"body":{"classes/UserRepoOptionsDto.html":{},"classes/UserRepoOptionsDto-1.html":{},"injectables/UserReposService.html":{},"coverage.html":{}}}],["userreporepository",{"_index":3673,"title":{},"body":{"injectables/UserReposService.html":{}}}],["userrepository",{"_index":3698,"title":{},"body":{"injectables/UserService.html":{}}}],["userreposmodule",{"_index":25,"title":{"modules/UserReposModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserReposModule.html":{},"modules.html":{},"overview.html":{}}}],["userreposservice",{"_index":3665,"title":{"injectables/UserReposService.html":{}},"body":{"modules/UserReposModule.html":{},"injectables/UserReposService.html":{},"coverage.html":{},"overview.html":{}}}],["userrole",{"_index":2915,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["users",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{},"injectables/EndorsementService.html":{},"injectables/InsightMemberService.html":{},"controllers/UserController.html":{},"controllers/UserFollowsController.html":{},"controllers/UserHighlightsController.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserNotificationService.html":{},"changelog.html":{},"index.html":{}}}],["users.id",{"_index":3733,"title":{},"body":{"injectables/UserService.html":{}}}],["users_email",{"_index":3730,"title":{},"body":{"injectables/UserService.html":{}}}],["users_followers_count",{"_index":3740,"title":{},"body":{"injectables/UserService.html":{}}}],["users_following_count",{"_index":3739,"title":{},"body":{"injectables/UserService.html":{}}}],["users_highlights_count",{"_index":3735,"title":{},"body":{"injectables/UserService.html":{}}}],["users_notification_count",{"_index":3727,"title":{},"body":{"injectables/UserService.html":{}}}],["users_to_repos_stargazers",{"_index":1332,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["users_to_repos_stars",{"_index":1348,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["users_to_repos_submissions",{"_index":1367,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["users_to_repos_votes",{"_index":1382,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["users_to_users_followers",{"_index":1569,"title":{},"body":{"entities/DbUserToUserFollows.html":{},"injectables/UserHighlightsService.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":336,"title":{"injectables/UserService.html":{}},"body":{"controllers/AuthController.html":{},"controllers/EndorsementController.html":{},"controllers/StripeWebhookController.html":{},"controllers/UserCollaborationController.html":{},"controllers/UserController.html":{},"injectables/UserFollowService.html":{},"controllers/UserFollowsController.html":{},"controllers/UserInsightMemberController.html":{},"modules/UserModule.html":{},"injectables/UserNotificationService.html":{},"controllers/UserRecommendationController.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":707,"title":{},"body":{"controllers/ContributorController.html":{},"controllers/PullRequestController.html":{},"controllers/RepoController.html":{},"injectables/RepoFilterService.html":{},"changelog.html":{}}}],["utc",{"_index":3080,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserOnboardingDto.html":{}}}],["utc:hh:mm:ss.l",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["util/cli",{"_index":1969,"title":{},"body":{"injectables/HttpLoggerMiddleware.html":{}}}],["utils",{"_index":2876,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["uuid",{"_index":1051,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlightReaction.html":{},"controllers/StripeWebhookController.html":{}}}],["v4",{"_index":1066,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlightReaction.html":{}}}],["v4'})@column({type",{"_index":1500,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["v4'})@primarycolumn()@primarygeneratedcolumn",{"_index":1131,"title":{},"body":{"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{}}}],["v4'})@primarygeneratedcolumn",{"_index":1052,"title":{},"body":{"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbUserHighlightReaction.html":{}}}],["valid",{"_index":584,"title":{},"body":{"injectables/CodeRefactorSuggestionService.html":{},"injectables/CodeTestSuggestionService.html":{}}}],["validate",{"_index":3018,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"changelog.html":{}}}],["validate(user",{"_index":3023,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validatenested",{"_index":2181,"title":{},"body":{"classes/PageDto.html":{}}}],["validation",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["validator",{"_index":658,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/CreateEndorsementDto.html":{},"classes/CreateInsightDto.html":{},"classes/CreateInsightMemberDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCollaborationDto.html":{},"classes/CreateUserHighlightDto.html":{},"classes/DbUserHighlightReactionResponse.html":{},"classes/FilterOptionsDto.html":{},"classes/GenerateCodeExplanationDto.html":{},"classes/GenerateCodeRefactorSuggestionDto.html":{},"classes/GenerateCodeTestSuggestionDto.html":{},"classes/GeneratePullRequestDescriptionDto.html":{},"classes/HighlightOptionsDto.html":{},"classes/InsightOptionsDto.html":{},"classes/PageDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"classes/PullRequestPageOptionsDto.html":{},"classes/RepoInfo.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"classes/UpdateInsightMemberDto.html":{},"classes/UpdateUserCollaborationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEmailPreferencesDto.html":{},"classes/UpdateUserProfileInterestsDto.html":{},"classes/UserOnboardingDto.html":{},"classes/UserRepoOptionsDto-1.html":{}}}],["value",{"_index":630,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbPullRequest.html":{},"classes/FilterOptionsDto.html":{},"classes/HighlightOptionsDto.html":{},"injectables/HttpLoggerMiddleware.html":{},"injectables/InsightMemberService.html":{},"classes/InsightOptionsDto.html":{},"classes/InsightPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/PullRequestContributorOptionsDto.html":{},"injectables/PullRequestInsightsService.html":{},"classes/PullRequestPageOptionsDto.html":{},"injectables/RepoFilterService.html":{},"classes/RepoPageOptionsDto.html":{},"classes/RepoSearchOptionsDto.html":{},"injectables/RepoService.html":{},"classes/UserRepoOptionsDto.html":{},"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["variable",{"_index":4471,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":4461,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":964,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbCustomer.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserNotification.html":{}}}],["velocity",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["verbose",{"_index":856,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["verbose(message",{"_index":869,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["verify",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":4565,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versiond",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["versioning",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":4335,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":4763,"title":{},"body":{"index.html":{}}}],["view",{"_index":1992,"title":{},"body":{"controllers/InsightController.html":{},"classes/UpdateInsightMemberDto.html":{},"controllers/UserInsightMemberController.html":{},"changelog.html":{}}}],["view'})@isstring()@isin(['view",{"_index":3052,"title":{},"body":{"classes/UpdateInsightMemberDto.html":{}}}],["virtual",{"_index":1512,"title":{},"body":{"entities/DbUserHighlightReaction.html":{}}}],["visibility",{"_index":774,"title":{},"body":{"classes/CreateInsightDto.html":{},"entities/DbInsight.html":{},"classes/UpdateInsightDto.html":{},"changelog.html":{}}}],["visual",{"_index":4768,"title":{},"body":{"index.html":{}}}],["visualisation",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":4767,"title":{},"body":{"index.html":{}}}],["visualizer",{"_index":4771,"title":{},"body":{"index.html":{}}}],["vite",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["vitest",{"_index":4726,"title":{},"body":{"index.html":{}}}],["void",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/HttpLoggerMiddleware.html":{},"injectables/RepoFilterService.html":{},"injectables/SupabaseStrategy.html":{}}}],["volume",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["volumes",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["vortex",{"_index":1028,"title":{},"body":{"entities/DbContribution.html":{},"classes/SupabaseAuthDto.html":{},"properties.html":{}}}],["vortex'})@column({type",{"_index":962,"title":{},"body":{"entities/DbContribution.html":{}}}],["vortex/api.opensauced.pizza",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["vortex@opensauced.pizza",{"_index":2981,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["vote",{"_index":1371,"title":{},"body":{"entities/DbRepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["vote'})@apiokresponse({description",{"_index":2721,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller",{"_index":3783,"title":{},"body":{"modules/VoteModule.html":{}}}],["vote.controller.ts",{"_index":2713,"title":{},"body":{"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["vote.controller.ts:116",{"_index":2726,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:35",{"_index":2730,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:55",{"_index":2733,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:74",{"_index":2736,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:97",{"_index":2723,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.service",{"_index":2738,"title":{},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{}}}],["vote/vote.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["votebyrepoid",{"_index":3786,"title":{},"body":{"injectables/VoteService.html":{}}}],["votebyrepoid(repoid",{"_index":3793,"title":{},"body":{"injectables/VoteService.html":{}}}],["voted",{"_index":2729,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["voteexists",{"_index":3800,"title":{},"body":{"injectables/VoteService.html":{}}}],["voteexists.deleted_at",{"_index":3801,"title":{},"body":{"injectables/VoteService.html":{}}}],["votemodule",{"_index":26,"title":{"modules/VoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VoteModule.html":{},"modules.html":{},"overview.html":{}}}],["voteonebyid",{"_index":2717,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyid(@param(\"id",{"_index":2741,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyid(id",{"_index":2731,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyownerandrepo",{"_index":2718,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyownerandrepo(owner",{"_index":2734,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["votes",{"_index":2552,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{}}}],["votescount",{"_index":2505,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["voteservice",{"_index":2737,"title":{"injectables/VoteService.html":{}},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{},"overview.html":{}}}],["voting",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["waitlist",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["waitlisted",{"_index":2991,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["warn",{"_index":857,"title":{},"body":{"injectables/CustomLogger.html":{},"classes/DatabaseLoggerMiddleware.html":{}}}],["warn(message",{"_index":871,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["warnings",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":4809,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4805,"title":{},"body":{"license.html":{}}}],["watch",{"_index":4706,"title":{},"body":{"index.html":{}}}],["watchers",{"_index":2502,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["watchman",{"_index":4711,"title":{},"body":{"index.html":{}}}],["web",{"_index":1868,"title":{},"body":{"controllers/HealthController.html":{}}}],["webhook",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["webhook.controller",{"_index":2862,"title":{},"body":{"modules/StripeWebHookModule.html":{}}}],["webhook.controller.ts",{"_index":2864,"title":{},"body":{"controllers/StripeWebhookController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["webhook.controller.ts:32",{"_index":2873,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["webhook.controller.ts:82",{"_index":2870,"title":{},"body":{"controllers/StripeWebhookController.html":{}}}],["webhook/stripe",{"_index":2863,"title":{},"body":{"controllers/StripeWebhookController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["webhook/utils.ts",{"_index":4656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["webhook/webhook.module",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["webhook/webhook.module.ts",{"_index":2861,"title":{},"body":{"modules/StripeWebHookModule.html":{}}}],["webhooksecret",{"_index":2926,"title":{},"body":{"controllers/StripeWebhookController.html":{},"miscellaneous/variables.html":{}}}],["website",{"_index":3009,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["welcome",{"_index":1552,"title":{},"body":{"entities/DbUserNotification.html":{},"miscellaneous/enumerations.html":{}}}],["welcome'})@column({type",{"_index":1545,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["where(\"endorsements.recipient_user_id",{"_index":1749,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["where(\"id",{"_index":3728,"title":{},"body":{"injectables/UserService.html":{}}}],["where(\"insight_members.insight_id",{"_index":2055,"title":{},"body":{"injectables/InsightMemberService.html":{}}}],["where(\"insights.id",{"_index":2130,"title":{},"body":{"injectables/InsightsService.html":{}}}],["where(\"insights.user_id",{"_index":2137,"title":{},"body":{"injectables/InsightsService.html":{}}}],["where(\"lower(repos.full_name",{"_index":1754,"title":{},"body":{"injectables/EndorsementService.html":{}}}],["where(\"r2stargazes.repo_id",{"_index":2796,"title":{},"body":{"injectables/StargazeService.html":{}}}],["where(\"r2votes.repo_id",{"_index":3798,"title":{},"body":{"injectables/VoteService.html":{}}}],["where(\"user_collaborations.user_id",{"_index":3178,"title":{},"body":{"injectables/UserCollaborationService.html":{}}}],["where(\"user_follows.user_id",{"_index":3256,"title":{},"body":{"injectables/UserFollowService.html":{}}}],["where(\"user_highlight_reactions.highlight_id",{"_index":3451,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["where(\"user_highlights.id",{"_index":3411,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["where(\"user_id",{"_index":3616,"title":{},"body":{"injectables/UserNotificationService.html":{}}}],["where(`${aliastable}.${target}_id",{"_index":2541,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(`(:topic",{"_index":2587,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(`lower(\"pull_requests\".\"author_login\")=:contributor",{"_index":2374,"title":{},"body":{"injectables/PullRequestService.html":{}}}],["where(`user_highlights.url",{"_index":3425,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["whether",{"_index":1473,"title":{},"body":{"entities/DbUserHighlight.html":{},"classes/SupabaseAuthDto.html":{},"license.html":{}}}],["windows",{"_index":4692,"title":{},"body":{"index.html":{}}}],["withdeleted",{"_index":3458,"title":{},"body":{"injectables/UserHighlightsService.html":{}}}],["without",{"_index":980,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{},"changelog.html":{},"license.html":{}}}],["work",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":4272,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["workflows",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":4720,"title":{},"body":{"index.html":{}}}],["writing",{"_index":4300,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["written",{"_index":539,"title":{},"body":{"injectables/CodeExplanationService.html":{},"injectables/CodeRefactorSuggestionService.html":{},"injectables/PullRequestDescriptionService.html":{}}}],["xa",{"_index":1268,"title":{},"body":{"entities/DbPullRequest.html":{}}}],["yaml",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["year",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":675,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/CustomLogger.html":{},"classes/DatabaseLoggerMiddleware.html":{},"injectables/RepoService.html":{},"injectables/StripeService.html":{},"injectables/UserHighlightsService.html":{}}}],["yml",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["you'})@column({type",{"_index":1536,"title":{},"body":{"entities/DbUserNotification.html":{}}}],["youtube",{"_index":4765,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":2317,"title":{},"body":{"injectables/PullRequestInsightsService.html":{}}}],["zone",{"_index":981,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbEmoji.html":{},"entities/DbEndorsement.html":{},"entities/DbInsight.html":{},"entities/DbInsightMember.html":{},"entities/DbInsightRepo.html":{},"entities/DbPRInsight.html":{},"entities/DbPullRequest.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbSubscription.html":{},"entities/DbUserCollaboration.html":{},"entities/DbUserHighlight.html":{},"entities/DbUserHighlightReaction.html":{},"entities/DbUserNotification.html":{},"entities/DbUserRepo.html":{},"entities/DbUserToUserFollows.html":{},"entities/DbUserTopRepo.html":{}}}],["zoom",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/ContributorModule.html":{},"modules/CustomerModule.html":{},"modules/EmojiModule.html":{},"modules/EndorsementModule.html":{},"modules/HighlightModule.html":{},"modules/InsightsModule.html":{},"modules/LogModule.html":{},"modules/OpenAiModule.html":{},"modules/PullRequestModule.html":{},"modules/RepoFilterModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/StripeModule.html":{},"modules/StripeSubscriptionModule.html":{},"modules/StripeWebHookModule.html":{},"modules/SubmitModule.html":{},"modules/UserModule.html":{},"modules/UserReposModule.html":{},"modules/VoteModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nContributionModule\n\nContributionModule\n\nAppModule -->\n\nContributionModule->AppModule\n\n\n\n\n\nContributorModule\n\nContributorModule\n\nAppModule -->\n\nContributorModule->AppModule\n\n\n\n\n\nCustomerModule\n\nCustomerModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nEmojiModule\n\nEmojiModule\n\nAppModule -->\n\nEmojiModule->AppModule\n\n\n\n\n\nEndorsementModule\n\nEndorsementModule\n\nAppModule -->\n\nEndorsementModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nHighlightModule\n\nHighlightModule\n\nAppModule -->\n\nHighlightModule->AppModule\n\n\n\n\n\nInsightsModule\n\nInsightsModule\n\nAppModule -->\n\nInsightsModule->AppModule\n\n\n\n\n\nOpenAiModule\n\nOpenAiModule\n\nAppModule -->\n\nOpenAiModule->AppModule\n\n\n\n\n\nPullRequestModule\n\nPullRequestModule\n\nAppModule -->\n\nPullRequestModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nStarModule\n\nStarModule\n\nAppModule -->\n\nStarModule->AppModule\n\n\n\n\n\nStargazeModule\n\nStargazeModule\n\nAppModule -->\n\nStargazeModule->AppModule\n\n\n\n\n\nStripeSubscriptionModule\n\nStripeSubscriptionModule\n\nAppModule -->\n\nStripeSubscriptionModule->AppModule\n\n\n\n\n\nStripeWebHookModule\n\nStripeWebHookModule\n\nAppModule -->\n\nStripeWebHookModule->AppModule\n\n\n\n\n\nSubmitModule\n\nSubmitModule\n\nAppModule -->\n\nSubmitModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserReposModule\n\nUserReposModule\n\nAppModule -->\n\nUserReposModule->AppModule\n\n\n\n\n\nVoteModule\n\nVoteModule\n\nAppModule -->\n\nVoteModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ContributionModule\n                        \n                        \n                            ContributorModule\n                        \n                        \n                            CustomerModule\n                        \n                        \n                            EmojiModule\n                        \n                        \n                            EndorsementModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            HighlightModule\n                        \n                        \n                            InsightsModule\n                        \n                        \n                            OpenAiModule\n                        \n                        \n                            PullRequestModule\n                        \n                        \n                            RepoModule\n                        \n                        \n                            StarModule\n                        \n                        \n                            StargazeModule\n                        \n                        \n                            StripeSubscriptionModule\n                        \n                        \n                            StripeWebHookModule\n                        \n                        \n                            SubmitModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            UserReposModule\n                        \n                        \n                            VoteModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, RequestMethod } from \"@nestjs/common\";\nimport { InjectDataSource, TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { LoggerModule } from \"nestjs-pino\";\nimport { DataSource } from \"typeorm\";\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm/dist/interfaces/typeorm-options.interface\";\nimport { clc } from \"@nestjs/common/utils/cli-colors.util\";\n\nimport { ApiConfig, DbApiConfig, DbLoggingConfig, EndpointConfig, StripeConfig, OpenAIConfig } from \"./config\";\nimport { RepoModule } from \"./repo/repo.module\";\nimport { HealthModule } from \"./health/health.module\";\nimport { DbRepo } from \"./repo/entities/repo.entity\";\nimport { DbUser } from \"./user/user.entity\";\nimport { DbContribution } from \"./contribution/contribution.entity\";\nimport { DbRepoToUserVotes } from \"./repo/entities/repo.to.user.votes.entity\";\nimport { DbRepoToUserStars } from \"./repo/entities/repo.to.user.stars.entity\";\nimport { DbRepoToUserSubmissions } from \"./repo/entities/repo.to.user.submissions.entity\";\nimport { DbRepoToUserStargazers } from \"./repo/entities/repo.to.user.stargazers.entity\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { VoteModule } from \"./vote/vote.module\";\nimport { StarModule } from \"./star/star.module\";\nimport { StargazeModule } from \"./stargaze/stargaze.module\";\nimport { SubmitModule } from \"./submit/submit.module\";\nimport { ContributionModule } from \"./contribution/contribution.module\";\nimport { UserModule } from \"./user/user.module\";\nimport { HttpLoggerMiddleware } from \"./common/middleware/http-logger.middleware\";\nimport { DatabaseLoggerMiddleware } from \"./common/middleware/database-logger.middleware\";\nimport { InsightsModule } from \"./insight/insights.module\";\nimport { DbInsight } from \"./insight/entities/insight.entity\";\nimport { DbInsightRepo } from \"./insight/entities/insight-repo.entity\";\nimport { UserReposModule } from \"./user-repo/user-repos.module\";\nimport { DbUserRepo } from \"./user-repo/user-repo.entity\";\nimport { DbCustomer } from \"./customer/customer.entity\";\nimport { CustomerModule } from \"./customer/customer.module\";\nimport { StripeWebHookModule } from \"./stripe-webhook/webhook.module\";\nimport { EmojiModule } from \"./emoji/emoji.module\";\nimport { StripeSubscriptionModule } from \"./subscription/stripe-subscription.module\";\nimport { DbSubscription } from \"./subscription/stripe-subscription.dto\";\nimport { DbLog } from \"./log/log.entity\";\nimport { PullRequestModule } from \"./pull-requests/pull-request.module\";\nimport { DbPullRequest } from \"./pull-requests/entities/pull-request.entity\";\nimport { DbUserHighlight } from \"./user/entities/user-highlight.entity\";\nimport { HighlightModule } from \"./highlight/highlight.module\";\nimport { DbUserToUserFollows } from \"./user/entities/user-follows.entity\";\nimport { DbInsightMember } from \"./insight/entities/insight-member.entity\";\nimport { DbEmoji } from \"./emoji/entities/emoji.entity\";\nimport { DbUserHighlightReaction } from \"./user/entities/user-highlight-reaction.entity\";\nimport { DbPRInsight } from \"./pull-requests/entities/pull-request-insight.entity\";\nimport { DbUserTopRepo } from \"./user/entities/user-top-repo.entity\";\nimport { DbUserNotification } from \"./user/entities/user-notification.entity\";\nimport { DbUserCollaboration } from \"./user/entities/user-collaboration.entity\";\nimport { EndorsementModule } from \"./endorsement/endorsement.module\";\nimport { DbEndorsement } from \"./endorsement/entities/endorsement.entity\";\nimport { ContributorModule } from \"./contributor/contributor.module\";\nimport { OpenAiModule } from \"./open-ai/open-ai.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [ApiConfig, DbApiConfig, DbLoggingConfig, EndpointConfig, StripeConfig, OpenAIConfig],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      name: \"ApiConnection\",\n      useFactory: (configService: ConfigService) =>\n        ({\n          parseInt8: true,\n          type: configService.get(\"db-api.connection\"),\n          host: configService.get(\"db-api.host\"),\n          port: configService.get(\"db-api.port\"),\n          username: configService.get(\"db-api.username\"),\n          password: configService.get(\"db-api.password\"),\n          database: configService.get(\"db-api.database\"),\n          autoLoadEntities: false,\n          entities: [\n            DbUser,\n            DbUserRepo,\n            DbUserHighlight,\n            DbUserHighlightReaction,\n            DbUserNotification,\n            DbUserCollaboration,\n            DbRepo,\n            DbContribution,\n            DbRepoToUserVotes,\n            DbRepoToUserStars,\n            DbRepoToUserSubmissions,\n            DbRepoToUserStargazers,\n            DbInsight,\n            DbInsightMember,\n            DbInsightRepo,\n            DbCustomer,\n            DbSubscription,\n            DbPullRequest,\n            DbPRInsight,\n            DbUserToUserFollows,\n            DbEmoji,\n            DbUserTopRepo,\n            DbEndorsement,\n          ],\n          synchronize: false,\n          logger: new DatabaseLoggerMiddleware(\"OS\"),\n          ssl: {\n            ca: configService.get(\"db-api.certificate\"),\n            rejectUnauthorized: false,\n          },\n          maxQueryExecutionTime: configService.get(\"db-api.maxQueryExecutionTime\"),\n        } as TypeOrmModuleOptions),\n      inject: [ConfigService],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      name: \"LogConnection\",\n      useFactory: (configService: ConfigService) =>\n        ({\n          parseInt8: true,\n          type: configService.get(\"db-logging.connection\"),\n          host: configService.get(\"db-logging.host\"),\n          port: configService.get(\"db-logging.port\"),\n          username: configService.get(\"db-logging.username\"),\n          password: configService.get(\"db-logging.password\"),\n          database: configService.get(\"db-logging.database\"),\n          autoLoadEntities: false,\n          entities: [DbLog],\n          synchronize: false,\n          logger: new DatabaseLoggerMiddleware(\"LG\"),\n          ssl: {\n            ca: configService.get(\"db-logging.certificate\"),\n            rejectUnauthorized: false,\n          },\n          maxQueryExecutionTime: configService.get(\"db-logging.maxQueryExecutionTime\"),\n        } as TypeOrmModuleOptions),\n      inject: [ConfigService],\n    }),\n    LoggerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        pinoHttp: {\n          name: `os.${String(config.get(\"api.codename\")).toLowerCase()}`,\n          level: config.get(\"api.logging\"),\n          transport: {\n            target: \"pino-pretty\",\n            options: {\n              colorize: true,\n              levelFirst: true,\n              translateTime: \"UTC:hh:MM:ss.l\",\n              singleLine: true,\n              messageFormat: `${clc.yellow(`[{context}]`)} ${clc.green(`{msg}`)}`,\n              ignore: \"pid,hostname,context\",\n            },\n          },\n          customProps: () => ({ context: \"HTTP\" }),\n        },\n        exclude: [{ method: RequestMethod.ALL, path: \"check\" }],\n      }),\n    }),\n    TerminusModule,\n    HttpModule,\n    AuthModule,\n    HealthModule,\n    RepoModule,\n    VoteModule,\n    StarModule,\n    StargazeModule,\n    SubmitModule,\n    ContributionModule,\n    UserModule,\n    InsightsModule,\n    UserReposModule,\n    CustomerModule,\n    StripeWebHookModule,\n    StripeSubscriptionModule,\n    PullRequestModule,\n    HighlightModule,\n    EmojiModule,\n    EndorsementModule,\n    ContributorModule,\n    OpenAiModule,\n  ],\n  providers: [],\n})\nexport class AppModule {\n  constructor(\n    @InjectDataSource(\"ApiConnection\")\n    private readonly apiConnection: DataSource,\n\n    @InjectDataSource(\"LogConnection\")\n    private readonly logConnection: DataSource\n  ) {}\n\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(HttpLoggerMiddleware).forRoutes(`v1`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSession\n                            \n                            \n                                    Async\n                                postCreateCheckoutSession\n                            \n                            \n                                    Async\n                                postOnboarding\n                            \n                            \n                                    Async\n                                postWaitlist\n                            \n                            \n                                    Async\n                                updateEmailPreferencesForUserProfile\n                            \n                            \n                                    Async\n                                updateInterestsForUserProfile\n                            \n                            \n                                    Async\n                                updateProfileForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSession(user: SupabaseAuthUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/session')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'checkAuthSession', summary: 'Get authenticated session information'})@ApiOkResponse({type: SupabaseAuthDto})@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        postCreateCheckoutSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    postCreateCheckoutSession(user: SupabaseAuthUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/checkout/session')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'postCreateCheckoutSession', summary: 'Creates a new checkout session for the user'})@ApiOkResponse({type: SupabaseAuthDto})@ApiNotFoundResponse({description: 'Unable to create checkout session'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        postOnboarding\n                        \n                    \n                \n            \n            \n                \n                    \n                    postOnboarding(userId: number, body: UserOnboardingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/onboarding')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'postOnboarding', summary: 'Updates onboarding information for user'})@ApiOkResponse({type: SupabaseAuthDto})@ApiNotFoundResponse({description: 'Unable to update onboarding information for the user'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UserOnboardingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        postWaitlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    postWaitlist(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/waitlist')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'postWaitlist', summary: 'Updates waitlist information for user'})@ApiOkResponse({type: SupabaseAuthDto})@ApiNotFoundResponse({description: 'Unable to update waitlist information for the user'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateEmailPreferencesForUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEmailPreferencesForUserProfile(userId: number, updateUserDto: UpdateUserEmailPreferencesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/profile/email')@ApiOperation({operationId: 'updateEmailPreferencesForUserProfile', summary: 'Updates the email preferences for the authenticated user profile'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbUser})@ApiNotFoundResponse({description: 'Unable to update email preferences for the user profile'})@ApiBody({type: UpdateUserEmailPreferencesDto})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserEmailPreferencesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateInterestsForUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInterestsForUserProfile(userId: number, updateUserDto: UpdateUserProfileInterestsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/profile/interests')@ApiOperation({operationId: 'updateInterestsForUserProfile', summary: 'Updates the interests for the authenticated user profile'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbUser})@ApiNotFoundResponse({description: 'Unable to update interests for the user profile'})@ApiBody({type: UpdateUserProfileInterestsDto})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserProfileInterestsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfileForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfileForUser(userId: number, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/profile')@ApiOperation({operationId: 'updateProfileForUser', summary: 'Updates the profile for the authenticated user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbUser})@ApiNotFoundResponse({description: 'Unable to update user profile'})@ApiBody({type: UpdateUserDto})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpCode, HttpStatus, Patch, Post, UseGuards } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiBody, ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseAuthUser } from \"nestjs-supabase-auth\";\nimport { User, UserId } from \"./supabase.user.decorator\";\nimport { SupabaseAuthDto } from \"./dtos/supabase-auth-response.dto\";\nimport { UserService } from \"../user/user.service\";\nimport { StripeService } from \"../stripe/stripe.service\";\nimport { CustomerService } from \"../customer/customer.service\";\nimport { DbUser } from \"../user/user.entity\";\nimport { UpdateUserDto } from \"../user/dtos/update-user.dto\";\nimport { UpdateUserEmailPreferencesDto } from \"../user/dtos/update-user-email-prefs.dto\";\nimport { UpdateUserProfileInterestsDto } from \"../user/dtos/update-user-interests.dto\";\nimport { UserOnboardingDto } from \"./dtos/user-onboarding.dto\";\n\n@Controller(\"auth\")\n@ApiTags(\"Authentication service\")\nexport class AuthController {\n  constructor(\n    private userService: UserService,\n    private stripeService: StripeService,\n    private customerService: CustomerService\n  ) {}\n\n  @Get(\"/session\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"checkAuthSession\",\n    summary: \"Get authenticated session information\",\n  })\n  @ApiOkResponse({ type: SupabaseAuthDto })\n  @HttpCode(HttpStatus.OK)\n  async getSession(@User() user: SupabaseAuthUser): Promise {\n    const {\n      role,\n      email: session_email,\n      confirmed_at,\n      last_sign_in_at,\n      created_at,\n      updated_at,\n      user_metadata: { sub: id, user_name },\n    } = user;\n\n    let userProfile: Partial = {};\n\n    // check/insert user\n    try {\n      // get user from public users table\n      const {\n        is_onboarded,\n        is_waitlisted,\n        role: insights_role,\n        name,\n        bio,\n        location,\n        twitter_username,\n        company,\n        display_local_time,\n        url,\n        email,\n        github_sponsors_url,\n        linkedin_url,\n        notification_count,\n      } = await this.userService.checkAddUser(user);\n\n      userProfile = {\n        is_onboarded,\n        insights_role,\n        is_waitlisted,\n        name,\n        location,\n        bio,\n        twitter_username,\n        company,\n        display_local_time,\n        url,\n        email,\n        github_sponsors_url,\n        linkedin_url,\n        notification_count,\n      };\n    } catch (e) {\n      // leave user profile as-is\n    }\n\n    return {\n      id: `${String(id)}`,\n      user_name: `${String(user_name)}`,\n      role,\n      email: userProfile.email ?? session_email,\n      confirmed_at,\n      last_sign_in_at,\n      created_at,\n      updated_at,\n      ...userProfile,\n    };\n  }\n\n  @Post(\"/onboarding\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"postOnboarding\",\n    summary: \"Updates onboarding information for user\",\n  })\n  @ApiOkResponse({ type: SupabaseAuthDto })\n  @ApiNotFoundResponse({ description: \"Unable to update onboarding information for the user\" })\n  async postOnboarding(@UserId() userId: number, @Body() body: UserOnboardingDto): Promise {\n    const userData = {\n      timezone: body.timezone,\n      interests: body.interests,\n    };\n\n    return this.userService.updateOnboarding(userId, userData);\n  }\n\n  @Post(\"/waitlist\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"postWaitlist\",\n    summary: \"Updates waitlist information for user\",\n  })\n  @ApiOkResponse({ type: SupabaseAuthDto })\n  @ApiNotFoundResponse({ description: \"Unable to update waitlist information for the user\" })\n  async postWaitlist(@UserId() userId: number): Promise {\n    return this.userService.updateWaitlistStatus(userId);\n  }\n\n  @Post(\"/checkout/session\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"postCreateCheckoutSession\",\n    summary: \"Creates a new checkout session for the user\",\n  })\n  @ApiOkResponse({ type: SupabaseAuthDto })\n  @ApiNotFoundResponse({ description: \"Unable to create checkout session\" })\n  async postCreateCheckoutSession(@User() user: SupabaseAuthUser): Promise {\n    const {\n      email,\n      user_metadata: { sub },\n    } = user;\n    const id = sub as number;\n    const customer = await this.customerService.findById(id);\n    let customerId: string;\n\n    if (customer) {\n      customerId = customer.stripe_customer_id;\n    } else {\n      const stripeCustomer = await this.stripeService.addCustomer(id, email);\n      const newCustomer = await this.customerService.addCustomer(id, stripeCustomer.id);\n\n      customerId = newCustomer.stripe_customer_id;\n    }\n\n    return this.stripeService.createCheckoutSession(customerId);\n  }\n\n  @Patch(\"/profile\")\n  @ApiOperation({\n    operationId: \"updateProfileForUser\",\n    summary: \"Updates the profile for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbUser })\n  @ApiNotFoundResponse({ description: \"Unable to update user profile\" })\n  @ApiBody({ type: UpdateUserDto })\n  async updateProfileForUser(@UserId() userId: number, @Body() updateUserDto: UpdateUserDto): Promise {\n    return this.userService.updateUser(userId, updateUserDto);\n  }\n\n  @Patch(\"/profile/interests\")\n  @ApiOperation({\n    operationId: \"updateInterestsForUserProfile\",\n    summary: \"Updates the interests for the authenticated user profile\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbUser })\n  @ApiNotFoundResponse({ description: \"Unable to update interests for the user profile\" })\n  @ApiBody({ type: UpdateUserProfileInterestsDto })\n  async updateInterestsForUserProfile(\n    @UserId() userId: number,\n    @Body() updateUserDto: UpdateUserProfileInterestsDto\n  ): Promise {\n    await this.userService.updateInterests(userId, updateUserDto);\n\n    return this.userService.findOneById(userId);\n  }\n\n  @Patch(\"/profile/email\")\n  @ApiOperation({\n    operationId: \"updateEmailPreferencesForUserProfile\",\n    summary: \"Updates the email preferences for the authenticated user profile\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbUser })\n  @ApiNotFoundResponse({ description: \"Unable to update email preferences for the user profile\" })\n  @ApiBody({ type: UpdateUserEmailPreferencesDto })\n  async updateEmailPreferencesForUserProfile(\n    @UserId() userId: number,\n    @Body() updateUserDto: UpdateUserEmailPreferencesDto\n  ): Promise {\n    await this.userService.updateEmailPreferences(userId, updateUserDto);\n\n    return this.userService.findOneById(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nCustomerModule\n\nCustomerModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCustomerModule->AuthModule\n\n\n\n\n\nStripeModule\n\nStripeModule\n\nAuthModule -->\n\nStripeModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nUserReposModule\n\nUserReposModule\n\nAuthModule -->\n\nUserReposModule->AuthModule\n\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CustomerModule\n                        \n                        \n                            StripeModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            UserReposModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseStrategy } from \"./supabase.strategy\";\nimport { AuthController } from \"./auth.controller\";\nimport { UserModule } from \"../user/user.module\";\nimport { UserReposModule } from \"../user-repo/user-repos.module\";\nimport { StripeModule } from \"../stripe/stripe.module\";\nimport { CustomerModule } from \"../customer/customer.module\";\n\n@Module({\n  imports: [PassportModule, UserModule, UserReposModule, StripeModule, CustomerModule],\n  providers: [SupabaseStrategy, SupabaseGuard],\n  exports: [SupabaseStrategy, SupabaseGuard],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatResponse.html":{"url":"interfaces/ChatResponse.html","title":"interface - ChatResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/open-ai/open-ai.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            choices\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        choices:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Fetch } from \"@supabase/supabase-js/dist/module/lib/types\";\nimport { ConfigService } from \"@nestjs/config\";\n\ninterface ChatResponse {\n  choices: { message: { content: string } }[];\n}\n\n@Injectable()\nexport class OpenAiService {\n  constructor(private configService: ConfigService) {}\n\n  async generateCompletion(systemMessage: string, userMessage: string, temperature: number) {\n    // eslint-disable-next-line\n    const fetcher: Fetch = typeof fetch !== \"undefined\" ? fetch : (require(\"node-fetch\") as Fetch);\n    const response = await fetcher(this.configService.get(\"openai.completionsURL\")!, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${this.configService.get(\"openai.APIKey\")!}`,\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        model: this.configService.get(\"openai.modelName\"),\n        messages: [\n          {\n            role: \"system\",\n            content: systemMessage,\n          },\n          {\n            role: \"user\",\n            content: userMessage,\n          },\n        ],\n        temperature: temperature / 10,\n        n: 1,\n      }),\n    });\n\n    if (response.ok) {\n      const data = (await response.json()) as ChatResponse;\n\n      return data.choices[0]?.message.content;\n    }\n\n    throw new Error(response.statusText);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CodeExplanationController.html":{"url":"controllers/CodeExplanationController.html","title":"controller - CodeExplanationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CodeExplanationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/code-explanation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                prs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generatePRDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generatePRDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePRDescription(generateCodeExplanationDto: GenerateCodeExplanationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/explanation/generate')@ApiOperation({operationId: 'generateCodeExplanation', summary: 'Generates an explanation for the provided code'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiBadRequestResponse({description: 'Invalid request'})@ApiBody({type: GenerateCodeExplanationDto})\n                \n            \n\n            \n                \n                    Defined in src/pull-requests/code-explanation.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateCodeExplanationDto\n                                    \n                                                GenerateCodeExplanationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Body, Controller, Post, UseGuards } from \"@nestjs/common\";\nimport { ApiOperation, ApiBearerAuth, ApiBadRequestResponse, ApiBody, ApiTags } from \"@nestjs/swagger\";\n\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { GenerateCodeExplanationDto } from \"./dtos/create-code-explanation.dto\";\nimport { CodeExplanationService } from \"./code-explanation.service\";\n\n@Controller(\"prs\")\n@ApiTags(\"Pull Requests service\")\nexport class CodeExplanationController {\n  constructor(private codeExplanationService: CodeExplanationService) {}\n\n  @Post(\"/explanation/generate\")\n  @ApiOperation({\n    operationId: \"generateCodeExplanation\",\n    summary: \"Generates an explanation for the provided code\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiBody({ type: GenerateCodeExplanationDto })\n  async generatePRDescription(@Body() generateCodeExplanationDto: GenerateCodeExplanationDto) {\n    const suggestion = await this.codeExplanationService.generateExplanation(generateCodeExplanationDto);\n\n    if (!suggestion) {\n      throw new BadRequestException();\n    }\n\n    return { suggestion };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CodeExplanationService.html":{"url":"injectables/CodeExplanationService.html","title":"injectable - CodeExplanationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CodeExplanationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/code-explanation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateExplanation\n                            \n                            \n                                    Private\n                                generatePrompt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(openAiService: OpenAiService)\n                    \n                \n                        \n                            \n                                Defined in src/pull-requests/code-explanation.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        openAiService\n                                                  \n                                                        \n                                                                        OpenAiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateExplanation\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateExplanation(options: GenerateCodeExplanationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/code-explanation.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                GenerateCodeExplanationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generatePrompt\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePrompt(language: string, maxLength: number)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/code-explanation.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxLength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { GenerateCodeExplanationDto } from \"./dtos/create-code-explanation.dto\";\nimport { OpenAiService } from \"../open-ai/open-ai.service\";\n\n@Injectable()\nexport class CodeExplanationService {\n  constructor(private openAiService: OpenAiService) {}\n\n  private generatePrompt(language: string, maxLength: number) {\n    return [\n      `Generate an explanation for the given code snippet written in ${language} with the specifications mentioned below`,\n      `The explanation must be a maximum of ${maxLength} characters.`,\n    ].join(\"\\n\");\n  }\n\n  async generateExplanation(options: GenerateCodeExplanationDto) {\n    const content = `Code: ${options.code}\\n`;\n\n    try {\n      const completion = await this.openAiService.generateCompletion(\n        this.generatePrompt(options.language, options.descriptionLength),\n        content,\n        options.temperature\n      );\n\n      return completion;\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        console.error(\"OpenAI error: \", error.message);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CodeRefactorSuggestionController.html":{"url":"controllers/CodeRefactorSuggestionController.html","title":"controller - CodeRefactorSuggestionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CodeRefactorSuggestionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/code-refactor-suggestion.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                prs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generatePRDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generatePRDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePRDescription(generateCodeRefactorSuggestionDto: GenerateCodeRefactorSuggestionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/suggestion/generate')@ApiOperation({operationId: 'generateCodeRefactor', summary: 'Generates a refactor suggestion based on the provided code'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiBadRequestResponse({description: 'Invalid request'})@ApiBody({type: GenerateCodeRefactorSuggestionDto})\n                \n            \n\n            \n                \n                    Defined in src/pull-requests/code-refactor-suggestion.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateCodeRefactorSuggestionDto\n                                    \n                                                GenerateCodeRefactorSuggestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Body, Controller, Post, UseGuards } from \"@nestjs/common\";\nimport { ApiOperation, ApiBearerAuth, ApiBadRequestResponse, ApiBody, ApiTags } from \"@nestjs/swagger\";\n\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { GenerateCodeRefactorSuggestionDto } from \"./dtos/create-code-refactor-suggestion.dto\";\nimport { CodeRefactorSuggestionService } from \"./code-refactor-suggestion.service\";\n\n@Controller(\"prs\")\n@ApiTags(\"Pull Requests service\")\nexport class CodeRefactorSuggestionController {\n  constructor(private codeRefactorSuggestionService: CodeRefactorSuggestionService) {}\n\n  @Post(\"/suggestion/generate\")\n  @ApiOperation({\n    operationId: \"generateCodeRefactor\",\n    summary: \"Generates a refactor suggestion based on the provided code\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiBody({ type: GenerateCodeRefactorSuggestionDto })\n  async generatePRDescription(@Body() generateCodeRefactorSuggestionDto: GenerateCodeRefactorSuggestionDto) {\n    const suggestion = await this.codeRefactorSuggestionService.generateDescription(generateCodeRefactorSuggestionDto);\n\n    if (!suggestion) {\n      throw new BadRequestException();\n    }\n\n    return { suggestion };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CodeRefactorSuggestionService.html":{"url":"injectables/CodeRefactorSuggestionService.html","title":"injectable - CodeRefactorSuggestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CodeRefactorSuggestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/code-refactor-suggestion.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateDescription\n                            \n                            \n                                    Private\n                                generatePrompt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(openAiService: OpenAiService)\n                    \n                \n                        \n                            \n                                Defined in src/pull-requests/code-refactor-suggestion.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        openAiService\n                                                  \n                                                        \n                                                                        OpenAiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateDescription(options: GenerateCodeRefactorSuggestionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/code-refactor-suggestion.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                GenerateCodeRefactorSuggestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generatePrompt\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePrompt(language: string, maxLength: number)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/code-refactor-suggestion.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxLength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { GenerateCodeRefactorSuggestionDto } from \"./dtos/create-code-refactor-suggestion.dto\";\nimport { OpenAiService } from \"../open-ai/open-ai.service\";\n\n@Injectable()\nexport class CodeRefactorSuggestionService {\n  constructor(private openAiService: OpenAiService) {}\n\n  private generatePrompt(language: string, maxLength: number) {\n    return [\n      `Generate a code refactor suggestion for a given code snippet written in ${language} with the specifications mentioned below`,\n      `The code snippet must be a maximum of ${maxLength} characters.`,\n      'Exclude anything unnecessary such as translation and instructions. The code snippet you suggest should start with \"```suggestion\" and end with ``` to create a valid GitHub suggestion codeblock. All non-code text or description should be outside of the codeblock.',\n    ].join(\"\\n\");\n  }\n\n  async generateDescription(options: GenerateCodeRefactorSuggestionDto) {\n    const content = `Code: ${options.code}\\n`;\n\n    try {\n      const completion = await this.openAiService.generateCompletion(\n        this.generatePrompt(options.language, options.descriptionLength),\n        content,\n        options.temperature\n      );\n\n      return completion;\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        console.error(\"OpenAI error: \", error.message);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CodeTestSuggestionController.html":{"url":"controllers/CodeTestSuggestionController.html","title":"controller - CodeTestSuggestionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CodeTestSuggestionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/code-test.suggestion.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                prs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generatePRDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generatePRDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePRDescription(generateCodeTestSuggestionDto: GenerateCodeTestSuggestionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/test/generate')@ApiOperation({operationId: 'generateCodeTest', summary: 'Generates a test for the provided code'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiBadRequestResponse({description: 'Invalid request'})@ApiBody({type: GenerateCodeTestSuggestionDto})\n                \n            \n\n            \n                \n                    Defined in src/pull-requests/code-test.suggestion.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateCodeTestSuggestionDto\n                                    \n                                                GenerateCodeTestSuggestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Body, Controller, Post, UseGuards } from \"@nestjs/common\";\nimport { ApiOperation, ApiBearerAuth, ApiBadRequestResponse, ApiBody, ApiTags } from \"@nestjs/swagger\";\n\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { GenerateCodeTestSuggestionDto } from \"./dtos/create-code-test-suggestion.dto\";\nimport { CodeTestSuggestionService } from \"./code-test-suggestion.service\";\n\n@Controller(\"prs\")\n@ApiTags(\"Pull Requests service\")\nexport class CodeTestSuggestionController {\n  constructor(private codeTestSuggestionService: CodeTestSuggestionService) {}\n\n  @Post(\"/test/generate\")\n  @ApiOperation({\n    operationId: \"generateCodeTest\",\n    summary: \"Generates a test for the provided code\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiBody({ type: GenerateCodeTestSuggestionDto })\n  async generatePRDescription(@Body() generateCodeTestSuggestionDto: GenerateCodeTestSuggestionDto) {\n    const suggestion = await this.codeTestSuggestionService.generateTestSuggestion(generateCodeTestSuggestionDto);\n\n    if (!suggestion) {\n      throw new BadRequestException();\n    }\n\n    return { suggestion };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CodeTestSuggestionService.html":{"url":"injectables/CodeTestSuggestionService.html","title":"injectable - CodeTestSuggestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CodeTestSuggestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/code-test-suggestion.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generatePrompt\n                            \n                            \n                                    Async\n                                generateTestSuggestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(openAiService: OpenAiService)\n                    \n                \n                        \n                            \n                                Defined in src/pull-requests/code-test-suggestion.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        openAiService\n                                                  \n                                                        \n                                                                        OpenAiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generatePrompt\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePrompt(maxLength: number)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/code-test-suggestion.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    maxLength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateTestSuggestion\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTestSuggestion(options: GenerateCodeTestSuggestionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/code-test-suggestion.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                GenerateCodeTestSuggestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { GenerateCodeTestSuggestionDto } from \"./dtos/create-code-test-suggestion.dto\";\nimport { OpenAiService } from \"../open-ai/open-ai.service\";\n\n@Injectable()\nexport class CodeTestSuggestionService {\n  constructor(private openAiService: OpenAiService) {}\n\n  private generatePrompt(maxLength: number) {\n    return [\n      `Generate a test for a given code snippet with the specifications mentioned below`,\n      `The code snippet must be a maximum of ${maxLength} characters.`,\n      'Exclude anything unnecessary such as translation and instructions. The code snippet you suggest should start with \"```suggestion\" and end with ``` to create a valid GitHub suggestion codeblock. All non-code text or description should be outside of the codeblock.',\n    ].join(\"\\n\");\n  }\n\n  async generateTestSuggestion(options: GenerateCodeTestSuggestionDto) {\n    const content = `Code: ${options.code}\\n`;\n\n    try {\n      const completion = this.openAiService.generateCompletion(\n        this.generatePrompt(options.descriptionLength),\n        content,\n        options.temperature\n      );\n\n      return completion;\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        console.error(\"OpenAI error: \", error.message);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContributionModule.html":{"url":"modules/ContributionModule.html","title":"module - ContributionModule","body":"\n                   \n\n\n\n\n    Modules\n    ContributionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ContributionModule\n\n\n\ncluster_ContributionModule_providers\n\n\n\ncluster_ContributionModule_exports\n\n\n\ncluster_ContributionModule_imports\n\n\n\n\nRepoModule\n\nRepoModule\n\n\n\nContributionModule\n\nContributionModule\n\nContributionModule -->\n\nRepoModule->ContributionModule\n\n\n\n\n\nContributionService \n\nContributionService \n\nContributionService  -->\n\nContributionModule->ContributionService \n\n\n\n\n\nContributionService\n\nContributionService\n\nContributionModule -->\n\nContributionService->ContributionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/contribution/contribution.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContributionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoContributionsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RepoModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContributionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbContribution } from \"./contribution.entity\";\nimport { ContributionService } from \"./contribution.service\";\nimport { RepoContributionsController } from \"./repo-contributions.controller\";\nimport { RepoModule } from \"../repo/repo.module\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbRepo, DbContribution], \"ApiConnection\"), RepoModule],\n  controllers: [RepoContributionsController],\n  providers: [ContributionService],\n  exports: [ContributionService],\n})\nexport class ContributionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContributionPageOptionsDto.html":{"url":"classes/ContributionPageOptionsDto.html","title":"class - ContributionPageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContributionPageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/dtos/contribution-page-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                orderBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContributionOrderFieldsEnum\n\n                    \n                \n                \n                    \n                        Default value : ContributionOrderFieldsEnum.count\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: ContributionOrderFieldsEnum, enumName: 'RepoOrderFieldsEnum', default: undefined})@IsEnum(ContributionOrderFieldsEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/dtos/contribution-page-options.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 1000, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(10000)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Range in days', default: 30})@Type(undefined)@IsIn(['7', '30', '90'])@IsInt()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:43\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsEnum, IsOptional } from \"class-validator\";\nimport { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\n\nexport enum ContributionOrderFieldsEnum {\n  count = \"count\",\n  last_merged_at = \"last_merged_at\",\n  created_at = \"created_at\",\n  updated_at = \"updated_at\",\n  contributor = \"contributor\",\n}\n\nexport class ContributionPageOptionsDto extends PageOptionsDto {\n  @ApiPropertyOptional({\n    enum: ContributionOrderFieldsEnum,\n    enumName: \"RepoOrderFieldsEnum\",\n    default: ContributionOrderFieldsEnum.count,\n  })\n  @IsEnum(ContributionOrderFieldsEnum)\n  @IsOptional()\n  readonly orderBy?: ContributionOrderFieldsEnum = ContributionOrderFieldsEnum.count;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContributionService.html":{"url":"injectables/ContributionService.html","title":"injectable - ContributionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContributionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contributionRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/contribution/contribution.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contributionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: ContributionPageOptionsDto, repoId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/contribution/contribution.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                ContributionPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbContribution } from \"./contribution.entity\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { OrderDirectionEnum } from \"../common/constants/order-direction.constant\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { ContributionOrderFieldsEnum, ContributionPageOptionsDto } from \"./dtos/contribution-page-options.dto\";\n\n@Injectable()\nexport class ContributionService {\n  constructor(\n    @InjectRepository(DbContribution, \"ApiConnection\")\n    private contributionRepository: Repository\n  ) {}\n\n  async findAll(pageOptionsDto: ContributionPageOptionsDto, repoId?: number): Promise> {\n    const queryBuilder = this.contributionRepository.createQueryBuilder(\"contribution\");\n    const orderField = pageOptionsDto.orderBy ?? ContributionOrderFieldsEnum.count;\n\n    if (repoId) {\n      queryBuilder.where(\"contribution.repo_id = :repoId\", { repoId });\n    }\n\n    queryBuilder\n      .addOrderBy(`\"${orderField}\"`, pageOptionsDto.orderDirection)\n      .addOrderBy(`\"contribution\".\"created_at\"`, OrderDirectionEnum.DESC)\n      .offset(pageOptionsDto.skip)\n      .limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContributorController.html":{"url":"controllers/ContributorController.html","title":"controller - ContributorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContributorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contributor/contributor.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                contributors\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                searchAllPullRequestContributors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        searchAllPullRequestContributors\n                        \n                    \n                \n            \n            \n                \n                    \n                    searchAllPullRequestContributors(pageOptionsDto: PullRequestContributorOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/search')@ApiOperation({operationId: 'searchAllPullRequestContributors', summary: 'Searches contributors from pull requests using filters and paginates them'})@ApiPaginatedResponse(DbPullRequestContributor)@ApiOkResponse({type: DbPullRequestContributor})\n                \n            \n\n            \n                \n                    Defined in src/contributor/contributor.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PullRequestContributorOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from \"@nestjs/common\";\nimport { ApiOperation, ApiOkResponse, ApiTags } from \"@nestjs/swagger\";\n\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { PullRequestService } from \"../pull-requests/pull-request.service\";\nimport { DbPullRequestContributor } from \"../pull-requests/dtos/pull-request-contributor.dto\";\nimport { PullRequestContributorOptionsDto } from \"../pull-requests/dtos/pull-request-contributor-options.dto\";\n\n@Controller(\"contributors\")\n@ApiTags(\"Contributors service\")\nexport class ContributorController {\n  constructor(private readonly pullRequestService: PullRequestService) {}\n\n  @Get(\"/search\")\n  @ApiOperation({\n    operationId: \"searchAllPullRequestContributors\",\n    summary: \"Searches contributors from pull requests using filters and paginates them\",\n  })\n  @ApiPaginatedResponse(DbPullRequestContributor)\n  @ApiOkResponse({ type: DbPullRequestContributor })\n  async searchAllPullRequestContributors(\n    @Query() pageOptionsDto: PullRequestContributorOptionsDto\n  ): Promise> {\n    return this.pullRequestService.findAllContributorsWithFilters(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContributorModule.html":{"url":"modules/ContributorModule.html","title":"module - ContributorModule","body":"\n                   \n\n\n\n\n    Modules\n    ContributorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ContributorModule\n\n\n\ncluster_ContributorModule_imports\n\n\n\n\nPullRequestModule\n\nPullRequestModule\n\n\n\nContributorModule\n\nContributorModule\n\nContributorModule -->\n\nPullRequestModule->ContributorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/contributor/contributor.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ContributorController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PullRequestModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { ContributorController } from \"./contributor.controller\";\nimport { PullRequestModule } from \"../pull-requests/pull-request.module\";\nimport { DbPullRequest } from \"../pull-requests/entities/pull-request.entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbPullRequest], \"ApiConnection\"), PullRequestModule],\n  controllers: [ContributorController],\n})\nexport class ContributorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEndorsementDto.html":{"url":"classes/CreateEndorsementDto.html","title":"class - CreateEndorsementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEndorsementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endorsement/dto/create-endorsement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                creator_user_id\n                            \n                            \n                                    Public\n                                recipient_user_id\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                source_comment_url\n                            \n                            \n                                    Public\n                                source_context_url\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        creator_user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Endorsement Creator User ID', type: Number, example: 42211})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/dto/create-endorsement.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        recipient_user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Endorsement Recipient User ID', type: Number, example: 5736810})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/dto/create-endorsement.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Repository ID', example: 78133})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/dto/create-endorsement.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        source_comment_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Endorsement Source Comment URL', default: ''})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/dto/create-endorsement.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        source_context_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Endorsement Source Context URL', example: 'https://github.com/open-sauced/insights/pulls'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/dto/create-endorsement.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Endorsement Type', example: 'doc'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/dto/create-endorsement.dto.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsString, IsNumber, IsOptional } from \"class-validator\";\n\nexport class CreateEndorsementDto {\n  @ApiProperty({\n    description: \"Endorsement Creator User ID\",\n    type: Number,\n    example: 42211,\n  })\n  @IsNumber()\n  public creator_user_id: number;\n\n  @ApiProperty({\n    description: \"Endorsement Recipient User ID\",\n    type: Number,\n    example: 5736810,\n  })\n  @IsNumber()\n  public recipient_user_id: number;\n\n  @ApiProperty({\n    description: \"Repository ID\",\n    example: 78133,\n  })\n  @IsNumber()\n  public repo_id: number;\n\n  @ApiPropertyOptional({\n    description: \"Endorsement Source Comment URL\",\n    default: \"\",\n  })\n  @IsString()\n  @IsOptional()\n  public source_comment_url?: string;\n\n  @ApiProperty({\n    description: \"Endorsement Source Context URL\",\n    example: \"https://github.com/open-sauced/insights/pulls\",\n  })\n  @IsString()\n  public source_context_url: string;\n\n  @ApiProperty({\n    description: \"Endorsement Type\",\n    example: \"doc\",\n  })\n  @IsString()\n  public type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInsightDto.html":{"url":"classes/CreateInsightDto.html","title":"class - CreateInsightDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInsightDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/dtos/create-insight.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                is_public\n                            \n                            \n                                name\n                            \n                            \n                                repos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        is_public\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Insight Page Visibility', type: Boolean, example: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/dtos/create-insight.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Insight Page Name', type: String, example: 'My Team'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/dtos/create-insight.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoInfo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'An array of repository information objects', isArray: true, type: RepoInfo, example: undefined})@Type(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/dtos/create-insight.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsArray, IsBoolean, IsString } from \"class-validator\";\n\nimport { RepoInfo } from \"../../repo/dtos/repo-info.dto\";\n\nexport class CreateInsightDto {\n  @ApiProperty({\n    description: \"Insight Page Name\",\n    type: String,\n    example: \"My Team\",\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: \"Insight Page Visibility\",\n    type: Boolean,\n    example: false,\n  })\n  @IsBoolean()\n  is_public: boolean;\n\n  @ApiProperty({\n    description: \"An array of repository information objects\",\n    isArray: true,\n    type: RepoInfo,\n    example: [{ id: 797, full_name: \"open-sauced/insights\" }],\n  })\n  @Type(() => RepoInfo)\n  @IsArray()\n  repos: RepoInfo[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInsightMemberDto.html":{"url":"classes/CreateInsightMemberDto.html","title":"class - CreateInsightMemberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInsightMemberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/dtos/create-insight-member.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Insight Team Member Invite Email', type: String, example: 'hello@opensauced.pizza'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/dtos/create-insight-member.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail } from \"class-validator\";\n\nexport class CreateInsightMemberDto {\n  @ApiProperty({\n    description: \"Insight Team Member Invite Email\",\n    type: String,\n    example: \"hello@opensauced.pizza\",\n  })\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/dtos/create-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                context\n                            \n                            \n                                    Readonly\n                                    Optional\n                                level\n                            \n                            \n                                    Readonly\n                                    Optional\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/dtos/create-log.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/dtos/create-log.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/dtos/create-log.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from \"class-validator\";\n\nexport class CreateLogDto {\n  @IsOptional()\n  @IsString()\n  readonly context?: string;\n\n  @IsOptional()\n  @IsString()\n  readonly message?: string;\n\n  @IsOptional()\n  @IsString()\n  readonly level?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCollaborationDto.html":{"url":"classes/CreateUserCollaborationDto.html","title":"class - CreateUserCollaborationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCollaborationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/create-user-collaboration.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Collaboration Request Message', type: String, example: 'Come collaborate on a cool project'})@IsString()@MinLength(20)@MaxLength(500)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user-collaboration.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Collaboration Recipient Username', type: String, example: 'bdougie'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user-collaboration.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, MaxLength, MinLength } from \"class-validator\";\n\nexport class CreateUserCollaborationDto {\n  @ApiProperty({\n    description: \"Collaboration Recipient Username\",\n    type: String,\n    example: \"bdougie\",\n  })\n  @IsString()\n  username: string;\n\n  @ApiProperty({\n    description: \"Collaboration Request Message\",\n    type: String,\n    example: \"Come collaborate on a cool project\",\n  })\n  @IsString()\n  @MinLength(20)\n  @MaxLength(500)\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserHighlightDto.html":{"url":"classes/CreateUserHighlightDto.html","title":"class - CreateUserHighlightDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserHighlightDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/create-user-highlight.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                highlight\n                            \n                            \n                                    Public\n                                    Optional\n                                shipped_at\n                            \n                            \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        highlight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Highlight Text', type: String, example: My first PR to Open Sauced!})@IsString()@MinLength(3)@MaxLength(500)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user-highlight.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        shipped_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Shipped Date', type: String, example: 2023-01-19 13:24:51.000000})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user-highlight.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Highlight Title', type: String, example: My first PR!})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user-highlight.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Highlight PR URL', type: String, example: 'github.com/open-sauced/insights/pull/1'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user-highlight.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsDateString, IsOptional, IsString, MaxLength, MinLength } from \"class-validator\";\n\nexport class CreateUserHighlightDto {\n  @ApiProperty({\n    description: \"Highlight PR URL\",\n    type: String,\n    example: \"github.com/open-sauced/insights/pull/1\",\n  })\n  @IsString()\n  public url: string;\n\n  @ApiPropertyOptional({\n    description: \"Highlight Title\",\n    type: String,\n    example: `My first PR!`,\n  })\n  @IsOptional()\n  @IsString()\n  public title?: string;\n\n  @ApiProperty({\n    description: \"Highlight Text\",\n    type: String,\n    example: `My first PR to Open Sauced!`,\n  })\n  @IsString()\n  @MinLength(3)\n  @MaxLength(500)\n  public highlight: string;\n\n  @ApiPropertyOptional({\n    description: \"Shipped Date\",\n    type: String,\n    example: `2023-01-19 13:24:51.000000`,\n  })\n  @IsDateString()\n  @IsOptional()\n  public shipped_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomLogger.html":{"url":"injectables/CustomLogger.html","title":"injectable - CustomLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/custom-logger.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                debug\n                            \n                            \n                                    Async\n                                error\n                            \n                            \n                                    Async\n                                log\n                            \n                            \n                                    Async\n                                verbose\n                            \n                            \n                                    Async\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: string, options: ConsoleLoggerOptions, configService: ConfigService, logsService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/log/custom-logger.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    ConsoleLoggerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logsService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        debug\n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/log/custom-logger.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message: string, stack?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/log/custom-logger.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    stack\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/log/custom-logger.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verbose\n                        \n                    \n                \n            \n            \n                \n                    \n                    verbose(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/log/custom-logger.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        warn\n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/log/custom-logger.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogService\n\n                    \n                \n                    \n                        \n                                Defined in src/log/custom-logger.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConsoleLogger } from \"@nestjs/common\";\nimport { ConsoleLoggerOptions } from \"@nestjs/common/services/console-logger.service\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { LogService } from \"./log.service\";\n\n@Injectable()\nclass CustomLogger extends ConsoleLogger {\n  private readonly logsService: LogService;\n\n  constructor(context: string, options: ConsoleLoggerOptions, configService: ConfigService, logsService: LogService) {\n    super(context, {\n      ...options,\n      logLevels: [\"error\", \"warn\", \"log\", \"verbose\", \"debug\"],\n    });\n\n    this.logsService = logsService;\n  }\n\n  async log(message: string, context?: string) {\n    super.log.apply(this, [message, context]);\n\n    return this.logsService.createLog({\n      message,\n      context,\n      level: \"log\",\n    });\n  }\n\n  async error(message: string, stack?: string, context?: string) {\n    super.error.apply(this, [message, stack, context]);\n\n    return this.logsService.createLog({\n      message,\n      context,\n      level: \"error\",\n    });\n  }\n\n  async warn(message: string, context?: string) {\n    super.warn.apply(this, [message, context]);\n\n    return this.logsService.createLog({\n      message,\n      context,\n      level: \"error\",\n    });\n  }\n\n  async debug(message: string, context?: string) {\n    super.debug.apply(this, [message, context]);\n\n    return this.logsService.createLog({\n      message,\n      context,\n      level: \"error\",\n    });\n  }\n\n  async verbose(message: string, context?: string) {\n    super.debug.apply(this, [message, context]);\n\n    return this.logsService.createLog({\n      message,\n      context,\n      level: \"error\",\n    });\n  }\n}\n\nexport default CustomLogger;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomerModule.html":{"url":"modules/CustomerModule.html","title":"module - CustomerModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_providers\n\n\n\ncluster_CustomerModule_exports\n\n\n\n\nCustomerService \n\nCustomerService \n\n\n\nCustomerModule\n\nCustomerModule\n\nCustomerService  -->\n\nCustomerModule->CustomerService \n\n\n\n\n\nCustomerService\n\nCustomerService\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/customer/customer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CustomerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbCustomer } from \"./customer.entity\";\nimport { CustomerService } from \"./customer.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbCustomer], \"ApiConnection\")],\n  providers: [CustomerService],\n  exports: [CustomerService],\n})\nexport class CustomerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerService.html":{"url":"injectables/CustomerService.html","title":"injectable - CustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCustomer\n                            \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findByCustomerId\n                            \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customerRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/customer/customer.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customerRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addCustomer\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCustomer(userId: number, stripe_customer_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    stripe_customer_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCustomerId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCustomerId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\n\nimport { DbCustomer } from \"./customer.entity\";\n\n@Injectable()\nexport class CustomerService {\n  constructor(\n    @InjectRepository(DbCustomer, \"ApiConnection\")\n    private customerRepository: Repository\n  ) {}\n\n  baseQueryBuilder() {\n    return this.customerRepository.createQueryBuilder(\"customer\");\n  }\n\n  async findById(id: number) {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"customer.id=:id\", { id });\n\n    return queryBuilder.getOne();\n  }\n\n  async findByCustomerId(id: string) {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"customer.stripe_customer_id=:id\", { id });\n\n    return queryBuilder.getOne();\n  }\n\n  async addCustomer(userId: number, stripe_customer_id: string) {\n    return this.customerRepository.save({ id: userId, stripe_customer_id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseLoggerMiddleware.html":{"url":"classes/DatabaseLoggerMiddleware.html","title":"class - DatabaseLoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseLoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middleware/database-logger.middleware.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        TypeOrmLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                log\n                            \n                            \n                                logMigration\n                            \n                            \n                                logQuery\n                            \n                            \n                                logQueryError\n                            \n                            \n                                logQuerySlow\n                            \n                            \n                                logSchemaBuild\n                            \n                            \n                                    Private\n                                stringifyParameters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/middleware/database-logger.middleware.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/common/middleware/database-logger.middleware.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(level: \"log\" | \"info\" | \"warn\", message: string, queryRunner?: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middleware/database-logger.middleware.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                            \"log\" | \"info\" | \"warn\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logMigration\n                        \n                    \n                \n            \n            \n                \nlogMigration(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middleware/database-logger.middleware.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logQuery\n                        \n                    \n                \n            \n            \n                \nlogQuery(query: string, parameters?: [], queryRunner?: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middleware/database-logger.middleware.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            []\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logQueryError\n                        \n                    \n                \n            \n            \n                \nlogQueryError(error: string, query: string, parameters?: [], queryRunner?: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middleware/database-logger.middleware.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            []\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logQuerySlow\n                        \n                    \n                \n            \n            \n                \nlogQuerySlow(time: number, query: string, parameters?: [], queryRunner?: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middleware/database-logger.middleware.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            []\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logSchemaBuild\n                        \n                    \n                \n            \n            \n                \nlogSchemaBuild(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middleware/database-logger.middleware.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        stringifyParameters\n                        \n                    \n                \n            \n            \n                \n                    \n                    stringifyParameters(parameters?: [])\n                \n            \n\n\n            \n                \n                    Defined in src/common/middleware/database-logger.middleware.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameters\n                                    \n                                            []\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger as TypeOrmLogger, QueryRunner } from \"typeorm\";\nimport { Logger as NestLogger } from \"@nestjs/common\";\nimport { clc } from \"@nestjs/common/utils/cli-colors.util\";\n\nexport class DatabaseLoggerMiddleware implements TypeOrmLogger {\n  private readonly logger;\n\n  constructor(name = \"SQL\") {\n    this.logger = new NestLogger(name);\n  }\n\n  logQuery(query: string, parameters?: unknown[], queryRunner?: QueryRunner) {\n    if (queryRunner?.data.isCreatingLogs) {\n      return;\n    }\n\n    this.logger.log(`${query} -- Parameters: ${this.stringifyParameters(parameters)}`);\n  }\n\n  logQueryError(error: string, query: string, parameters?: unknown[], queryRunner?: QueryRunner) {\n    if (queryRunner?.data.isCreatingLogs) {\n      return;\n    }\n\n    this.logger.error(`${query} -- Parameters: ${this.stringifyParameters(parameters)} -- ${error}`);\n  }\n\n  logQuerySlow(time: number, query: string, parameters?: unknown[], queryRunner?: QueryRunner) {\n    if (queryRunner?.data.isCreatingLogs) {\n      return;\n    }\n\n    this.logger.error(\n      `${query} -- Parameters: ${this.stringifyParameters(parameters)} ${clc.red(`+${String(time)}ms`)}`\n    );\n  }\n\n  logMigration(message: string) {\n    this.logger.warn(message);\n  }\n\n  logSchemaBuild(message: string) {\n    this.logger.warn(message);\n  }\n\n  log(level: \"log\" | \"info\" | \"warn\", message: string, queryRunner?: QueryRunner) {\n    if (queryRunner?.data.isCreatingLogs) {\n      return;\n    }\n\n    if (level === \"log\") {\n      return this.logger.log(message);\n    }\n    if (level === \"info\") {\n      return this.logger.debug(message);\n    }\n\n    return this.logger.warn(message);\n  }\n\n  private stringifyParameters(parameters?: unknown[]) {\n    try {\n      return JSON.stringify(parameters);\n    } catch {\n      return \"\";\n    }\n  }\n}\n\nexport default DatabaseLoggerMiddleware;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbContribution.html":{"url":"entities/DbContribution.html","title":"entity - DbContribution","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbContribution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                contributor\n                            \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                last_merged_at\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contributor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Contributor unique user name', example: '0-vortex'})@Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Total number of contributed pull requests', example: 15})@Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing contribution creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Contribution identifier', example: 12237133})@PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        last_merged_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Timestamp representing last contribution merge to the default branch', example: '2016-10-19 13:24:51.000000'})@Column({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.contributions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing contribution last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Contribution GitHub origin URL', example: 'https://github.com/open-sauced/hot/pull/320'})@Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:101\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  ManyToOne,\n  JoinColumn,\n  DeleteDateColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"contributions\" })\nexport class DbContribution extends BaseEntity {\n  @ApiModelProperty({\n    description: \"Contribution identifier\",\n    example: 12237133,\n  })\n  @PrimaryColumn(\"bigint\")\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @Column({\n    type: \"bigint\",\n    select: false,\n  })\n  public repo_id!: number;\n\n  @ApiModelProperty({\n    description: \"Total number of contributed pull requests\",\n    example: 15,\n  })\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  public count: number;\n\n  @ApiModelProperty({\n    description: \"Timestamp representing last contribution merge to the default branch\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @Column({ type: \"timestamp without time zone\" })\n  public last_merged_at: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing contribution creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing contribution last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiModelProperty({\n    description: \"Contributor unique user name\",\n    example: \"0-vortex\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 255,\n  })\n  public contributor: string;\n\n  @ApiModelProperty({\n    description: \"Contribution GitHub origin URL\",\n    example: \"https://github.com/open-sauced/hot/pull/320\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 255,\n  })\n  public url: string;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, (repo) => repo.contributions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbCustomer.html":{"url":"entities/DbCustomer.html","title":"entity - DbCustomer","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbCustomer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                stripe_customer_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/customer.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stripe_customer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Stripe Customer Id', example: 498})@Column({type: 'character varying', length: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/customer.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, BaseEntity, PrimaryColumn } from \"typeorm\";\n\nimport { ApiModelProperty } from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"customers\" })\nexport class DbCustomer extends BaseEntity {\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @PrimaryColumn(\"bigint\")\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"Stripe Customer Id\",\n    example: 498,\n  })\n  @Column({\n    type: \"character varying\",\n    length: 50,\n  })\n  public stripe_customer_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbEmoji.html":{"url":"entities/DbEmoji.html","title":"entity - DbEmoji","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbEmoji\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emoji/entities/emoji.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                display_order\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                reactions\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing highlight reaction creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emoji/entities/emoji.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emoji/entities/emoji.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        display_order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Emoji display order', example: 1})@Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emoji/entities/emoji.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Emoji identifier', example: 'uuid-v4'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emoji/entities/emoji.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Emoji Name', example: '100'})@Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emoji/entities/emoji.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUserHighlightReaction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, highlightReaction => highlightReaction.emoji)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emoji/entities/emoji.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing highlight reaction last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emoji/entities/emoji.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Emoji URL', example: 'https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png?v8'})@Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emoji/entities/emoji.entity.ts:39\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\nimport { DbUserHighlightReaction } from \"../../user/entities/user-highlight-reaction.entity\";\n\n@Entity({ name: \"emojis\" })\nexport class DbEmoji {\n  @ApiModelProperty({\n    description: \"Emoji identifier\",\n    example: \"uuid-v4\",\n  })\n  @PrimaryGeneratedColumn()\n  public id!: string;\n\n  @ApiModelProperty({\n    description: \"Emoji Name\",\n    example: \"100\",\n  })\n  @Column({ type: \"text\" })\n  public name: string;\n\n  @ApiModelProperty({\n    description: \"Emoji URL\",\n    example: \"https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png?v8\",\n  })\n  @Column({ type: \"text\" })\n  public url: string;\n\n  @ApiModelProperty({\n    description: \"Emoji display order\",\n    example: 1,\n  })\n  @Column({ type: \"integer\" })\n  public display_order!: number;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing highlight reaction creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing highlight reaction last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @OneToMany(() => DbUserHighlightReaction, (highlightReaction) => highlightReaction.emoji)\n  public reactions: DbUserHighlightReaction[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbEndorsement.html":{"url":"entities/DbEndorsement.html","title":"entity - DbEndorsement","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbEndorsement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endorsement/entities/endorsement.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                creator_user_id\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                recipient_user_id\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                source_comment_url\n                            \n                            \n                                    Public\n                                source_context_url\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing endorsement creation', example: '2022-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/entities/endorsement.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        creator_user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Endorsement Creator User ID', example: 237133})@Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/entities/endorsement.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Endorsement identifier', example: 'uuid-v4'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/entities/endorsement.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        recipient_user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Endorsement Recipient User ID', example: 31333})@Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/entities/endorsement.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository ID', example: 78133})@Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/entities/endorsement.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        source_comment_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Endorsement Source Comment URL'})@Column({type: 'character varying', length: 500})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/entities/endorsement.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        source_context_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Endorsement Source Context URL'})@Column({type: 'character varying', length: 20})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/entities/endorsement.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Endorsement Type', example: 'doc'})@Column({type: 'character varying', length: 20})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endorsement/entities/endorsement.entity.ts:59\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\nimport { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity({ name: \"endorsements\" })\nexport class DbEndorsement {\n  @ApiModelProperty({\n    description: \"Endorsement identifier\",\n    example: \"uuid-v4\",\n  })\n  @PrimaryGeneratedColumn()\n  public id!: string;\n\n  @ApiModelProperty({\n    description: \"Endorsement Creator User ID\",\n    example: 237133,\n  })\n  @Column({ type: \"integer\" })\n  public creator_user_id?: number;\n\n  @ApiModelProperty({\n    description: \"Endorsement Recipient User ID\",\n    example: 31333,\n  })\n  @Column({ type: \"integer\" })\n  public recipient_user_id?: number;\n\n  @ApiModelProperty({\n    description: \"Repository ID\",\n    example: 78133,\n  })\n  @Column({ type: \"integer\" })\n  public repo_id: number;\n\n  @ApiModelProperty({ description: \"Endorsement Source Comment URL\" })\n  @Column({\n    type: \"character varying\",\n    length: 500,\n  })\n  public source_comment_url?: string;\n\n  @ApiModelProperty({ description: \"Endorsement Source Context URL\" })\n  @Column({\n    type: \"character varying\",\n    length: 20,\n  })\n  public source_context_url: string;\n\n  @ApiModelProperty({\n    description: \"Endorsement Type\",\n    example: \"doc\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 20,\n  })\n  public type: string;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing endorsement creation\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbInsight.html":{"url":"entities/DbInsight.html","title":"entity - DbInsight","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbInsight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/entities/insight.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                is_favorite\n                            \n                            \n                                    Public\n                                is_public\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                repos\n                            \n                            \n                                    Public\n                                short_code\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing insight creation', example: '2022-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing insight deletion', example: '2022-10-19 13:24:51.000000'})@DeleteDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Insight identifier', example: 237133})@PrimaryColumn()@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        is_favorite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Flag indicating insight favorite', example: false})@Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        is_public\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Flag indicating insight visibility', example: false})@Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Insight Page Name', example: 'Open Sauced Team'})@Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DbInsightRepo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, insightRepo => insightRepo.insight)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        short_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Title', example: 'Insight Page Short Code'})@Column({type: 'character varying', length: 25})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing insight last updated', example: '2022-10-19 13:24:51.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight.entity.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.insights)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight.entity.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User ID', example: 237133})@Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  DeleteDateColumn,\n  ManyToOne,\n  JoinColumn,\n} from \"typeorm\";\n\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\n\nimport { DbInsightRepo } from \"./insight-repo.entity\";\nimport { DbUser } from \"../../user/user.entity\";\n\n@Entity({ name: \"insights\" })\nexport class DbInsight extends BaseEntity {\n  @ApiModelProperty({\n    description: \"Insight identifier\",\n    example: 237133,\n  })\n  @PrimaryColumn()\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User ID\",\n    example: 237133,\n  })\n  @Column({\n    type: \"bigint\",\n    select: false,\n  })\n  public user_id: number;\n\n  @ApiModelProperty({\n    description: \"Insight Page Name\",\n    example: \"Open Sauced Team\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 255,\n  })\n  public name: string;\n\n  @ApiModelProperty({\n    description: \"Flag indicating insight visibility\",\n    example: false,\n  })\n  @Column({ default: false })\n  public is_public: boolean;\n\n  @ApiModelProperty({\n    description: \"Flag indicating insight favorite\",\n    example: false,\n  })\n  @Column({ default: false })\n  public is_favorite: boolean;\n\n  @ApiModelProperty({\n    description: \"Title\",\n    example: \"Insight Page Short Code\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 25,\n  })\n  public short_code: string;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing insight creation\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing insight last updated\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing insight deletion\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.insights)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @OneToMany(() => DbInsightRepo, (insightRepo) => insightRepo.insight)\n  public repos: DbInsightRepo[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbInsightMember.html":{"url":"entities/DbInsightMember.html","title":"entity - DbInsightMember","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbInsightMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/entities/insight-member.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                access\n                            \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                insight_id\n                            \n                            \n                                    Public\n                                    Optional\n                                invitation_email\n                            \n                            \n                                    Public\n                                    Optional\n                                invitation_emailed_at\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                    Optional\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Insight Member Access', example: 'pending'})@Column({type: 'character varying', length: 20, default: 'pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-member.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing team member creation', example: '2022-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-member.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing team member deletion', example: '2022-10-19 13:24:51.000000'})@DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-member.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Insight Member identifier', example: 'uuid-v4'})@PrimaryColumn()@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-member.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        insight_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Insight ID', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-member.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        invitation_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Team Member Invitation Email', example: 'hello@opensauced.pizza'})@Column({type: 'text', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-member.entity.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        invitation_emailed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing team member invitation email sent date', example: '2023-04-10 13:24:51.000000'})@Column({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-member.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User's Name', example: 'Brian Douglas'})@Column({type: 'text', select: false, insert: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-member.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing team member last updated', example: '2022-10-19 13:24:51.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-member.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User ID', example: 237133})@Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-member.entity.ts:39\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  PrimaryGeneratedColumn,\n  DeleteDateColumn,\n} from \"typeorm\";\n\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"insight_members\" })\nexport class DbInsightMember extends BaseEntity {\n  @ApiModelProperty({\n    description: \"Insight Member identifier\",\n    example: \"uuid-v4\",\n  })\n  @PrimaryColumn()\n  @PrimaryGeneratedColumn()\n  public id!: string;\n\n  @ApiModelProperty({\n    description: \"Insight ID\",\n    example: 237133,\n  })\n  @Column()\n  public insight_id: number;\n\n  @ApiModelProperty({\n    description: \"User ID\",\n    example: 237133,\n  })\n  @Column({ type: \"integer\" })\n  public user_id?: number;\n\n  @ApiModelProperty({\n    description: \"User's Name\",\n    example: \"Brian Douglas\",\n  })\n  @Column({\n    type: \"text\",\n    select: false,\n    insert: false,\n  })\n  public name?: string;\n\n  @ApiModelProperty({\n    description: \"Insight Member Access\",\n    example: \"pending\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 20,\n    default: \"pending\",\n  })\n  public access: string;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing team member creation\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing team member last updated\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing team member deletion\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @DeleteDateColumn({ type: \"timestamp without time zone\" })\n  public deleted_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing team member invitation email sent date\",\n    example: \"2023-04-10 13:24:51.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public invitation_emailed_at?: Date;\n\n  @ApiModelProperty({\n    description: \"Team Member Invitation Email\",\n    example: \"hello@opensauced.pizza\",\n  })\n  @Column({\n    type: \"text\",\n    select: false,\n  })\n  public invitation_email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbInsightRepo.html":{"url":"entities/DbInsightRepo.html","title":"entity - DbInsightRepo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbInsightRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/entities/insight-repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                full_name\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                insight\n                            \n                            \n                                    Public\n                                insight_id\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing insight repo creation', example: '2022-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-repo.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing insight repo deletion', example: '2022-10-19 13:24:51.000000'})@DeleteDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-repo.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repo Full Name', example: 'open-sauced/insights'})@Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-repo.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Insight identifier', example: 237133})@PrimaryColumn()@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-repo.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        insight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbInsight\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, insight => insight.repos)@JoinColumn({name: 'insight_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-repo.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        insight_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Insight ID', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-repo.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repo ID', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/entities/insight-repo.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  CreateDateColumn,\n  ManyToOne,\n  JoinColumn,\n  PrimaryGeneratedColumn,\n  DeleteDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\n\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\nimport { DbInsight } from \"./insight.entity\";\n\n@Entity({ name: \"insight_repos\" })\nexport class DbInsightRepo extends BaseEntity {\n  @ApiModelProperty({\n    description: \"Insight identifier\",\n    example: 237133,\n  })\n  @PrimaryColumn()\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"Insight ID\",\n    example: 237133,\n  })\n  @Column()\n  public insight_id: number;\n\n  @ApiModelProperty({\n    description: \"Repo ID\",\n    example: 237133,\n  })\n  @Column()\n  public repo_id: number;\n\n  @ApiModelProperty({\n    description: \"Repo Full Name\",\n    example: \"open-sauced/insights\",\n  })\n  @Column({ type: \"text\" })\n  public full_name: string;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing insight repo creation\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing insight repo deletion\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbInsight, (insight) => insight.repos)\n  @JoinColumn({\n    name: \"insight_id\",\n    referencedColumnName: \"id\",\n  })\n  public insight!: DbInsight;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbLog.html":{"url":"entities/DbLog.html","title":"entity - DbLog","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/log.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                context\n                            \n                            \n                                    Public\n                                created_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                level\n                            \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/log.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/log.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/log.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/log.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/log.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity, Column, CreateDateColumn, Entity, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity({ name: \"logs\" })\nexport class DbLog extends BaseEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  public id: string;\n\n  @Column()\n  public context: string;\n\n  @Column()\n  public message: string;\n\n  @Column()\n  public level: string;\n\n  @CreateDateColumn()\n  public created_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbPRInsight.html":{"url":"entities/DbPRInsight.html","title":"entity - DbPRInsight","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbPRInsight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/entities/pull-request-insight.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accepted_prs\n                            \n                            \n                                    Public\n                                all_prs\n                            \n                            \n                                    Public\n                                day\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                interval\n                            \n                            \n                                    Public\n                                spam_prs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        accepted_prs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'PR Type: accepted requests count', example: 287})@Column({type: 'integer', default: 0, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request-insight.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        all_prs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'PR Type: all requests count', example: 287})@Column({type: 'integer', default: 0, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request-insight.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Selected interval computed date in human readable format', example: '2022-08-28 22:04:39.000000'})@Column({type: 'timestamp without time zone', default: () => now(), select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request-insight.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@PrimaryColumn({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request-insight.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Selected interval in numerical days, goes back with number, 0 means today', example: 1, default: 0})@Column({type: 'integer', default: 0, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request-insight.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spam_prs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'PR Type: spam requests count', example: 287})@Column({type: 'integer', default: 0, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request-insight.entity.ts:70\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, BaseEntity, PrimaryColumn, Column } from \"typeorm\";\nimport { ApiModelProperty } from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"pull_requests\" })\nexport class DbPRInsight extends BaseEntity {\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @PrimaryColumn({\n    type: \"bigint\",\n    select: false,\n  })\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"Selected interval in numerical days, goes back with number, 0 means today\",\n    example: 1,\n    default: 0,\n  })\n  @Column({\n    type: \"integer\",\n    default: 0,\n    select: false,\n  })\n  public interval: number;\n\n  @ApiModelProperty({\n    description: \"Selected interval computed date in human readable format\",\n    example: \"2022-08-28 22:04:39.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n    select: false,\n  })\n  public day: number;\n\n  @ApiModelProperty({\n    description: \"PR Type: all requests count\",\n    example: 287,\n  })\n  @Column({\n    type: \"integer\",\n    default: 0,\n    select: false,\n  })\n  public all_prs: number;\n\n  @ApiModelProperty({\n    description: \"PR Type: accepted requests count\",\n    example: 287,\n  })\n  @Column({\n    type: \"integer\",\n    default: 0,\n    select: false,\n  })\n  public accepted_prs: number;\n\n  @ApiModelProperty({\n    description: \"PR Type: spam requests count\",\n    example: 287,\n  })\n  @Column({\n    type: \"integer\",\n    default: 0,\n    select: false,\n  })\n  public spam_prs: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbPullRequest.html":{"url":"entities/DbPullRequest.html","title":"entity - DbPullRequest","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbPullRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/entities/pull-request.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                additions\n                            \n                            \n                                    Public\n                                    Optional\n                                assignee_avatar\n                            \n                            \n                                    Public\n                                    Optional\n                                assignee_login\n                            \n                            \n                                    Public\n                                author_avatar\n                            \n                            \n                                    Public\n                                author_login\n                            \n                            \n                                    Public\n                                    Optional\n                                changed_files\n                            \n                            \n                                    Public\n                                    Optional\n                                closed_at\n                            \n                            \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deletions\n                            \n                            \n                                    Public\n                                draft\n                            \n                            \n                                    Public\n                                    Optional\n                                full_name\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                label_names\n                            \n                            \n                                    Public\n                                    Optional\n                                labels\n                            \n                            \n                                    Public\n                                    Optional\n                                last_updated_at\n                            \n                            \n                                    Public\n                                mergeable\n                            \n                            \n                                    Public\n                                merged\n                            \n                            \n                                    Public\n                                    Optional\n                                merged_at\n                            \n                            \n                                    Public\n                                number\n                            \n                            \n                                    Public\n                                rebaseable\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                source_branch\n                            \n                            \n                                    Public\n                                    Optional\n                                source_label\n                            \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                    Optional\n                                target_branch\n                            \n                            \n                                    Public\n                                    Optional\n                                target_label\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        additions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'PR lines added', example: 10})@Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:233\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        assignee_avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request assignee avatar', example: undefined})@Column({type: 'text', default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        assignee_login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request assignee username', example: undefined})@Column({type: 'text', default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author_avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request author avatar', example: 'https://avatars.githubusercontent.com/u/25160953?v=4'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author_login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request author username', example: 'Th3nn3ss'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:142\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        changed_files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'PR files changed', example: 5})@Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:247\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        closed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Timestamp representing pr close date', example: '2022-08-28 22:04:29.000000'})@Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:189\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'PR comments', example: 0})@Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:226\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing pr creation date', example: '2022-08-28 22:04:29.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:179\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deletions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'PR lines deleted', example: 5})@Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:240\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        draft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request is draft', example: false})@Column('boolean')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request repo full name', example: 'open-sauced/insights'})@Column({type: 'text', select: false, insert: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:258\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request identifier', example: 1045024650})@PrimaryColumn('integer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        label_names\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request label names', example: showcase})@Column({type: 'text', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request labels', example: [\n      {\n        \"id\": 4456742596,\n        \"url\": \"https://api.github.com/repos/denoland/fresh/labels/showcase\",\n        \"name\": \"showcase\",\n        \"color\": \"0e8a16\",\n        \"default\": false,\n        \"node_id\": \"LA_kwDOFcV7488AAAABCaR-xA\",\n        \"description\": \"\"\n      }\n    ]})@Column({type: 'text', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        last_updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Timestamp representing internal last update', example: '2022-08-28 22:04:29.000000'})@Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:219\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mergeable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request is mergeable', example: false})@Column('boolean')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        merged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request is merged', example: false})@Column('boolean')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        merged_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Timestamp representing pr merge date', example: '2022-08-28 22:04:29.000000'})@Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:199\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request number', example: 612})@Column('integer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rebaseable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request is rebaseable', example: false})@Column('boolean')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@Column({type: 'integer', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        source_branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request source branch', example: 'main'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        source_label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request source ref', example: 'Th3nn3ss:cli_split_kwargs'})@Column({type: 'text', default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request state', example: 'closed'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        target_branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request target branch', example: 'cli_split_kwargs'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        target_label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request target ref', example: 'aws:main'})@Column({type: 'text', default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request title', example: 'fix(cli): arg tags value with equal sign'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Timestamp representing repository last update', example: '2022-08-28 22:04:29.000000'})@Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/entities/pull-request.entity.ts:209\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, BaseEntity, PrimaryColumn, CreateDateColumn } from \"typeorm\";\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\n\n@Entity({ name: \"pull_requests\" })\nexport class DbPullRequest extends BaseEntity {\n  @ApiModelProperty({\n    description: \"Pull request identifier\",\n    example: 1045024650,\n  })\n  @PrimaryColumn(\"integer\")\n  public id!: number;\n\n  @ApiHideProperty()\n  @Column({\n    type: \"integer\",\n    select: false,\n  })\n  public repo_id!: number;\n\n  @ApiModelProperty({\n    description: \"Pull request number\",\n    example: 612,\n  })\n  @Column(\"integer\")\n  public number: number;\n\n  @ApiModelProperty({\n    description: \"Pull request state\",\n    example: \"closed\",\n  })\n  @Column(\"text\")\n  public state: string;\n\n  @ApiModelProperty({\n    description: \"Pull request is draft\",\n    example: false,\n  })\n  @Column(\"boolean\")\n  public draft: boolean;\n\n  @ApiModelProperty({\n    description: \"Pull request is merged\",\n    example: false,\n  })\n  @Column(\"boolean\")\n  public merged: boolean;\n\n  @ApiModelProperty({\n    description: \"Pull request is mergeable\",\n    example: false,\n  })\n  @Column(\"boolean\")\n  public mergeable: boolean;\n\n  @ApiModelProperty({\n    description: \"Pull request is rebaseable\",\n    example: false,\n  })\n  @Column(\"boolean\")\n  public rebaseable: boolean;\n\n  @ApiModelProperty({\n    description: \"Pull request title\",\n    example: \"fix(cli): arg tags value with equal sign\",\n  })\n  @Column(\"text\")\n  public title: string;\n\n  @ApiModelProperty({\n    description: \"Pull request source ref\",\n    example: \"Th3nn3ss:cli_split_kwargs\",\n  })\n  @Column({\n    type: \"text\",\n    default: \"\",\n  })\n  public source_label?: string;\n\n  @ApiModelProperty({\n    description: \"Pull request target ref\",\n    example: \"aws:main\",\n  })\n  @Column({\n    type: \"text\",\n    default: \"\",\n  })\n  public target_label?: string;\n\n  @ApiModelProperty({\n    description: \"Pull request source branch\",\n    example: \"main\",\n  })\n  @Column(\"text\")\n  public source_branch?: string;\n\n  @ApiModelProperty({\n    description: \"Pull request target branch\",\n    example: \"cli_split_kwargs\",\n  })\n  @Column(\"text\")\n  public target_branch?: string;\n\n  @ApiModelProperty({\n    description: \"Pull request labels\",\n    example: `[\n      {\n        \"id\": 4456742596,\n        \"url\": \"https://api.github.com/repos/denoland/fresh/labels/showcase\",\n        \"name\": \"showcase\",\n        \"color\": \"0e8a16\",\n        \"default\": false,\n        \"node_id\": \"LA_kwDOFcV7488AAAABCaR-xA\",\n        \"description\": \"\"\n      }\n    ]`,\n  })\n  @Column({\n    type: \"text\",\n    select: false,\n  })\n  public labels?: string;\n\n  @ApiModelProperty({\n    description: \"Pull request label names\",\n    example: `showcase`,\n  })\n  @Column({\n    type: \"text\",\n    select: false,\n  })\n  public label_names?: string[];\n\n  @ApiModelProperty({\n    description: \"Pull request author username\",\n    example: \"Th3nn3ss\",\n  })\n  @Column(\"text\")\n  public author_login: string;\n\n  @ApiModelProperty({\n    description: \"Pull request author avatar\",\n    example: \"https://avatars.githubusercontent.com/u/25160953?v=4\",\n  })\n  @Column(\"text\")\n  public author_avatar: string;\n\n  @ApiModelProperty({\n    description: \"Pull request assignee username\",\n    example: null,\n  })\n  @Column({\n    type: \"text\",\n    default: \"\",\n  })\n  public assignee_login?: string;\n\n  @ApiModelProperty({\n    description: \"Pull request assignee avatar\",\n    example: null,\n  })\n  @Column({\n    type: \"text\",\n    default: \"\",\n  })\n  public assignee_avatar?: string;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing pr creation date\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelProperty({\n    description: \"Timestamp representing pr close date\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public closed_at?: Date;\n\n  @ApiModelProperty({\n    description: \"Timestamp representing pr merge date\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public merged_at?: Date;\n\n  @ApiModelProperty({\n    description: \"Timestamp representing repository last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiModelProperty({\n    description: \"Timestamp representing internal last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public last_updated_at?: Date;\n\n  @ApiModelProperty({\n    description: \"PR comments\",\n    example: 0,\n  })\n  @Column({ type: \"bigint\" })\n  public comments?: number;\n\n  @ApiModelProperty({\n    description: \"PR lines added\",\n    example: 10,\n  })\n  @Column({ type: \"bigint\" })\n  public additions?: number;\n\n  @ApiModelProperty({\n    description: \"PR lines deleted\",\n    example: 5,\n  })\n  @Column({ type: \"bigint\" })\n  public deletions?: number;\n\n  @ApiModelProperty({\n    description: \"PR files changed\",\n    example: 5,\n  })\n  @Column({ type: \"bigint\" })\n  public changed_files?: number;\n\n  @ApiModelProperty({\n    description: \"Pull request repo full name\",\n    example: \"open-sauced/insights\",\n  })\n  @Column({\n    type: \"text\",\n    select: false,\n    insert: false,\n  })\n  public full_name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DbPullRequestContributor.html":{"url":"classes/DbPullRequestContributor.html","title":"class - DbPullRequestContributor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DbPullRequestContributor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/dtos/pull-request-contributor.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author_login\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author_login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Pull request author username', example: 'Th3nn3ss'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-contributor.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Timestamp representing pr last update', example: '2022-08-28 22:04:29.000000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-contributor.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\nexport class DbPullRequestContributor {\n  @ApiModelProperty({\n    description: \"Pull request author username\",\n    example: \"Th3nn3ss\",\n  })\n  public author_login: string;\n\n  @ApiModelProperty({\n    description: \"Timestamp representing pr last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  public updated_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepoToUserStargazers.html":{"url":"entities/DbRepoToUserStargazers.html","title":"entity - DbRepoToUserStargazers","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepoToUserStargazers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.stargazers.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing stargaze creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Stargaze identifier', example: 196})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserStargazers)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing stargaze last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repoToUserStargazers)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbRepo } from \"./repo.entity\";\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"users_to_repos_stargazers\" })\nexport class DbRepoToUserStargazers {\n  @ApiModelProperty({\n    description: \"Stargaze identifier\",\n    example: 196,\n  })\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column()\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @Column()\n  public repo_id!: number;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing stargaze creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing stargaze last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.repoToUserStargazers)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, (repo) => repo.repoToUserStargazers)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepoToUserStars.html":{"url":"entities/DbRepoToUserStars.html","title":"entity - DbRepoToUserStars","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepoToUserStars\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.stars.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing star creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Star identifier', example: 196})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserStars)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing star last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repoToUserStars)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbRepo } from \"./repo.entity\";\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"users_to_repos_stars\" })\nexport class DbRepoToUserStars {\n  @ApiModelProperty({\n    description: \"Star identifier\",\n    example: 196,\n  })\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column()\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @Column()\n  public repo_id!: number;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing star creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing star last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.repoToUserStars)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, (repo) => repo.repoToUserStars)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepoToUserSubmissions.html":{"url":"entities/DbRepoToUserSubmissions.html","title":"entity - DbRepoToUserSubmissions","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepoToUserSubmissions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.submissions.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                is_accepted\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing submission creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Submission identifier', example: 196})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        is_accepted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Flag representing if the submission is approved by open sauced staff', example: false})@Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserSubmissions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing submission last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repoToUserSubmissions)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbRepo } from \"./repo.entity\";\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"users_to_repos_submissions\" })\nexport class DbRepoToUserSubmissions {\n  @ApiModelProperty({\n    description: \"Submission identifier\",\n    example: 196,\n  })\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column()\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @Column()\n  public repo_id!: number;\n\n  @ApiModelProperty({\n    description: \"Flag representing if the submission is approved by open sauced staff\",\n    example: false,\n  })\n  @Column({ default: false })\n  public is_accepted?: boolean;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing submission creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing submission last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, (repo) => repo.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepoToUserVotes.html":{"url":"entities/DbRepoToUserVotes.html","title":"entity - DbRepoToUserVotes","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepoToUserVotes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.votes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing vote creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Vote identifier', example: 196})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserVotes)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing vote last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repoToUserVotes)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbRepo } from \"./repo.entity\";\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"users_to_repos_votes\" })\nexport class DbRepoToUserVotes {\n  @ApiModelProperty({\n    description: \"Vote identifier\",\n    example: 196,\n  })\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column()\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @Column()\n  public repo_id!: number;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing vote creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing vote last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.repoToUserVotes)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, (repo) => repo.repoToUserVotes)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbSubscription.html":{"url":"entities/DbSubscription.html","title":"entity - DbSubscription","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscription/stripe-subscription.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                cancel_at\n                            \n                            \n                                    Public\n                                cancel_at_period_end\n                            \n                            \n                                    Public\n                                    Optional\n                                canceled_at\n                            \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                current_period_end_at\n                            \n                            \n                                    Public\n                                    Optional\n                                current_period_start_at\n                            \n                            \n                                    Public\n                                    Optional\n                                ended_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                metadata\n                            \n                            \n                                    Public\n                                price_id\n                            \n                            \n                                    Public\n                                quantity\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                    Optional\n                                trial_end_at\n                            \n                            \n                                    Public\n                                    Optional\n                                trial_start_at\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        cancel_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing cancel date', example: '2016-10-19 13:24:51.000000'})@Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cancel_at_period_end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing subscription creation', example: '2016-10-19 13:24:51.000000'})@Column({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        canceled_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing canceled date', example: '2016-10-19 13:24:51.000000'})@Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing subscription creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        current_period_end_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing current period end date', example: '2016-10-19 13:24:51.000000'})@Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        current_period_start_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing current period start date', example: '2016-10-19 13:24:51.000000'})@Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        ended_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing end date', example: '2016-10-19 13:24:51.000000'})@Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Subscription identifier', example: 'sub_1234'})@PrimaryColumn('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@Column({type: 'text', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        price_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Price ID', example: 'price_12345'})@Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Quantity', example: 1})@Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Subscription Status', example: 'active'})@Column({type: 'text', default: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trial_end_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing trial end date', example: '2016-10-19 13:24:51.000000'})@Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trial_start_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing trial start date', example: '2016-10-19 13:24:51.000000'})@Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 42211})@Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscription/stripe-subscription.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, BaseEntity, PrimaryColumn, Column, CreateDateColumn } from \"typeorm\";\n\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\n\n@Entity({ name: \"subscriptions\" })\nexport class DbSubscription extends BaseEntity {\n  @ApiModelProperty({\n    description: \"Subscription identifier\",\n    example: \"sub_1234\",\n  })\n  @PrimaryColumn(\"text\")\n  public id!: string;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 42211,\n  })\n  @Column({ type: \"bigint\" })\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"Subscription Status\",\n    example: \"active\",\n  })\n  @Column({\n    type: \"text\",\n    default: \"active\",\n  })\n  public status!: string;\n\n  @ApiHideProperty()\n  @Column({\n    type: \"text\",\n    select: false,\n  })\n  public metadata!: string;\n\n  @ApiModelProperty({\n    description: \"Price ID\",\n    example: \"price_12345\",\n  })\n  @Column({ type: \"text\" })\n  public price_id!: string;\n\n  @ApiModelProperty({\n    description: \"Quantity\",\n    example: 1,\n  })\n  @Column({ type: \"bigint\" })\n  public quantity!: number;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing subscription creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @Column({ type: \"boolean\" })\n  public cancel_at_period_end!: boolean;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing subscription creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing current period start date\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public current_period_start_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing current period end date\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public current_period_end_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing end date\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public ended_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing cancel date\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public cancel_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing canceled date\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public canceled_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing trial start date\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public trial_start_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing trial end date\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public trial_end_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbUserCollaboration.html":{"url":"entities/DbUserCollaboration.html","title":"entity - DbUserCollaboration","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbUserCollaboration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user-collaboration.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                collaboration_emailed_at\n                            \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                    Optional\n                                request_emailed_at\n                            \n                            \n                                    Public\n                                request_user\n                            \n                            \n                                    Public\n                                    Optional\n                                request_user_id\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                    Optional\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        collaboration_emailed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing collaboration acceptance email sent date', example: '2023-04-10 13:24:51.000000'})@Column({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-collaboration.entity.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing user collaboration creation', example: '2022-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-collaboration.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing user collaboration deletion', example: '2022-10-19 13:24:51.000000'})@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-collaboration.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User Collaboration identifier', example: 'uuid-v4'})@PrimaryColumn()@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-collaboration.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Collaboration Request Message', example: 'Hey, are you up for collaborating on this cool project?'})@Column({type: 'character varying', length: 500, default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-collaboration.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        request_emailed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing collaboration request email sent date', example: '2023-04-10 13:24:51.000000'})@Column({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-collaboration.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        request_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.request_collaborations)@JoinColumn({name: 'request_user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-collaboration.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        request_user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Collaboration Request User ID', example: 31333})@Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-collaboration.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Collaboration Status', example: 'pending'})@Column({type: 'character varying', length: 20, default: 'pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-collaboration.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing user collaboration last updated', example: '2022-10-19 13:24:51.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-collaboration.entity.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.collaborations)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-collaboration.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Collaboration Receipient User ID', example: 237133})@Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-collaboration.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  PrimaryGeneratedColumn,\n  DeleteDateColumn,\n  JoinColumn,\n  ManyToOne,\n} from \"typeorm\";\n\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\nimport { DbUser } from \"../user.entity\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\n\n@Entity({ name: \"user_collaborations\" })\nexport class DbUserCollaboration extends BaseEntity {\n  @ApiModelProperty({\n    description: \"User Collaboration identifier\",\n    example: \"uuid-v4\",\n  })\n  @PrimaryColumn()\n  @PrimaryGeneratedColumn()\n  public id!: string;\n\n  @ApiModelProperty({\n    description: \"Collaboration Receipient User ID\",\n    example: 237133,\n  })\n  @Column({ type: \"integer\" })\n  public user_id?: number;\n\n  @ApiModelProperty({\n    description: \"Collaboration Request User ID\",\n    example: 31333,\n  })\n  @Column({ type: \"integer\" })\n  public request_user_id?: number;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.collaborations)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.request_collaborations)\n  @JoinColumn({\n    name: \"request_user_id\",\n    referencedColumnName: \"id\",\n  })\n  public request_user: DbUser;\n\n  @ApiModelProperty({\n    description: \"Collaboration Request Message\",\n    example: \"Hey, are you up for collaborating on this cool project?\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 500,\n    default: \"\",\n  })\n  public message: string;\n\n  @ApiModelProperty({\n    description: \"Collaboration Status\",\n    example: \"pending\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 20,\n    default: \"pending\",\n  })\n  public status: string;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing user collaboration creation\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing user collaboration last updated\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing user collaboration deletion\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing collaboration request email sent date\",\n    example: \"2023-04-10 13:24:51.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public request_emailed_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing collaboration acceptance email sent date\",\n    example: \"2023-04-10 13:24:51.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public collaboration_emailed_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbUserHighlight.html":{"url":"entities/DbUserHighlight.html","title":"entity - DbUserHighlight","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbUserHighlight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user-highlight.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                    Optional\n                                full_name\n                            \n                            \n                                    Public\n                                highlight\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                login\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                pinned\n                            \n                            \n                                    Public\n                                reactions\n                            \n                            \n                                    Public\n                                    Optional\n                                shipped_at\n                            \n                            \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                    Optional\n                                url\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing highlight creation date', example: '2023-01-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing highlight deletion date', example: '2023-01-19 13:24:51.000000'})@DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Highlight Repo Full Name', example: 'open-sauced/insights'})@Column({type: 'text', select: false, insert: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        highlight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Highlight Text', example: \n    I made my first open source pull request!\n    \n    github.com/open-sauced/insights/pull/1})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User Highlight identifier', example: 237133})@PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Highlight User Login', example: 'bdougie'})@Column({type: 'text', select: false, insert: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Highlight User Full Name', example: 'Brian Douglas'})@Column({type: 'text', select: false, insert: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        pinned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Whether the highlight is pinned to the top', example: false})@Column({type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUserHighlightReaction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, highlightReaction => highlightReaction.highlight)@JoinColumn({name: 'highlight_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        shipped_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing highlight shipped date', example: '2023-01-19 13:24:51.000000'})@Column({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Highlight Title', example: 'My First PR!'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing highlight updated date', example: '2023-01-19 13:24:51.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Highlight Pull Request URL', example: 'github.com/open-sauced/insights/pull/1'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.highlights)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  BaseEntity,\n  Column,\n  PrimaryColumn,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  ManyToOne,\n  JoinColumn,\n} from \"typeorm\";\n\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\nimport { DbUserHighlightReaction } from \"./user-highlight-reaction.entity\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../user.entity\";\n\n@Entity({ name: \"user_highlights\" })\nexport class DbUserHighlight extends BaseEntity {\n  @ApiModelProperty({\n    description: \"User Highlight identifier\",\n    example: 237133,\n  })\n  @PrimaryColumn(\"bigint\")\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column(\"bigint\")\n  public user_id: number;\n\n  @ApiModelProperty({\n    description: \"Highlight Pull Request URL\",\n    example: \"github.com/open-sauced/insights/pull/1\",\n  })\n  @Column(\"text\")\n  public url?: string;\n\n  @ApiModelProperty({\n    description: \"Highlight Title\",\n    example: \"My First PR!\",\n  })\n  @Column(\"text\")\n  public title?: string;\n\n  @ApiModelProperty({\n    description: \"Highlight Text\",\n    example: `\n    I made my first open source pull request!\n    \n    github.com/open-sauced/insights/pull/1`,\n  })\n  @Column(\"text\")\n  public highlight: string;\n\n  @ApiModelProperty({\n    description: \"Whether the highlight is pinned to the top\",\n    example: false,\n  })\n  @Column({\n    type: \"boolean\",\n    default: false,\n  })\n  public pinned?: boolean;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing highlight creation date\",\n    example: \"2023-01-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing highlight updated date\",\n    example: \"2023-01-19 13:24:51.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing highlight deletion date\",\n    example: \"2023-01-19 13:24:51.000000\",\n  })\n  @DeleteDateColumn({ type: \"timestamp without time zone\" })\n  public deleted_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing highlight shipped date\",\n    example: \"2023-01-19 13:24:51.000000\",\n  })\n  @Column({ type: \"timestamp without time zone\" })\n  public shipped_at?: Date;\n\n  @ApiModelProperty({\n    description: \"Highlight Repo Full Name\",\n    example: \"open-sauced/insights\",\n  })\n  @Column({\n    type: \"text\",\n    select: false,\n    insert: false,\n  })\n  public full_name?: string;\n\n  @ApiModelProperty({\n    description: \"Highlight User Full Name\",\n    example: \"Brian Douglas\",\n  })\n  @Column({\n    type: \"text\",\n    select: false,\n    insert: false,\n  })\n  public name?: string;\n\n  @ApiModelProperty({\n    description: \"Highlight User Login\",\n    example: \"bdougie\",\n  })\n  @Column({\n    type: \"text\",\n    select: false,\n    insert: false,\n  })\n  public login?: string;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.highlights)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user: DbUser;\n\n  @ApiHideProperty()\n  @OneToMany(() => DbUserHighlightReaction, (highlightReaction) => highlightReaction.highlight)\n  @JoinColumn({\n    name: \"highlight_id\",\n    referencedColumnName: \"id\",\n  })\n  public reactions: DbUserHighlightReaction[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbUserHighlightReaction.html":{"url":"entities/DbUserHighlightReaction.html","title":"entity - DbUserHighlightReaction","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbUserHighlightReaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user-highlight-reaction.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Optional\n                                emoji\n                            \n                            \n                                    Public\n                                emoji_id\n                            \n                            \n                                    Optional\n                                highlight\n                            \n                            \n                                    Public\n                                highlight_id\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                reaction_count\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing highlight reaction creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now(), select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight-reaction.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight-reaction.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        emoji\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbEmoji\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, reaction => reaction.emoji)@JoinColumn({name: 'emoji_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight-reaction.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        emoji_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Emoji identifier', example: 'uuid-v4'})@Column({type: 'text', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight-reaction.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        highlight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUserHighlight\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, reaction => reaction.highlight)@JoinColumn({name: 'highlight_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight-reaction.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        highlight_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Highlight identifier', example: 71359796})@Column({type: 'integer', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight-reaction.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Reaction identifier', example: 'uuid-v4'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight-reaction.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reaction_count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer', select: false, insert: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight-reaction.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing highlight reaction last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now(), select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight-reaction.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, reaction => reaction.user)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight-reaction.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column({type: 'integer', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-highlight-reaction.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\nimport { DbUserHighlight } from \"./user-highlight.entity\";\nimport { DbEmoji } from \"../../emoji/entities/emoji.entity\";\nimport { DbUser } from \"../user.entity\";\n\n@Entity({ name: \"user_highlight_reactions\" })\nexport class DbUserHighlightReaction {\n  @ApiModelProperty({\n    description: \"Reaction identifier\",\n    example: \"uuid-v4\",\n  })\n  @PrimaryGeneratedColumn()\n  public id!: string;\n\n  @ApiModelProperty({\n    description: \"Highlight identifier\",\n    example: 71359796,\n  })\n  @Column({\n    type: \"integer\",\n    select: false,\n  })\n  public highlight_id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column({\n    type: \"integer\",\n    select: false,\n  })\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"Emoji identifier\",\n    example: \"uuid-v4\",\n  })\n  @Column({\n    type: \"text\",\n    select: false,\n  })\n  public emoji_id!: string;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing highlight reaction creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n    select: false,\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing highlight reaction last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n    select: false,\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({ type: \"timestamp without time zone\" })\n  public deleted_at?: Date;\n\n  // virtual columns\n  @Column({\n    type: \"integer\",\n    select: false,\n    insert: false,\n  })\n  public reaction_count?: number;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUserHighlightReaction, (reaction) => reaction.highlight)\n  @JoinColumn({\n    name: \"highlight_id\",\n    referencedColumnName: \"id\",\n  })\n  highlight?: DbUserHighlight;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUserHighlightReaction, (reaction) => reaction.user)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  user?: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUserHighlightReaction, (reaction) => reaction.emoji)\n  @JoinColumn({\n    name: \"emoji_id\",\n    referencedColumnName: \"id\",\n  })\n  emoji?: DbEmoji;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DbUserHighlightReactionResponse.html":{"url":"classes/DbUserHighlightReactionResponse.html","title":"class - DbUserHighlightReactionResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DbUserHighlightReactionResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/highlight/dtos/highlight-options.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PickType } from \"@nestjs/swagger\";\nimport { IsOptional, IsString } from \"class-validator\";\nimport { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\nimport { DbUserHighlightReaction } from \"../../user/entities/user-highlight-reaction.entity\";\n\nexport class HighlightOptionsDto extends PageOptionsDto {\n  @ApiPropertyOptional({\n    description: \"Highlight Repo Filter\",\n    example: \"open-sauced/insights\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly repo?: string;\n}\n\nexport class DbUserHighlightReactionResponse extends PickType(DbUserHighlightReaction, [\n  \"emoji_id\",\n  \"reaction_count\",\n]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DbUserHighlightRepo.html":{"url":"classes/DbUserHighlightRepo.html","title":"class - DbUserHighlightRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DbUserHighlightRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/highlight/entities/user-highlight-repo.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                full_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Highlight Repo Full Name', example: 'open-sauced/insights'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/highlight/entities/user-highlight-repo.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\nexport class DbUserHighlightRepo {\n  @ApiModelProperty({\n    description: \"Highlight Repo Full Name\",\n    example: \"open-sauced/insights\",\n  })\n  public full_name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbUserNotification.html":{"url":"entities/DbUserNotification.html","title":"entity - DbUserNotification","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbUserNotification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user-notification.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                from_user_id\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Optional\n                                meta_id\n                            \n                            \n                                    Public\n                                    Optional\n                                notified_at\n                            \n                            \n                                    Public\n                                    Optional\n                                read_at\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        from_user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'From User ID', example: 43311})@Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-notification.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Notification identifier', example: 237133})@PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-notification.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User notification message', example: 'bdougie followed you'})@Column({type: 'character varying', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-notification.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        meta_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Notification Source ID (highlight, user, invite)', example: '133'})@Column({type: 'character varying', length: 32})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-notification.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        notified_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing db-user-notification creation', example: '2022-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-notification.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        read_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing user notification read date', example: '2023-04-19 13:24:51.000000'})@Column({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-notification.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User notification type', example: 'welcome'})@Column({type: 'character varying', enum: UserNotificationTypes, length: 25})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-notification.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User ID', example: 498})@Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-notification.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, BaseEntity, PrimaryColumn, CreateDateColumn } from \"typeorm\";\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\nimport { UserNotificationTypes } from \"./user-notification.constants\";\n\n@Entity({ name: \"user_notifications\" })\nexport class DbUserNotification extends BaseEntity {\n  @ApiModelProperty({\n    description: \"Notification identifier\",\n    example: 237133,\n  })\n  @PrimaryColumn(\"bigint\")\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User ID\",\n    example: 498,\n  })\n  @Column({ type: \"bigint\" })\n  public user_id: number;\n\n  @ApiModelProperty({\n    description: \"From User ID\",\n    example: 43311,\n  })\n  @Column({ type: \"bigint\" })\n  public from_user_id?: number;\n\n  @ApiModelProperty({\n    description: \"User notification type\",\n    example: \"welcome\",\n  })\n  @Column({\n    type: \"character varying\",\n    enum: UserNotificationTypes,\n    length: 25,\n  })\n  public type: string;\n\n  @ApiModelProperty({\n    description: \"User notification message\",\n    example: \"bdougie followed you\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 100,\n  })\n  public message?: string;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing db-user-notification creation\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public notified_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing user notification read date\",\n    example: \"2023-04-19 13:24:51.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public read_at?: Date;\n\n  @ApiModelProperty({\n    description: \"Notification Source ID (highlight, user, invite)\",\n    example: \"133\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 32,\n  })\n  public meta_id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbUserRepo.html":{"url":"entities/DbUserRepo.html","title":"entity - DbUserRepo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbUserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-repo/user-repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                full_name\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing user creation', example: '2022-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-repo/user-repo.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repo Full Name', example: 'open-sauced/insights'})@Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-repo/user-repo.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User Repo identifier', example: 237133})@PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-repo/user-repo.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repo identifier', example: 237133})@Column('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-repo/user-repo.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-repo/user-repo.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, BaseEntity, Column, PrimaryColumn, CreateDateColumn } from \"typeorm\";\n\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"user_repos\" })\nexport class DbUserRepo extends BaseEntity {\n  @ApiModelProperty({\n    description: \"User Repo identifier\",\n    example: 237133,\n  })\n  @PrimaryColumn(\"bigint\")\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column(\"bigint\")\n  public user_id: number;\n\n  @ApiModelProperty({\n    description: \"Repo identifier\",\n    example: 237133,\n  })\n  @Column(\"bigint\")\n  public repo_id: number;\n\n  @ApiModelProperty({\n    description: \"Repo Full Name\",\n    example: \"open-sauced/insights\",\n  })\n  @Column({ type: \"text\" })\n  public full_name: string;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing user creation\",\n    example: \"2022-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbUserToUserFollows.html":{"url":"entities/DbUserToUserFollows.html","title":"entity - DbUserToUserFollows","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbUserToUserFollows\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user-follows.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                following_user_id\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing user follow creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-follows.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-follows.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        following_user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User follower identifier', example: 71359796})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-follows.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User Follow identifier', example: 196})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-follows.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing user follow last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-follows.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-follows.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, DeleteDateColumn, Entity, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"users_to_users_followers\" })\nexport class DbUserToUserFollows {\n  @ApiModelProperty({\n    description: \"User Follow identifier\",\n    example: 196,\n  })\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column()\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"User follower identifier\",\n    example: 71359796,\n  })\n  @Column()\n  public following_user_id!: number;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing user follow creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing user follow last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbUserTopRepo.html":{"url":"entities/DbUserTopRepo.html","title":"entity - DbUserTopRepo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbUserTopRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user-top-repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing top repo first index', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-top-repo.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-top-repo.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Top repo connection identifier', example: 196})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-top-repo.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserTopRepos)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-top-repo.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-top-repo.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing top repo last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-top-repo.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.topRepos)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-top-repo.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user-top-repo.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../user.entity\";\nimport { DbRepo } from \"../../repo/entities/repo.entity\";\nimport {\n  ApiModelProperty,\n  ApiModelPropertyOptional,\n} from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"user_top_repos\" })\nexport class DbUserTopRepo {\n  @ApiModelProperty({\n    description: \"Top repo connection identifier\",\n    example: 196,\n  })\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column()\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @Column()\n  public repo_id!: number;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing top repo first index\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing top repo last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.topRepos)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, (repo) => repo.repoToUserTopRepos)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmojiController.html":{"url":"controllers/EmojiController.html","title":"controller - EmojiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmojiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emoji/emoji.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                emojis\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllEmojis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllEmojis\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllEmojis(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@ApiOperation({operationId: 'findAllEmojis', summary: 'Listing all emojis and paginates them'})@ApiPaginatedResponse(DbEmoji)@ApiOkResponse({type: DbEmoji})@ApiNotFoundResponse({description: 'Emojis not found'})\n                \n            \n\n            \n                \n                    Defined in src/emoji/emoji.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from \"@nestjs/common\";\nimport { ApiOperation, ApiOkResponse, ApiNotFoundResponse, ApiTags } from \"@nestjs/swagger\";\n\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\n\nimport { EmojiService } from \"./emoji.service\";\nimport { DbEmoji } from \"./entities/emoji.entity\";\n\n@Controller(\"emojis\")\n@ApiTags(\"Emojis service\")\nexport class EmojiController {\n  constructor(private emojiService: EmojiService) {}\n\n  @Get(\"/\")\n  @ApiOperation({\n    operationId: \"findAllEmojis\",\n    summary: \"Listing all emojis and paginates them\",\n  })\n  @ApiPaginatedResponse(DbEmoji)\n  @ApiOkResponse({ type: DbEmoji })\n  @ApiNotFoundResponse({ description: \"Emojis not found\" })\n  async findAllEmojis(@Query() pageOptionsDto: PageOptionsDto) {\n    return this.emojiService.findAll(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmojiModule.html":{"url":"modules/EmojiModule.html","title":"module - EmojiModule","body":"\n                   \n\n\n\n\n    Modules\n    EmojiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EmojiModule\n\n\n\ncluster_EmojiModule_providers\n\n\n\n\nEmojiService\n\nEmojiService\n\n\n\nEmojiModule\n\nEmojiModule\n\nEmojiModule -->\n\nEmojiService->EmojiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/emoji/emoji.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmojiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmojiController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { EmojiController } from \"./emoji.controller\";\nimport { DbEmoji } from \"./entities/emoji.entity\";\nimport { EmojiService } from \"./emoji.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbEmoji], \"ApiConnection\")],\n  controllers: [EmojiController],\n  providers: [EmojiService],\n})\nexport class EmojiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmojiService.html":{"url":"injectables/EmojiService.html","title":"injectable - EmojiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmojiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emoji/emoji.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emojiRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/emoji/emoji.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emojiRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/emoji/emoji.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/emoji/emoji.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\n\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { DbEmoji } from \"./entities/emoji.entity\";\n\n@Injectable()\nexport class EmojiService {\n  constructor(\n    @InjectRepository(DbEmoji, \"ApiConnection\")\n    private emojiRepository: Repository\n  ) {}\n\n  baseQueryBuilder() {\n    return this.emojiRepository.createQueryBuilder(\"emoji\");\n  }\n\n  async findAll(pageOptionsDto: PageOptionsDto) {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.orderBy(\"emoji.display_order\", \"ASC\");\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EndorsementController.html":{"url":"controllers/EndorsementController.html","title":"controller - EndorsementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EndorsementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endorsement/endorsement.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                endorsements\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEndorsement\n                            \n                            \n                                    Async\n                                deleteEndoresementById\n                            \n                            \n                                    Async\n                                findAllByRepoOwnerOrUsername\n                            \n                            \n                                    Async\n                                findAllEndorsements\n                            \n                            \n                                    Async\n                                findAllEndorsementsByRepo\n                            \n                            \n                                    Async\n                                findAllUserCreatedEndorsements\n                            \n                            \n                                    Async\n                                findAllUserReceivedEndorsements\n                            \n                            \n                                    Async\n                                findEndorsementById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createEndorsement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEndorsement(_token: string, createEndorsementDto: CreateEndorsementDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@UseGuards(EndorsementTokenGuard)@ApiOperation({operationId: 'createEndorsement', summary: 'Creates a new endorsement record'})@ApiOkResponse({type: DbEndorsement})@ApiBody({type: CreateEndorsementDto})\n                \n            \n\n            \n                \n                    Defined in src/endorsement/endorsement.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createEndorsementDto\n                                    \n                                                CreateEndorsementDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteEndoresementById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteEndoresementById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({operationId: 'deleteEndoresementById', summary: 'Finds ands deletes the endorsement by ID'})@ApiNotFoundResponse({description: 'Endorsement not found'})\n                \n            \n\n            \n                \n                    Defined in src/endorsement/endorsement.controller.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByRepoOwnerOrUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByRepoOwnerOrUsername(repoOwnerOrUser: string, pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/repos/:repoOwnerOrUser')@ApiOperation({operationId: 'findAllByRepoOwnerOrUsername', summary: 'Finds all endorsements by repo org or username and paginates them'})@ApiPaginatedResponse(DbEndorsement)@ApiOkResponse({type: DbEndorsement})\n                \n            \n\n            \n                \n                    Defined in src/endorsement/endorsement.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoOwnerOrUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllEndorsements\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllEndorsements(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@ApiOperation({operationId: 'findAllEndorsements', summary: 'Finds all endorsements and paginates them'})@ApiPaginatedResponse(DbEndorsement)@ApiOkResponse({type: DbEndorsement})\n                \n            \n\n            \n                \n                    Defined in src/endorsement/endorsement.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllEndorsementsByRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllEndorsementsByRepo(owner: string, repo: string, pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/repos/:owner/:repo')@ApiOperation({operationId: 'findAllEndorsementsByRepo', summary: 'Finds all endorsements by repo owner or username and paginates them'})@ApiPaginatedResponse(DbEndorsement)@ApiOkResponse({type: DbEndorsement})\n                \n            \n\n            \n                \n                    Defined in src/endorsement/endorsement.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserCreatedEndorsements\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserCreatedEndorsements(username: string, pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/user/:username/created')@ApiOperation({operationId: 'findAllUserReceivedEndorsements', summary: 'Finds all endorsements received by the user and paginates them'})@ApiPaginatedResponse(DbEndorsement)@ApiOkResponse({type: DbEndorsement})\n                \n            \n\n            \n                \n                    Defined in src/endorsement/endorsement.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserReceivedEndorsements\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserReceivedEndorsements(username: string, pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/user/:username/received')@ApiOperation({operationId: 'findAllUserReceivedEndorsements', summary: 'Finds all endorsements received by the user and paginates them'})@ApiPaginatedResponse(DbEndorsement)@ApiOkResponse({type: DbEndorsement})\n                \n            \n\n            \n                \n                    Defined in src/endorsement/endorsement.controller.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findEndorsementById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findEndorsementById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({operationId: 'findEndorsementById', summary: 'Retrieves the endorsement based on ID'})@ApiOkResponse({type: DbEndorsement})@ApiNotFoundResponse({description: 'Endorsement not found'})\n                \n            \n\n            \n                \n                    Defined in src/endorsement/endorsement.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete, Query, UseGuards, Headers } from \"@nestjs/common\";\nimport { ApiBody, ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { UserService } from \"../user/user.service\";\n\nimport { EndorsementService } from \"./endorsement.service\";\nimport { CreateEndorsementDto } from \"./dto/create-endorsement.dto\";\nimport { DbEndorsement } from \"./entities/endorsement.entity\";\nimport { EndorsementTokenGuard } from \"./endorsement-token.guard\";\n\n@Controller(\"endorsements\")\n@ApiTags(\"Endorsements service\")\nexport class EndorsementController {\n  constructor(private readonly endorsementService: EndorsementService, private readonly userService: UserService) {}\n\n  @Post(\"/\")\n  @UseGuards(EndorsementTokenGuard)\n  @ApiOperation({\n    operationId: \"createEndorsement\",\n    summary: \"Creates a new endorsement record\",\n  })\n  @ApiOkResponse({ type: DbEndorsement })\n  @ApiBody({ type: CreateEndorsementDto })\n  async createEndorsement(\n    @Headers(\"X-OpenSauced-token\") _token: string,\n    @Body() createEndorsementDto: CreateEndorsementDto\n  ) {\n    return this.endorsementService.create(createEndorsementDto);\n  }\n\n  @Get(\"/\")\n  @ApiOperation({\n    operationId: \"findAllEndorsements\",\n    summary: \"Finds all endorsements and paginates them\",\n  })\n  @ApiPaginatedResponse(DbEndorsement)\n  @ApiOkResponse({ type: DbEndorsement })\n  async findAllEndorsements(@Query() pageOptionsDto: PageOptionsDto) {\n    return this.endorsementService.findAll(pageOptionsDto);\n  }\n\n  @Get(\"/repos/:repoOwnerOrUser\")\n  @ApiOperation({\n    operationId: \"findAllByRepoOwnerOrUsername\",\n    summary: \"Finds all endorsements by repo org or username and paginates them\",\n  })\n  @ApiPaginatedResponse(DbEndorsement)\n  @ApiOkResponse({ type: DbEndorsement })\n  async findAllByRepoOwnerOrUsername(\n    @Param(\"repoOwnerOrUser\") repoOwnerOrUser: string,\n    @Query() pageOptionsDto: PageOptionsDto\n  ) {\n    return this.endorsementService.findAllByRepoOwnerOrUser(repoOwnerOrUser, pageOptionsDto);\n  }\n\n  @Get(\"/repos/:owner/:repo\")\n  @ApiOperation({\n    operationId: \"findAllEndorsementsByRepo\",\n    summary: \"Finds all endorsements by repo owner or username and paginates them\",\n  })\n  @ApiPaginatedResponse(DbEndorsement)\n  @ApiOkResponse({ type: DbEndorsement })\n  async findAllEndorsementsByRepo(\n    @Param(\"owner\") owner: string,\n    @Param(\"repo\") repo: string,\n    @Query() pageOptionsDto: PageOptionsDto\n  ) {\n    return this.endorsementService.findAllEndorsementsByRepo(owner, repo, pageOptionsDto);\n  }\n\n  /*\n   * @Get(\"/repos/:owner/:repo/byUser\")\n   * @ApiOperation({\n   *   operationId: \"findAllEndorsementsByRepoByUser\",\n   *   summary: \"Finds all endorsements by repo owner grouped by user\",\n   * })\n   * @ApiOkResponse({ type: DbEndorsement })\n   * async findAllEndorsementsByRepoByUser (\n   * @Param(\"owner\") owner: string,\n   *   @Param(\"repo\") repo: string,\n   *   @Query() pageOptionsDto: PageOptionsDto,\n   * ) {\n   *   return this.endorsementService.findAllEndorsementsByRepoByUser(owner, repo, pageOptionsDto);\n   * }\n   */\n\n  @Get(\":id\")\n  @ApiOperation({\n    operationId: \"findEndorsementById\",\n    summary: \"Retrieves the endorsement based on ID\",\n  })\n  @ApiOkResponse({ type: DbEndorsement })\n  @ApiNotFoundResponse({ description: \"Endorsement not found\" })\n  async findEndorsementById(@Param(\"id\") id: string) {\n    return this.endorsementService.findOneById(id);\n  }\n\n  @Get(\"/user/:username/created\")\n  @ApiOperation({\n    operationId: \"findAllUserReceivedEndorsements\",\n    summary: \"Finds all endorsements received by the user and paginates them\",\n  })\n  @ApiPaginatedResponse(DbEndorsement)\n  @ApiOkResponse({ type: DbEndorsement })\n  async findAllUserCreatedEndorsements(@Param(\"username\") username: string, @Query() pageOptionsDto: PageOptionsDto) {\n    const user = await this.userService.findOneByUsername(username);\n\n    return this.endorsementService.findAllByCreatorUserId(user.id, pageOptionsDto);\n  }\n\n  @Get(\"/user/:username/received\")\n  @ApiOperation({\n    operationId: \"findAllUserReceivedEndorsements\",\n    summary: \"Finds all endorsements received by the user and paginates them\",\n  })\n  @ApiPaginatedResponse(DbEndorsement)\n  @ApiOkResponse({ type: DbEndorsement })\n  async findAllUserReceivedEndorsements(@Param(\"username\") username: string, @Query() pageOptionsDto: PageOptionsDto) {\n    const user = await this.userService.findOneByUsername(username);\n\n    return this.endorsementService.findAllByRecipientUserId(user.id, pageOptionsDto);\n  }\n\n  @Delete(\":id\")\n  @ApiOperation({\n    operationId: \"deleteEndoresementById\",\n    summary: \"Finds ands deletes the endorsement by ID\",\n  })\n  @ApiNotFoundResponse({ description: \"Endorsement not found\" })\n  async deleteEndoresementById(@Param(\"id\") id: string) {\n    return this.endorsementService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EndorsementModule.html":{"url":"modules/EndorsementModule.html","title":"module - EndorsementModule","body":"\n                   \n\n\n\n\n    Modules\n    EndorsementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EndorsementModule\n\n\n\ncluster_EndorsementModule_imports\n\n\n\ncluster_EndorsementModule_exports\n\n\n\ncluster_EndorsementModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nEndorsementModule\n\nEndorsementModule\n\nEndorsementModule -->\n\nAuthModule->EndorsementModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nEndorsementModule -->\n\nUserModule->EndorsementModule\n\n\n\n\n\nEndorsementService \n\nEndorsementService \n\nEndorsementService  -->\n\nEndorsementModule->EndorsementService \n\n\n\n\n\nEndorsementService\n\nEndorsementService\n\nEndorsementModule -->\n\nEndorsementService->EndorsementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/endorsement/endorsement.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EndorsementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EndorsementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EndorsementService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { EndorsementService } from \"./endorsement.service\";\nimport { EndorsementController } from \"./endorsement.controller\";\nimport { DbEndorsement } from \"./entities/endorsement.entity\";\nimport { UserModule } from \"../user/user.module\";\nimport { AuthModule } from \"../auth/auth.module\";\nimport { EndorsementTokenGuard } from \"./endorsement-token.guard\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbEndorsement], \"ApiConnection\"), UserModule, AuthModule],\n  controllers: [EndorsementController],\n  providers: [EndorsementService, EndorsementTokenGuard],\n  exports: [EndorsementService],\n})\nexport class EndorsementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndorsementService.html":{"url":"injectables/EndorsementService.html","title":"injectable - EndorsementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EndorsementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endorsement/endorsement.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllByCreatorUserId\n                            \n                            \n                                    Async\n                                findAllByRecipientUserId\n                            \n                            \n                                    Async\n                                findAllByRepoOwnerOrUser\n                            \n                            \n                                    Async\n                                findAllEndorsementsByRepo\n                            \n                            \n                                    Async\n                                findAllEndorsementsByRepoByUser\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(endorsementRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/endorsement/endorsement.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endorsementRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/endorsement/endorsement.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createEndorsementDto: CreateEndorsementDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endorsement/endorsement.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEndorsementDto\n                                    \n                                                CreateEndorsementDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endorsement/endorsement.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByCreatorUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByCreatorUserId(userId: number, pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endorsement/endorsement.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByRecipientUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByRecipientUserId(userId: number, pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endorsement/endorsement.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByRepoOwnerOrUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByRepoOwnerOrUser(repoOwnerOrUser: string, pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endorsement/endorsement.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoOwnerOrUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllEndorsementsByRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllEndorsementsByRepo(owner: string, repo: string, pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endorsement/endorsement.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllEndorsementsByRepoByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllEndorsementsByRepoByUser(owner: string, repo: string, pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endorsement/endorsement.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endorsement/endorsement.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endorsement/endorsement.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\n\nimport { CreateEndorsementDto } from \"./dto/create-endorsement.dto\";\nimport { DbEndorsement } from \"./entities/endorsement.entity\";\n\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Injectable()\nexport class EndorsementService {\n  constructor(\n    @InjectRepository(DbEndorsement, \"ApiConnection\")\n    private endorsementRepository: Repository\n  ) {}\n\n  baseQueryBuilder() {\n    return this.endorsementRepository.createQueryBuilder(\"endorsements\");\n  }\n\n  async create(createEndorsementDto: CreateEndorsementDto) {\n    return this.endorsementRepository.save(createEndorsementDto);\n  }\n\n  async findAll(pageOptionsDto: PageOptionsDto) {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.orderBy(\"endorsements.created_at\", \"DESC\");\n\n    queryBuilder.offset(pageOptionsDto.skip).limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async findAllByCreatorUserId(userId: number, pageOptionsDto: PageOptionsDto) {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"endorsements.creator_user_id = :userId\", { userId }).orderBy(\"endorsements.created_at\", \"DESC\");\n\n    queryBuilder.offset(pageOptionsDto.skip).limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async findAllByRecipientUserId(userId: number, pageOptionsDto: PageOptionsDto) {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"endorsements.recipient_user_id = :userId\", { userId })\n      .orderBy(\"endorsements.created_at\", \"DESC\");\n\n    queryBuilder.offset(pageOptionsDto.skip).limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async findAllByRepoOwnerOrUser(repoOwnerOrUser: string, pageOptionsDto: PageOptionsDto) {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .innerJoin(\"repos\", \"repos\", \"endorsements.repo_id=repos.id\")\n      .leftJoin(\"users\", \"users\", \"endorsements.recipient_user_id=users.id\")\n      .where(\"LOWER(repos.full_name) LIKE ':ownerOrUser/%'\", { ownerOrUser: repoOwnerOrUser.toLowerCase() })\n      .orWhere(\"LOWER(users.login) = :user\", { user: repoOwnerOrUser.toLowerCase() })\n      .orderBy(\"endorsements.created_at\", \"DESC\");\n\n    queryBuilder.offset(pageOptionsDto.skip).limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async findAllEndorsementsByRepo(owner: string, repo: string, pageOptionsDto: PageOptionsDto) {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .innerJoin(\"repos\", \"repos\", \"endorsements.repo_id=repos.id\")\n      .where(\"LOWER(repos.full_name) = :repo\", { repo: `${owner}/${repo}`.toLowerCase() })\n      .orderBy(\"endorsements.created_at\", \"DESC\");\n\n    queryBuilder.offset(pageOptionsDto.skip).limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async findAllEndorsementsByRepoByUser(owner: string, repo: string, pageOptionsDto: PageOptionsDto) {\n    const queryBuilder = this.endorsementRepository.manager.createQueryBuilder();\n\n    queryBuilder\n      .from(DbEndorsement, \"endorsements\")\n      .innerJoin(\"repos\", \"repos\", \"endorsements.repo_id=repos.id\")\n      .leftJoin(\"users\", \"users\", \"endorsements.repo_id=users.id\")\n      .select(\"users.login\")\n      .addSelect(\"\", \"endorsements\")\n      .where(\"LOWER(repos.full_name) = :repo\", { repo: `${owner}/${repo}`.toLowerCase() })\n      .groupBy(\"users.login\")\n      .orderBy(\"endorsements.created_at\", \"DESC\");\n\n    queryBuilder.offset(pageOptionsDto.skip).limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async findOneById(id: string) {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"endorsements.id = :id\", { id });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async remove(id: string) {\n    await this.endorsementRepository.softDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EndorsementTokenGuard.html":{"url":"guards/EndorsementTokenGuard.html","title":"guard - EndorsementTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EndorsementTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/endorsement/endorsement-token.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/endorsement/endorsement-token.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(host: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/endorsement/endorsement-token.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\n\n@Injectable()\nexport class EndorsementTokenGuard implements CanActivate {\n  constructor(private configService: ConfigService) {}\n\n  canActivate(host: ExecutionContext) {\n    const apiToken = this.configService.get(\"api.endorsementServiceToken\");\n    const ctx = host.switchToHttp();\n    const request: { headers: Record } = ctx.getRequest();\n    const token = request.headers[\"x-opensauced-token\"];\n\n    if (!apiToken) {\n      return false;\n    }\n\n    const isValid = token === apiToken;\n\n    if (!isValid) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterOptionsDto.html":{"url":"classes/FilterOptionsDto.html","title":"class - FilterOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/filter-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                filter\n                            \n                            \n                                    Readonly\n                                    Optional\n                                repo\n                            \n                            \n                                    Readonly\n                                    Optional\n                                repoIds\n                            \n                            \n                                    Readonly\n                                    Optional\n                                topic\n                            \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InsightFilterFieldsEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: InsightFilterFieldsEnum, enumName: 'InsightFilterFieldsEnum'})@IsEnum(InsightFilterFieldsEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/filter-options.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', example: 'open-sauced/insights'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/filter-options.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        repoIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/filter-options.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        topic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', default: ''})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/filter-options.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 1000, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(10000)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Range in days', default: 30})@Type(undefined)@IsIn(['7', '30', '90'])@IsInt()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:43\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsString, IsOptional, IsEnum } from \"class-validator\";\n\nimport { InsightFilterFieldsEnum } from \"../../insight/dtos/insight-options.dto\";\nimport { PageOptionsDto } from \"./page-options.dto\";\n\nexport class FilterOptionsDto extends PageOptionsDto {\n  @ApiPropertyOptional({\n    enum: InsightFilterFieldsEnum,\n    enumName: \"InsightFilterFieldsEnum\",\n  })\n  @IsEnum(InsightFilterFieldsEnum)\n  @IsOptional()\n  readonly filter?: InsightFilterFieldsEnum;\n\n  @ApiPropertyOptional({\n    type: \"string\",\n    default: \"\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly topic?: string;\n\n  @ApiPropertyOptional({\n    type: \"string\",\n    example: \"open-sauced/insights\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly repo?: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  readonly repoIds?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateCodeExplanationDto.html":{"url":"classes/GenerateCodeExplanationDto.html","title":"class - GenerateCodeExplanationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateCodeExplanationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/dtos/create-code-explanation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                descriptionLength\n                            \n                            \n                                language\n                            \n                            \n                                temperature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Code', type: String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-code-explanation.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description Length', type: Number, example: 250})@IsNumber()@Min(100)@Max(500)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-code-explanation.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description Language', type: String, example: 'english', default: 'english'})@IsString()@IsIn(['english', 'spanish', 'french', 'german', 'italian', 'portuguese', 'dutch', 'russian', 'chinese', 'korean'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-code-explanation.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temperature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description Temperature', type: Number, example: 7})@IsNumber()@Min(0)@Max(10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-code-explanation.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNumber, IsString, Max, Min, IsIn } from \"class-validator\";\n\nexport class GenerateCodeExplanationDto {\n  @ApiProperty({\n    description: \"Description Length\",\n    type: Number,\n    example: 250,\n  })\n  @IsNumber()\n  @Min(100)\n  @Max(500)\n  descriptionLength: number;\n\n  @ApiProperty({\n    description: \"Description Temperature\",\n    type: Number,\n    example: 7,\n  })\n  @IsNumber()\n  @Min(0)\n  @Max(10)\n  temperature: number;\n\n  @ApiProperty({\n    description: \"Description Language\",\n    type: String,\n    example: \"english\",\n    default: \"english\",\n  })\n  @IsString()\n  @IsIn([\"english\", \"spanish\", \"french\", \"german\", \"italian\", \"portuguese\", \"dutch\", \"russian\", \"chinese\", \"korean\"])\n  language: string;\n\n  @ApiProperty({\n    description: \"Code\",\n    type: String,\n  })\n  @IsString()\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateCodeRefactorSuggestionDto.html":{"url":"classes/GenerateCodeRefactorSuggestionDto.html","title":"class - GenerateCodeRefactorSuggestionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateCodeRefactorSuggestionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/dtos/create-code-refactor-suggestion.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                descriptionLength\n                            \n                            \n                                language\n                            \n                            \n                                temperature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Code', type: String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-code-refactor-suggestion.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Suggestion Length', type: Number, example: 250})@IsNumber()@Min(100)@Max(500)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-code-refactor-suggestion.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Suggestion Language', type: String, example: 'english', default: 'english'})@IsString()@IsIn(['english', 'spanish', 'french', 'german', 'italian', 'portuguese', 'dutch', 'russian', 'chinese', 'korean'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-code-refactor-suggestion.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temperature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description Temperature', type: Number, example: 7})@IsNumber()@Min(0)@Max(10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-code-refactor-suggestion.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsIn, IsNumber, IsString, Max, Min } from \"class-validator\";\n\nexport class GenerateCodeRefactorSuggestionDto {\n  @ApiProperty({\n    description: \"Suggestion Length\",\n    type: Number,\n    example: 250,\n  })\n  @IsNumber()\n  @Min(100)\n  @Max(500)\n  descriptionLength: number;\n\n  @ApiProperty({\n    description: \"Description Temperature\",\n    type: Number,\n    example: 7,\n  })\n  @IsNumber()\n  @Min(0)\n  @Max(10)\n  temperature: number;\n\n  @ApiProperty({\n    description: \"Suggestion Language\",\n    type: String,\n    example: \"english\",\n    default: \"english\",\n  })\n  @IsString()\n  @IsIn([\"english\", \"spanish\", \"french\", \"german\", \"italian\", \"portuguese\", \"dutch\", \"russian\", \"chinese\", \"korean\"])\n  language: string;\n\n  @ApiProperty({\n    description: \"Code\",\n    type: String,\n  })\n  @IsString()\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateCodeTestSuggestionDto.html":{"url":"classes/GenerateCodeTestSuggestionDto.html","title":"class - GenerateCodeTestSuggestionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateCodeTestSuggestionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/dtos/create-code-test-suggestion.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                descriptionLength\n                            \n                            \n                                temperature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Code', type: String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-code-test-suggestion.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Suggestion Length', type: Number, example: 250})@IsNumber()@Min(100)@Max(500)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-code-test-suggestion.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temperature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description Temperature', type: Number, example: 7})@IsNumber()@Min(0)@Max(10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-code-test-suggestion.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNumber, IsString, Max, Min } from \"class-validator\";\n\nexport class GenerateCodeTestSuggestionDto {\n  @ApiProperty({\n    description: \"Suggestion Length\",\n    type: Number,\n    example: 250,\n  })\n  @IsNumber()\n  @Min(100)\n  @Max(500)\n  descriptionLength: number;\n\n  @ApiProperty({\n    description: \"Description Temperature\",\n    type: Number,\n    example: 7,\n  })\n  @IsNumber()\n  @Min(0)\n  @Max(10)\n  temperature: number;\n\n  @ApiProperty({\n    description: \"Code\",\n    type: String,\n  })\n  @IsString()\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeneratePullRequestDescriptionDto.html":{"url":"classes/GeneratePullRequestDescriptionDto.html","title":"class - GeneratePullRequestDescriptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeneratePullRequestDescriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/dtos/create-pull-request-description.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                commitMessages\n                            \n                            \n                                descriptionLength\n                            \n                            \n                                    Optional\n                                diff\n                            \n                            \n                                language\n                            \n                            \n                                temperature\n                            \n                            \n                                tone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        commitMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'PR Commit Messages', type: String, isArray: true, example: undefined})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-pull-request-description.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description Length', type: Number, example: 250})@IsNumber()@Min(100)@Max(500)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-pull-request-description.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        diff\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'PR Diff', type: String})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-pull-request-description.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description Language', type: String, example: 'english', default: 'english'})@IsString()@IsIn(['english', 'spanish', 'french', 'german', 'italian', 'portuguese', 'dutch', 'russian', 'chinese', 'korean'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-pull-request-description.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temperature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description Temperature', type: Number, example: 7})@IsNumber()@Min(0)@Max(10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-pull-request-description.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description Tone', type: String, example: 'formal'})@IsString()@IsIn(['exciting', 'persuasive', 'informative', 'humorous', 'formal'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/create-pull-request-description.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsIn, IsNumber, IsOptional, IsString, Max, Min } from \"class-validator\";\n\nexport class GeneratePullRequestDescriptionDto {\n  @ApiProperty({\n    description: \"Description Length\",\n    type: Number,\n    example: 250,\n  })\n  @IsNumber()\n  @Min(100)\n  @Max(500)\n  descriptionLength: number;\n\n  @ApiProperty({\n    description: \"Description Temperature\",\n    type: Number,\n    example: 7,\n  })\n  @IsNumber()\n  @Min(0)\n  @Max(10)\n  temperature: number;\n\n  @ApiProperty({\n    description: \"Description Tone\",\n    type: String,\n    example: \"formal\",\n  })\n  @IsString()\n  @IsIn([\"exciting\", \"persuasive\", \"informative\", \"humorous\", \"formal\"])\n  tone: string;\n\n  @ApiProperty({\n    description: \"Description Language\",\n    type: String,\n    example: \"english\",\n    default: \"english\",\n  })\n  @IsString()\n  @IsIn([\"english\", \"spanish\", \"french\", \"german\", \"italian\", \"portuguese\", \"dutch\", \"russian\", \"chinese\", \"korean\"])\n  language: string;\n\n  @ApiPropertyOptional({\n    description: \"PR Diff\",\n    type: String,\n  })\n  @IsString()\n  @IsOptional()\n  diff?: string;\n\n  @ApiPropertyOptional({\n    description: \"PR Commit Messages\",\n    type: String,\n    isArray: true,\n    example: [\"chore: fixed a bug with the UI\", \"style: added some rounded corners to some boxes\"],\n  })\n  @IsOptional()\n  commitMessages?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service() {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")!),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")!),\n      async () =>\n        this.disk.checkStorage(\"disk.usage\", {\n          thresholdPercent: this.configService.get(\"disk_percentage\")!,\n          path: \"/\",\n        }),\n      async () =>\n        this.disk.checkStorage(\"disk.storage\", {\n          thresholdPercent: this.configService.get(\"disk_size\")!,\n          path: \"/\",\n        }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web() {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")!),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")!),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")!),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")!),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")!),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")!),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HighlightController.html":{"url":"controllers/HighlightController.html","title":"controller - HighlightController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HighlightController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/highlight/highlight.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                highlights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllHighlightRepos\n                            \n                            \n                                    Async\n                                findAllHighlights\n                            \n                            \n                                    Async\n                                getAllHighlightReactions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllHighlightRepos\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllHighlightRepos(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/repos/list')@ApiOperation({operationId: 'findAllHighlightRepos', summary: 'Finds all highlight repos and paginates them'})@ApiPaginatedResponse(DbUserHighlightRepo)@ApiOkResponse({type: DbUserHighlightRepo})\n                \n            \n\n            \n                \n                    Defined in src/highlight/highlight.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllHighlights\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllHighlights(pageOptionsDto: HighlightOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@ApiOperation({operationId: 'findAllHighlights', summary: 'Finds all highlights and paginates them'})@ApiPaginatedResponse(DbUserHighlight)@ApiOkResponse({type: DbUserHighlight})\n                \n            \n\n            \n                \n                    Defined in src/highlight/highlight.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                HighlightOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllHighlightReactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllHighlightReactions(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/reactions')@ApiOperation({operationId: 'getAllHighlightReactions', summary: 'Retrieves total reactions for a highlight'})@ApiOkResponse({type: DbUserHighlightReactionResponse})@ApiNotFoundResponse({description: 'Unable to get user highlight reactions'})@ApiBadRequestResponse({description: 'Invalid request'})\n                \n            \n\n            \n                \n                    Defined in src/highlight/highlight.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, ParseIntPipe, Query } from \"@nestjs/common\";\nimport { ApiOperation, ApiOkResponse, ApiTags, ApiBadRequestResponse, ApiNotFoundResponse } from \"@nestjs/swagger\";\n\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { DbUserHighlightReactionResponse, HighlightOptionsDto } from \"./dtos/highlight-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\nimport { DbUserHighlight } from \"../user/entities/user-highlight.entity\";\nimport { DbUserHighlightRepo } from \"./entities/user-highlight-repo.entity\";\nimport { UserHighlightsService } from \"../user/user-highlights.service\";\n\n@Controller(\"highlights\")\n@ApiTags(\"Highlights service\")\nexport class HighlightController {\n  constructor(private readonly userHighlightsService: UserHighlightsService) {}\n\n  @Get(\"/list\")\n  @ApiOperation({\n    operationId: \"findAllHighlights\",\n    summary: \"Finds all highlights and paginates them\",\n  })\n  @ApiPaginatedResponse(DbUserHighlight)\n  @ApiOkResponse({ type: DbUserHighlight })\n  async findAllHighlights(@Query() pageOptionsDto: HighlightOptionsDto): Promise> {\n    return this.userHighlightsService.findAll(pageOptionsDto);\n  }\n\n  @Get(\"/repos/list\")\n  @ApiOperation({\n    operationId: \"findAllHighlightRepos\",\n    summary: \"Finds all highlight repos and paginates them\",\n  })\n  @ApiPaginatedResponse(DbUserHighlightRepo)\n  @ApiOkResponse({ type: DbUserHighlightRepo })\n  async findAllHighlightRepos(@Query() pageOptionsDto: PageOptionsDto): Promise> {\n    return this.userHighlightsService.findAllHighlightRepos(pageOptionsDto);\n  }\n\n  @Get(\"/:id/reactions\")\n  @ApiOperation({\n    operationId: \"getAllHighlightReactions\",\n    summary: \"Retrieves total reactions for a highlight\",\n  })\n  @ApiOkResponse({ type: DbUserHighlightReactionResponse })\n  @ApiNotFoundResponse({ description: \"Unable to get user highlight reactions\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  async getAllHighlightReactions(@Param(\"id\", ParseIntPipe) id: number): Promise {\n    return this.userHighlightsService.findAllHighlightReactions(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HighlightModule.html":{"url":"modules/HighlightModule.html","title":"module - HighlightModule","body":"\n                   \n\n\n\n\n    Modules\n    HighlightModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HighlightModule\n\n\n\ncluster_HighlightModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nHighlightModule\n\nHighlightModule\n\nHighlightModule -->\n\nUserModule->HighlightModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/highlight/highlight.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HighlightController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { HighlightController } from \"./highlight.controller\";\nimport { DbUserHighlight } from \"../user/entities/user-highlight.entity\";\nimport { UserModule } from \"../user/user.module\";\n\n@Module({\n  controllers: [HighlightController],\n  imports: [TypeOrmModule.forFeature([DbUserHighlight], \"ApiConnection\"), UserModule],\n})\nexport class HighlightModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HighlightOptionsDto.html":{"url":"classes/HighlightOptionsDto.html","title":"class - HighlightOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HighlightOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/highlight/dtos/highlight-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                repo\n                            \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Highlight Repo Filter', example: 'open-sauced/insights'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/highlight/dtos/highlight-options.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 1000, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(10000)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Range in days', default: 30})@Type(undefined)@IsIn(['7', '30', '90'])@IsInt()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:43\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PickType } from \"@nestjs/swagger\";\nimport { IsOptional, IsString } from \"class-validator\";\nimport { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\nimport { DbUserHighlightReaction } from \"../../user/entities/user-highlight-reaction.entity\";\n\nexport class HighlightOptionsDto extends PageOptionsDto {\n  @ApiPropertyOptional({\n    description: \"Highlight Repo Filter\",\n    example: \"open-sauced/insights\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly repo?: string;\n}\n\nexport class DbUserHighlightReactionResponse extends PickType(DbUserHighlightReaction, [\n  \"emoji_id\",\n  \"reaction_count\",\n]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpLoggerMiddleware.html":{"url":"injectables/HttpLoggerMiddleware.html","title":"injectable - HttpLoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpLoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middleware/http-logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middleware/http-logger.middleware.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(`HTTP`)\n                    \n                \n                    \n                        \n                                Defined in src/common/middleware/http-logger.middleware.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from \"@nestjs/common\";\nimport { clc } from \"@nestjs/common/utils/cli-colors.util\";\nimport { Request, Response, NextFunction } from \"express\";\n\nimport { cliDuration } from \"../util/cli-duration\";\n\n@Injectable()\nexport class HttpLoggerMiddleware implements NestMiddleware {\n  private logger = new Logger(`HTTP`);\n\n  use(request: Request, response: Response, next: NextFunction) {\n    const startTime = Date.now();\n\n    response.on(\"finish\", () => {\n      const { method, originalUrl } = request;\n      const { statusCode, statusMessage } = response;\n\n      const message = `${method} ${originalUrl} ${statusCode} ${statusMessage}`;\n\n      if (statusCode >= 500) {\n        return this.logger.error(cliDuration(startTime, clc.red(message)));\n      }\n\n      if (statusCode >= 400) {\n        return this.logger.warn(cliDuration(startTime, clc.magentaBright(message)));\n      }\n\n      return this.logger.log(cliDuration(startTime, message));\n    });\n\n    next();\n  }\n}\n\nexport default HttpLoggerMiddleware;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InsightController.html":{"url":"controllers/InsightController.html","title":"controller - InsightController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InsightController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/insight.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                insights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findInsightPageById\n                            \n                            \n                                    Async\n                                removeInsightForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findInsightPageById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findInsightPageById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'findInsightPageById', summary: 'Finds a insight page by :id'})@ApiOkResponse({type: DbInsight})@ApiNotFoundResponse({description: 'Insight page not found'})@ApiUnauthorizedResponse({description: 'Not Authorized to view this Insight'})\n                \n            \n\n            \n                \n                    Defined in src/insight/insight.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeInsightForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeInsightForUser(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@ApiOperation({operationId: 'removeInsightForUser', summary: 'Removes an insight page for the authenticated user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbInsight})@ApiNotFoundResponse({description: 'Unable to remove user insight'})@ApiBadRequestResponse({description: 'Invalid request'})@ApiBody({type: UpdateInsightDto})\n                \n            \n\n            \n                \n                    Defined in src/insight/insight.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, ParseIntPipe, UnauthorizedException, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiOperation,\n  ApiOkResponse,\n  ApiNotFoundResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiBody,\n} from \"@nestjs/swagger\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { UpdateInsightDto } from \"./dtos/update-insight.dto\";\n\nimport { DbInsight } from \"./entities/insight.entity\";\nimport { InsightsService } from \"./insights.service\";\n\n@Controller(\"insights\")\n@ApiTags(\"Insights service\")\nexport class InsightController {\n  constructor(private readonly insightsService: InsightsService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"findInsightPageById\",\n    summary: \"Finds a insight page by :id\",\n  })\n  @ApiOkResponse({ type: DbInsight })\n  @ApiNotFoundResponse({ description: \"Insight page not found\" })\n  @ApiUnauthorizedResponse({ description: \"Not Authorized to view this Insight\" })\n  async findInsightPageById(@Param(\"id\", ParseIntPipe) id: number): Promise {\n    return this.insightsService.findOneById(id);\n  }\n\n  @Delete(\"/:id\")\n  @ApiOperation({\n    operationId: \"removeInsightForUser\",\n    summary: \"Removes an insight page for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbInsight })\n  @ApiNotFoundResponse({ description: \"Unable to remove user insight\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiBody({ type: UpdateInsightDto })\n  async removeInsightForUser(@Param(\"id\", ParseIntPipe) id: number, @UserId() userId: number): Promise {\n    const insight = await this.insightsService.findOneById(id);\n\n    if (Number(insight.user.id) !== userId) {\n      throw new UnauthorizedException();\n    }\n\n    await this.insightsService.removeInsight(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InsightMemberService.html":{"url":"injectables/InsightMemberService.html","title":"injectable - InsightMemberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InsightMemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/insight-member.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addInsightMember\n                            \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                canUserManageInsight\n                            \n                            \n                                    Async\n                                findAllInsightMembers\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                removeInsightMember\n                            \n                            \n                                    Async\n                                updateInsightMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(insightMemberRepository: Repository, insightService: InsightsService)\n                    \n                \n                        \n                            \n                                Defined in src/insight/insight-member.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        insightMemberRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        insightService\n                                                  \n                                                        \n                                                                        InsightsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addInsightMember\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInsightMember(insightMember: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insight-member.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    insightMember\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insight-member.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SelectQueryBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canUserManageInsight\n                        \n                    \n                \n            \n            \n                \n                    \n                    canUserManageInsight(userId: number, insightId: number, accessRoles: string[], checkOwner)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insight-member.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    accessRoles\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    checkOwner\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllInsightMembers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllInsightMembers(pageOptionsDto: PageOptionsDto, insightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insight-member.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insight-member.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeInsightMember\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeInsightMember(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insight-member.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateInsightMember\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInsightMember(id: string, insightMember: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insight-member.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insightMember\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository, SelectQueryBuilder } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\n\nimport { DbInsightMember } from \"./entities/insight-member.entity\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { InsightsService } from \"./insights.service\";\n\n@Injectable()\nexport class InsightMemberService {\n  constructor(\n    @InjectRepository(DbInsightMember, \"ApiConnection\")\n    private insightMemberRepository: Repository,\n    private insightService: InsightsService\n  ) {}\n\n  baseQueryBuilder(): SelectQueryBuilder {\n    const builder = this.insightMemberRepository.createQueryBuilder(\"insight_members\");\n\n    return builder;\n  }\n\n  async findOneById(id: string): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"insight_members.id = :id\", { id });\n\n    const item: DbInsightMember | null = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async addInsightMember(insightMember: Partial) {\n    return this.insightMemberRepository.save(insightMember);\n  }\n\n  async updateInsightMember(id: string, insightMember: Partial) {\n    return this.insightMemberRepository.update(id, insightMember);\n  }\n\n  async removeInsightMember(id: string) {\n    return this.insightMemberRepository.softDelete(id);\n  }\n\n  async canUserManageInsight(\n    userId: number,\n    insightId: number,\n    accessRoles: string[],\n    checkOwner = true\n  ): Promise {\n    const insight = await this.insightService.findOneById(insightId);\n\n    if (checkOwner && Number(insight.user.id) === userId) {\n      return true;\n    }\n\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"insight_members.insight_id = :insightId\", { insightId })\n      .andWhere(\"insight_members.user_id = :userId\", { userId })\n      .andWhere(\"insight_members.access IN (:...accessRoles)\", { accessRoles });\n\n    const item: DbInsightMember | null = await queryBuilder.getOne();\n\n    if (!item) {\n      return false;\n    }\n\n    return true;\n  }\n\n  async findAllInsightMembers(pageOptionsDto: PageOptionsDto, insightId: number): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .addSelect(\"users.name\", \"insight_members_name\")\n      .addSelect(\"insight_members.invitation_email\", \"insight_members_invitation_email\")\n      .innerJoin(\"insights\", \"insights\", \"insight_members.insight_id=insights.id\")\n      .leftJoin(\"users\", \"users\", \"insight_members.user_id=users.id\")\n      .where(\"insight_members.insight_id = :insightId\", { insightId })\n      .orderBy(\"users.name\", \"ASC\");\n\n    queryBuilder.offset(pageOptionsDto.skip).limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InsightOptionsDto.html":{"url":"classes/InsightOptionsDto.html","title":"class - InsightOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InsightOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/dtos/insight-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                filter\n                            \n                            \n                                    Readonly\n                                    Optional\n                                repo\n                            \n                            \n                                    Readonly\n                                    Optional\n                                repoIds\n                            \n                            \n                                    Readonly\n                                    Optional\n                                topic\n                            \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InsightFilterFieldsEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: InsightFilterFieldsEnum, enumName: 'InsightFilterFieldsEnum'})@IsEnum(InsightFilterFieldsEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/dtos/insight-options.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/dtos/insight-options.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        repoIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/dtos/insight-options.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        topic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"javscript\"\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', default: 'javscript'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/dtos/insight-options.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 1000, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(10000)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Range in days', default: 30})@Type(undefined)@IsIn(['7', '30', '90'])@IsInt()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:43\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsEnum, IsOptional, IsString } from \"class-validator\";\n\nimport { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\n\nexport enum InsightFilterFieldsEnum {\n  Recent = \"recent\",\n  Top100 = \"top-100-repos\",\n  MinimumContributors = \"minimum-5-contributors\",\n  MostActive = \"most-active\",\n  MostSpammed = \"most-spammed\",\n}\n\nexport class InsightOptionsDto extends PageOptionsDto {\n  @ApiPropertyOptional({\n    enum: InsightFilterFieldsEnum,\n    enumName: \"InsightFilterFieldsEnum\",\n  })\n  @IsEnum(InsightFilterFieldsEnum)\n  @IsOptional()\n  readonly filter?: InsightFilterFieldsEnum;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  readonly repo?: string;\n\n  @ApiPropertyOptional({\n    type: \"string\",\n    default: \"javscript\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly topic?: string = \"javscript\";\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  readonly repoIds?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InsightPageOptionsDto.html":{"url":"classes/InsightPageOptionsDto.html","title":"class - InsightPageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InsightPageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/dtos/insight-page-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 1000, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(10000)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Range in days', default: 30})@Type(undefined)@IsIn(['7', '30', '90'])@IsInt()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:43\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\n\nexport class InsightPageOptionsDto extends PageOptionsDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InsightRepoService.html":{"url":"injectables/InsightRepoService.html","title":"injectable - InsightRepoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InsightRepoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/insight-repo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addInsightRepo\n                            \n                            \n                                    Async\n                                removeInsightRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(insightRepoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/insight/insight-repo.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        insightRepoRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addInsightRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInsightRepo(insightId: number, repo: RepoInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insight-repo.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                RepoInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeInsightRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeInsightRepo(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insight-repo.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { DbInsightRepo } from \"./entities/insight-repo.entity\";\nimport { RepoInfo } from \"../repo/dtos/repo-info.dto\";\n\n@Injectable()\nexport class InsightRepoService {\n  constructor(\n    @InjectRepository(DbInsightRepo, \"ApiConnection\")\n    private insightRepoRepository: Repository\n  ) {}\n\n  async addInsightRepo(insightId: number, repo: RepoInfo) {\n    return this.insightRepoRepository.save({ insight_id: insightId, repo_id: repo.id, full_name: repo.fullName });\n  }\n\n  async removeInsightRepo(id: number) {\n    return this.insightRepoRepository.softDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InsightsModule.html":{"url":"modules/InsightsModule.html","title":"module - InsightsModule","body":"\n                   \n\n\n\n\n    Modules\n    InsightsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InsightsModule\n\n\n\ncluster_InsightsModule_providers\n\n\n\ncluster_InsightsModule_imports\n\n\n\ncluster_InsightsModule_exports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nInsightsModule\n\nInsightsModule\n\nInsightsModule -->\n\nUserModule->InsightsModule\n\n\n\n\n\nInsightRepoService \n\nInsightRepoService \n\nInsightRepoService  -->\n\nInsightsModule->InsightRepoService \n\n\n\n\n\nInsightsService \n\nInsightsService \n\nInsightsService  -->\n\nInsightsModule->InsightsService \n\n\n\n\n\nInsightMemberService\n\nInsightMemberService\n\nInsightsModule -->\n\nInsightMemberService->InsightsModule\n\n\n\n\n\nInsightRepoService\n\nInsightRepoService\n\nInsightsModule -->\n\nInsightRepoService->InsightsModule\n\n\n\n\n\nInsightsService\n\nInsightsService\n\nInsightsModule -->\n\nInsightsService->InsightsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/insight/insights.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InsightMemberService\n                        \n                        \n                            InsightRepoService\n                        \n                        \n                            InsightsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InsightController\n                        \n                        \n                            UserInsightsController\n                        \n                        \n                            UserInsightMemberController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InsightRepoService\n                        \n                        \n                            InsightsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbInsight } from \"./entities/insight.entity\";\nimport { DbInsightRepo } from \"./entities/insight-repo.entity\";\nimport { DbInsightMember } from \"./entities/insight-member.entity\";\nimport { InsightController } from \"./insight.controller\";\nimport { UserInsightsController } from \"./user-insight.controller\";\nimport { InsightsService } from \"./insights.service\";\nimport { InsightRepoService } from \"./insight-repo.service\";\nimport { UserInsightMemberController } from \"./user-insight-member.controller\";\nimport { InsightMemberService } from \"./insight-member.service\";\nimport { UserModule } from \"../user/user.module\";\n\n@Module({\n  controllers: [InsightController, UserInsightsController, UserInsightMemberController],\n  imports: [TypeOrmModule.forFeature([DbInsight, DbInsightRepo, DbInsightMember], \"ApiConnection\"), UserModule],\n  providers: [InsightsService, InsightRepoService, InsightMemberService],\n  exports: [InsightsService, InsightRepoService],\n})\nexport class InsightsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InsightsService.html":{"url":"injectables/InsightsService.html","title":"injectable - InsightsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InsightsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/insights.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addInsight\n                            \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                removeInsight\n                            \n                            \n                                    Async\n                                updateInsight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(insightRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/insight/insights.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        insightRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addInsight\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInsight(insight: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insights.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    insight\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insights.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SelectQueryBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(pageOptionsDto: InsightPageOptionsDto, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insights.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                InsightPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insights.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeInsight\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeInsight(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insights.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateInsight\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInsight(id: number, insight: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/insight/insights.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insight\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository, SelectQueryBuilder } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\n\nimport { DbInsight } from \"./entities/insight.entity\";\nimport { InsightPageOptionsDto } from \"./dtos/insight-page-options.dto\";\n\n@Injectable()\nexport class InsightsService {\n  constructor(\n    @InjectRepository(DbInsight, \"ApiConnection\")\n    private insightRepository: Repository\n  ) {}\n\n  baseQueryBuilder(): SelectQueryBuilder {\n    const builder = this.insightRepository.createQueryBuilder(\"insights\");\n\n    return builder;\n  }\n\n  async findOneById(id: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"insights.id = :id\", { id })\n      .innerJoinAndSelect(`insights.user`, `user`)\n      .leftJoinAndSelect(`insights.repos`, `insight_repos`, `insights.id=insight_repos.insight_id`);\n\n    const item: DbInsight | null = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async addInsight(insight: Partial) {\n    return this.insightRepository.save(insight);\n  }\n\n  async updateInsight(id: number, insight: Partial) {\n    return this.insightRepository.update(id, insight);\n  }\n\n  async removeInsight(id: number) {\n    return this.insightRepository.softDelete(id);\n  }\n\n  async findAllByUserId(pageOptionsDto: InsightPageOptionsDto, userId: string): Promise> {\n    const queryBuilder = this.insightRepository.createQueryBuilder(\"insights\");\n\n    queryBuilder\n      .where(\"insights.user_id = :userId\", { userId })\n      .orWhere(\n        `:userId IN (\n          SELECT user_id\n          FROM insight_members\n          WHERE insight_id = insights.id\n          AND user_id = :userId\n          AND access != 'pending'\n          AND deleted_at IS NULL\n        )\n      `,\n        { userId }\n      )\n      .leftJoinAndSelect(`insights.repos`, `insight_repos`, `insights.id=insight_repos.insight_id`)\n      .orderBy(\"insights.updated_at\", \"DESC\");\n\n    queryBuilder.skip(pageOptionsDto.skip).take(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogModule.html":{"url":"modules/LogModule.html","title":"module - LogModule","body":"\n                   \n\n\n\n\n    Modules\n    LogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LogModule\n\n\n\ncluster_LogModule_exports\n\n\n\ncluster_LogModule_providers\n\n\n\n\nCustomLogger \n\nCustomLogger \n\n\n\nLogModule\n\nLogModule\n\nCustomLogger  -->\n\nLogModule->CustomLogger \n\n\n\n\n\nCustomLogger\n\nCustomLogger\n\nLogModule -->\n\nCustomLogger->LogModule\n\n\n\n\n\nLogService\n\nLogService\n\nLogModule -->\n\nLogService->LogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/log/log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomLogger\n                        \n                        \n                            LogService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CustomLogger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { LogService } from \"./log.service\";\nimport { DbLog } from \"./log.entity\";\nimport CustomLogger from \"./custom-logger\";\n\n@Module({\n  imports: [ConfigModule, TypeOrmModule.forFeature([DbLog], \"LogConnection\")],\n  providers: [CustomLogger, LogService],\n  exports: [CustomLogger],\n})\nexport class LogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/log/log.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLog(log: CreateLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/log/log.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { DbLog } from \"./log.entity\";\nimport { CreateLogDto } from \"./dtos/create-log.dto\";\n\n@Injectable()\nexport class LogService {\n  constructor(\n    @InjectRepository(DbLog, \"LogConnection\")\n    private logsRepository: Repository\n  ) {}\n\n  async createLog(log: CreateLogDto) {\n    const newLog = this.logsRepository.create(log);\n\n    await this.logsRepository.save(newLog, { data: { isCreatingLogs: true } });\n\n    return newLog;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenAiModule.html":{"url":"modules/OpenAiModule.html","title":"module - OpenAiModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenAiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OpenAiModule\n\n\n\ncluster_OpenAiModule_providers\n\n\n\ncluster_OpenAiModule_exports\n\n\n\n\nOpenAiService \n\nOpenAiService \n\n\n\nOpenAiModule\n\nOpenAiModule\n\nOpenAiService  -->\n\nOpenAiModule->OpenAiService \n\n\n\n\n\nOpenAiService\n\nOpenAiService\n\nOpenAiModule -->\n\nOpenAiService->OpenAiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/open-ai/open-ai.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OpenAiService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OpenAiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { OpenAiService } from \"./open-ai.service\";\n\n@Module({\n  providers: [OpenAiService],\n  exports: [OpenAiService],\n})\nexport class OpenAiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenAiService.html":{"url":"injectables/OpenAiService.html","title":"injectable - OpenAiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpenAiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/open-ai/open-ai.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCompletion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/open-ai/open-ai.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCompletion\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCompletion(systemMessage: string, userMessage: string, temperature: number)\n                \n            \n\n\n            \n                \n                    Defined in src/open-ai/open-ai.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    systemMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    temperature\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Fetch } from \"@supabase/supabase-js/dist/module/lib/types\";\nimport { ConfigService } from \"@nestjs/config\";\n\ninterface ChatResponse {\n  choices: { message: { content: string } }[];\n}\n\n@Injectable()\nexport class OpenAiService {\n  constructor(private configService: ConfigService) {}\n\n  async generateCompletion(systemMessage: string, userMessage: string, temperature: number) {\n    // eslint-disable-next-line\n    const fetcher: Fetch = typeof fetch !== \"undefined\" ? fetch : (require(\"node-fetch\") as Fetch);\n    const response = await fetcher(this.configService.get(\"openai.completionsURL\")!, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${this.configService.get(\"openai.APIKey\")!}`,\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        model: this.configService.get(\"openai.modelName\"),\n        messages: [\n          {\n            role: \"system\",\n            content: systemMessage,\n          },\n          {\n            role: \"user\",\n            content: userMessage,\n          },\n        ],\n        temperature: temperature / 10,\n        n: 1,\n      }),\n    });\n\n    if (response.ok) {\n      const data = (await response.json()) as ChatResponse;\n\n      return data.choices[0]?.message.content;\n    }\n\n    throw new Error(response.statusText);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, ValidateNested } from \"class-validator\";\nimport { PageMetaDto } from \"./page-meta.dto\";\nimport { Type } from \"class-transformer\";\n\nexport class PageDto {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  @ValidateNested({ each: true })\n  @Type(() => Array)\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PageMetaDto })\n  @ValidateNested()\n  @Type(() => PageMetaDto)\n  readonly meta: PageMetaDto;\n\n  constructor(data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                limit\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page-meta.dto.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Flag indicating if there is a next page', example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Flag indicating if there is a previous page', example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of items in the collection', example: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of items per page', example: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The current page', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of pages in the collection', example: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { PageMetaParameters } from \"./page-meta-parameters.dto\";\n\nexport class PageMetaDto {\n  @ApiProperty({\n    description: \"The current page\",\n    example: 1,\n  })\n  readonly page: number;\n\n  @ApiProperty({\n    description: \"The number of items per page\",\n    example: 10,\n  })\n  readonly limit: number;\n\n  @ApiProperty({\n    description: \"The number of items in the collection\",\n    example: 100,\n  })\n  readonly itemCount: number;\n\n  @ApiProperty({\n    description: \"The number of pages in the collection\",\n    example: 10,\n  })\n  readonly pageCount: number;\n\n  @ApiProperty({\n    description: \"Flag indicating if there is a previous page\",\n    example: false,\n  })\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty({\n    description: \"Flag indicating if there is a next page\",\n    example: true,\n  })\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: PageMetaParameters) {\n    this.page = pageOptionsDto.page ?? 1;\n    this.limit = pageOptionsDto.limit ?? 10;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.limit);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageMetaParameters.html":{"url":"interfaces/PageMetaParameters.html","title":"interface - PageMetaParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageMetaParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta-parameters.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            itemCount\n                                        \n                                \n                                \n                                        \n                                            pageOptionsDto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageOptionsDto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageOptionsDto:         PageOptionsDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageOptionsDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PageOptionsDto } from \"./page-options.dto\";\n\nexport interface PageMetaParameters {\n  pageOptionsDto: PageOptionsDto;\n  itemCount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 1000, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(10000)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Range in days', default: 30})@Type(undefined)@IsIn(['7', '30', '90'])@IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dtos/page-options.dto.ts:45\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEnum, IsIn, IsInt, IsOptional, Max, Min } from \"class-validator\";\n\nimport { OrderDirectionEnum } from \"../constants/order-direction.constant\";\n\nexport class PageOptionsDto {\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 1000,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(10000)\n  @IsOptional()\n  readonly limit?: number = 50;\n\n  @ApiPropertyOptional({ enum: OrderDirectionEnum, enumName: \"OrderDirectionEnum\", default: OrderDirectionEnum.DESC })\n  @IsEnum(OrderDirectionEnum)\n  @IsOptional()\n  readonly orderDirection?: OrderDirectionEnum = OrderDirectionEnum.DESC;\n\n  @ApiPropertyOptional({\n    description: \"Range in days\",\n    default: 30,\n  })\n  @Type(() => Number)\n  @IsIn([7, 30, 90])\n  @IsInt()\n  @IsOptional()\n  readonly range?: number = 30;\n\n  get skip(): number {\n    return ((this.page ?? 1) - 1) * (this.limit ?? 50);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PullRequestContributorOptionsDto.html":{"url":"classes/PullRequestContributorOptionsDto.html","title":"class - PullRequestContributorOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PullRequestContributorOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/dtos/pull-request-contributor-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                filter\n                            \n                            \n                                    Readonly\n                                    Optional\n                                repo\n                            \n                            \n                                    Readonly\n                                    Optional\n                                repoIds\n                            \n                            \n                                    Readonly\n                                    Optional\n                                topic\n                            \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InsightFilterFieldsEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: InsightFilterFieldsEnum, enumName: 'InsightFilterFieldsEnum'})@IsEnum(InsightFilterFieldsEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-contributor-options.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', example: 'open-sauced/insights'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-contributor-options.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        repoIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-contributor-options.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        topic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', example: 'javascript'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-contributor-options.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 1000, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(10000)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Range in days', default: 30})@Type(undefined)@IsIn(['7', '30', '90'])@IsInt()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:43\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsEnum, IsOptional, IsString } from \"class-validator\";\n\nimport { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\nimport { InsightFilterFieldsEnum } from \"../../insight/dtos/insight-options.dto\";\n\nexport class PullRequestContributorOptionsDto extends PageOptionsDto {\n  @ApiPropertyOptional({\n    enum: InsightFilterFieldsEnum,\n    enumName: \"InsightFilterFieldsEnum\",\n  })\n  @IsEnum(InsightFilterFieldsEnum)\n  @IsOptional()\n  readonly filter?: InsightFilterFieldsEnum;\n\n  @ApiPropertyOptional({\n    type: \"string\",\n    example: \"javascript\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly topic?: string;\n\n  @ApiPropertyOptional({\n    type: \"string\",\n    example: \"open-sauced/insights\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly repo?: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  readonly repoIds?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PullRequestController.html":{"url":"controllers/PullRequestController.html","title":"controller - PullRequestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PullRequestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/pull-request.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                prs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPullRequestInsights\n                            \n                            \n                                    Async\n                                listAllPullRequests\n                            \n                            \n                                    Async\n                                searchAllPullRequests\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPullRequestInsights\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPullRequestInsights(pageOptionsDto: FilterOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/insights')@ApiOperation({operationId: 'getPullRequestInsights', summary: 'Find pull request insights over the last 2 months'})@ApiOkResponse({type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/pull-requests/pull-request.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                FilterOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listAllPullRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllPullRequests(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@ApiOperation({operationId: 'listAllPullRequests', summary: 'Finds all pull requests and paginates them'})@ApiPaginatedResponse(DbPullRequest)@ApiOkResponse({type: DbPullRequest})\n                \n            \n\n            \n                \n                    Defined in src/pull-requests/pull-request.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        searchAllPullRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    searchAllPullRequests(pageOptionsDto: PullRequestPageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/search')@ApiOperation({operationId: 'searchAllPullRequests', summary: 'Searches pull requests using filters and paginates them'})@ApiPaginatedResponse(DbPullRequest)@ApiOkResponse({type: DbPullRequest})\n                \n            \n\n            \n                \n                    Defined in src/pull-requests/pull-request.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PullRequestPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from \"@nestjs/common\";\nimport { ApiOperation, ApiOkResponse, ApiTags } from \"@nestjs/swagger\";\n\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { DbPullRequest } from \"./entities/pull-request.entity\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { PullRequestService } from \"./pull-request.service\";\nimport { PullRequestPageOptionsDto } from \"./dtos/pull-request-page-options.dto\";\nimport { PullRequestInsightsService } from \"./pull-request-insights.service\";\nimport { DbPRInsight } from \"./entities/pull-request-insight.entity\";\nimport { FilterOptionsDto } from \"../common/dtos/filter-options.dto\";\n\n@Controller(\"prs\")\n@ApiTags(\"Pull Requests service\")\nexport class PullRequestController {\n  constructor(\n    private readonly pullRequestService: PullRequestService,\n    private readonly pullRequestsInsightService: PullRequestInsightsService\n  ) {}\n\n  @Get(\"/list\")\n  @ApiOperation({\n    operationId: \"listAllPullRequests\",\n    summary: \"Finds all pull requests and paginates them\",\n  })\n  @ApiPaginatedResponse(DbPullRequest)\n  @ApiOkResponse({ type: DbPullRequest })\n  async listAllPullRequests(@Query() pageOptionsDto: PageOptionsDto): Promise> {\n    return this.pullRequestService.findAll(pageOptionsDto);\n  }\n\n  @Get(\"/search\")\n  @ApiOperation({\n    operationId: \"searchAllPullRequests\",\n    summary: \"Searches pull requests using filters and paginates them\",\n  })\n  @ApiPaginatedResponse(DbPullRequest)\n  @ApiOkResponse({ type: DbPullRequest })\n  async searchAllPullRequests(@Query() pageOptionsDto: PullRequestPageOptionsDto): Promise> {\n    return this.pullRequestService.findAllWithFilters(pageOptionsDto);\n  }\n\n  @Get(\"/insights\")\n  @ApiOperation({\n    operationId: \"getPullRequestInsights\",\n    summary: \"Find pull request insights over the last 2 months\",\n  })\n  @ApiOkResponse({ type: [DbPRInsight] })\n  async getPullRequestInsights(@Query() pageOptionsDto: FilterOptionsDto): Promise {\n    return Promise.all(\n      [30, 60].map(async (interval) => this.pullRequestsInsightService.getInsight(interval, pageOptionsDto))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PullRequestDescriptionController.html":{"url":"controllers/PullRequestDescriptionController.html","title":"controller - PullRequestDescriptionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PullRequestDescriptionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/pull-request-description.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                prs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generatePRDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generatePRDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePRDescription(generatePullRequestDescriptionDto: GeneratePullRequestDescriptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/description/generate')@ApiOperation({operationId: 'generatePRDescription', summary: 'Generates a PR description based on the provided information'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiBadRequestResponse({description: 'Invalid request'})@ApiBody({type: GeneratePullRequestDescriptionDto})\n                \n            \n\n            \n                \n                    Defined in src/pull-requests/pull-request-description.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generatePullRequestDescriptionDto\n                                    \n                                                GeneratePullRequestDescriptionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Body, Controller, Post, UseGuards } from \"@nestjs/common\";\nimport { ApiOperation, ApiBearerAuth, ApiBadRequestResponse, ApiBody, ApiTags } from \"@nestjs/swagger\";\n\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { GeneratePullRequestDescriptionDto } from \"./dtos/create-pull-request-description.dto\";\nimport { PullRequestDescriptionService } from \"./pull-request-description.service\";\n\n@Controller(\"prs\")\n@ApiTags(\"Pull Requests service\")\nexport class PullRequestDescriptionController {\n  constructor(private pullRequestDescriptionService: PullRequestDescriptionService) {}\n\n  @Post(\"/description/generate\")\n  @ApiOperation({\n    operationId: \"generatePRDescription\",\n    summary: \"Generates a PR description based on the provided information\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiBody({ type: GeneratePullRequestDescriptionDto })\n  async generatePRDescription(@Body() generatePullRequestDescriptionDto: GeneratePullRequestDescriptionDto) {\n    const description = await this.pullRequestDescriptionService.generateDescription(generatePullRequestDescriptionDto);\n\n    if (!description) {\n      throw new BadRequestException();\n    }\n\n    return { description };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PullRequestDescriptionService.html":{"url":"injectables/PullRequestDescriptionService.html","title":"injectable - PullRequestDescriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PullRequestDescriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/pull-request-description.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateDescription\n                            \n                            \n                                    Private\n                                generatePrompt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(openAiService: OpenAiService)\n                    \n                \n                        \n                            \n                                Defined in src/pull-requests/pull-request-description.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        openAiService\n                                                  \n                                                        \n                                                                        OpenAiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateDescription(options: GeneratePullRequestDescriptionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/pull-request-description.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                GeneratePullRequestDescriptionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generatePrompt\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePrompt(language: string, maxLength: number, tone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/pull-request-description.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxLength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { GeneratePullRequestDescriptionDto } from \"./dtos/create-pull-request-description.dto\";\nimport { OpenAiService } from \"../open-ai/open-ai.service\";\n\n@Injectable()\nexport class PullRequestDescriptionService {\n  constructor(private openAiService: OpenAiService) {}\n\n  private generatePrompt(language: string, maxLength: number, tone: string) {\n    return [\n      `Generate an apt github PR description written in present tense and ${tone} tone for the given code diff/commit-messages with the specifications mentioned below`,\n      `Description language: ${language}`,\n      `Description must be a maximum of ${maxLength} characters.`,\n      \"Exclude anything unnecessary such as translation. Your entire response will be passed directly into a pull request description\",\n    ].join(\"\\n\");\n  }\n\n  async generateDescription(options: GeneratePullRequestDescriptionDto) {\n    const content = `${options.diff ? `Diff: ${options.diff}\\n` : \"\"}${\n      options.commitMessages ? `\\nCommit Messages: ${options.commitMessages.join(\",\")}` : \"\"\n    }`;\n\n    try {\n      const completion = this.openAiService.generateCompletion(\n        this.generatePrompt(options.language, options.descriptionLength, options.tone),\n        content,\n        options.temperature\n      );\n\n      return completion;\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        console.error(\"OpenAI error: \", error.message);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PullRequestInsightsService.html":{"url":"injectables/PullRequestInsightsService.html","title":"injectable - PullRequestInsightsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PullRequestInsightsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/pull-request-insights.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                getInsight\n                            \n                            \n                                subQueryCountPrs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prInsightRepository: Repository, repoFilterService: RepoFilterService)\n                    \n                \n                        \n                            \n                                Defined in src/pull-requests/pull-request-insights.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prInsightRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repoFilterService\n                                                  \n                                                        \n                                                                        RepoFilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/pull-request-insights.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getInsight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInsight(interval: number, options: FilterOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/pull-request-insights.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    interval\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                FilterOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subQueryCountPrs\n                        \n                    \n                \n            \n            \n                \nsubQueryCountPrs(qb: SelectQueryBuilder, type: string, interval: number, options: FilterOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/pull-request-insights.service.ts:21\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    qb\n                                    \n                                            SelectQueryBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"all\"\n                                    \n\n                                \n                                \n                                    interval\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                FilterOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { ObjectLiteral, Repository, SelectQueryBuilder } from \"typeorm\";\n\nimport { RepoFilterService } from \"../common/filters/repo-filter.service\";\nimport { DbPRInsight } from \"./entities/pull-request-insight.entity\";\nimport { FilterOptionsDto } from \"../common/dtos/filter-options.dto\";\n\n@Injectable()\nexport class PullRequestInsightsService {\n  constructor(\n    @InjectRepository(DbPRInsight, \"ApiConnection\")\n    private prInsightRepository: Repository,\n    private repoFilterService: RepoFilterService\n  ) {}\n\n  baseQueryBuilder() {\n    return this.prInsightRepository.createQueryBuilder(\"pr\");\n  }\n\n  subQueryCountPrs(\n    qb: SelectQueryBuilder,\n    type = \"all\",\n    interval = 0,\n    options: FilterOptionsDto\n  ) {\n    const prQuery = this.baseQueryBuilder()\n      .select(`COALESCE(COUNT(\"pr\".\"id\"), 0)`)\n      .innerJoin(\"repos\", \"repos\", `\"pr\".\"repo_id\"=\"repos\".\"id\"`);\n\n    const filters = this.repoFilterService.getRepoFilters(options, interval);\n\n    filters.push([`now() - INTERVAL '${interval} days'  {\n    const queryBuilder = this.baseQueryBuilder()\n      .select(`TO_CHAR(now() - INTERVAL '${interval} days', 'YYYY-MM-DD')`, \"day\")\n      .addSelect(`${interval}::INTEGER`, \"interval\")\n      .limit(1);\n\n    [\"all\", \"accepted\", \"spam\"].forEach((type) => {\n      this.subQueryCountPrs(queryBuilder, type, interval, options);\n    });\n\n    queryBuilder.setParameters({ ...options, repoIds: options.repoIds ? options.repoIds.split(\",\") : [] });\n\n    const item: DbPRInsight | undefined = await queryBuilder.getRawOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PullRequestModule.html":{"url":"modules/PullRequestModule.html","title":"module - PullRequestModule","body":"\n                   \n\n\n\n\n    Modules\n    PullRequestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PullRequestModule\n\n\n\ncluster_PullRequestModule_exports\n\n\n\ncluster_PullRequestModule_imports\n\n\n\ncluster_PullRequestModule_providers\n\n\n\n\nOpenAiModule\n\nOpenAiModule\n\n\n\nPullRequestModule\n\nPullRequestModule\n\nPullRequestModule -->\n\nOpenAiModule->PullRequestModule\n\n\n\n\n\nRepoFilterModule\n\nRepoFilterModule\n\nPullRequestModule -->\n\nRepoFilterModule->PullRequestModule\n\n\n\n\n\nPullRequestService \n\nPullRequestService \n\nPullRequestService  -->\n\nPullRequestModule->PullRequestService \n\n\n\n\n\nCodeExplanationService\n\nCodeExplanationService\n\nPullRequestModule -->\n\nCodeExplanationService->PullRequestModule\n\n\n\n\n\nCodeRefactorSuggestionService\n\nCodeRefactorSuggestionService\n\nPullRequestModule -->\n\nCodeRefactorSuggestionService->PullRequestModule\n\n\n\n\n\nCodeTestSuggestionService\n\nCodeTestSuggestionService\n\nPullRequestModule -->\n\nCodeTestSuggestionService->PullRequestModule\n\n\n\n\n\nPullRequestDescriptionService\n\nPullRequestDescriptionService\n\nPullRequestModule -->\n\nPullRequestDescriptionService->PullRequestModule\n\n\n\n\n\nPullRequestInsightsService\n\nPullRequestInsightsService\n\nPullRequestModule -->\n\nPullRequestInsightsService->PullRequestModule\n\n\n\n\n\nPullRequestService\n\nPullRequestService\n\nPullRequestModule -->\n\nPullRequestService->PullRequestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pull-requests/pull-request.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CodeExplanationService\n                        \n                        \n                            CodeRefactorSuggestionService\n                        \n                        \n                            CodeTestSuggestionService\n                        \n                        \n                            PullRequestDescriptionService\n                        \n                        \n                            PullRequestInsightsService\n                        \n                        \n                            PullRequestService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PullRequestController\n                        \n                        \n                            PullRequestDescriptionController\n                        \n                        \n                            CodeRefactorSuggestionController\n                        \n                        \n                            CodeTestSuggestionController\n                        \n                        \n                            CodeExplanationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OpenAiModule\n                        \n                        \n                            RepoFilterModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PullRequestService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { RepoFilterModule } from \"../common/filters/repo-filter.module\";\nimport { DbPRInsight } from \"./entities/pull-request-insight.entity\";\nimport { DbPullRequest } from \"./entities/pull-request.entity\";\nimport { PullRequestInsightsService } from \"./pull-request-insights.service\";\nimport { PullRequestController } from \"./pull-request.controller\";\nimport { PullRequestService } from \"./pull-request.service\";\nimport { PullRequestDescriptionService } from \"./pull-request-description.service\";\nimport { PullRequestDescriptionController } from \"./pull-request-description.controller\";\nimport { CodeRefactorSuggestionController } from \"./code-refactor-suggestion.controller\";\nimport { CodeRefactorSuggestionService } from \"./code-refactor-suggestion.service\";\nimport { CodeTestSuggestionController } from \"./code-test.suggestion.controller\";\nimport { CodeExplanationService } from \"./code-explanation.service\";\nimport { CodeExplanationController } from \"./code-explanation.controller\";\nimport { CodeTestSuggestionService } from \"./code-test-suggestion.service\";\nimport { OpenAiModule } from \"../open-ai/open-ai.module\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbPullRequest, DbPRInsight], \"ApiConnection\"), RepoFilterModule, OpenAiModule],\n  controllers: [\n    PullRequestController,\n    PullRequestDescriptionController,\n    CodeRefactorSuggestionController,\n    CodeTestSuggestionController,\n    CodeExplanationController,\n  ],\n  providers: [\n    PullRequestService,\n    PullRequestInsightsService,\n    PullRequestDescriptionService,\n    CodeRefactorSuggestionService,\n    CodeTestSuggestionService,\n    CodeExplanationService,\n  ],\n  exports: [PullRequestService],\n})\nexport class PullRequestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PullRequestPageOptionsDto.html":{"url":"classes/PullRequestPageOptionsDto.html","title":"class - PullRequestPageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PullRequestPageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/dtos/pull-request-page-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                contributor\n                            \n                            \n                                    Readonly\n                                    Optional\n                                filter\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                repo\n                            \n                            \n                                    Readonly\n                                    Optional\n                                repoIds\n                            \n                            \n                                    Readonly\n                                    Optional\n                                status\n                            \n                            \n                                    Readonly\n                                    Optional\n                                topic\n                            \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        contributor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', example: 'bdougie'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-page-options.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InsightFilterFieldsEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: InsightFilterFieldsEnum, enumName: 'InsightFilterFieldsEnum'})@IsEnum(InsightFilterFieldsEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-page-options.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PullRequestOrderFieldsEnum\n\n                    \n                \n                \n                    \n                        Default value : PullRequestOrderFieldsEnum.updated_at\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: PullRequestOrderFieldsEnum, enumName: 'PullRequestOrderFieldsEnum', default: undefined})@IsEnum(PullRequestOrderFieldsEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-page-options.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', example: 'open-sauced/insights'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-page-options.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        repoIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-page-options.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PullRequestStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: PullRequestStatusEnum, enumName: 'PullRequestStatusEnum'})@IsEnum(PullRequestStatusEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-page-options.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        topic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', example: 'javascript'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pull-requests/dtos/pull-request-page-options.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 1000, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(10000)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Range in days', default: 30})@Type(undefined)@IsIn(['7', '30', '90'])@IsInt()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:43\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsEnum, IsOptional, IsString } from \"class-validator\";\n\nimport { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\nimport { InsightFilterFieldsEnum } from \"../../insight/dtos/insight-options.dto\";\n\nexport enum PullRequestOrderFieldsEnum {\n  created_at = \"created_at\",\n  closed_at = \"closed_at\",\n  merged_at = \"merged_at\",\n  updated_at = \"updated_at\",\n}\n\nexport enum PullRequestStatusEnum {\n  open = \"open\",\n  closed = \"closed\",\n}\n\nexport class PullRequestPageOptionsDto extends PageOptionsDto {\n  @ApiPropertyOptional({\n    enum: PullRequestOrderFieldsEnum,\n    enumName: \"PullRequestOrderFieldsEnum\",\n    default: PullRequestOrderFieldsEnum.updated_at,\n  })\n  @IsEnum(PullRequestOrderFieldsEnum)\n  @IsOptional()\n  readonly orderBy?: PullRequestOrderFieldsEnum = PullRequestOrderFieldsEnum.updated_at;\n\n  @ApiPropertyOptional({\n    enum: InsightFilterFieldsEnum,\n    enumName: \"InsightFilterFieldsEnum\",\n  })\n  @IsEnum(InsightFilterFieldsEnum)\n  @IsOptional()\n  readonly filter?: InsightFilterFieldsEnum;\n\n  @ApiPropertyOptional({\n    type: \"string\",\n    example: \"javascript\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly topic?: string;\n\n  @ApiPropertyOptional({\n    type: \"string\",\n    example: \"open-sauced/insights\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly repo?: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  readonly repoIds?: string;\n\n  @ApiPropertyOptional({\n    enum: PullRequestStatusEnum,\n    enumName: \"PullRequestStatusEnum\",\n  })\n  @IsEnum(PullRequestStatusEnum)\n  @IsOptional()\n  readonly status?: PullRequestStatusEnum;\n\n  @ApiPropertyOptional({\n    type: \"string\",\n    example: \"bdougie\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly contributor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PullRequestService.html":{"url":"injectables/PullRequestService.html","title":"injectable - PullRequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PullRequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pull-requests/pull-request.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllByContributor\n                            \n                            \n                                    Async\n                                findAllContributorsWithFilters\n                            \n                            \n                                    Async\n                                findAllWithFilters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pullRequestRepository: Repository, filterService: RepoFilterService)\n                    \n                \n                        \n                            \n                                Defined in src/pull-requests/pull-request.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pullRequestRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        RepoFilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/pull-request.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/pull-request.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByContributor\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByContributor(contributor: string, pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/pull-request.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contributor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllContributorsWithFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllContributorsWithFilters(pageOptionsDto: PullRequestContributorOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/pull-request.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PullRequestContributorOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllWithFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllWithFilters(pageOptionsDto: PullRequestPageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pull-requests/pull-request.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PullRequestPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { DbPullRequest } from \"./entities/pull-request.entity\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { OrderDirectionEnum } from \"../common/constants/order-direction.constant\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PullRequestPageOptionsDto } from \"./dtos/pull-request-page-options.dto\";\nimport { RepoFilterService } from \"../common/filters/repo-filter.service\";\nimport { InsightFilterFieldsEnum } from \"../insight/dtos/insight-options.dto\";\nimport { DbPullRequestContributor } from \"./dtos/pull-request-contributor.dto\";\nimport { PullRequestContributorOptionsDto } from \"./dtos/pull-request-contributor-options.dto\";\n\n@Injectable()\nexport class PullRequestService {\n  constructor(\n    @InjectRepository(DbPullRequest, \"ApiConnection\")\n    private pullRequestRepository: Repository,\n    private filterService: RepoFilterService\n  ) {}\n\n  baseQueryBuilder() {\n    const builder = this.pullRequestRepository.createQueryBuilder(\"pull_requests\");\n\n    return builder;\n  }\n\n  async findAll(pageOptionsDto: PageOptionsDto): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .addOrderBy(`\"pull_requests\".\"updated_at\"`, OrderDirectionEnum.DESC)\n      .offset(pageOptionsDto.skip)\n      .limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async findAllByContributor(contributor: string, pageOptionsDto: PageOptionsDto): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n    const range = pageOptionsDto.range!;\n\n    queryBuilder\n      .innerJoin(\"repos\", \"repos\", `\"pull_requests\".\"repo_id\"=\"repos\".\"id\"`)\n      .where(`LOWER(\"pull_requests\".\"author_login\")=:contributor`, { contributor: contributor.toLowerCase() })\n      .andWhere(`now() - INTERVAL '${range} days' > {\n    const queryBuilder = this.baseQueryBuilder();\n    const range = pageOptionsDto.range!;\n\n    queryBuilder\n      .innerJoin(\"repos\", \"repos\", `\"pull_requests\".\"repo_id\"=\"repos\".\"id\"`)\n      .addSelect(\"repos.full_name\", \"pull_requests_full_name\")\n      .addSelect(\"repos.id\", \"pull_requests_repo_id\");\n\n    const filters = this.filterService.getRepoFilters(pageOptionsDto, range);\n\n    filters.push([`now() - INTERVAL '${range} days' > {\n    const queryBuilder = this.pullRequestRepository.manager.createQueryBuilder();\n    const range = pageOptionsDto.range!;\n\n    queryBuilder\n      .from(DbPullRequest, \"pull_requests\")\n      .distinct()\n      .select(\"pull_requests.author_login\", \"author_login\")\n      .addSelect(\"MAX(pull_requests.updated_at)\", \"updated_at\")\n      .innerJoin(\"repos\", \"repos\", `\"pull_requests\".\"repo_id\"=\"repos\".\"id\"`)\n      .addGroupBy(\"author_login\");\n\n    const filters = this.filterService.getRepoFilters(pageOptionsDto, range);\n\n    filters.push([`now() - INTERVAL '${range} days' ();\n    const itemCount = parseInt(`${countQueryResult?.count ?? \"0\"}`, 10);\n\n    queryBuilder\n      .addOrderBy(`\"updated_at\"`, OrderDirectionEnum.DESC)\n      .offset(pageOptionsDto.skip)\n      .limit(pageOptionsDto.limit);\n\n    const entities: DbPullRequestContributor[] = await queryBuilder.getRawMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoContributionsController.html":{"url":"controllers/RepoContributionsController.html","title":"controller - RepoContributionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoContributionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/repo-contributions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findAllByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByOwnerAndRepo(owner: string, repo: string, pageOptionsDto: ContributionPageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:owner/:repo/contributions')@ApiOperation({operationId: 'findAllByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo listing all contributions and paginating them'})@ApiPaginatedResponse(DbContribution)@ApiOkResponse({type: DbContribution})@ApiNotFoundResponse({description: 'Repo not found'})\n                \n            \n\n            \n                \n                    Defined in src/contribution/repo-contributions.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                ContributionPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByRepoId(id: number, pageOptionsDto: ContributionPageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/contributions')@ApiOperation({operationId: 'findAllByRepoId', summary: 'Find a repo by :id listing all contributions and paginating them'})@ApiPaginatedResponse(DbContribution)@ApiOkResponse({type: DbContribution})@ApiNotFoundResponse({description: 'Repo not found'})\n                \n            \n\n            \n                \n                    Defined in src/contribution/repo-contributions.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                ContributionPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, ParseIntPipe, Query } from \"@nestjs/common\";\nimport { ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { ContributionService } from \"./contribution.service\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { DbContribution } from \"./contribution.entity\";\nimport { ContributionPageOptionsDto } from \"./dtos/contribution-page-options.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service\", \"Contribution service\")\nexport class RepoContributionsController {\n  constructor(private readonly repoService: RepoService, private readonly contributionService: ContributionService) {}\n\n  @Get(\"/:id/contributions\")\n  @ApiOperation({\n    operationId: \"findAllByRepoId\",\n    summary: \"Find a repo by :id listing all contributions and paginating them\",\n  })\n  @ApiPaginatedResponse(DbContribution)\n  @ApiOkResponse({ type: DbContribution })\n  @ApiNotFoundResponse({ description: \"Repo not found\" })\n  async findAllByRepoId(\n    @Param(\"id\", ParseIntPipe) id: number,\n    @Query() pageOptionsDto: ContributionPageOptionsDto\n  ): Promise> {\n    const item = await this.repoService.findOneById(id);\n\n    return this.contributionService.findAll(pageOptionsDto, item.id);\n  }\n\n  @Get(\"/:owner/:repo/contributions\")\n  @ApiOperation({\n    operationId: \"findAllByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo listing all contributions and paginating them\",\n  })\n  @ApiPaginatedResponse(DbContribution)\n  @ApiOkResponse({ type: DbContribution })\n  @ApiNotFoundResponse({ description: \"Repo not found\" })\n  async findAllByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n    @Param(\"repo\") repo: string,\n    @Query() pageOptionsDto: ContributionPageOptionsDto\n  ): Promise> {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.contributionService.findAll(pageOptionsDto, item.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoController.html":{"url":"controllers/RepoController.html","title":"controller - RepoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllReposWithFilters\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: RepoPageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@ApiOperation({operationId: 'findAll', summary: 'Finds all repos and paginates them'})@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllReposWithFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllReposWithFilters(pageOptionsDto: RepoSearchOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/search')@ApiOperation({operationId: 'findAllReposWithFilters', summary: 'Finds all repos using filters and paginates them'})@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoSearchOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'findOneById', summary: 'Finds a repo by :id'})@ApiOkResponse({type: DbRepo})@ApiNotFoundResponse({description: 'Repository not found'})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:owner/:repo')@ApiOperation({operationId: 'findOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo'})@ApiOkResponse({type: DbRepo})@ApiNotFoundResponse({description: 'Repository not found'})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, ParseIntPipe, Query } from \"@nestjs/common\";\nimport { RepoService } from \"./repo.service\";\nimport { DbRepo } from \"./entities/repo.entity\";\nimport { ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { RepoPageOptionsDto } from \"./dtos/repo-page-options.dto\";\nimport { RepoSearchOptionsDto } from \"./dtos/repo-search-options.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service\")\nexport class RepoController {\n  constructor(private readonly repoService: RepoService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"findOneById\",\n    summary: \"Finds a repo by :id\",\n  })\n  @ApiOkResponse({ type: DbRepo })\n  @ApiNotFoundResponse({ description: \"Repository not found\" })\n  async findOneById(@Param(\"id\", ParseIntPipe) id: number): Promise {\n    return this.repoService.findOneById(id);\n  }\n\n  @Get(\"/:owner/:repo\")\n  @ApiOperation({\n    operationId: \"findOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo\",\n  })\n  @ApiOkResponse({ type: DbRepo })\n  @ApiNotFoundResponse({ description: \"Repository not found\" })\n  async findOneByOwnerAndRepo(@Param(\"owner\") owner: string, @Param(\"repo\") repo: string): Promise {\n    return this.repoService.findOneByOwnerAndRepo(owner, repo);\n  }\n\n  @Get(\"/list\")\n  @ApiOperation({\n    operationId: \"findAll\",\n    summary: \"Finds all repos and paginates them\",\n  })\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  async findAll(@Query() pageOptionsDto: RepoPageOptionsDto): Promise> {\n    return this.repoService.findAll(pageOptionsDto);\n  }\n\n  @Get(\"/search\")\n  @ApiOperation({\n    operationId: \"findAllReposWithFilters\",\n    summary: \"Finds all repos using filters and paginates them\",\n  })\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  async findAllReposWithFilters(@Query() pageOptionsDto: RepoSearchOptionsDto): Promise> {\n    return this.repoService.findAllWithFilters(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepoFilterModule.html":{"url":"modules/RepoFilterModule.html","title":"module - RepoFilterModule","body":"\n                   \n\n\n\n\n    Modules\n    RepoFilterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepoFilterModule\n\n\n\ncluster_RepoFilterModule_providers\n\n\n\ncluster_RepoFilterModule_exports\n\n\n\n\nRepoFilterService \n\nRepoFilterService \n\n\n\nRepoFilterModule\n\nRepoFilterModule\n\nRepoFilterService  -->\n\nRepoFilterModule->RepoFilterService \n\n\n\n\n\nRepoFilterService\n\nRepoFilterService\n\nRepoFilterModule -->\n\nRepoFilterService->RepoFilterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/filters/repo-filter.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoFilterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepoFilterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { RepoFilterService } from \"./repo-filter.service\";\n\n@Module({\n  providers: [RepoFilterService],\n  exports: [RepoFilterService],\n})\nexport class RepoFilterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepoFilterService.html":{"url":"injectables/RepoFilterService.html","title":"injectable - RepoFilterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepoFilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/repo-filter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyQueryBuilderFilters\n                            \n                            \n                                getRepoFilters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyQueryBuilderFilters\n                        \n                    \n                \n            \n            \n                \napplyQueryBuilderFilters(qb: SelectQueryBuilder, filters: [])\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/repo-filter.service.ts:85\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    applies the filters using the provided QueryBuilder\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    qb\n                                    \n                                            SelectQueryBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    filters\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRepoFilters\n                        \n                    \n                \n            \n            \n                \ngetRepoFilters(options: FilterOptionsDto, range: number)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/repo-filter.service.ts:15\n                \n            \n\n\n            \n                \n                    applies repo-based filters based on the filter/InsightFilterFieldsEnum query param\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FilterOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    range\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ObjectLiteral, SelectQueryBuilder } from \"typeorm\";\n\nimport { InsightFilterFieldsEnum } from \"../../insight/dtos/insight-options.dto\";\nimport { FilterOptionsDto } from \"../dtos/filter-options.dto\";\n\n@Injectable()\nexport class RepoFilterService {\n  /**\n   * applies repo-based filters based on the filter/InsightFilterFieldsEnum query param\n   * @param options\n   * @param range\n   */\n\n  getRepoFilters(options: FilterOptionsDto, range = 0): [string, object][] {\n    const filters: [string, object][] = [];\n\n    if (options.repoIds) {\n      filters.push([`repos.id IN (:...repoIds)`, { repoIds: options.repoIds.split(\",\") }]);\n    }\n\n    if (options.repo) {\n      filters.push([`LOWER(repos.full_name)=:repo`, { repo: decodeURIComponent(options.repo.toLowerCase()) }]);\n    }\n\n    if (options.topic) {\n      filters.push([`:topic = ANY(\"repos\".\"topics\")`, { topic: options.topic }]);\n    }\n\n    if (options.filter === InsightFilterFieldsEnum.Recent) {\n      filters.push([\"repos.stars >= 1000\", {}]);\n    } else if (options.filter === InsightFilterFieldsEnum.Top100) {\n      filters.push([\n        `\n        repos.id IN (\n          SELECT \"top_repos\".id\n          FROM \"repos\" \"top_repos\"\n          WHERE\n            top_repos.stars > 1000\n          ORDER BY top_repos.stars DESC\n          LIMIT 1000\n        )\n      `,\n        {},\n      ]);\n    } else if (options.filter === InsightFilterFieldsEnum.MostSpammed) {\n      filters.push([\n        `\n        repos.id IN (\n          SELECT spam_pull_requests.repo_id\n          FROM \"pull_requests\" \"spam_pull_requests\"\n          WHERE\n            'spam' = ANY(\"spam_pull_requests\".\"label_names\")\n            AND now() - INTERVAL '${range} days' = 5\n     *   )`, {}]);\n     * }\n     */\n\n    return filters;\n  }\n\n  /**\n   * applies the filters using the provided QueryBuilder\n   * @param qb\n   * @param filters\n   */\n\n  applyQueryBuilderFilters(qb: SelectQueryBuilder, filters: [string, object][] = []) {\n    filters.forEach(([sql, data], index) => {\n      if (index === 0) {\n        qb.where(sql, data);\n      } else {\n        qb.andWhere(sql, data);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RepoInfo.html":{"url":"classes/RepoInfo.html","title":"class - RepoInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RepoInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/dtos/repo-info.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fullName\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Repo Full Name', type: String, example: 'open-sauced/insights'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/dtos/repo-info.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Repo ID', type: Number, example: 234343})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/dtos/repo-info.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNumber, IsString } from \"class-validator\";\n\nexport class RepoInfo {\n  @ApiProperty({\n    description: \"Repo ID\",\n    type: Number,\n    example: 234343,\n  })\n  @IsNumber()\n  id: number;\n\n  @ApiProperty({\n    description: \"Repo Full Name\",\n    type: String,\n    example: \"open-sauced/insights\",\n  })\n  @IsString()\n  fullName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepoModule.html":{"url":"modules/RepoModule.html","title":"module - RepoModule","body":"\n                   \n\n\n\n\n    Modules\n    RepoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_imports\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\n\nRepoFilterModule\n\nRepoFilterModule\n\n\n\nRepoModule\n\nRepoModule\n\nRepoModule -->\n\nRepoFilterModule->RepoModule\n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/repo/repo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RepoFilterModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepoService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"./entities/repo.entity\";\nimport { RepoService } from \"./repo.service\";\nimport { RepoController } from \"./repo.controller\";\nimport { RepoFilterModule } from \"../common/filters/repo-filter.module\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbRepo], \"ApiConnection\"), RepoFilterModule],\n  controllers: [RepoController],\n  providers: [RepoService],\n  exports: [RepoService],\n})\nexport class RepoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RepoPageOptionsDto.html":{"url":"classes/RepoPageOptionsDto.html","title":"class - RepoPageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RepoPageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/dtos/repo-page-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                orderBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoOrderFieldsEnum\n\n                    \n                \n                \n                    \n                        Default value : RepoOrderFieldsEnum.stars\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: RepoOrderFieldsEnum, enumName: 'RepoOrderFieldsEnum', default: undefined})@IsEnum(RepoOrderFieldsEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/dtos/repo-page-options.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 1000, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(10000)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Range in days', default: 30})@Type(undefined)@IsIn(['7', '30', '90'])@IsInt()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:43\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsEnum, IsOptional } from \"class-validator\";\n\nimport { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\n\nexport enum RepoFilterFieldsEnum {\n  Recent = \"recent\",\n  Top100 = \"top-100-repos\",\n  MinimumContributors = \"minimum-5-contributors\",\n  MostActive = \"most-active\",\n  MostSpammed = \"most-spammed\",\n}\n\nexport enum RepoOrderFieldsEnum {\n  issues = \"issues\",\n  stars = \"stars\",\n  watchers = \"watchers\",\n  subscribers = \"subscribers\",\n  created_at = \"created_at\",\n  updated_at = \"updated_at\",\n  name = \"name\",\n  contributionsCount = \"contributionsCount\",\n  votesCount = \"votesCount\",\n  submissionsCount = \"submissionsCount\",\n  stargazersCount = \"stargazersCount\",\n  starsCount = \"starsCount\",\n}\n\nexport class RepoPageOptionsDto extends PageOptionsDto {\n  @ApiPropertyOptional({\n    enum: RepoOrderFieldsEnum,\n    enumName: \"RepoOrderFieldsEnum\",\n    default: RepoOrderFieldsEnum.stars,\n  })\n  @IsEnum(RepoOrderFieldsEnum)\n  @IsOptional()\n  readonly orderBy?: RepoOrderFieldsEnum = RepoOrderFieldsEnum.stars;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RepoSearchOptionsDto.html":{"url":"classes/RepoSearchOptionsDto.html","title":"class - RepoSearchOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RepoSearchOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/dtos/repo-search-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepoPageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                filter\n                            \n                            \n                                    Readonly\n                                    Optional\n                                repo\n                            \n                            \n                                    Readonly\n                                    Optional\n                                repoIds\n                            \n                            \n                                    Readonly\n                                    Optional\n                                topic\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InsightFilterFieldsEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: InsightFilterFieldsEnum, enumName: 'InsightFilterFieldsEnum'})@IsEnum(InsightFilterFieldsEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/dtos/repo-search-options.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/dtos/repo-search-options.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        repoIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/dtos/repo-search-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        topic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', default: ''})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/dtos/repo-search-options.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoOrderFieldsEnum\n\n                    \n                \n                \n                    \n                        Default value : RepoOrderFieldsEnum.stars\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: RepoOrderFieldsEnum, enumName: 'RepoOrderFieldsEnum', default: undefined})@IsEnum(RepoOrderFieldsEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         RepoPageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         RepoPageOptionsDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 1000, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(10000)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Range in days', default: 30})@Type(undefined)@IsIn(['7', '30', '90'])@IsInt()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:43\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsEnum, IsOptional, IsString } from \"class-validator\";\nimport { InsightFilterFieldsEnum } from \"../../insight/dtos/insight-options.dto\";\n\nimport { RepoPageOptionsDto } from \"./repo-page-options.dto\";\n\nexport class RepoSearchOptionsDto extends RepoPageOptionsDto {\n  @ApiPropertyOptional({\n    enum: InsightFilterFieldsEnum,\n    enumName: \"InsightFilterFieldsEnum\",\n  })\n  @IsEnum(InsightFilterFieldsEnum)\n  @IsOptional()\n  readonly filter?: InsightFilterFieldsEnum;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  readonly repo?: string;\n\n  @ApiPropertyOptional({\n    type: \"string\",\n    default: \"\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly topic?: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  readonly repoIds?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepoService.html":{"url":"injectables/RepoService.html","title":"injectable - RepoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseFilterQueryBuilder\n                            \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllWithFilters\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findRecommendations\n                            \n                            \n                                subQueryCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoRepository: Repository, filterService: RepoFilterService)\n                    \n                \n                        \n                            \n                                Defined in src/repo/repo.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        RepoFilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        baseFilterQueryBuilder\n                        \n                    \n                \n            \n            \n                \n                    \n                    baseFilterQueryBuilder(range: number)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    range\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        30\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: RepoPageOptionsDto, userId?: number, userRelations?: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    userRelations\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllWithFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllWithFilters(pageOptionsDto: RepoSearchOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoSearchOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findRecommendations\n                        \n                    \n                \n            \n            \n                \n                    \n                    findRecommendations(interests: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interests\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subQueryCount\n                        \n                    \n                \n            \n            \n                \nsubQueryCount(subQuery: SelectQueryBuilder, entity: string, alias: string, target: string)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:22\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    subQuery\n                                    \n                                            SelectQueryBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    entity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"repo\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { ObjectLiteral, Repository, SelectQueryBuilder } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"./entities/repo.entity\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { RepoOrderFieldsEnum, RepoPageOptionsDto } from \"./dtos/repo-page-options.dto\";\nimport { OrderDirectionEnum } from \"../common/constants/order-direction.constant\";\nimport { InsightFilterFieldsEnum } from \"../insight/dtos/insight-options.dto\";\nimport { RepoFilterService } from \"../common/filters/repo-filter.service\";\nimport { RepoSearchOptionsDto } from \"./dtos/repo-search-options.dto\";\n\n@Injectable()\nexport class RepoService {\n  constructor(\n    @InjectRepository(DbRepo, \"ApiConnection\")\n    private repoRepository: Repository,\n    private filterService: RepoFilterService\n  ) {}\n\n  subQueryCount(\n    subQuery: SelectQueryBuilder,\n    entity: string,\n    alias: string,\n    target = \"repo\"\n  ) {\n    const aliasName = `${alias}Count`;\n    const aliasTable = `${alias}CountSelect`;\n\n    return subQuery\n      .select(\"COUNT(DISTINCT id)\", aliasName)\n      .from(entity, aliasTable)\n      .where(`${aliasTable}.${target}_id = ${target}.id`);\n  }\n\n  baseQueryBuilder() {\n    const builder = this.repoRepository\n      .createQueryBuilder(\"repo\")\n\n      /*\n       * .select(['repo.id'])\n       * .leftJoinAndSelect(\"repo.user\", \"user\")\n       * .leftJoinAndSelect(DbRepoToUserStars, \"stars\")\n       * .leftJoinAndMapMany(\"repo.contributions\", DbContribution, \"contributions\", \"contributions.repo_id = repo.id\")\n       */\n\n      .addSelect((qb) => this.subQueryCount(qb, \"DbContribution\", \"contributions\"), \"contributionsCount\")\n      .addSelect((qb) => this.subQueryCount(qb, \"DbRepoToUserVotes\", \"votes\"), \"votesCount\")\n      .addSelect((qb) => this.subQueryCount(qb, \"DbRepoToUserSubmissions\", \"submissions\"), \"submissionsCount\")\n      .addSelect((qb) => this.subQueryCount(qb, \"DbRepoToUserStargazers\", \"stargazers\"), \"stargazersCount\")\n      .addSelect((qb) => this.subQueryCount(qb, \"DbRepoToUserStars\", \"stars\"), \"starsCount\")\n      .loadRelationCountAndMap(\"repo.contributionsCount\", \"repo.contributions\")\n      .loadRelationCountAndMap(\"repo.votesCount\", \"repo.repoToUserVotes\")\n      .loadRelationCountAndMap(\"repo.submissionsCount\", \"repo.repoToUserSubmissions\")\n      .loadRelationCountAndMap(\"repo.stargazersCount\", \"repo.repoToUserStargazers\")\n      .loadRelationCountAndMap(\"repo.starsCount\", \"repo.repoToUserStars\");\n\n    return builder;\n  }\n\n  private baseFilterQueryBuilder(range = 30) {\n    return this.repoRepository\n      .createQueryBuilder(\"repos\")\n      .addSelect(\n        `(\n          SELECT COALESCE(COUNT(\"open_pull_requests\".\"id\"), 0)\n          FROM \"pull_requests\" \"open_pull_requests\"\n          WHERE\n            LOWER(\"open_pull_requests\".\"state\") = 'open'\n            AND \"open_pull_requests\".\"repo_id\" = \"repos\".\"id\"\n            AND now() - INTERVAL '${range} days'  \"pull_requests_velocity\".\"created_at\"\n            AND now() - INTERVAL '${range} days'  {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"repo.id = :id\", { id });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findOneByOwnerAndRepo(owner: string, repo: string): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"repo.full_name = :name\", { name: `${owner}/${repo}` });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findAll(\n    pageOptionsDto: RepoPageOptionsDto,\n    userId?: number,\n    userRelations?: string[]\n  ): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n    const orderField = pageOptionsDto.orderBy ?? RepoOrderFieldsEnum.stars;\n\n    if (userId) {\n      userRelations?.map((relation) =>\n        queryBuilder.innerJoin(\n          `repo.repoToUser${relation}`,\n          `authUser${relation}`,\n          `authUser${relation}.user_id = :userId`,\n          { userId }\n        )\n      );\n    }\n\n    queryBuilder\n      .orderBy(`\"repo\".\"is_fork\"`, OrderDirectionEnum.ASC)\n      .addOrderBy(`\"${orderField}\"`, pageOptionsDto.orderDirection)\n      .addOrderBy(`\"repo\".\"created_at\"`, OrderDirectionEnum.DESC)\n      .offset(pageOptionsDto.skip)\n      .limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async findAllWithFilters(pageOptionsDto: RepoSearchOptionsDto): Promise> {\n    const orderField = pageOptionsDto.orderBy ?? \"stars\";\n    const range = pageOptionsDto.range!;\n    const queryBuilder = this.baseFilterQueryBuilder(range);\n\n    const filters = this.filterService.getRepoFilters(pageOptionsDto, range);\n\n    if (!pageOptionsDto.repoIds && !pageOptionsDto.repo) {\n      filters.push([`now() - INTERVAL '${range} days' ();\n    const itemCount = parseInt(`${countQueryResult?.count ?? \"0\"}`, 10);\n\n    queryBuilder\n      .addOrderBy(`\"repos\".\"${orderField}\"`, OrderDirectionEnum.DESC)\n      .offset(pageOptionsDto.skip)\n      .limit(pageOptionsDto.limit);\n\n    const entities = await queryBuilder.getMany();\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async findRecommendations(interests: string[]): Promise> {\n    const queryBuilder = this.repoRepository.createQueryBuilder(\"repo\");\n    const userInterests: Record = {};\n\n    const promises = interests.map(async (interest) => {\n      queryBuilder\n        .where(`(:topic = ANY(\"repo\".\"topics\"))`, { topic: interest })\n        .andWhere(\n          `\n          repo.id IN (\n            SELECT repo_id FROM pull_requests\n            WHERE now() - INTERVAL '30 days'  {\n      userInterests[interest] = results[index];\n    });\n\n    return userInterests;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoStarController.html":{"url":"controllers/RepoStarController.html","title":"controller - RepoStarController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoStarController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/star/repo-star.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downStarOneById\n                            \n                            \n                                    Async\n                                downStarOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findAllUserStarred\n                            \n                            \n                                    Async\n                                starOneById\n                            \n                            \n                                    Async\n                                starOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStarOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStarOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/star')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downStarOneById', summary: 'Finds a repo by :id and removes existing star'})@ApiOkResponse({description: 'Returns the repo star', type: DbRepoToUserStars})@ApiNotFoundResponse({description: 'Repo or star not found'})@ApiConflictResponse({description: 'You have already removed your star'})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStarOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStarOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/star')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downStarOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and removes existing star'})@ApiOkResponse({description: 'Returns the repo star', type: DbRepoToUserStars})@ApiNotFoundResponse({description: 'Repo or star not found'})@ApiConflictResponse({description: 'You have already removed your star'})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserStarred\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserStarred(pageOptionsDto: RepoPageOptionsDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/listUserStarred')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'findAllUserStarred', summary: 'Finds all repos starred by authenticated user and paginates them'})@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        starOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    starOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/star')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'starOneById', summary: 'Finds a repo by :id and adds a star'})@ApiOkResponse({description: 'Returns the repo star', type: DbRepoToUserStars})@ApiNotFoundResponse({description: 'Repo or star not found'})@ApiConflictResponse({description: 'You have already starred this repo'})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        starOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    starOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/star')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'starOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and adds a star'})@ApiOkResponse({description: 'Returns the repo star', type: DbRepoToUserStars})@ApiNotFoundResponse({description: 'Repo or star not found'})@ApiConflictResponse({description: 'You have already starred this repo'})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, ParseIntPipe, Put, Query, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { RepoService } from \"../repo/repo.service\";\nimport { StarService } from \"./star.service\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { DbRepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { RepoPageOptionsDto } from \"../repo/dtos/repo-page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service guarded\", \"Star service\")\nexport class RepoStarController {\n  constructor(private readonly repoService: RepoService, private readonly starService: StarService) {}\n\n  @Get(\"/listUserStarred\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"findAllUserStarred\",\n    summary: \"Finds all repos starred by authenticated user and paginates them\",\n  })\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  async findAllUserStarred(\n    @Query() pageOptionsDto: RepoPageOptionsDto,\n    @UserId() userId: number\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto, userId, [\"Stars\"]);\n  }\n\n  @Put(\"/:id/star\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"starOneById\",\n    summary: \"Finds a repo by :id and adds a star\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo star\",\n    type: DbRepoToUserStars,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or star not found\" })\n  @ApiConflictResponse({ description: \"You have already starred this repo\" })\n  async starOneById(@Param(\"id\", ParseIntPipe) id: number, @UserId() userId: number): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.starService.starByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/star\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"starOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and adds a star\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo star\",\n    type: DbRepoToUserStars,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or star not found\" })\n  @ApiConflictResponse({ description: \"You have already starred this repo\" })\n  async starOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n    @Param(\"repo\") repo: string,\n    @UserId() userId: number\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.starService.starByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/star\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downStarOneById\",\n    summary: \"Finds a repo by :id and removes existing star\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo star\",\n    type: DbRepoToUserStars,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or star not found\" })\n  @ApiConflictResponse({ description: \"You have already removed your star\" })\n  async downStarOneById(@Param(\"id\", ParseIntPipe) id: number, @UserId() userId: number): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.starService.downStarByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/star\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downStarOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and removes existing star\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo star\",\n    type: DbRepoToUserStars,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or star not found\" })\n  @ApiConflictResponse({ description: \"You have already removed your star\" })\n  async downStarOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n    @Param(\"repo\") repo: string,\n    @UserId() userId: number\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.starService.downStarByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoStargazeController.html":{"url":"controllers/RepoStargazeController.html","title":"controller - RepoStargazeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoStargazeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stargaze/repo-stargaze.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downStargazeOneById\n                            \n                            \n                                    Async\n                                downStargazeOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findAllUserStargazed\n                            \n                            \n                                    Async\n                                stargazeOneById\n                            \n                            \n                                    Async\n                                stargazeOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStargazeOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStargazeOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/stargaze')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downStargazeOneById', summary: 'Finds a repo by :id and unfollows'})@ApiOkResponse({description: 'Returns the repo follow', type: DbRepoToUserStargazers})@ApiNotFoundResponse({description: 'Repo or follow not found'})@ApiConflictResponse({description: 'You have already unfollowed this repo'})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStargazeOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStargazeOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/stargaze')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downStargazeOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and unfollows'})@ApiOkResponse({description: 'Returns the repo follow', type: DbRepoToUserStargazers})@ApiNotFoundResponse({description: 'Repo or stargaze not found'})@ApiConflictResponse({description: 'You have already unfollowed this repo'})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserStargazed\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserStargazed(pageOptionsDto: RepoPageOptionsDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/listUserStargazed')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'findAllUserStargazed', summary: 'Finds all repos followed by authenticated user and paginates them'})@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        stargazeOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    stargazeOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/stargaze')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'stargazeOneById', summary: 'Finds a repo by :id and follows'})@ApiOkResponse({description: 'Returns the repo follow', type: DbRepoToUserStargazers})@ApiNotFoundResponse({description: 'Repo or follow not found'})@ApiConflictResponse({description: 'You have already followed this repo'})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        stargazeOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    stargazeOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/stargaze')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'stargazeOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and follows'})@ApiOkResponse({description: 'Returns the repo follow', type: DbRepoToUserStargazers})@ApiNotFoundResponse({description: 'Repo or follow not found'})@ApiConflictResponse({description: 'You have already followed this repo'})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, ParseIntPipe, Put, Query, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { RepoService } from \"../repo/repo.service\";\nimport { StargazeService } from \"./stargaze.service\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { DbRepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { RepoPageOptionsDto } from \"../repo/dtos/repo-page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service guarded\", \"Stargaze service\")\nexport class RepoStargazeController {\n  constructor(private readonly repoService: RepoService, private readonly stargazeService: StargazeService) {}\n\n  @Get(\"/listUserStargazed\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"findAllUserStargazed\",\n    summary: \"Finds all repos followed by authenticated user and paginates them\",\n  })\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  async findAllUserStargazed(\n    @Query() pageOptionsDto: RepoPageOptionsDto,\n    @UserId() userId: number\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto, userId, [\"Stargazers\"]);\n  }\n\n  @Put(\"/:id/stargaze\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"stargazeOneById\",\n    summary: \"Finds a repo by :id and follows\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo follow\",\n    type: DbRepoToUserStargazers,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or follow not found\" })\n  @ApiConflictResponse({ description: \"You have already followed this repo\" })\n  async stargazeOneById(\n    @Param(\"id\", ParseIntPipe) id: number,\n    @UserId() userId: number\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.stargazeService.stargazeByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/stargaze\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"stargazeOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and follows\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo follow\",\n    type: DbRepoToUserStargazers,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or follow not found\" })\n  @ApiConflictResponse({ description: \"You have already followed this repo\" })\n  async stargazeOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n    @Param(\"repo\") repo: string,\n    @UserId() userId: number\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.stargazeService.stargazeByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/stargaze\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downStargazeOneById\",\n    summary: \"Finds a repo by :id and unfollows\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo follow\",\n    type: DbRepoToUserStargazers,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or follow not found\" })\n  @ApiConflictResponse({ description: \"You have already unfollowed this repo\" })\n  async downStargazeOneById(\n    @Param(\"id\", ParseIntPipe) id: number,\n    @UserId() userId: number\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.stargazeService.downStargazeByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/stargaze\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downStargazeOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and unfollows\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo follow\",\n    type: DbRepoToUserStargazers,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or stargaze not found\" })\n  @ApiConflictResponse({ description: \"You have already unfollowed this repo\" })\n  async downStargazeOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n    @Param(\"repo\") repo: string,\n    @UserId() userId: number\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.stargazeService.downStargazeByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoSubmitController.html":{"url":"controllers/RepoSubmitController.html","title":"controller - RepoSubmitController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoSubmitController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/submit/repo-submit.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downSubmitOneById\n                            \n                            \n                                    Async\n                                downSubmitOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findAllUserSubmitted\n                            \n                            \n                                    Async\n                                submitOneById\n                            \n                            \n                                    Async\n                                submitOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downSubmitOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downSubmitOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/submit')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downSubmitOneById', summary: 'Finds a repo by :id and removes existing submission'})@ApiOkResponse({description: 'Returns the repo submission', type: DbRepoToUserSubmissions})@ApiNotFoundResponse({description: 'Repo or submission not found'})@ApiConflictResponse({description: 'You have already removed your submission'})\n                \n            \n\n            \n                \n                    Defined in src/submit/repo-submit.controller.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downSubmitOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downSubmitOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/submit')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downSubmitOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and removes existing submission'})@ApiOkResponse({description: 'Returns the repo submission', type: DbRepoToUserSubmissions})@ApiNotFoundResponse({description: 'Repo or submission not found'})@ApiConflictResponse({description: 'You have already removed your submission'})\n                \n            \n\n            \n                \n                    Defined in src/submit/repo-submit.controller.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserSubmitted\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserSubmitted(pageOptionsDto: RepoPageOptionsDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/listUserSubmitted')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'findAllUserSubmitted', summary: 'Finds all repos submitted by authenticated user and paginates them'})@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})\n                \n            \n\n            \n                \n                    Defined in src/submit/repo-submit.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submitOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/submit')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'submitOneById', summary: 'Finds a repo by :id and adds a submission'})@ApiOkResponse({description: 'Returns the repo submission', type: DbRepoToUserSubmissions})@ApiNotFoundResponse({description: 'Repo or submission not found'})@ApiConflictResponse({description: 'You have already submitted this repo'})\n                \n            \n\n            \n                \n                    Defined in src/submit/repo-submit.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submitOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/submit')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'submitOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and adds a submission'})@ApiOkResponse({description: 'Returns the repo submission', type: DbRepoToUserSubmissions})@ApiNotFoundResponse({description: 'Repo or submission not found'})@ApiConflictResponse({description: 'You have already submitted this repo'})\n                \n            \n\n            \n                \n                    Defined in src/submit/repo-submit.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, ParseIntPipe, Put, Query, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { RepoService } from \"../repo/repo.service\";\nimport { SubmitService } from \"./submit.service\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { DbRepoToUserSubmissions } from \"../repo/entities/repo.to.user.submissions.entity\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { RepoPageOptionsDto } from \"../repo/dtos/repo-page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service guarded\", \"Submit service\")\nexport class RepoSubmitController {\n  constructor(private readonly repoService: RepoService, private readonly submitService: SubmitService) {}\n\n  @Get(\"/listUserSubmitted\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"findAllUserSubmitted\",\n    summary: \"Finds all repos submitted by authenticated user and paginates them\",\n  })\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  async findAllUserSubmitted(\n    @Query() pageOptionsDto: RepoPageOptionsDto,\n    @UserId() userId: number\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto, userId, [\"Submissions\"]);\n  }\n\n  @Put(\"/:id/submit\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"submitOneById\",\n    summary: \"Finds a repo by :id and adds a submission\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo submission\",\n    type: DbRepoToUserSubmissions,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or submission not found\" })\n  @ApiConflictResponse({ description: \"You have already submitted this repo\" })\n  async submitOneById(\n    @Param(\"id\", ParseIntPipe) id: number,\n    @UserId() userId: number\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.submitService.submitByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/submit\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"submitOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and adds a submission\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo submission\",\n    type: DbRepoToUserSubmissions,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or submission not found\" })\n  @ApiConflictResponse({ description: \"You have already submitted this repo\" })\n  async submitOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n    @Param(\"repo\") repo: string,\n    @UserId() userId: number\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.submitService.submitByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/submit\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downSubmitOneById\",\n    summary: \"Finds a repo by :id and removes existing submission\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo submission\",\n    type: DbRepoToUserSubmissions,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or submission not found\" })\n  @ApiConflictResponse({ description: \"You have already removed your submission\" })\n  async downSubmitOneById(\n    @Param(\"id\", ParseIntPipe) id: number,\n    @UserId() userId: number\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.submitService.downSubmitByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/submit\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downSubmitOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and removes existing submission\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo submission\",\n    type: DbRepoToUserSubmissions,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or submission not found\" })\n  @ApiConflictResponse({ description: \"You have already removed your submission\" })\n  async downSubmitOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n    @Param(\"repo\") repo: string,\n    @UserId() userId: number\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.submitService.downSubmitByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoVoteController.html":{"url":"controllers/RepoVoteController.html","title":"controller - RepoVoteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoVoteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vote/repo-vote.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downVoteOneById\n                            \n                            \n                                    Async\n                                downVoteOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findAllUserVoted\n                            \n                            \n                                    Async\n                                voteOneById\n                            \n                            \n                                    Async\n                                voteOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downVoteOneById', summary: 'Finds a repo by :id and removes existing vote'})@ApiOkResponse({description: 'Returns the repo vote', type: DbRepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already removed your vote'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downVoteOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and removes existing vote'})@ApiOkResponse({description: 'Returns the repo vote', type: DbRepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already removed your vote'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserVoted\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserVoted(pageOptionsDto: RepoPageOptionsDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/listUserVoted')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'findAllUserVoted', summary: 'Finds all repos voted by authenticated user and paginates them'})@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'voteOneById', summary: 'Finds a repo by :id and adds a vote'})@ApiOkResponse({description: 'Returns the repo vote', type: DbRepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already voted for this repo'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'voteOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and adds a vote'})@ApiOkResponse({description: 'Returns the repo vote', type: DbRepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already voted for this repo'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, ParseIntPipe, Put, Query, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { RepoService } from \"../repo/repo.service\";\nimport { VoteService } from \"./vote.service\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { DbRepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { RepoPageOptionsDto } from \"../repo/dtos/repo-page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service guarded\", \"Vote service\")\nexport class RepoVoteController {\n  constructor(private readonly repoService: RepoService, private readonly voteService: VoteService) {}\n\n  @Get(\"/listUserVoted\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"findAllUserVoted\",\n    summary: \"Finds all repos voted by authenticated user and paginates them\",\n  })\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  async findAllUserVoted(\n    @Query() pageOptionsDto: RepoPageOptionsDto,\n    @UserId() userId: number\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto, userId, [\"Votes\"]);\n  }\n\n  @Put(\"/:id/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"voteOneById\",\n    summary: \"Finds a repo by :id and adds a vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: DbRepoToUserVotes,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or vote not found\" })\n  @ApiConflictResponse({ description: \"You have already voted for this repo\" })\n  async voteOneById(@Param(\"id\", ParseIntPipe) id: number, @UserId() userId: number): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.voteService.voteByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"voteOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and adds a vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: DbRepoToUserVotes,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or vote not found\" })\n  @ApiConflictResponse({ description: \"You have already voted for this repo\" })\n  async voteOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n    @Param(\"repo\") repo: string,\n    @UserId() userId: number\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.voteService.voteByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downVoteOneById\",\n    summary: \"Finds a repo by :id and removes existing vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: DbRepoToUserVotes,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or vote not found\" })\n  @ApiConflictResponse({ description: \"You have already removed your vote\" })\n  async downVoteOneById(@Param(\"id\", ParseIntPipe) id: number, @UserId() userId: number): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.voteService.downVoteByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downVoteOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and removes existing vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: DbRepoToUserVotes,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or vote not found\" })\n  @ApiConflictResponse({ description: \"You have already removed your vote\" })\n  async downVoteOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n    @Param(\"repo\") repo: string,\n    @UserId() userId: number\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.voteService.downVoteByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StarModule.html":{"url":"modules/StarModule.html","title":"module - StarModule","body":"\n                   \n\n\n\n\n    Modules\n    StarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StarModule\n\n\n\ncluster_StarModule_imports\n\n\n\ncluster_StarModule_exports\n\n\n\ncluster_StarModule_providers\n\n\n\n\nRepoModule\n\nRepoModule\n\n\n\nStarModule\n\nStarModule\n\nStarModule -->\n\nRepoModule->StarModule\n\n\n\n\n\nStarService \n\nStarService \n\nStarService  -->\n\nStarModule->StarService \n\n\n\n\n\nStarService\n\nStarService\n\nStarModule -->\n\nStarService->StarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/star/star.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StarService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoStarController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RepoModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StarService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\nimport { StarService } from \"./star.service\";\nimport { RepoStarController } from \"./repo-star.controller\";\nimport { RepoModule } from \"../repo/repo.module\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbRepo, DbRepoToUserStars], \"ApiConnection\"), RepoModule],\n  controllers: [RepoStarController],\n  providers: [StarService],\n  exports: [StarService],\n})\nexport class StarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StarService.html":{"url":"injectables/StarService.html","title":"injectable - StarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/star/star.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downStarByRepoId\n                            \n                            \n                                    Async\n                                starByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoStarRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/star/star.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoStarRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/star/star.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStarByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStarByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/star/star.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        starByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    starByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/star/star.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbRepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\n\n@Injectable()\nexport class StarService {\n  constructor(\n    @InjectRepository(DbRepoToUserStars, \"ApiConnection\")\n    private repoStarRepository: Repository\n  ) {}\n\n  baseQueryBuilder() {\n    const builder = this.repoStarRepository.createQueryBuilder(\"r2stars\").withDeleted();\n\n    return builder;\n  }\n\n  async starByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"r2stars.repo_id = :repoId\", { repoId }).andWhere(\"r2stars.user_id = :userId\", { userId });\n\n    const starExists = await queryBuilder.getOne();\n\n    if (starExists) {\n      if (!starExists.deleted_at) {\n        throw new ConflictException(\"You have already starred this repo\");\n      }\n\n      await this.repoStarRepository.restore(starExists.id);\n\n      return starExists;\n    }\n\n    return this.repoStarRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downStarByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"r2stars.repo_id = :repoId\", { repoId }).andWhere(\"r2stars.user_id = :userId\", { userId });\n\n    const starExists = await queryBuilder.getOne();\n\n    if (!starExists) {\n      throw new NotFoundException(\"You have not starred this repo\");\n    }\n\n    if (starExists.deleted_at) {\n      throw new ConflictException(\"You have already removed your star\");\n    }\n\n    await this.repoStarRepository.softDelete(starExists.id);\n\n    return starExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StargazeModule.html":{"url":"modules/StargazeModule.html","title":"module - StargazeModule","body":"\n                   \n\n\n\n\n    Modules\n    StargazeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StargazeModule\n\n\n\ncluster_StargazeModule_providers\n\n\n\ncluster_StargazeModule_imports\n\n\n\ncluster_StargazeModule_exports\n\n\n\n\nRepoModule\n\nRepoModule\n\n\n\nStargazeModule\n\nStargazeModule\n\nStargazeModule -->\n\nRepoModule->StargazeModule\n\n\n\n\n\nStargazeService \n\nStargazeService \n\nStargazeService  -->\n\nStargazeModule->StargazeService \n\n\n\n\n\nStargazeService\n\nStargazeService\n\nStargazeModule -->\n\nStargazeService->StargazeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stargaze/stargaze.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StargazeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoStargazeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RepoModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StargazeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\nimport { StargazeService } from \"./stargaze.service\";\nimport { RepoStargazeController } from \"./repo-stargaze.controller\";\nimport { RepoModule } from \"../repo/repo.module\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbRepo, DbRepoToUserStargazers], \"ApiConnection\"), RepoModule],\n  controllers: [RepoStargazeController],\n  providers: [StargazeService],\n  exports: [StargazeService],\n})\nexport class StargazeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StargazeService.html":{"url":"injectables/StargazeService.html","title":"injectable - StargazeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StargazeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stargaze/stargaze.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downStargazeByRepoId\n                            \n                            \n                                    Async\n                                stargazeByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoStargazeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/stargaze/stargaze.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoStargazeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/stargaze/stargaze.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStargazeByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStargazeByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/stargaze/stargaze.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        stargazeByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    stargazeByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/stargaze/stargaze.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbRepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\n\n@Injectable()\nexport class StargazeService {\n  constructor(\n    @InjectRepository(DbRepoToUserStargazers, \"ApiConnection\")\n    private repoStargazeRepository: Repository\n  ) {}\n\n  baseQueryBuilder() {\n    const builder = this.repoStargazeRepository.createQueryBuilder(\"r2stargazes\").withDeleted();\n\n    return builder;\n  }\n\n  async stargazeByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2stargazes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2stargazes.user_id = :userId\", { userId });\n\n    const stargazeExists = await queryBuilder.getOne();\n\n    if (stargazeExists) {\n      if (!stargazeExists.deleted_at) {\n        throw new ConflictException(\"You have already unfollowed this repo\");\n      }\n\n      await this.repoStargazeRepository.restore(stargazeExists.id);\n\n      return stargazeExists;\n    }\n\n    return this.repoStargazeRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downStargazeByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2stargazes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2stargazes.user_id = :userId\", { userId });\n\n    const stargazeExists = await queryBuilder.getOne();\n\n    if (!stargazeExists) {\n      throw new NotFoundException(\"You have not followed this repo\");\n    }\n\n    if (stargazeExists.deleted_at) {\n      throw new ConflictException(\"You have already unfollowed this repo\");\n    }\n\n    await this.repoStargazeRepository.softDelete(stargazeExists.id);\n\n    return stargazeExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StripeModule.html":{"url":"modules/StripeModule.html","title":"module - StripeModule","body":"\n                   \n\n\n\n\n    Modules\n    StripeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StripeModule\n\n\n\ncluster_StripeModule_exports\n\n\n\ncluster_StripeModule_providers\n\n\n\n\nStripeService \n\nStripeService \n\n\n\nStripeModule\n\nStripeModule\n\nStripeService  -->\n\nStripeModule->StripeService \n\n\n\n\n\nStripeService\n\nStripeService\n\nStripeModule -->\n\nStripeService->StripeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stripe/stripe.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StripeService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StripeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { StripeService } from \"./stripe.service\";\n\n@Module({\n  imports: [],\n  providers: [StripeService],\n  exports: [StripeService],\n})\nexport class StripeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StripeService.html":{"url":"injectables/StripeService.html","title":"injectable - StripeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StripeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stripe/stripe.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _stripe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCustomer\n                            \n                            \n                                    Async\n                                createCheckoutSession\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stripe\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/stripe/stripe.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addCustomer\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCustomer(id: number, email?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stripe/stripe.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCheckoutSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCheckoutSession(customer: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stripe/stripe.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    customer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _stripe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Stripe\n\n                    \n                \n                    \n                        \n                                Defined in src/stripe/stripe.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stripe\n                    \n                \n\n                \n                    \n                        getstripe()\n                    \n                \n                            \n                                \n                                    Defined in src/stripe/stripe.service.ts:12\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\n\nimport Stripe from \"stripe\";\n\n@Injectable()\nexport class StripeService {\n  private _stripe?: Stripe;\n\n  constructor(private configService: ConfigService) {}\n\n  get stripe() {\n    if (!this._stripe) {\n      this._stripe = new Stripe(this.configService.get(\"stripe.secretKey\")!, { apiVersion: \"2022-11-15\" });\n    }\n\n    return this._stripe;\n  }\n\n  async addCustomer(id: number, email?: string) {\n    return this.stripe.customers.create({\n      metadata: { userId: id },\n      email,\n    });\n  }\n\n  async createCheckoutSession(customer: string) {\n    const session = await this.stripe.checkout.sessions.create({\n      payment_method_types: [\"card\"],\n      billing_address_collection: \"required\",\n      allow_promotion_codes: true,\n      customer,\n      line_items: [\n        {\n          price: this.configService.get(\"stripe.subscriptionPriceID\")!,\n          quantity: 1,\n        },\n      ],\n      mode: \"subscription\",\n      success_url: `${this.configService.get(\"stripe.subscriptionSessionCheckoutSuccessURL\")!}`,\n      cancel_url: `${this.configService.get(\"stripe.subscriptionSessionCancelURL\")!}`,\n    });\n\n    return { sessionId: session.id };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StripeSubscriptionModule.html":{"url":"modules/StripeSubscriptionModule.html","title":"module - StripeSubscriptionModule","body":"\n                   \n\n\n\n\n    Modules\n    StripeSubscriptionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StripeSubscriptionModule\n\n\n\ncluster_StripeSubscriptionModule_providers\n\n\n\ncluster_StripeSubscriptionModule_exports\n\n\n\n\nStripeSubscriptionService \n\nStripeSubscriptionService \n\n\n\nStripeSubscriptionModule\n\nStripeSubscriptionModule\n\nStripeSubscriptionService  -->\n\nStripeSubscriptionModule->StripeSubscriptionService \n\n\n\n\n\nStripeSubscriptionService\n\nStripeSubscriptionService\n\nStripeSubscriptionModule -->\n\nStripeSubscriptionService->StripeSubscriptionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscription/stripe-subscription.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StripeSubscriptionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StripeSubscriptionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbSubscription } from \"../subscription/stripe-subscription.dto\";\nimport { StripeSubscriptionService } from \"./stripe-subscription.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbSubscription], \"ApiConnection\")],\n  providers: [StripeSubscriptionService],\n  exports: [StripeSubscriptionService],\n})\nexport class StripeSubscriptionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StripeSubscriptionService.html":{"url":"injectables/StripeSubscriptionService.html","title":"injectable - StripeSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StripeSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscription/stripe-subscription.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                upsertSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriptionRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/subscription/stripe-subscription.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriptionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/subscription/stripe-subscription.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        upsertSubscription\n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertSubscription(subscription: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/subscription/stripe-subscription.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\n\nimport { DbSubscription } from \"./stripe-subscription.dto\";\n\n@Injectable()\nexport class StripeSubscriptionService {\n  constructor(\n    @InjectRepository(DbSubscription, \"ApiConnection\")\n    private subscriptionRepository: Repository\n  ) {}\n\n  baseQueryBuilder() {\n    return this.subscriptionRepository.createQueryBuilder(\"subscription\");\n  }\n\n  async upsertSubscription(subscription: Partial) {\n    return this.subscriptionRepository.save(subscription);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StripeWebHookModule.html":{"url":"modules/StripeWebHookModule.html","title":"module - StripeWebHookModule","body":"\n                   \n\n\n\n\n    Modules\n    StripeWebHookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StripeWebHookModule\n\n\n\ncluster_StripeWebHookModule_exports\n\n\n\ncluster_StripeWebHookModule_imports\n\n\n\n\nCustomerModule\n\nCustomerModule\n\n\n\nStripeWebHookModule\n\nStripeWebHookModule\n\nStripeWebHookModule -->\n\nCustomerModule->StripeWebHookModule\n\n\n\n\n\nStripeModule\n\nStripeModule\n\nStripeWebHookModule -->\n\nStripeModule->StripeWebHookModule\n\n\n\n\n\nStripeSubscriptionModule\n\nStripeSubscriptionModule\n\nStripeWebHookModule -->\n\nStripeSubscriptionModule->StripeWebHookModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nStripeWebHookModule -->\n\nUserModule->StripeWebHookModule\n\n\n\n\n\nStripeWebhookController \n\nStripeWebhookController \n\nStripeWebhookController  -->\n\nStripeWebHookModule->StripeWebhookController \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stripe-webhook/webhook.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            StripeWebhookController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CustomerModule\n                        \n                        \n                            StripeModule\n                        \n                        \n                            StripeSubscriptionModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StripeWebhookController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { StripeSubscriptionModule } from \"../subscription/stripe-subscription.module\";\nimport { CustomerModule } from \"../customer/customer.module\";\n\nimport { StripeWebhookController } from \"./stripe-webhook.controller\";\nimport { StripeModule } from \"../stripe/stripe.module\";\nimport { UserModule } from \"../user/user.module\";\n\n@Module({\n  imports: [StripeSubscriptionModule, CustomerModule, StripeModule, UserModule],\n  providers: [StripeWebhookController],\n  controllers: [StripeWebhookController],\n  exports: [StripeWebhookController],\n})\nexport class StripeWebHookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StripeWebhookController.html":{"url":"controllers/StripeWebhookController.html","title":"controller - StripeWebhookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StripeWebhookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stripe-webhook/stripe-webhook.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stripe\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleStripeWebhook\n                            \n                            \n                                    Private\n                                    Async\n                                manageSubscriptionStatusChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleStripeWebhook\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleStripeWebhook(req: RawBodyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/webhooks')@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/stripe-webhook/stripe-webhook.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            RawBodyRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        manageSubscriptionStatusChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    manageSubscriptionStatusChange(subscriptionId: string, customerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stripe-webhook/stripe-webhook.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscriptionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    customerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { BadRequestException, Controller, Logger, Post, RawBodyRequest, Req } from \"@nestjs/common\";\nimport { ApiOkResponse, ApiTags } from \"@nestjs/swagger\";\nimport Stripe from \"stripe\";\n\nimport { toDateTime } from \"./utils\";\nimport { CustomerService } from \"../customer/customer.service\";\nimport { StripeSubscriptionService } from \"../subscription/stripe-subscription.service\";\nimport { StripeService } from \"../stripe/stripe.service\";\nimport { UserService } from \"../user/user.service\";\n\nconst relevantEvents = new Set([\n  \"checkout.session.completed\",\n  \"customer.subscription.created\",\n  \"customer.subscription.updated\",\n  \"customer.subscription.deleted\",\n]);\n\n@ApiTags(\"Stripe service\")\n@Controller(\"stripe\")\nexport class StripeWebhookController {\n  private logger = new Logger(`StripeWebhook`);\n\n  constructor(\n    private customerService: CustomerService,\n    private stripeSubscriptionService: StripeSubscriptionService,\n    private stripeService: StripeService,\n    private configService: ConfigService,\n    private userService: UserService\n  ) {}\n\n  private async manageSubscriptionStatusChange(subscriptionId: string, customerId: string) {\n    const customerData = await this.customerService.findByCustomerId(customerId);\n\n    if (!customerData) {\n      throw new BadRequestException();\n    }\n\n    const { id: uuid } = customerData;\n    const userId = parseInt(`${uuid}`, 10);\n    const subscription = await this.stripeService.stripe.subscriptions.retrieve(subscriptionId, {\n      expand: [\"default_payment_method\"],\n    });\n\n    // upsert the latest status of the subscription object.\n    const subscriptionData = {\n      id: subscription.id,\n      user_id: userId,\n      metadata: JSON.stringify(subscription.metadata),\n      status: subscription.status as string,\n      price_id: subscription.items.data[0].price.id,\n      quantity: subscription.items.data.length,\n      cancel_at_period_end: subscription.cancel_at_period_end,\n      cancel_at: subscription.cancel_at ? toDateTime(subscription.cancel_at) : undefined,\n      canceled_at: subscription.canceled_at ? toDateTime(subscription.canceled_at) : undefined,\n      current_period_start_at: toDateTime(subscription.current_period_start),\n      current_period_end_at: toDateTime(subscription.current_period_end),\n      created_at: toDateTime(subscription.created),\n      ended_at: subscription.ended_at ? toDateTime(subscription.ended_at) : undefined,\n      trial_start_at: subscription.trial_start ? toDateTime(subscription.trial_start) : undefined,\n      trial_end_at: subscription.trial_end ? toDateTime(subscription.trial_end) : undefined,\n    };\n\n    try {\n      await this.stripeSubscriptionService.upsertSubscription(subscriptionData);\n\n      const userRole = subscription.status === \"active\" ? 50 : 10;\n\n      await this.userService.updateRole(userId, userRole);\n    } catch (e: unknown) {\n      this.logger.error(\n        `Error inserting/updating subscription [${subscription.id}] for user [${userId}]: ${(e as Error).toString()}`\n      );\n      throw new BadRequestException();\n    }\n\n    this.logger.log(`Inserted/updated subscription [${subscription.id}] for user [${userId}]`);\n  }\n\n  @Post(\"/webhooks\")\n  @ApiOkResponse()\n  async handleStripeWebhook(@Req() req: RawBodyRequest) {\n    const sig = (req.headers as unknown as Record)[\"stripe-signature\"];\n    const webhookSecret: string | undefined = this.configService.get(\"stripe.webhookSecret\");\n\n    if (!sig || !webhookSecret) {\n      return;\n    }\n\n    const event = this.stripeService.stripe.webhooks.constructEvent(req.rawBody!, sig, webhookSecret);\n\n    if (relevantEvents.has(event.type)) {\n      const subEvents = [\n        \"customer.subscription.created\",\n        \"customer.subscription.updated\",\n        \"customer.subscription.deleted\",\n      ];\n\n      if (subEvents.includes(event.type)) {\n        const subscription = event.data.object as Stripe.Subscription;\n\n        await this.manageSubscriptionStatusChange(subscription.id, subscription.customer as string);\n      } else if (event.type === \"checkout.session.completed\") {\n        const checkoutSession = event.data.object as Stripe.Checkout.Session;\n\n        if (checkoutSession.mode === \"subscription\") {\n          const subscriptionId = checkoutSession.subscription;\n\n          await this.manageSubscriptionStatusChange(subscriptionId as string, checkoutSession.customer as string);\n        }\n      } else {\n        throw new BadRequestException();\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubmitModule.html":{"url":"modules/SubmitModule.html","title":"module - SubmitModule","body":"\n                   \n\n\n\n\n    Modules\n    SubmitModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SubmitModule\n\n\n\ncluster_SubmitModule_providers\n\n\n\ncluster_SubmitModule_imports\n\n\n\ncluster_SubmitModule_exports\n\n\n\n\nRepoModule\n\nRepoModule\n\n\n\nSubmitModule\n\nSubmitModule\n\nSubmitModule -->\n\nRepoModule->SubmitModule\n\n\n\n\n\nSubmitService \n\nSubmitService \n\nSubmitService  -->\n\nSubmitModule->SubmitService \n\n\n\n\n\nSubmitService\n\nSubmitService\n\nSubmitModule -->\n\nSubmitService->SubmitModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/submit/submit.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubmitService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoSubmitController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RepoModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SubmitService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserSubmissions } from \"../repo/entities/repo.to.user.submissions.entity\";\nimport { SubmitService } from \"./submit.service\";\nimport { RepoSubmitController } from \"./repo-submit.controller\";\nimport { RepoModule } from \"../repo/repo.module\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbRepo, DbRepoToUserSubmissions], \"ApiConnection\"), RepoModule],\n  controllers: [RepoSubmitController],\n  providers: [SubmitService],\n  exports: [SubmitService],\n})\nexport class SubmitModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmitService.html":{"url":"injectables/SubmitService.html","title":"injectable - SubmitService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubmitService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/submit/submit.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downSubmitByRepoId\n                            \n                            \n                                    Async\n                                submitByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoSubmitRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/submit/submit.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoSubmitRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/submit/submit.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downSubmitByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downSubmitByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/submit/submit.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submitByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/submit/submit.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbRepoToUserSubmissions } from \"../repo/entities/repo.to.user.submissions.entity\";\n\n@Injectable()\nexport class SubmitService {\n  constructor(\n    @InjectRepository(DbRepoToUserSubmissions, \"ApiConnection\")\n    private repoSubmitRepository: Repository\n  ) {}\n\n  baseQueryBuilder() {\n    const builder = this.repoSubmitRepository.createQueryBuilder(\"r2submits\").withDeleted();\n\n    return builder;\n  }\n\n  async submitByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"r2submits.repo_id = :repoId\", { repoId }).andWhere(\"r2submits.user_id = :userId\", { userId });\n\n    const submitExists = await queryBuilder.getOne();\n\n    if (submitExists) {\n      if (!submitExists.deleted_at) {\n        throw new ConflictException(\"You have already submitd for this repo\");\n      }\n\n      await this.repoSubmitRepository.restore(submitExists.id);\n\n      return submitExists;\n    }\n\n    return this.repoSubmitRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downSubmitByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"r2submits.repo_id = :repoId\", { repoId }).andWhere(\"r2submits.user_id = :userId\", { userId });\n\n    const submitExists = await queryBuilder.getOne();\n\n    if (!submitExists) {\n      throw new NotFoundException(\"You have not submitd for this repo\");\n    }\n\n    if (submitExists.deleted_at) {\n      throw new ConflictException(\"You have already removed your submit\");\n    }\n\n    await this.repoSubmitRepository.softDelete(submitExists.id);\n\n    return submitExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SupabaseAuthDto.html":{"url":"classes/SupabaseAuthDto.html","title":"class - SupabaseAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SupabaseAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/supabase-auth-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                bio\n                            \n                            \n                                    Readonly\n                                    Optional\n                                company\n                            \n                            \n                                    Readonly\n                                    Optional\n                                confirmed_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                created_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                display_local_time\n                            \n                            \n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Readonly\n                                    Optional\n                                github_sponsors_url\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                    Optional\n                                insights_role\n                            \n                            \n                                    Readonly\n                                    Optional\n                                is_onboarded\n                            \n                            \n                                    Readonly\n                                    Optional\n                                is_waitlisted\n                            \n                            \n                                    Readonly\n                                    Optional\n                                last_sign_in_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                linkedin_url\n                            \n                            \n                                    Readonly\n                                    Optional\n                                location\n                            \n                            \n                                    Readonly\n                                    Optional\n                                name\n                            \n                            \n                                    Readonly\n                                    Optional\n                                notification_count\n                            \n                            \n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Readonly\n                                    Optional\n                                twitter_username\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                url\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User bio information', example: 'OpenSauced User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User company information', example: 'OpenSauced'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        confirmed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Timestamp representing supabase user registration confirmation', example: '2016-10-19 13:24:51.000000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Timestamp representing supabase user creation', example: '2016-10-19 13:24:51.000000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        display_local_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User display local time information', example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Supabase authenticated user email', example: 'vortex@opensauced.pizza'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        github_sponsors_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'GitHub Sponsors URL', example: 'https://github.com/sponsors/open-sauced'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Supabase authenticated unique user identifier', example: 237133})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        insights_role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Authenticated User's Insights Role', example: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        is_onboarded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Flag indicated whether the user is onboarded', example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        is_waitlisted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Flag indicated whether the user is waitlisted', example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        last_sign_in_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Timestamp representing supabase user last sign in', example: '2016-10-19 13:24:51.000000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        linkedin_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'LinkedIn URL', example: 'https://www.linkedin.com/in/brianldouglas'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User location information', example: 'San Francisco, CA'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User name information', example: 'MrPizza'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        notification_count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Unread User Notification Count', example: 5})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Supabase authenticated user role', example: 'authenticated'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        twitter_username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User Twitter information', example: 'saucedopen'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Timestamp representing supabase user last update', example: '2016-10-19 13:24:51.000000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User website', example: 'https://opensauced.pizza'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        user_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Supabase authenticated user login name', example: '0-vortex'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\n\nexport class SupabaseAuthDto {\n  @ApiProperty({\n    description: \"Supabase authenticated unique user identifier\",\n    example: 237133,\n  })\n  readonly id: string;\n\n  @ApiPropertyOptional({\n    description: \"Supabase authenticated user login name\",\n    example: \"0-vortex\",\n  })\n  readonly user_name?: string;\n\n  @ApiPropertyOptional({\n    description: \"Supabase authenticated user role\",\n    example: \"authenticated\",\n  })\n  readonly role?: string;\n\n  @ApiPropertyOptional({\n    description: \"Supabase authenticated user email\",\n    example: \"vortex@opensauced.pizza\",\n  })\n  readonly email?: string;\n\n  @ApiPropertyOptional({\n    description: \"Timestamp representing supabase user registration confirmation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  readonly confirmed_at?: string;\n\n  @ApiPropertyOptional({\n    description: \"Timestamp representing supabase user last sign in\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  readonly last_sign_in_at?: string;\n\n  @ApiPropertyOptional({\n    description: \"Timestamp representing supabase user creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  readonly created_at?: string;\n\n  @ApiPropertyOptional({\n    description: \"Timestamp representing supabase user last update\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  readonly updated_at?: string;\n\n  @ApiPropertyOptional({\n    description: \"Flag indicated whether the user is onboarded\",\n    example: false,\n  })\n  readonly is_onboarded?: boolean;\n\n  @ApiPropertyOptional({\n    description: \"Flag indicated whether the user is waitlisted\",\n    example: false,\n  })\n  readonly is_waitlisted?: boolean;\n\n  @ApiPropertyOptional({\n    description: \"Authenticated User's Insights Role\",\n    example: 10,\n  })\n  readonly insights_role?: number;\n\n  @ApiPropertyOptional({\n    description: \"User bio information\",\n    example: \"OpenSauced User\",\n  })\n  readonly bio?: string;\n\n  @ApiPropertyOptional({\n    description: \"User name information\",\n    example: \"MrPizza\",\n  })\n  readonly name?: string;\n\n  @ApiPropertyOptional({\n    description: \"User website\",\n    example: \"https://opensauced.pizza\",\n  })\n  readonly url?: string;\n\n  @ApiPropertyOptional({\n    description: \"User Twitter information\",\n    example: \"saucedopen\",\n  })\n  readonly twitter_username?: string;\n\n  @ApiPropertyOptional({\n    description: \"User company information\",\n    example: \"OpenSauced\",\n  })\n  readonly company?: string;\n\n  @ApiPropertyOptional({\n    description: \"User location information\",\n    example: \"San Francisco, CA\",\n  })\n  readonly location?: string;\n\n  @ApiPropertyOptional({\n    description: \"User display local time information\",\n    example: false,\n  })\n  readonly display_local_time?: boolean;\n\n  @ApiPropertyOptional({\n    description: \"LinkedIn URL\",\n    example: \"https://www.linkedin.com/in/brianldouglas\",\n  })\n  readonly linkedin_url?: string;\n\n  @ApiPropertyOptional({\n    description: \"GitHub Sponsors URL\",\n    example: \"https://github.com/sponsors/open-sauced\",\n  })\n  readonly github_sponsors_url?: string;\n\n  @ApiPropertyOptional({\n    description: \"Unread User Notification Count\",\n    example: 5,\n  })\n  readonly notification_count?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseGuard.html":{"url":"injectables/SupabaseGuard.html","title":"injectable - SupabaseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class SupabaseGuard extends AuthGuard(\"supabase\") {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseStrategy.html":{"url":"injectables/SupabaseStrategy.html","title":"injectable - SupabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/supabase.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(req: never)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(user: SupabaseAuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { SupabaseAuthStrategy, SupabaseAuthUser } from \"nestjs-supabase-auth\";\n\n@Injectable()\nexport class SupabaseStrategy extends PassportStrategy(SupabaseAuthStrategy, \"supabase\") {\n  public constructor() {\n    super({\n      supabaseUrl: process.env.SUPABASE_URL,\n      supabaseKey: process.env.SUPABASE_API_KEY,\n      supabaseOptions: {},\n      supabaseJwtSecret: process.env.SUPABASE_JWT_SECRET,\n      extractor: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate(user: SupabaseAuthUser) {\n    return super.validate(user);\n  }\n\n  authenticate(req: never) {\n    super.authenticate(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEndorsementDto.html":{"url":"classes/UpdateEndorsementDto.html","title":"class - UpdateEndorsementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEndorsementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endorsement/dto/update-endorsement.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateEndorsementDto } from \"./create-endorsement.dto\";\n\nexport class UpdateEndorsementDto extends PartialType(CreateEndorsementDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInsightDto.html":{"url":"classes/UpdateInsightDto.html","title":"class - UpdateInsightDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInsightDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/dtos/update-insight.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CreateInsightDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                is_public\n                            \n                            \n                                name\n                            \n                            \n                                repos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        is_public\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Insight Page Visibility', type: Boolean, example: false})@IsBoolean()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateInsightDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateInsightDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Insight Page Name', type: String, example: 'My Team'})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateInsightDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateInsightDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoInfo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'An array of repository information objects', isArray: true, type: RepoInfo, example: undefined})@Type(undefined)@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateInsightDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateInsightDto:32\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateInsightDto } from \"./create-insight.dto\";\n\nexport class UpdateInsightDto extends CreateInsightDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInsightMemberDto.html":{"url":"classes/UpdateInsightMemberDto.html","title":"class - UpdateInsightMemberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInsightMemberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/dtos/update-insight-member.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Insight Member Access', type: String, example: 'view'})@IsString()@IsIn(['view', 'edit', 'admin', 'pending'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/insight/dtos/update-insight-member.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsIn } from \"class-validator\";\n\nexport class UpdateInsightMemberDto {\n  @ApiProperty({\n    description: \"Insight Member Access\",\n    type: String,\n    example: \"view\",\n  })\n  @IsString()\n  @IsIn([\"view\", \"edit\", \"admin\", \"pending\"])\n  access: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCollaborationDto.html":{"url":"classes/UpdateUserCollaborationDto.html","title":"class - UpdateUserCollaborationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCollaborationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/update-user-collaboration.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Collaboration Request Status', type: String, example: 'accept'})@IsString()@IsIn(['accept', 'ignore'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user-collaboration.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsIn, IsString } from \"class-validator\";\n\nexport class UpdateUserCollaborationDto {\n  @ApiProperty({\n    description: \"Collaboration Request Status\",\n    type: String,\n    example: \"accept\",\n  })\n  @IsString()\n  @IsIn([\"accept\", \"ignore\"])\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                bio\n                            \n                            \n                                    Public\n                                    Optional\n                                company\n                            \n                            \n                                    Public\n                                    Optional\n                                display_local_time\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Readonly\n                                    Optional\n                                github_sponsors_url\n                            \n                            \n                                    Readonly\n                                    Optional\n                                linkedin_url\n                            \n                            \n                                    Public\n                                    Optional\n                                location\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                timezone\n                            \n                            \n                                    Public\n                                    Optional\n                                twitter_username\n                            \n                            \n                                    Public\n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User Profile Bio', type: String, example: 'I make the pizza'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User Profile Company', type: String, example: 'OpenSauced'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        display_local_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Display user local time in profile', type: Boolean, example: false})@IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User Profile Email', type: String, example: 'hello@opensauced.pizza'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        github_sponsors_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'GitHub Sponsors URL', example: 'https://github.com/sponsors/open-sauced'})@IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        linkedin_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'LinkedIn URL', example: 'https://www.linkedin.com/in/brianldouglas'})@IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User Profile Location', type: String, example: 'OpenSauced'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User Profile Name', type: String, example: 'Pizza Maker'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User timezone in UTC', type: String, example: 'UTC-5'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        twitter_username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User Profile Twitter Username', type: String, example: 'saucedopen'})@IsString()@Matches(/^(?!.*?admin)(?!.*?twitter)\\w{0,15}$/i, {message: 'Twitter username can only contain letters, numbers, and underscores. It also cannot contain reserved Twitter usernames (twitter or admin).'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User Profile URL', type: String, example: 'https://opensauced.pizza'})@IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsBoolean, IsEmail, IsOptional, IsString, IsUrl, Matches } from \"class-validator\";\n\nexport class UpdateUserDto {\n  @ApiProperty({\n    description: \"User Profile Name\",\n    type: String,\n    example: \"Pizza Maker\",\n  })\n  @IsString()\n  public name: string;\n\n  @ApiProperty({\n    description: \"User Profile Email\",\n    type: String,\n    example: \"hello@opensauced.pizza\",\n  })\n  @IsEmail()\n  public email: string;\n\n  @ApiPropertyOptional({\n    description: \"User Profile Bio\",\n    type: String,\n    example: \"I make the pizza\",\n  })\n  @IsString()\n  @IsOptional()\n  public bio?: string;\n\n  @ApiPropertyOptional({\n    description: \"User Profile URL\",\n    type: String,\n    example: \"https://opensauced.pizza\",\n  })\n  @IsUrl()\n  @IsOptional()\n  public url?: string;\n\n  @ApiPropertyOptional({\n    description: \"User Profile Twitter Username\",\n    type: String,\n    example: \"saucedopen\",\n  })\n  @IsString()\n  @Matches(/^(?!.*?admin)(?!.*?twitter)\\w{0,15}$/i, {\n    message:\n      \"Twitter username can only contain letters, numbers, and underscores. It also cannot contain reserved Twitter usernames (twitter or admin).\",\n  })\n  @IsOptional()\n  public twitter_username?: string;\n\n  @ApiPropertyOptional({\n    description: \"User Profile Company\",\n    type: String,\n    example: \"OpenSauced\",\n  })\n  @IsString()\n  @IsOptional()\n  public company?: string;\n\n  @ApiPropertyOptional({\n    description: \"User Profile Location\",\n    type: String,\n    example: \"OpenSauced\",\n  })\n  @IsString()\n  @IsOptional()\n  public location?: string;\n\n  @ApiPropertyOptional({\n    description: \"Display user local time in profile\",\n    type: Boolean,\n    example: false,\n  })\n  @IsBoolean()\n  @IsOptional()\n  public display_local_time?: boolean;\n\n  @ApiPropertyOptional({\n    description: \"User timezone in UTC\",\n    type: String,\n    example: \"UTC-5\",\n  })\n  @IsString()\n  @IsOptional()\n  public timezone?: string;\n\n  @ApiPropertyOptional({\n    description: \"LinkedIn URL\",\n    example: \"https://www.linkedin.com/in/brianldouglas\",\n  })\n  @IsUrl()\n  @IsOptional()\n  readonly linkedin_url?: string;\n\n  @ApiPropertyOptional({\n    description: \"GitHub Sponsors URL\",\n    example: \"https://github.com/sponsors/open-sauced\",\n  })\n  @IsUrl()\n  @IsOptional()\n  readonly github_sponsors_url?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEmailPreferencesDto.html":{"url":"classes/UpdateUserEmailPreferencesDto.html","title":"class - UpdateUserEmailPreferencesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEmailPreferencesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/update-user-email-prefs.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                display_email\n                            \n                            \n                                    Public\n                                receive_collaboration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        display_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User Display Public Email', type: Boolean, example: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user-email-prefs.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        receive_collaboration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User Recieve Collaboration Requests', type: Boolean, example: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user-email-prefs.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsBoolean } from \"class-validator\";\n\nexport class UpdateUserEmailPreferencesDto {\n  @ApiProperty({\n    description: \"User Display Public Email\",\n    type: Boolean,\n    example: false,\n  })\n  @IsBoolean()\n  public display_email: boolean;\n\n  @ApiProperty({\n    description: \"User Recieve Collaboration Requests\",\n    type: Boolean,\n    example: false,\n  })\n  @IsBoolean()\n  public receive_collaboration: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserProfileInterestsDto.html":{"url":"classes/UpdateUserProfileInterestsDto.html","title":"class - UpdateUserProfileInterestsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserProfileInterestsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/update-user-interests.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                interests\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        interests\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'An array of interests', type: undefined, isArray: true, example: undefined})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user-interests.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray } from \"class-validator\";\n\nexport class UpdateUserProfileInterestsDto {\n  @ApiProperty({\n    description: \"An array of interests\",\n    type: [String],\n    isArray: true,\n    example: [\"javascript\", \"react\"],\n  })\n  @IsArray()\n  public interests: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserCollaborationController.html":{"url":"controllers/UserCollaborationController.html","title":"controller - UserCollaborationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserCollaborationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-collaboration.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user/collaborations\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUserCollaboration\n                            \n                            \n                                    Async\n                                findAllUserCollaborations\n                            \n                            \n                                    Async\n                                removeUserCollaborationById\n                            \n                            \n                                    Async\n                                updateUserCollaboration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserCollaboration\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserCollaboration(createUserCollaborationDto: CreateUserCollaborationDto, user: SupabaseAuthUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiOperation({operationId: 'addUserCollaboration', summary: 'Adds a new collaboration request for the user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbUserCollaboration})@ApiNotFoundResponse({description: 'Unable to add user collaboration'})@ApiBadRequestResponse({description: 'Invalid request'})@ApiConflictResponse({description: 'The requested user is not accepting collaboration requests'})@ApiBody({type: CreateUserCollaborationDto})\n                \n            \n\n            \n                \n                    Defined in src/user/user-collaboration.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserCollaborationDto\n                                    \n                                                CreateUserCollaborationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserCollaborations\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserCollaborations(pageOptionsDto: PageOptionsDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@ApiOperation({operationId: 'findAllUserCollaborations', summary: 'Listing all collaborations for the authenticated user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiPaginatedResponse(DbUserCollaboration)@ApiOkResponse({type: DbUserCollaboration})\n                \n            \n\n            \n                \n                    Defined in src/user/user-collaboration.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeUserCollaborationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUserCollaborationById(id: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({operationId: 'removeUserCollaborationById', summary: 'Removes the user collaboration request'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiNotFoundResponse({description: 'Unable to remove user collaboration'})@ApiBadRequestResponse({description: 'Invalid request'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-collaboration.controller.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserCollaboration\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserCollaboration(id: string, userId: number, updateUserCollaborationDto: UpdateUserCollaborationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({operationId: 'updateUserCollaboration', summary: 'Updates a user collaboration'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbUserCollaboration})@ApiNotFoundResponse({description: 'Unable to find user collaboration'})@ApiBadRequestResponse({description: 'Invalid request'})@ApiBody({type: UpdateUserCollaborationDto})\n                \n            \n\n            \n                \n                    Defined in src/user/user-collaboration.controller.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserCollaborationDto\n                                    \n                                                UpdateUserCollaborationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UnauthorizedException,\n  UseGuards,\n} from \"@nestjs/common\";\nimport {\n  ApiOperation,\n  ApiOkResponse,\n  ApiNotFoundResponse,\n  ApiBearerAuth,\n  ApiTags,\n  ApiBadRequestResponse,\n  ApiBody,\n  ApiConflictResponse,\n} from \"@nestjs/swagger\";\nimport { SupabaseAuthUser } from \"nestjs-supabase-auth\";\n\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { User, UserId } from \"../auth/supabase.user.decorator\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\nimport { UserService } from \"../user/user.service\";\nimport { UserCollaborationService } from \"./user-collaboration.service\";\nimport { CreateUserCollaborationDto } from \"./dtos/create-user-collaboration.dto\";\nimport { DbUserCollaboration } from \"./entities/user-collaboration.entity\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { UpdateUserCollaborationDto } from \"./dtos/update-user-collaboration.dto\";\n\n@Controller(\"user/collaborations\")\n@ApiTags(\"User Collaborations service\")\nexport class UserCollaborationController {\n  constructor(\n    private readonly userCollaborationService: UserCollaborationService,\n    private readonly userService: UserService\n  ) {}\n\n  @Get(\"/\")\n  @ApiOperation({\n    operationId: \"findAllUserCollaborations\",\n    summary: \"Listing all collaborations for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiPaginatedResponse(DbUserCollaboration)\n  @ApiOkResponse({ type: DbUserCollaboration })\n  async findAllUserCollaborations(\n    @Query() pageOptionsDto: PageOptionsDto,\n    @UserId() userId: number\n  ): Promise> {\n    return this.userCollaborationService.findAllUserCollaborations(pageOptionsDto, userId);\n  }\n\n  @Post(\"/\")\n  @ApiOperation({\n    operationId: \"addUserCollaboration\",\n    summary: \"Adds a new collaboration request for the user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbUserCollaboration })\n  @ApiNotFoundResponse({ description: \"Unable to add user collaboration\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiConflictResponse({ description: \"The requested user is not accepting collaboration requests\" })\n  @ApiBody({ type: CreateUserCollaborationDto })\n  async addUserCollaboration(\n    @Body() createUserCollaborationDto: CreateUserCollaborationDto,\n    @User() user: SupabaseAuthUser\n  ): Promise {\n    const recipient = await this.userService.findOneByUsername(createUserCollaborationDto.username);\n    const requester = await this.userService.findOneById(user.user_metadata.sub as number);\n\n    if (requester.role  {\n    const collaboration = await this.userCollaborationService.findOneById(id);\n\n    if (collaboration.user_id !== userId) {\n      throw new UnauthorizedException();\n    }\n\n    const updatedUserCollaboration: Partial = { status: updateUserCollaborationDto.status };\n\n    await this.userCollaborationService.updateUserCollaboration(id, updatedUserCollaboration);\n\n    return this.userCollaborationService.findOneById(id);\n  }\n\n  @Delete(\":id\")\n  @ApiOperation({\n    operationId: \"removeUserCollaborationById\",\n    summary: \"Removes the user collaboration request\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiNotFoundResponse({ description: \"Unable to remove user collaboration\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  async removeUserCollaborationById(@Param(\"id\") id: string, @UserId() userId: number): Promise {\n    const userCollaboration = await this.userCollaborationService.findOneById(id);\n\n    if (userCollaboration.user_id !== userId) {\n      throw new UnauthorizedException();\n    }\n\n    await this.userCollaborationService.removeUserCollaboration(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserCollaborationService.html":{"url":"injectables/UserCollaborationService.html","title":"injectable - UserCollaborationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserCollaborationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-collaboration.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUserCollaboration\n                            \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAllUserCollaborations\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                removeUserCollaboration\n                            \n                            \n                                    Async\n                                updateUserCollaboration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userCollaborationRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/user-collaboration.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userCollaborationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserCollaboration\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserCollaboration(userCollaboration: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-collaboration.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userCollaboration\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-collaboration.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SelectQueryBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserCollaborations\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserCollaborations(pageOptionsDto: PageOptionsDto, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-collaboration.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-collaboration.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeUserCollaboration\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUserCollaboration(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-collaboration.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserCollaboration\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserCollaboration(id: string, userCollaboration: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-collaboration.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userCollaboration\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository, SelectQueryBuilder } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\n\nimport { DbUserCollaboration } from \"./entities/user-collaboration.entity\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\n\n@Injectable()\nexport class UserCollaborationService {\n  constructor(\n    @InjectRepository(DbUserCollaboration, \"ApiConnection\")\n    private userCollaborationRepository: Repository\n  ) {}\n\n  baseQueryBuilder(): SelectQueryBuilder {\n    const builder = this.userCollaborationRepository.createQueryBuilder(\"user_collaborations\");\n\n    return builder;\n  }\n\n  async findOneById(id: string): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"user_collaborations.id = :id\", { id });\n\n    const item: DbUserCollaboration | null = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async addUserCollaboration(userCollaboration: Partial) {\n    return this.userCollaborationRepository.save(userCollaboration);\n  }\n\n  async updateUserCollaboration(id: string, userCollaboration: Partial) {\n    return this.userCollaborationRepository.update(id, userCollaboration);\n  }\n\n  async removeUserCollaboration(id: string) {\n    return this.userCollaborationRepository.softDelete(id);\n  }\n\n  async findAllUserCollaborations(\n    pageOptionsDto: PageOptionsDto,\n    userId: number\n  ): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .innerJoinAndSelect(\"user_collaborations.user\", \"user\")\n      .innerJoinAndSelect(\"user_collaborations.request_user\", \"request_user\")\n      .where(\"user_collaborations.user_id = :userId\", { userId })\n      .orderBy(\"user_collaborations.updated_at\", \"DESC\");\n\n    queryBuilder.offset(pageOptionsDto.skip).limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllHighlightsByUsername\n                            \n                            \n                                    Async\n                                findAllTopReposByUsername\n                            \n                            \n                                    Async\n                                findContributorPullRequests\n                            \n                            \n                                    Async\n                                findOneUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllHighlightsByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllHighlightsByUsername(username: string, pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username/highlights')@ApiOperation({operationId: 'findAllHighlightsByUsername', summary: 'Listing all Highlights for a user and paginate them'})@ApiPaginatedResponse(DbUserHighlight)@ApiOkResponse({type: DbUserHighlight})@ApiNotFoundResponse({description: 'Highlights not found'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllTopReposByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllTopReposByUsername(username: string, pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username/top-repos')@ApiOperation({operationId: 'findAllTopReposByUsername', summary: 'Listing all Top Repos for a user and paginate them'})@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})@ApiNotFoundResponse({description: 'Top repos not found'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findContributorPullRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    findContributorPullRequests(username: string, pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username/prs')@ApiOperation({operationId: 'findContributorPullRequests', summary: 'Finds pull requests by :username'})@ApiPaginatedResponse(DbPullRequest)@ApiOkResponse({type: DbPullRequest})@ApiNotFoundResponse({description: 'User not found'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneUserById(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username')@ApiOperation({operationId: 'findOneUserByUserame', summary: 'Finds a user by :username'})@ApiOkResponse({type: DbUser})@ApiNotFoundResponse({description: 'User not found'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from \"@nestjs/common\";\nimport { ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { DbUserHighlight } from \"./entities/user-highlight.entity\";\nimport { UserHighlightsService } from \"./user-highlights.service\";\nimport { DbUser } from \"./user.entity\";\nimport { UserService } from \"./user.service\";\nimport { PullRequestService } from \"../pull-requests/pull-request.service\";\nimport { DbPullRequest } from \"../pull-requests/entities/pull-request.entity\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\n\n@Controller(\"users\")\n@ApiTags(\"User service\")\nexport class UserController {\n  constructor(\n    private userService: UserService,\n    private pullRequestService: PullRequestService,\n    private userHighlightsService: UserHighlightsService,\n    private repoService: RepoService\n  ) {}\n\n  @Get(\"/:username\")\n  @ApiOperation({\n    operationId: \"findOneUserByUserame\",\n    summary: \"Finds a user by :username\",\n  })\n  @ApiOkResponse({ type: DbUser })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  async findOneUserById(@Param(\"username\") username: string): Promise {\n    return this.userService.findOneByUsername(username);\n  }\n\n  @Get(\"/:username/prs\")\n  @ApiOperation({\n    operationId: \"findContributorPullRequests\",\n    summary: \"Finds pull requests by :username\",\n  })\n  @ApiPaginatedResponse(DbPullRequest)\n  @ApiOkResponse({ type: DbPullRequest })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  async findContributorPullRequests(\n    @Param(\"username\") username: string,\n    @Query() pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    return this.pullRequestService.findAllByContributor(username, pageOptionsDto);\n  }\n\n  @Get(\"/:username/highlights\")\n  @ApiOperation({\n    operationId: \"findAllHighlightsByUsername\",\n    summary: \"Listing all Highlights for a user and paginate them\",\n  })\n  @ApiPaginatedResponse(DbUserHighlight)\n  @ApiOkResponse({ type: DbUserHighlight })\n  @ApiNotFoundResponse({ description: \"Highlights not found\" })\n  async findAllHighlightsByUsername(\n    @Param(\"username\") username: string,\n    @Query() pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    const user = await this.userService.findOneByUsername(username);\n\n    return this.userHighlightsService.findAllByUserId(pageOptionsDto, user.id);\n  }\n\n  @Get(\"/:username/top-repos\")\n  @ApiOperation({\n    operationId: \"findAllTopReposByUsername\",\n    summary: \"Listing all Top Repos for a user and paginate them\",\n  })\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  @ApiNotFoundResponse({ description: \"Top repos not found\" })\n  async findAllTopReposByUsername(\n    @Param(\"username\") username: string,\n    @Query() pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    const user = await this.userService.findOneByUsername(username);\n\n    return this.repoService.findAll(pageOptionsDto, user.id, [\"TopRepos\"]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserEndorsementController.html":{"url":"controllers/UserEndorsementController.html","title":"controller - UserEndorsementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserEndorsementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-endorsement.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user/endorsements\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllUserCreatedEndorsements\n                            \n                            \n                                    Async\n                                findAllUserReceivedEndorsements\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserCreatedEndorsements\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserCreatedEndorsements(userId: number, pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/created')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'findAllUserCreatedEndorsements', summary: 'Finds all endorsements created by the authenticated user and paginates them'})@ApiPaginatedResponse(DbEndorsement)@ApiOkResponse({type: DbEndorsement})\n                \n            \n\n            \n                \n                    Defined in src/user/user-endorsement.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserReceivedEndorsements\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserReceivedEndorsements(userId: number, pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/received')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'findAllUserReceivedEndorsements', summary: 'Finds all endorsements received by the authenticated user and paginates them'})@ApiPaginatedResponse(DbEndorsement)@ApiOkResponse({type: DbEndorsement})\n                \n            \n\n            \n                \n                    Defined in src/user/user-endorsement.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, UseGuards } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\n\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { EndorsementService } from \"../endorsement/endorsement.service\";\nimport { DbEndorsement } from \"../endorsement/entities/endorsement.entity\";\n\n@Controller(\"user/endorsements\")\n@ApiTags(\"Endorsements service\")\nexport class UserEndorsementController {\n  constructor(private readonly endorsementService: EndorsementService) {}\n\n  @Get(\"/created\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"findAllUserCreatedEndorsements\",\n    summary: \"Finds all endorsements created by the authenticated user and paginates them\",\n  })\n  @ApiPaginatedResponse(DbEndorsement)\n  @ApiOkResponse({ type: DbEndorsement })\n  async findAllUserCreatedEndorsements(@UserId() userId: number, @Query() pageOptionsDto: PageOptionsDto) {\n    return this.endorsementService.findAllByCreatorUserId(userId, pageOptionsDto);\n  }\n\n  @Get(\"/received\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"findAllUserReceivedEndorsements\",\n    summary: \"Finds all endorsements received by the authenticated user and paginates them\",\n  })\n  @ApiPaginatedResponse(DbEndorsement)\n  @ApiOkResponse({ type: DbEndorsement })\n  async findAllUserReceivedEndorsements(@UserId() userId: number, @Query() pageOptionsDto: PageOptionsDto) {\n    return this.endorsementService.findAllByRecipientUserId(userId, pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFollowService.html":{"url":"injectables/UserFollowService.html","title":"injectable - UserFollowService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserFollowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-follow.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUserFollowerByUserId\n                            \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findUserFollowerById\n                            \n                            \n                                    Async\n                                removeUserFollowerById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFollowRepository: Repository, userService: UserService, userNotificationService: UserNotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user-follow.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFollowRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userNotificationService\n                                                  \n                                                        \n                                                                        UserNotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserFollowerByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserFollowerByUserId(userId: number, followedUserId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-follow.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    followedUserId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-follow.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserFollowerById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserFollowerById(userId: number, followerUserId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-follow.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    followerUserId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeUserFollowerById\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUserFollowerById(userId: number, followerUserId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-follow.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    followerUserId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { DbUserToUserFollows } from \"./entities/user-follows.entity\";\nimport { UserNotificationService } from \"./user-notifcation.service\";\nimport { UserService } from \"./user.service\";\n\n@Injectable()\nexport class UserFollowService {\n  constructor(\n    @InjectRepository(DbUserToUserFollows, \"ApiConnection\")\n    private userFollowRepository: Repository,\n    private userService: UserService,\n    private userNotificationService: UserNotificationService\n  ) {}\n\n  baseQueryBuilder() {\n    const builder = this.userFollowRepository.createQueryBuilder(\"user_follows\").withDeleted();\n\n    return builder;\n  }\n\n  async findUserFollowerById(userId: number, followerUserId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"user_follows.user_id = :userId\", { userId })\n      .andWhere(\"user_follows.following_user_id = :followerUserId\", { followerUserId })\n      .andWhere(\"user_follows.deleted_at IS NULL\");\n    const followExists = await queryBuilder.getOne();\n\n    if (!followExists) {\n      throw new NotFoundException(\"You are not following this user\");\n    }\n\n    return followExists;\n  }\n\n  async addUserFollowerByUserId(userId: number, followedUserId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .addSelect(\"user_follows.deleted_at\", \"user_follows_deleted_at\")\n      .where(\"user_follows.user_id = :userId\", { userId })\n      .andWhere(\"user_follows.following_user_id = :followedUserId\", { followedUserId });\n\n    const followExists = await queryBuilder.getOne();\n\n    if (followExists) {\n      if (!followExists.deleted_at) {\n        throw new ConflictException(\"You have already followed this user\");\n      }\n\n      await this.userFollowRepository.restore(followExists.id);\n      await this.userNotificationService.addUserFollowerNotification(userId, followedUserId);\n\n      return followExists;\n    }\n\n    await this.userNotificationService.addUserFollowerNotification(userId, followedUserId);\n\n    return this.userFollowRepository.save({\n      user_id: userId,\n      following_user_id: followedUserId,\n    });\n  }\n\n  async removeUserFollowerById(userId: number, followerUserId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .addSelect(\"user_follows.deleted_at\", \"user_follows_deleted_at\")\n      .where(\"user_follows.user_id = :userId\", { userId })\n      .andWhere(\"user_follows.following_user_id = :followerUserId\", { followerUserId });\n\n    const followExists = await queryBuilder.getOne();\n\n    if (!followExists) {\n      throw new NotFoundException(\"You have not followed this user\");\n    }\n\n    if (followExists.deleted_at) {\n      throw new ConflictException(\"You are not following this user\");\n    }\n\n    await this.userFollowRepository.softDelete(followExists.id);\n\n    return queryBuilder.getOneOrFail();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserFollowsController.html":{"url":"controllers/UserFollowsController.html","title":"controller - UserFollowsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserFollowsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-follow.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                followUserByUsername\n                            \n                            \n                                    Async\n                                getFollowStatusByUsername\n                            \n                            \n                                    Async\n                                unfollowUserByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        followUserByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    followUserByUsername(username: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:username/follow')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'followUserById', summary: 'Follows a user by username'})@ApiNotFoundResponse({description: 'User not found'})@ApiConflictResponse({description: 'You have already followed this user'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-follow.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFollowStatusByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFollowStatusByUsername(username: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username/follow')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'getFollowStatusByUsername', summary: 'Checks if the authenticated user follows the provided username'})@ApiNotFoundResponse({description: 'User follow not found'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-follow.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unfollowUserByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    unfollowUserByUserId(username: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:username/follow')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'unfollowUserByUsername', summary: 'Unfollows a user by username'})@ApiOkResponse({description: 'Returns the user follow', type: DbUserToUserFollows})@ApiNotFoundResponse({description: 'User not found'})@ApiConflictResponse({description: 'You are now following this user'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-follow.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, Put, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { DbUserToUserFollows } from \"./entities/user-follows.entity\";\nimport { UserFollowService } from \"./user-follow.service\";\nimport { UserService } from \"./user.service\";\n\n@Controller(\"users\")\n@ApiTags(\"User service\")\nexport class UserFollowsController {\n  constructor(private readonly userService: UserService, private readonly userFollowService: UserFollowService) {}\n\n  @Get(\"/:username/follow\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"getFollowStatusByUsername\",\n    summary: \"Checks if the authenticated user follows the provided username\",\n  })\n  @ApiNotFoundResponse({ description: \"User follow not found\" })\n  async getFollowStatusByUsername(\n    @Param(\"username\") username: string,\n    @UserId() userId: number\n  ): Promise {\n    const user = await this.userService.findOneByUsername(username);\n\n    return this.userFollowService.findUserFollowerById(userId, user.id);\n  }\n\n  @Put(\"/:username/follow\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"followUserById\",\n    summary: \"Follows a user by username\",\n  })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  @ApiConflictResponse({ description: \"You have already followed this user\" })\n  async followUserByUsername(\n    @Param(\"username\") username: string,\n    @UserId() userId: number\n  ): Promise {\n    const user = await this.userService.findOneByUsername(username);\n\n    return this.userFollowService.addUserFollowerByUserId(userId, user.id);\n  }\n\n  @Delete(\"/:username/follow\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"unfollowUserByUsername\",\n    summary: \"Unfollows a user by username\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the user follow\",\n    type: DbUserToUserFollows,\n  })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  @ApiConflictResponse({ description: \"You are now following this user\" })\n  async unfollowUserByUserId(\n    @Param(\"username\") username: string,\n    @UserId() userId: number\n  ): Promise {\n    const user = await this.userService.findOneByUsername(username);\n\n    return this.userFollowService.removeUserFollowerById(userId, user.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserHighlightsController.html":{"url":"controllers/UserHighlightsController.html","title":"controller - UserHighlightsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserHighlightsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-highlight.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user/highlights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addHighlightReactionForUser\n                            \n                            \n                                    Async\n                                addInsightForUser\n                            \n                            \n                                    Async\n                                deleteHighlightForUser\n                            \n                            \n                                    Async\n                                deleteHighlightReactionForUser\n                            \n                            \n                                    Async\n                                getAllHighlightUserReactions\n                            \n                            \n                                    Async\n                                getFollowingHighlightRepos\n                            \n                            \n                                    Async\n                                getFollowingHighlights\n                            \n                            \n                                    Async\n                                getUserHighlight\n                            \n                            \n                                    Async\n                                updateHighlightForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addHighlightReactionForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    addHighlightReactionForUser(highlightId: number, emojiId: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/:id/reactions/:emojiId')@ApiOperation({operationId: 'addHighlightReactionForUser', summary: 'Adds a new highlight reaction for the authenticated user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbUserHighlightReaction})@ApiNotFoundResponse({description: 'Highlight does not exist'})@ApiBadRequestResponse({description: 'Invalid request'})@ApiConflictResponse({description: 'Unable to add user highlight reaction'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-highlight.controller.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    emojiId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addInsightForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInsightForUser(createHighlightDto: CreateUserHighlightDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiOperation({operationId: 'addHighlightForUser', summary: 'Adds a new highlight for the authenticated user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbUserHighlight})@ApiNotFoundResponse({description: 'Unable to add user highlight'})@ApiBadRequestResponse({description: 'Invalid request'})@ApiBody({type: CreateUserHighlightDto})\n                \n            \n\n            \n                \n                    Defined in src/user/user-highlight.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createHighlightDto\n                                    \n                                                CreateUserHighlightDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteHighlightForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteHighlightForUser(userId: number, highlightId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@ApiOperation({operationId: 'deleteHighlightForUser', summary: 'Deletes the highlight for the authenticated user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiNotFoundResponse({description: 'Unable to delete user highlight'})@ApiBadRequestResponse({description: 'Invalid request'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-highlight.controller.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteHighlightReactionForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteHighlightReactionForUser(userId: number, highlightId: number, emojiId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/reactions/:emojiId')@ApiOperation({operationId: 'deleteHighlightReactionForUser', summary: 'Deletes the highlight reaction for the authenticated user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiNotFoundResponse({description: 'Unable to delete user highlight reaction'})@ApiBadRequestResponse({description: 'Invalid request'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-highlight.controller.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    emojiId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllHighlightUserReactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllHighlightUserReactions(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/reactions')@ApiOperation({operationId: 'getAllHighlightUserReactions', summary: 'Retrieves a highlight reactions for the authenticated user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbUserHighlightReactionResponse})@ApiNotFoundResponse({description: 'Unable to get user highlight reactions'})@ApiBadRequestResponse({description: 'Invalid request'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-highlight.controller.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFollowingHighlightRepos\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFollowingHighlightRepos(pageOptionsDto: HighlightOptionsDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/following/repos')@ApiOperation({operationId: 'getFollowingHighlightRepos', summary: 'Fetches highlight repos for users the authenticated user follows'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbUserHighlightRepo})@ApiBadRequestResponse({description: 'Invalid request'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-highlight.controller.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                HighlightOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFollowingHighlights\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFollowingHighlights(pageOptionsDto: HighlightOptionsDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/following')@ApiOperation({operationId: 'getFollowingHighlights', summary: 'Fetches highlights for users the authenticated user follows'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbUserHighlight})\n                \n            \n\n            \n                \n                    Defined in src/user/user-highlight.controller.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                HighlightOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserHighlight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserHighlight(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'getUserHighlight', summary: 'Retrieves a highlight'})@ApiOkResponse({type: DbUserHighlight})@ApiNotFoundResponse({description: 'Unable to get user highlight'})@ApiBadRequestResponse({description: 'Invalid request'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-highlight.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateHighlightForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHighlightForUser(updateHighlightDto: CreateUserHighlightDto, userId: number, highlightId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@ApiOperation({operationId: 'updateHighlightForUser', summary: 'Updates the highlight for the authenticated user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbUserHighlight})@ApiNotFoundResponse({description: 'Unable to update user highlight'})@ApiBadRequestResponse({description: 'Invalid request'})@ApiBody({type: CreateUserHighlightDto})\n                \n            \n\n            \n                \n                    Defined in src/user/user-highlight.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateHighlightDto\n                                    \n                                                CreateUserHighlightDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n} from \"@nestjs/common\";\nimport {\n  ApiOperation,\n  ApiOkResponse,\n  ApiNotFoundResponse,\n  ApiBearerAuth,\n  ApiTags,\n  ApiBadRequestResponse,\n  ApiBody,\n  ApiConflictResponse,\n} from \"@nestjs/swagger\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { CreateUserHighlightDto } from \"./dtos/create-user-highlight.dto\";\nimport { DbUserHighlightReaction } from \"./entities/user-highlight-reaction.entity\";\nimport { DbUserHighlight } from \"./entities/user-highlight.entity\";\nimport { UserHighlightsService } from \"./user-highlights.service\";\nimport { DbUserHighlightReactionResponse, HighlightOptionsDto } from \"../highlight/dtos/highlight-options.dto\";\nimport { DbUserHighlightRepo } from \"../highlight/entities/user-highlight-repo.entity\";\n\n@Controller(\"user/highlights\")\n@ApiTags(\"User Highlights service\")\nexport class UserHighlightsController {\n  constructor(private readonly userHighlightsService: UserHighlightsService) {}\n\n  @Post(\"/\")\n  @ApiOperation({\n    operationId: \"addHighlightForUser\",\n    summary: \"Adds a new highlight for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbUserHighlight })\n  @ApiNotFoundResponse({ description: \"Unable to add user highlight\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiBody({ type: CreateUserHighlightDto })\n  async addInsightForUser(\n    @Body() createHighlightDto: CreateUserHighlightDto,\n    @UserId() userId: number\n  ): Promise {\n    return this.userHighlightsService.addUserHighlight(userId, createHighlightDto);\n  }\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"getUserHighlight\",\n    summary: \"Retrieves a highlight\",\n  })\n  @ApiOkResponse({ type: DbUserHighlight })\n  @ApiNotFoundResponse({ description: \"Unable to get user highlight\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  async getUserHighlight(@Param(\"id\", ParseIntPipe) id: number): Promise {\n    return this.userHighlightsService.findOneById(id);\n  }\n\n  @Patch(\"/:id\")\n  @ApiOperation({\n    operationId: \"updateHighlightForUser\",\n    summary: \"Updates the highlight for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbUserHighlight })\n  @ApiNotFoundResponse({ description: \"Unable to update user highlight\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiBody({ type: CreateUserHighlightDto })\n  async updateHighlightForUser(\n    @Body() updateHighlightDto: CreateUserHighlightDto,\n    @UserId() userId: number,\n    @Param(\"id\", ParseIntPipe) highlightId: number\n  ): Promise {\n    const highlight = await this.userHighlightsService.findOneById(highlightId, userId);\n\n    await this.userHighlightsService.updateUserHighlight(highlight.id, {\n      ...updateHighlightDto,\n      shipped_at: updateHighlightDto.shipped_at ? new Date(updateHighlightDto.shipped_at) : highlight.created_at,\n    });\n\n    return this.userHighlightsService.findOneById(highlight.id, userId);\n  }\n\n  @Delete(\"/:id\")\n  @ApiOperation({\n    operationId: \"deleteHighlightForUser\",\n    summary: \"Deletes the highlight for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiNotFoundResponse({ description: \"Unable to delete user highlight\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  async deleteHighlightForUser(\n    @UserId() userId: number,\n    @Param(\"id\", ParseIntPipe) highlightId: number\n  ): Promise {\n    const highlight = await this.userHighlightsService.findOneById(highlightId, userId);\n\n    await this.userHighlightsService.deleteUserHighlight(highlight.id);\n  }\n\n  @Get(\"/:id/reactions\")\n  @ApiOperation({\n    operationId: \"getAllHighlightUserReactions\",\n    summary: \"Retrieves a highlight reactions for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbUserHighlightReactionResponse })\n  @ApiNotFoundResponse({ description: \"Unable to get user highlight reactions\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  async getAllHighlightUserReactions(\n    @Param(\"id\", ParseIntPipe) id: number,\n    @UserId() userId: number\n  ): Promise {\n    return this.userHighlightsService.findAllHighlightReactions(id, userId);\n  }\n\n  @Post(\"/:id/reactions/:emojiId\")\n  @ApiOperation({\n    operationId: \"addHighlightReactionForUser\",\n    summary: \"Adds a new highlight reaction for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbUserHighlightReaction })\n  @ApiNotFoundResponse({ description: \"Highlight does not exist\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiConflictResponse({ description: \"Unable to add user highlight reaction\" })\n  async addHighlightReactionForUser(\n    @Param(\"id\", ParseIntPipe) highlightId: number,\n    @Param(\"emojiId\") emojiId: string,\n    @UserId() userId: number\n  ): Promise {\n    const highlight = await this.userHighlightsService.findOneById(highlightId);\n\n    if (Number(highlight.user_id) === userId) {\n      throw new ConflictException(\"You cannot react to your own highlight\");\n    }\n\n    await this.userHighlightsService.addUserHighlightReaction(userId, highlightId, emojiId, highlight.user_id);\n  }\n\n  @Delete(\"/:id/reactions/:emojiId\")\n  @ApiOperation({\n    operationId: \"deleteHighlightReactionForUser\",\n    summary: \"Deletes the highlight reaction for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiNotFoundResponse({ description: \"Unable to delete user highlight reaction\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  async deleteHighlightReactionForUser(\n    @UserId() userId: number,\n    @Param(\"id\", ParseIntPipe) highlightId: number,\n    @Param(\"emojiId\") emojiId: string\n  ): Promise {\n    const userHighlightReaction = await this.userHighlightsService.findOneUserHighlightReaction(\n      highlightId,\n      userId,\n      emojiId\n    );\n\n    await this.userHighlightsService.deleteUserHighlightReaction(userHighlightReaction.id);\n  }\n\n  @Get(\"/following\")\n  @ApiOperation({\n    operationId: \"getFollowingHighlights\",\n    summary: \"Fetches highlights for users the authenticated user follows\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbUserHighlight })\n  async getFollowingHighlights(\n    @Query() pageOptionsDto: HighlightOptionsDto,\n    @UserId() userId: number\n  ): Promise> {\n    return this.userHighlightsService.findAll(pageOptionsDto, userId);\n  }\n\n  @Get(\"/following/repos\")\n  @ApiOperation({\n    operationId: \"getFollowingHighlightRepos\",\n    summary: \"Fetches highlight repos for users the authenticated user follows\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbUserHighlightRepo })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  async getFollowingHighlightRepos(\n    @Query() pageOptionsDto: HighlightOptionsDto,\n    @UserId() userId: number\n  ): Promise> {\n    return this.userHighlightsService.findAllHighlightRepos(pageOptionsDto, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserHighlightsService.html":{"url":"injectables/UserHighlightsService.html","title":"injectable - UserHighlightsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserHighlightsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-highlights.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUserHighlight\n                            \n                            \n                                    Async\n                                addUserHighlightReaction\n                            \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                deleteUserHighlight\n                            \n                            \n                                    Async\n                                deleteUserHighlightReaction\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findAllHighlightReactions\n                            \n                            \n                                    Async\n                                findAllHighlightRepos\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneUserHighlightReaction\n                            \n                            \n                                    Async\n                                updateUserHighlight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userHighlightRepository: Repository, userHighlightReactionRepository: Repository, userNotificationService: UserNotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user-highlights.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userHighlightRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userHighlightReactionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userNotificationService\n                                                  \n                                                        \n                                                                        UserNotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserHighlight\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserHighlight(userId: number, highlight: CreateUserHighlightDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-highlights.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlight\n                                    \n                                                CreateUserHighlightDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserHighlightReaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserHighlightReaction(userId: number, highlightId: number, emojiId: string, highlightUserId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-highlights.service.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    emojiId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightUserId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-highlights.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SelectQueryBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUserHighlight\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUserHighlight(highlightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-highlights.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUserHighlightReaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUserHighlightReaction(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-highlights.service.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: HighlightOptionsDto, followerUserId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-highlights.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                HighlightOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    followerUserId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(pageOptionsDto: PageOptionsDto, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-highlights.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllHighlightReactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllHighlightReactions(highlightId: number, userId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-highlights.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllHighlightRepos\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllHighlightRepos(pageOptionsDto: PageOptionsDto, follwerUserId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-highlights.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    follwerUserId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number, userId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-highlights.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneUserHighlightReaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneUserHighlightReaction(highlightId: number, userId: number, emojiId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-highlights.service.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    emojiId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserHighlight\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserHighlight(highlightId: number, highlight: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-highlights.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlight\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository, SelectQueryBuilder } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { DbUserHighlight } from \"./entities/user-highlight.entity\";\nimport { CreateUserHighlightDto } from \"./dtos/create-user-highlight.dto\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { DbUserHighlightReactionResponse, HighlightOptionsDto } from \"../highlight/dtos/highlight-options.dto\";\nimport { DbUserHighlightReaction } from \"./entities/user-highlight-reaction.entity\";\nimport { UserNotificationService } from \"./user-notifcation.service\";\n\n@Injectable()\nexport class UserHighlightsService {\n  constructor(\n    @InjectRepository(DbUserHighlight, \"ApiConnection\")\n    private userHighlightRepository: Repository,\n    @InjectRepository(DbUserHighlightReaction, \"ApiConnection\")\n    private userHighlightReactionRepository: Repository,\n    private userNotificationService: UserNotificationService\n  ) {}\n\n  baseQueryBuilder(): SelectQueryBuilder {\n    const builder = this.userHighlightRepository.createQueryBuilder(\"user_highlights\");\n\n    return builder;\n  }\n\n  async findOneById(id: number, userId?: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .innerJoin(\"users\", \"users\", \"user_highlights.user_id=users.id\")\n      .addSelect(\"users.login\", \"user_highlights_login\")\n      .where(\"user_highlights.id = :id\", { id });\n\n    if (userId) {\n      queryBuilder.andWhere(\"user_highlights.user_id = :userId\", { userId });\n    }\n\n    const item: DbUserHighlight | null = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findAll(pageOptionsDto: HighlightOptionsDto, followerUserId?: number): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .innerJoin(\"users\", \"users\", \"user_highlights.user_id=users.id\")\n      .addSelect(\"users.name\", \"user_highlights_name\")\n      .addSelect(\"users.login\", \"user_highlights_login\")\n      .orderBy(\"user_highlights.updated_at\", \"DESC\");\n\n    const filters: [string, object][] = [];\n\n    if (followerUserId) {\n      filters.push([\n        `user_highlights.user_id IN (\n        SELECT following_user_id FROM users_to_users_followers\n        WHERE user_id=:userId\n        AND deleted_at IS NULL\n      )`,\n        { userId: followerUserId },\n      ]);\n    }\n\n    if (pageOptionsDto.repo) {\n      filters.push([\n        // eslint-disable-next-line no-useless-escape\n        `REGEXP_REPLACE(REGEXP_REPLACE(user_highlights.url, '(^(http(s)?:\\/\\/)?([\\w]+\\.)?github\\.com\\/)', ''), '/pull/.*', '')=:repo`,\n        { repo: decodeURIComponent(pageOptionsDto.repo) },\n      ]);\n    }\n\n    filters.forEach(([sql, data], index) => {\n      if (index === 0) {\n        queryBuilder.where(sql, data);\n      } else {\n        queryBuilder.andWhere(sql, data);\n      }\n    });\n\n    queryBuilder.offset(pageOptionsDto.skip).limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async findAllHighlightRepos(pageOptionsDto: PageOptionsDto, follwerUserId?: number) {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .distinct(true)\n      .select(\n        // eslint-disable-next-line no-useless-escape\n        `REGEXP_REPLACE(REGEXP_REPLACE(user_highlights.url, '(^(http(s)?:\\/\\/)?([\\w]+\\.)?github\\.com\\/)', ''), '/pull/.*', '')`,\n        \"full_name\"\n      )\n      .where(`user_highlights.url LIKE '%github.com%'`);\n\n    if (follwerUserId) {\n      queryBuilder.andWhere(\n        `user_highlights.user_id IN (\n        SELECT following_user_id FROM users_to_users_followers\n        WHERE user_id=:userId\n        AND deleted_at IS NULL\n      )`,\n        { userId: follwerUserId }\n      );\n    }\n\n    queryBuilder.offset(pageOptionsDto.skip).limit(pageOptionsDto.limit);\n\n    const subQuery = this.userHighlightRepository.manager\n      .createQueryBuilder()\n      .from(`(${queryBuilder.getQuery()})`, \"subquery_for_count\")\n      .setParameters(queryBuilder.getParameters())\n      .select(\"count(full_name)\");\n\n    const countQueryResult = await subQuery.getRawOne();\n    const itemCount = parseInt(`${countQueryResult?.count ?? \"0\"}`, 10);\n    const entities = DbUserHighlight.create(await queryBuilder.getRawMany());\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async findAllByUserId(pageOptionsDto: PageOptionsDto, userId: number): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"user_highlights.user_id = :userId\", { userId }).orderBy(\"user_highlights.updated_at\", \"DESC\");\n\n    queryBuilder.offset(pageOptionsDto.skip).limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async addUserHighlight(userId: number, highlight: CreateUserHighlightDto) {\n    const newUserHighlight = this.userHighlightRepository.create({\n      user_id: userId,\n      url: highlight.url,\n      highlight: highlight.highlight,\n      title: highlight.title ?? \"\",\n      shipped_at: highlight.shipped_at ? new Date(highlight.shipped_at) : new Date(),\n    });\n\n    return this.userHighlightRepository.save(newUserHighlight);\n  }\n\n  async updateUserHighlight(highlightId: number, highlight: Partial) {\n    return this.userHighlightRepository.update(highlightId, highlight);\n  }\n\n  async deleteUserHighlight(highlightId: number) {\n    return this.userHighlightRepository.softDelete(highlightId);\n  }\n\n  async findAllHighlightReactions(highlightId: number, userId?: number) {\n    const queryBuilder = this.userHighlightReactionRepository.createQueryBuilder(\"user_highlight_reactions\");\n\n    queryBuilder\n      .select(\"emoji_id\", \"emoji_id\")\n      .addSelect(\"COUNT(emoji_id)\", \"reaction_count\")\n      .where(\"user_highlight_reactions.highlight_id = :highlightId\", { highlightId });\n\n    if (userId) {\n      queryBuilder.andWhere(\"user_highlight_reactions.user_id = :userId\", { userId });\n    }\n\n    queryBuilder.addGroupBy(\"emoji_id\");\n\n    const entities: DbUserHighlightReactionResponse[] = await queryBuilder.getRawMany();\n\n    return entities;\n  }\n\n  async findOneUserHighlightReaction(highlightId: number, userId: number, emojiId: string) {\n    const queryBuilder = this.userHighlightReactionRepository.createQueryBuilder(\"user_highlight_reactions\");\n\n    queryBuilder\n      .where(\"user_highlight_reactions.highlight_id = :highlightId\", { highlightId })\n      .andWhere(\"user_highlight_reactions.user_id = :userId\", { userId })\n      .andWhere(\"user_highlight_reactions.emoji_id = :emojiId\", { emojiId });\n\n    const item: DbUserHighlightReaction | null = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async addUserHighlightReaction(userId: number, highlightId: number, emojiId: string, highlightUserId: number) {\n    const queryBuilder = this.userHighlightReactionRepository\n      .createQueryBuilder(\"user_highlight_reactions\")\n      .withDeleted();\n\n    queryBuilder\n      .where(\"user_highlight_reactions.highlight_id = :highlightId\", { highlightId })\n      .andWhere(\"user_highlight_reactions.user_id = :userId\", { userId })\n      .andWhere(\"user_highlight_reactions.emoji_id = :emojiId\", { emojiId });\n\n    const reactionExists = await queryBuilder.getOne();\n\n    if (reactionExists) {\n      if (!reactionExists.deleted_at) {\n        throw new ConflictException(\"You have already added this reaction for this highlight\");\n      }\n\n      await this.userHighlightReactionRepository.restore(reactionExists.id);\n      await this.userNotificationService.addUserHighlightNotification(userId, highlightUserId, highlightId);\n\n      return reactionExists;\n    }\n\n    await this.userNotificationService.addUserHighlightNotification(userId, highlightUserId, highlightId);\n\n    return this.userHighlightReactionRepository.save({\n      user_id: userId,\n      highlight_id: highlightId,\n      emoji_id: emojiId,\n    });\n  }\n\n  async deleteUserHighlightReaction(id: string) {\n    return this.userHighlightReactionRepository.softDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserInsightMemberController.html":{"url":"controllers/UserInsightMemberController.html","title":"controller - UserInsightMemberController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserInsightMemberController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/user-insight-member.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user/insights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addInsightMember\n                            \n                            \n                                    Async\n                                findAllInsightsByUserId\n                            \n                            \n                                    Async\n                                removeInsightMemberById\n                            \n                            \n                                    Async\n                                updateInsightMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addInsightMember\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInsightMember(createInsightMemberDto: CreateInsightMemberDto, insightId: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/members')@ApiOperation({operationId: 'addMemberForInsight', summary: 'Adds a new member for the insight'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbInsightMember})@ApiNotFoundResponse({description: 'Unable to add insight member'})@ApiBadRequestResponse({description: 'Invalid request'})@ApiBody({type: CreateInsightMemberDto})\n                \n            \n\n            \n                \n                    Defined in src/insight/user-insight-member.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createInsightMemberDto\n                                    \n                                                CreateInsightMemberDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllInsightsByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllInsightsByUserId(pageOptionsDto: InsightPageOptionsDto, insightId: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/members')@ApiOperation({operationId: 'findAllInsightMembers', summary: 'Listing all members for an insight and paginate them'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiPaginatedResponse(DbInsightMember)@ApiOkResponse({type: DbInsightMember})@ApiNotFoundResponse({description: 'Insight not found'})\n                \n            \n\n            \n                \n                    Defined in src/insight/user-insight-member.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                InsightPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeInsightMemberById\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeInsightMemberById(id: number, memberId: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/members/:memberId')@ApiOperation({operationId: 'removeInsightMemberById', summary: 'Removes a member from an insight'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbInsight})@ApiNotFoundResponse({description: 'Unable to remove insight member'})@ApiBadRequestResponse({description: 'Invalid request'})\n                \n            \n\n            \n                \n                    Defined in src/insight/user-insight-member.controller.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    memberId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateInsightMember\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInsightMember(id: number, memberId: string, userId: number, updateInsightMemberDto: UpdateInsightMemberDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/members/:memberId')@ApiOperation({operationId: 'updateInsightMember', summary: 'Updates an insight member information'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbInsight})@ApiNotFoundResponse({description: 'Unable to find insight member'})@ApiBadRequestResponse({description: 'Invalid request'})@ApiUnprocessableEntityResponse({description: 'Unable to unable insight member'})@ApiBody({type: UpdateInsightMemberDto})\n                \n            \n\n            \n                \n                    Defined in src/insight/user-insight-member.controller.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    memberId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateInsightMemberDto\n                                    \n                                                UpdateInsightMemberDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UnauthorizedException,\n  UseGuards,\n} from \"@nestjs/common\";\nimport {\n  ApiOperation,\n  ApiOkResponse,\n  ApiNotFoundResponse,\n  ApiBearerAuth,\n  ApiTags,\n  ApiBadRequestResponse,\n  ApiBody,\n  ApiUnprocessableEntityResponse,\n} from \"@nestjs/swagger\";\n\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { CreateInsightMemberDto } from \"./dtos/create-insight-member.dto\";\n\nimport { InsightPageOptionsDto } from \"./dtos/insight-page-options.dto\";\nimport { UpdateInsightMemberDto } from \"./dtos/update-insight-member.dto\";\nimport { DbInsightMember } from \"./entities/insight-member.entity\";\nimport { DbInsight } from \"./entities/insight.entity\";\nimport { InsightMemberService } from \"./insight-member.service\";\nimport { InsightsService } from \"./insights.service\";\nimport { UserService } from \"../user/user.service\";\n\n@Controller(\"user/insights\")\n@ApiTags(\"Insights service\")\nexport class UserInsightMemberController {\n  constructor(\n    private readonly insightsService: InsightsService,\n    private readonly insightMemberService: InsightMemberService,\n    private userService: UserService\n  ) {}\n\n  @Get(\":id/members\")\n  @ApiOperation({\n    operationId: \"findAllInsightMembers\",\n    summary: \"Listing all members for an insight and paginate them\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiPaginatedResponse(DbInsightMember)\n  @ApiOkResponse({ type: DbInsightMember })\n  @ApiNotFoundResponse({ description: \"Insight not found\" })\n  async findAllInsightsByUserId(\n    @Query() pageOptionsDto: InsightPageOptionsDto,\n    @Param(\"id\", ParseIntPipe) insightId: number,\n    @UserId() userId: number\n  ): Promise> {\n    const insight = await this.insightsService.findOneById(insightId);\n    const canAccess = await this.insightMemberService.canUserManageInsight(userId, insight.id, [\n      \"admin\",\n      \"edit\",\n      \"view\",\n    ]);\n\n    if (!canAccess) {\n      throw new UnauthorizedException();\n    }\n\n    return this.insightMemberService.findAllInsightMembers(pageOptionsDto, insightId);\n  }\n\n  @Post(\":id/members\")\n  @ApiOperation({\n    operationId: \"addMemberForInsight\",\n    summary: \"Adds a new member for the insight\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbInsightMember })\n  @ApiNotFoundResponse({ description: \"Unable to add insight member\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiBody({ type: CreateInsightMemberDto })\n  async addInsightMember(\n    @Body() createInsightMemberDto: CreateInsightMemberDto,\n    @Param(\"id\", ParseIntPipe) insightId: number,\n    @UserId() userId: number\n  ): Promise {\n    const insight = await this.insightsService.findOneById(insightId);\n    const canUpdate = await this.insightMemberService.canUserManageInsight(userId, insight.id, [\"admin\", \"edit\"]);\n\n    if (!canUpdate) {\n      throw new UnauthorizedException();\n    }\n\n    const isMember = await this.insightMemberService.canUserManageInsight(\n      userId,\n      insight.id,\n      [\"admin\", \"edit\", \"view\"],\n      false\n    );\n\n    if (isMember) {\n      throw new ConflictException(\"The user is already a team member of this insight\");\n    }\n\n    const existingUser = await this.userService.findOneByEmail(createInsightMemberDto.email);\n\n    const newInsightMember = await this.insightMemberService.addInsightMember({\n      insight_id: insightId,\n      user_id: existingUser?.id,\n      invitation_email: existingUser?.email ?? createInsightMemberDto.email,\n      access: \"pending\",\n    });\n\n    return newInsightMember;\n  }\n\n  @Patch(\":id/members/:memberId\")\n  @ApiOperation({\n    operationId: \"updateInsightMember\",\n    summary: \"Updates an insight member information\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbInsight })\n  @ApiNotFoundResponse({ description: \"Unable to find insight member\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiUnprocessableEntityResponse({ description: \"Unable to unable insight member\" })\n  @ApiBody({ type: UpdateInsightMemberDto })\n  async updateInsightMember(\n    @Param(\"id\", ParseIntPipe) id: number,\n    @Param(\"memberId\") memberId: string,\n    @UserId() userId: number,\n    @Body() updateInsightMemberDto: UpdateInsightMemberDto\n  ): Promise {\n    const insight = await this.insightsService.findOneById(id);\n    const canUpdate = await this.insightMemberService.canUserManageInsight(userId, insight.id, [\"admin\", \"edit\"]);\n    const insightMember = await this.insightMemberService.findOneById(memberId);\n\n    if (!canUpdate && insightMember.access !== \"pending\") {\n      throw new UnauthorizedException();\n    }\n\n    const updatedInsightMember: Partial = { access: updateInsightMemberDto.access };\n\n    if (insightMember.access === \"pending\") {\n      // the user is accepting the invitation, update the user_id\n      updatedInsightMember.user_id = userId;\n      updatedInsightMember.access = \"view\";\n    }\n\n    await this.insightMemberService.updateInsightMember(memberId, updatedInsightMember);\n\n    return this.insightMemberService.findOneById(memberId);\n  }\n\n  @Delete(\":id/members/:memberId\")\n  @ApiOperation({\n    operationId: \"removeInsightMemberById\",\n    summary: \"Removes a member from an insight\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbInsight })\n  @ApiNotFoundResponse({ description: \"Unable to remove insight member\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  async removeInsightMemberById(\n    @Param(\"id\", ParseIntPipe) id: number,\n    @Param(\"memberId\") memberId: string,\n    @UserId() userId: number\n  ): Promise {\n    const insight = await this.insightsService.findOneById(id);\n    const canUpdate = await this.insightMemberService.canUserManageInsight(userId, insight.id, [\"admin\", \"edit\"]);\n\n    if (!canUpdate) {\n      throw new UnauthorizedException();\n    }\n\n    await this.insightMemberService.removeInsightMember(memberId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserInsightsController.html":{"url":"controllers/UserInsightsController.html","title":"controller - UserInsightsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserInsightsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/insight/user-insight.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user/insights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addInsightForUser\n                            \n                            \n                                    Async\n                                findAllInsightsByUserId\n                            \n                            \n                                    Async\n                                updateInsightForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addInsightForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInsightForUser(createInsightDto: CreateInsightDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiOperation({operationId: 'addInsightForUser', summary: 'Adds a new insight page for the authenticated user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbInsight})@ApiNotFoundResponse({description: 'Unable to add user insight'})@ApiBadRequestResponse({description: 'Invalid request'})@ApiBody({type: CreateInsightDto})\n                \n            \n\n            \n                \n                    Defined in src/insight/user-insight.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createInsightDto\n                                    \n                                                CreateInsightDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllInsightsByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllInsightsByUserId(pageOptionsDto: InsightPageOptionsDto, userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@ApiOperation({operationId: 'findAllInsightsByUserId', summary: 'Listing all insights for a user and paginate them'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiPaginatedResponse(DbInsight)@ApiOkResponse({type: DbInsight})@ApiNotFoundResponse({description: 'Insights not found'})\n                \n            \n\n            \n                \n                    Defined in src/insight/user-insight.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                InsightPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateInsightForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInsightForUser(id: number, updateInsightDto: UpdateInsightDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@ApiOperation({operationId: 'updateInsightForUser', summary: 'Updates an insight page for the authenticated user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbInsight})@ApiNotFoundResponse({description: 'Unable to update user insight'})@ApiBadRequestResponse({description: 'Invalid request'})@ApiUnprocessableEntityResponse({description: 'Unable to unable insight repos'})@ApiBody({type: UpdateInsightDto})\n                \n            \n\n            \n                \n                    Defined in src/insight/user-insight.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateInsightDto\n                                    \n                                                UpdateInsightDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UnauthorizedException,\n  UnprocessableEntityException,\n  UseGuards,\n} from \"@nestjs/common\";\nimport {\n  ApiOperation,\n  ApiOkResponse,\n  ApiNotFoundResponse,\n  ApiBearerAuth,\n  ApiTags,\n  ApiBadRequestResponse,\n  ApiBody,\n  ApiUnprocessableEntityResponse,\n} from \"@nestjs/swagger\";\n\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { CreateInsightDto } from \"./dtos/create-insight.dto\";\n\nimport { InsightPageOptionsDto } from \"./dtos/insight-page-options.dto\";\nimport { UpdateInsightDto } from \"./dtos/update-insight.dto\";\nimport { DbInsight } from \"./entities/insight.entity\";\nimport { InsightMemberService } from \"./insight-member.service\";\nimport { InsightRepoService } from \"./insight-repo.service\";\nimport { InsightsService } from \"./insights.service\";\n\n@Controller(\"user/insights\")\n@ApiTags(\"Insights service\")\nexport class UserInsightsController {\n  constructor(\n    private readonly insightsService: InsightsService,\n    private readonly insightsRepoService: InsightRepoService,\n    private insightMemberService: InsightMemberService\n  ) {}\n\n  @Get(\"/\")\n  @ApiOperation({\n    operationId: \"findAllInsightsByUserId\",\n    summary: \"Listing all insights for a user and paginate them\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiPaginatedResponse(DbInsight)\n  @ApiOkResponse({ type: DbInsight })\n  @ApiNotFoundResponse({ description: \"Insights not found\" })\n  async findAllInsightsByUserId(\n    @Query() pageOptionsDto: InsightPageOptionsDto,\n    @UserId() userId: string\n  ): Promise> {\n    return this.insightsService.findAllByUserId(pageOptionsDto, userId);\n  }\n\n  @Post(\"/\")\n  @ApiOperation({\n    operationId: \"addInsightForUser\",\n    summary: \"Adds a new insight page for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbInsight })\n  @ApiNotFoundResponse({ description: \"Unable to add user insight\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiBody({ type: CreateInsightDto })\n  async addInsightForUser(@Body() createInsightDto: CreateInsightDto, @UserId() userId: number): Promise {\n    if (!createInsightDto.name || !Array.isArray(createInsightDto.repos)) {\n      throw new BadRequestException();\n    }\n\n    const newInsight = await this.insightsService.addInsight({\n      name: createInsightDto.name,\n      is_public: createInsightDto.is_public,\n      user_id: userId,\n    });\n\n    createInsightDto.repos.forEach(async (repo) => {\n      await this.insightsRepoService.addInsightRepo(newInsight.id, repo);\n    });\n\n    return newInsight;\n  }\n\n  @Patch(\"/:id\")\n  @ApiOperation({\n    operationId: \"updateInsightForUser\",\n    summary: \"Updates an insight page for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbInsight })\n  @ApiNotFoundResponse({ description: \"Unable to update user insight\" })\n  @ApiBadRequestResponse({ description: \"Invalid request\" })\n  @ApiUnprocessableEntityResponse({ description: \"Unable to unable insight repos\" })\n  @ApiBody({ type: UpdateInsightDto })\n  async updateInsightForUser(\n    @Param(\"id\", ParseIntPipe) id: number,\n    @Body() updateInsightDto: UpdateInsightDto,\n    @UserId() userId: number\n  ): Promise {\n    const insight = await this.insightsService.findOneById(id);\n\n    const canUpdate = await this.insightMemberService.canUserManageInsight(userId, insight.id, [\"admin\", \"edit\"]);\n\n    if (!canUpdate) {\n      throw new UnauthorizedException();\n    }\n\n    // update insight\n    await this.insightsService.updateInsight(id, {\n      name: updateInsightDto.name,\n      is_public: updateInsightDto.is_public,\n    });\n\n    try {\n      // current set of insight repos\n      const currentRepos = insight.repos.filter((insightRepo) => !insightRepo.deleted_at);\n\n      // remove deleted repos\n      const reposToRemove = currentRepos.filter(\n        (repo) => !updateInsightDto.repos.find((repoInfo) => `${repoInfo.id}` === `${repo.repo_id}`)\n      );\n\n      const reposToRemoveRequests = reposToRemove.map(async (insightRepo) =>\n        this.insightsRepoService.removeInsightRepo(insightRepo.id)\n      );\n\n      await Promise.all(reposToRemoveRequests);\n\n      // add new repos\n      const currentRepoIds = currentRepos.map((cr) => cr.repo_id);\n      const reposToAdd = updateInsightDto.repos.filter(\n        (repoInfo) => !currentRepoIds.find((id) => `${id}` === `${repoInfo.id}`)\n      );\n\n      const repoToAddRequests = reposToAdd.map(async (repo) =>\n        this.insightsRepoService.addInsightRepo(insight.id, repo)\n      );\n\n      await Promise.all(repoToAddRequests);\n    } catch (e) {\n      throw new UnprocessableEntityException();\n    }\n\n    return this.insightsService.findOneById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_imports\n\n\n\n\nPullRequestModule\n\nPullRequestModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPullRequestModule->UserModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nUserModule -->\n\nRepoModule->UserModule\n\n\n\n\n\nEndorsementService \n\nEndorsementService \n\nEndorsementService  -->\n\nUserModule->EndorsementService \n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nUserModule->RepoService \n\n\n\n\n\nUserFollowService \n\nUserFollowService \n\nUserFollowService  -->\n\nUserModule->UserFollowService \n\n\n\n\n\nUserHighlightsService \n\nUserHighlightsService \n\nUserHighlightsService  -->\n\nUserModule->UserHighlightsService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nEndorsementService\n\nEndorsementService\n\nUserModule -->\n\nEndorsementService->UserModule\n\n\n\n\n\nRepoFilterService\n\nRepoFilterService\n\nUserModule -->\n\nRepoFilterService->UserModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nUserModule -->\n\nRepoService->UserModule\n\n\n\n\n\nUserCollaborationService\n\nUserCollaborationService\n\nUserModule -->\n\nUserCollaborationService->UserModule\n\n\n\n\n\nUserFollowService\n\nUserFollowService\n\nUserModule -->\n\nUserFollowService->UserModule\n\n\n\n\n\nUserHighlightsService\n\nUserHighlightsService\n\nUserModule -->\n\nUserHighlightsService->UserModule\n\n\n\n\n\nUserNotificationService\n\nUserNotificationService\n\nUserModule -->\n\nUserNotificationService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EndorsementService\n                        \n                        \n                            RepoFilterService\n                        \n                        \n                            RepoService\n                        \n                        \n                            UserCollaborationService\n                        \n                        \n                            UserFollowService\n                        \n                        \n                            UserHighlightsService\n                        \n                        \n                            UserNotificationService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                        \n                            UserHighlightsController\n                        \n                        \n                            UserFollowsController\n                        \n                        \n                            UserNotificationController\n                        \n                        \n                            UserCollaborationController\n                        \n                        \n                            UserEndorsementController\n                        \n                        \n                            UserRecommendationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PullRequestModule\n                        \n                        \n                            RepoModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EndorsementService\n                        \n                        \n                            RepoService\n                        \n                        \n                            UserFollowService\n                        \n                        \n                            UserHighlightsService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { PullRequestModule } from \"../pull-requests/pull-request.module\";\nimport { RepoModule } from \"../repo/repo.module\";\n\nimport { DbUser } from \"./user.entity\";\nimport { UserService } from \"./user.service\";\nimport { UserController } from \"./user.controller\";\nimport { DbUserHighlight } from \"./entities/user-highlight.entity\";\nimport { UserHighlightsController } from \"./user-highlight.controller\";\nimport { UserHighlightsService } from \"./user-highlights.service\";\nimport { UserFollowsController } from \"./user-follow.controller\";\nimport { UserFollowService } from \"./user-follow.service\";\nimport { DbUserToUserFollows } from \"./entities/user-follows.entity\";\nimport { DbUserHighlightReaction } from \"./entities/user-highlight-reaction.entity\";\nimport { DbUserTopRepo } from \"./entities/user-top-repo.entity\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { RepoFilterService } from \"../common/filters/repo-filter.service\";\nimport { DbUserNotification } from \"./entities/user-notification.entity\";\nimport { DbUserCollaboration } from \"./entities/user-collaboration.entity\";\nimport { UserNotificationService } from \"./user-notifcation.service\";\nimport { UserNotificationController } from \"./user-notification.controller\";\nimport { UserCollaborationService } from \"./user-collaboration.service\";\nimport { UserCollaborationController } from \"./user-collaboration.controller\";\nimport { UserEndorsementController } from \"./user-endorsement.controller\";\n\nimport { EndorsementService } from \"../endorsement/endorsement.service\";\nimport { DbEndorsement } from \"../endorsement/entities/endorsement.entity\";\nimport { UserRecommendationController } from \"./user-recommendation.controller\";\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature(\n      [\n        DbUser,\n        DbUserHighlight,\n        DbUserHighlightReaction,\n        DbUserToUserFollows,\n        DbUserTopRepo,\n        DbUserNotification,\n        DbUserCollaboration,\n        DbRepo,\n        DbEndorsement,\n      ],\n      \"ApiConnection\"\n    ),\n    PullRequestModule,\n    RepoModule,\n  ],\n  controllers: [\n    UserController,\n    UserHighlightsController,\n    UserFollowsController,\n    UserNotificationController,\n    UserCollaborationController,\n    UserEndorsementController,\n    UserRecommendationController,\n  ],\n  providers: [\n    UserService,\n    UserController,\n    UserHighlightsService,\n    UserHighlightsController,\n    UserFollowService,\n    RepoService,\n    RepoFilterService,\n    UserNotificationService,\n    UserCollaborationService,\n    EndorsementService,\n  ],\n  exports: [UserService, UserHighlightsService, UserFollowService, RepoService, EndorsementService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserNotificationController.html":{"url":"controllers/UserNotificationController.html","title":"controller - UserNotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserNotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-notification.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user/notifications\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserNotifications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserNotifications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserNotifications(userId: number, pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@ApiOperation({operationId: 'getUserNotifications', summary: 'Retrieves notifications for the authenticated user'})@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOkResponse({type: DbUserNotification})@ApiNotFoundResponse({description: 'Unable to get user notifications'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-notification.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, UseGuards } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { DbUserNotification } from \"./entities/user-notification.entity\";\nimport { UserNotificationService } from \"./user-notifcation.service\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\n\n@Controller(\"user/notifications\")\n@ApiTags(\"User service\")\nexport class UserNotificationController {\n  constructor(private userNotificationService: UserNotificationService) {}\n\n  @Get(\"/\")\n  @ApiOperation({\n    operationId: \"getUserNotifications\",\n    summary: \"Retrieves notifications for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOkResponse({ type: DbUserNotification })\n  @ApiNotFoundResponse({ description: \"Unable to get user notifications\" })\n  async getUserNotifications(\n    @UserId() userId: number,\n    @Query() pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    return this.userNotificationService.findAllByUserId(userId, pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserNotificationService.html":{"url":"injectables/UserNotificationService.html","title":"injectable - UserNotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserNotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-notifcation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUserFollowerNotification\n                            \n                            \n                                    Async\n                                addUserHighlightNotification\n                            \n                            \n                                    Async\n                                addUserNotification\n                            \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                markNotificationsAsRead\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userNotificationRepository: Repository, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user-notifcation.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userNotificationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserFollowerNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserFollowerNotification(userId: number, followedUserId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-notifcation.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    followedUserId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserHighlightNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserHighlightNotification(userId: number, highlightUserId: number, highlightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-notifcation.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightUserId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserNotification(userNotification: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-notifcation.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userNotification\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-notifcation.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SelectQueryBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: number, pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-notifcation.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        markNotificationsAsRead\n                        \n                    \n                \n            \n            \n                \n                    \n                    markNotificationsAsRead(notificationIds: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/user/user-notifcation.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notificationIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Repository, SelectQueryBuilder } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { DbUserNotification } from \"./entities/user-notification.entity\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { UserNotificationTypes, userNotificationTypes } from \"./entities/user-notification.constants\";\nimport { UserService } from \"./user.service\";\n\n@Injectable()\nexport class UserNotificationService {\n  constructor(\n    @InjectRepository(DbUserNotification, \"ApiConnection\")\n    private userNotificationRepository: Repository,\n    private userService: UserService\n  ) {}\n\n  baseQueryBuilder(): SelectQueryBuilder {\n    const builder = this.userNotificationRepository.createQueryBuilder(\"user_notifications\");\n\n    return builder;\n  }\n\n  async findAllByUserId(userId: number, pageOptionsDto: PageOptionsDto) {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .innerJoin(\"users\", \"users\", \"user_notifications.user_id=users.id\")\n      .where(\"user_id = :userId\", { userId })\n      .andWhere(\"user_notifications.type IN (:...userNotificationTypes)\", { userNotificationTypes })\n      .andWhere(\"user_notifications.read_at IS NULL\");\n\n    const entities = await queryBuilder.getMany();\n    const itemCount = await queryBuilder.getCount();\n    const notificationIds = entities.map((notification) => notification.id);\n\n    await this.markNotificationsAsRead(notificationIds);\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n\n  async addUserNotification(userNotification: Partial) {\n    return this.userNotificationRepository.save({\n      type: userNotification.type,\n      notified_at: new Date(),\n      user_id: userNotification.user_id,\n      message: userNotification.message,\n      from_user_id: userNotification.from_user_id,\n      meta_id: userNotification.meta_id,\n    });\n  }\n\n  async addUserFollowerNotification(userId: number, followedUserId: number) {\n    const followUser = await this.userService.findOneById(userId);\n\n    return this.addUserNotification({\n      type: UserNotificationTypes.Follow,\n      user_id: followedUserId,\n      from_user_id: userId,\n      message: `${followUser.login} followed you`,\n      meta_id: followUser.login,\n    });\n  }\n\n  async addUserHighlightNotification(userId: number, highlightUserId: number, highlightId: number) {\n    const followUser = await this.userService.findOneById(userId);\n\n    return this.addUserNotification({\n      type: UserNotificationTypes.HighlightReaction,\n      user_id: highlightUserId,\n      from_user_id: userId,\n      message: `${followUser.login} reacted to your highlight`,\n      meta_id: `${highlightId}`,\n    });\n  }\n\n  async markNotificationsAsRead(notificationIds: number[]) {\n    const updates = notificationIds.map(async (id) =>\n      this.userNotificationRepository.update(id, { read_at: new Date() })\n    );\n\n    await Promise.all(updates);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserOnboardingDto.html":{"url":"classes/UserOnboardingDto.html","title":"class - UserOnboardingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserOnboardingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/user-onboarding.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                interests\n                            \n                            \n                                    Public\n                                timezone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        interests\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'An array of interests', type: undefined, isArray: true, example: undefined})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/user-onboarding.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User timezone in UTC', type: String, example: 'UTC-5'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/user-onboarding.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, IsString } from \"class-validator\";\n\nexport class UserOnboardingDto {\n  @ApiProperty({\n    description: \"An array of interests\",\n    type: [String],\n    isArray: true,\n    example: [\"javascript\", \"react\"],\n  })\n  @IsArray()\n  public interests: string[];\n\n  @ApiProperty({\n    description: \"User timezone in UTC\",\n    type: String,\n    example: \"UTC-5\",\n  })\n  @IsString()\n  public timezone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserRecommendationController.html":{"url":"controllers/UserRecommendationController.html","title":"controller - UserRecommendationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserRecommendationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-recommendation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user/recommendations\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findUserRepoRecommendations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserRepoRecommendations\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserRepoRecommendations(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/repos')@ApiOperation({operationId: 'findUserRepoRecommendations', summary: 'Listing recommended repos for the authenticated user'})@ApiBearerAuth()@ApiOkResponse()@UseGuards(SupabaseGuard)\n                \n            \n\n            \n                \n                    Defined in src/user/user-recommendation.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from \"@nestjs/common\";\nimport { ApiOperation, ApiBearerAuth, ApiTags, ApiOkResponse } from \"@nestjs/swagger\";\n\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\n\nimport { RepoService } from \"../repo/repo.service\";\nimport { UserService } from \"./user.service\";\n\n@Controller(\"user/recommendations\")\n@ApiTags(\"User Recommendations service\")\nexport class UserRecommendationController {\n  constructor(private readonly repoService: RepoService, private readonly userService: UserService) {}\n\n  @Get(\"/repos\")\n  @ApiOperation({\n    operationId: \"findUserRepoRecommendations\",\n    summary: \"Listing recommended repos for the authenticated user\",\n  })\n  @ApiBearerAuth()\n  @ApiOkResponse()\n  @UseGuards(SupabaseGuard)\n  async findUserRepoRecommendations(@UserId() userId: number) {\n    const user = await this.userService.findOneById(userId);\n    const interests = user.interests?.split(\",\").filter(Boolean) ?? [];\n\n    return this.repoService.findRecommendations(interests);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepoOptionsDto.html":{"url":"classes/UserRepoOptionsDto.html","title":"class - UserRepoOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepoOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-repo/dtos/user-repo-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 1000, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(10000)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Range in days', default: 30})@Type(undefined)@IsIn(['7', '30', '90'])@IsInt()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:43\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\n\nexport class UserRepoOptionsDto extends PageOptionsDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepoOptionsDto-1.html":{"url":"classes/UserRepoOptionsDto-1.html","title":"class - UserRepoOptionsDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepoOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-repo/dtos/user-repos.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The repos to add to onboarding', type: Number, isArray: true, example: undefined})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-repo/dtos/user-repos.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray } from \"class-validator\";\n\nexport class UserRepoOptionsDto {\n  @ApiProperty({\n    description: \"The repos to add to onboarding\",\n    type: Number,\n    isArray: true,\n    example: [71359796, 426820139],\n  })\n  @IsArray()\n  readonly ids: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserReposModule.html":{"url":"modules/UserReposModule.html","title":"module - UserReposModule","body":"\n                   \n\n\n\n\n    Modules\n    UserReposModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserReposModule\n\n\n\ncluster_UserReposModule_exports\n\n\n\ncluster_UserReposModule_providers\n\n\n\n\nUserReposService \n\nUserReposService \n\n\n\nUserReposModule\n\nUserReposModule\n\nUserReposService  -->\n\nUserReposModule->UserReposService \n\n\n\n\n\nUserReposService\n\nUserReposService\n\nUserReposModule -->\n\nUserReposService->UserReposModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-repo/user-repos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserReposService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserReposService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbUserRepo } from \"./user-repo.entity\";\nimport { UserReposService } from \"./user-repos.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbUserRepo], \"ApiConnection\")],\n  providers: [UserReposService],\n  exports: [UserReposService],\n})\nexport class UserReposModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserReposService.html":{"url":"injectables/UserReposService.html","title":"injectable - UserReposService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserReposService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-repo/user-repos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUserRepo\n                            \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user-repo/user-repos.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserRepo(userId: number, repo: RepoInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/user-repo/user-repos.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                RepoInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/user-repo/user-repos.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SelectQueryBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(pageOptionsDto: UserRepoOptionsDto, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user-repo/user-repos.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                UserRepoOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user-repo/user-repos.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository, SelectQueryBuilder } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\n\nimport { DbUserRepo } from \"./user-repo.entity\";\nimport { UserRepoOptionsDto } from \"./dtos/user-repo-options.dto\";\nimport { RepoInfo } from \"../repo/dtos/repo-info.dto\";\n\n@Injectable()\nexport class UserReposService {\n  constructor(\n    @InjectRepository(DbUserRepo, \"ApiConnection\")\n    private userRepoRepository: Repository\n  ) {}\n\n  baseQueryBuilder(): SelectQueryBuilder {\n    const builder = this.userRepoRepository.createQueryBuilder(\"user_repos\");\n\n    return builder;\n  }\n\n  async findOneById(id: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(\"id = :id\", { id });\n\n    const item: DbUserRepo | null = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async addUserRepo(userId: number, repo: RepoInfo) {\n    const newUserRepo = this.userRepoRepository.create({\n      user_id: userId,\n      repo_id: repo.id,\n      full_name: repo.fullName,\n    });\n\n    return this.userRepoRepository.save(newUserRepo);\n  }\n\n  async findAllByUserId(pageOptionsDto: UserRepoOptionsDto, userId: string): Promise> {\n    const queryBuilder = this.userRepoRepository.createQueryBuilder(\"user_repos\");\n\n    queryBuilder.where(\"user_repos.user_id = :userId\", { userId });\n\n    queryBuilder.offset(pageOptionsDto.skip).limit(pageOptionsDto.limit);\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                checkAddUser\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByUsername\n                            \n                            \n                                    Async\n                                updateEmailPreferences\n                            \n                            \n                                    Async\n                                updateInterests\n                            \n                            \n                                    Async\n                                updateOnboarding\n                            \n                            \n                                    Async\n                                updateRole\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                updateWaitlistStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SelectQueryBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkAddUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAddUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number, includeEmail)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    includeEmail\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateEmailPreferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEmailPreferences(id: number, user: UpdateUserEmailPreferencesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserEmailPreferencesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateInterests\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInterests(id: number, user: UpdateUserProfileInterestsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserProfileInterestsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOnboarding\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOnboarding(id: number, user: UserOnboardingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserOnboardingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRole(id: number, role: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: number, user: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateWaitlistStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateWaitlistStatus(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository, SelectQueryBuilder } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { User } from \"@supabase/supabase-js\";\n\nimport { DbUser } from \"./user.entity\";\nimport { UpdateUserDto } from \"./dtos/update-user.dto\";\nimport { UpdateUserProfileInterestsDto } from \"./dtos/update-user-interests.dto\";\nimport { UpdateUserEmailPreferencesDto } from \"./dtos/update-user-email-prefs.dto\";\nimport { UserOnboardingDto } from \"../auth/dtos/user-onboarding.dto\";\nimport { userNotificationTypes } from \"./entities/user-notification.constants\";\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(DbUser, \"ApiConnection\")\n    private userRepository: Repository\n  ) {}\n\n  baseQueryBuilder(): SelectQueryBuilder {\n    const builder = this.userRepository.createQueryBuilder(\"users\");\n\n    return builder;\n  }\n\n  async findOneById(id: number, includeEmail = false): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .addSelect(\n        `(\n          SELECT COALESCE(COUNT(\"user_notifications\".\"id\"), 0)\n          FROM user_notifications\n          WHERE user_id = :userId\n          AND user_notifications.type IN (:...userNotificationTypes)\n          AND user_notifications.read_at IS NULL\n        )::INTEGER`,\n        \"users_notification_count\"\n      )\n      .where(\"id = :id\", { id });\n\n    if (includeEmail) {\n      queryBuilder.addSelect(\"users.email\", \"users_email\");\n    }\n\n    let item: DbUser | null;\n\n    try {\n      queryBuilder.setParameters({ userId: id, userNotificationTypes });\n      item = await queryBuilder.getOne();\n    } catch (e) {\n      // handle error\n      item = null;\n    }\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findOneByUsername(username: string): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .addSelect(\n        `(\n        SELECT COALESCE(COUNT(\"user_highlights\".\"id\"), 0)\n        FROM user_highlights\n        WHERE user_id = users.id\n        AND user_highlights.deleted_at IS NULL\n      )::INTEGER`,\n        \"users_highlights_count\"\n      )\n      .addSelect(\n        `(\n        SELECT COALESCE(COUNT(\"user_follows\".\"id\"), 0)\n        FROM users_to_users_followers user_follows\n        WHERE user_id = users.id\n        AND user_follows.deleted_at IS NULL\n      )::INTEGER`,\n        \"users_following_count\"\n      )\n      .addSelect(\n        `(\n        SELECT COALESCE(COUNT(\"user_follows\".\"id\"), 0)\n        FROM users_to_users_followers user_follows\n        WHERE following_user_id = users.id\n        AND user_follows.deleted_at IS NULL\n      )::INTEGER`,\n        \"users_followers_count\"\n      )\n      .addSelect(\n        `(\n        SELECT COALESCE(COUNT(\"pull_requests\".\"id\"), 0)\n        FROM pull_requests\n        WHERE LOWER(author_login) = :username\n        AND now() - INTERVAL '30 days'  {\n    const {\n      user_metadata: { user_name, email, name },\n      identities,\n      confirmed_at,\n    } = user;\n    const github = identities!.filter((identity) => identity.provider === \"github\")[0];\n    const id = parseInt(github.id, 10);\n\n    try {\n      const user = await this.findOneById(id, true);\n\n      if (user && !user.is_open_sauced_member) {\n        await this.userRepository.update(user.id, {\n          is_open_sauced_member: true,\n          connected_at: new Date(),\n        });\n      }\n\n      return user;\n    } catch (e) {\n      // create new user\n      const newUser = this.userRepository.create({\n        id,\n        name: name as string,\n        is_open_sauced_member: true,\n        login: user_name as string,\n        email: email as string,\n        created_at: new Date(github.created_at),\n        updated_at: new Date(github.updated_at ?? github.created_at),\n        connected_at: confirmed_at ? new Date(confirmed_at) : new Date(),\n      });\n\n      await newUser.save();\n\n      return newUser;\n    }\n  }\n\n  async updateUser(id: number, user: UpdateUserDto) {\n    try {\n      await this.findOneById(id);\n\n      await this.userRepository.update(id, {\n        name: user.name,\n        email: user.email,\n        bio: user.bio ?? \"\",\n        url: user.url ?? \"\",\n        twitter_username: user.twitter_username ?? \"\",\n        company: user.company ?? \"\",\n        location: user.location ?? \"\",\n        display_local_time: !!user.display_local_time,\n        timezone: user.timezone,\n        github_sponsors_url: user.github_sponsors_url ?? \"\",\n        linkedin_url: user.linkedin_url ?? \"\",\n      });\n\n      return this.findOneById(id);\n    } catch (e) {\n      throw new NotFoundException(\"Unable to update user\");\n    }\n  }\n\n  async updateOnboarding(id: number, user: UserOnboardingDto) {\n    try {\n      await this.findOneById(id);\n\n      await this.userRepository.update(id, {\n        is_onboarded: true,\n        is_waitlisted: false,\n        timezone: user.timezone,\n        interests: user.interests.join(\",\"),\n      });\n    } catch (e) {\n      throw new NotFoundException(\"Unable to update user onboarding status\");\n    }\n  }\n\n  async updateWaitlistStatus(id: number) {\n    try {\n      await this.findOneById(id);\n\n      await this.userRepository.update(id, { is_waitlisted: true });\n    } catch (e) {\n      throw new NotFoundException(\"Unable to update user waitlist status\");\n    }\n  }\n\n  async updateRole(id: number, role: number) {\n    try {\n      await this.findOneById(id);\n\n      await this.userRepository.update(id, { role });\n    } catch (e) {\n      throw new NotFoundException(\"Unable to update user role\");\n    }\n  }\n\n  async updateInterests(id: number, user: UpdateUserProfileInterestsDto) {\n    return this.userRepository.update(id, { interests: user.interests.join(\",\") });\n  }\n\n  async updateEmailPreferences(id: number, user: UpdateUserEmailPreferencesDto) {\n    return this.userRepository.update(id, {\n      display_email: user.display_email,\n      receive_collaboration: user.receive_collaboration,\n    });\n  }\n\n  async findOneByEmail(email: string): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder.where(`users.email = :email`, { email: email.toLowerCase() });\n\n    let item: DbUser | null;\n\n    try {\n      item = await queryBuilder.getOne();\n    } catch (e) {\n      // handle error\n      item = null;\n    }\n\n    return item;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VoteModule.html":{"url":"modules/VoteModule.html","title":"module - VoteModule","body":"\n                   \n\n\n\n\n    Modules\n    VoteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VoteModule\n\n\n\ncluster_VoteModule_imports\n\n\n\ncluster_VoteModule_exports\n\n\n\ncluster_VoteModule_providers\n\n\n\n\nRepoModule\n\nRepoModule\n\n\n\nVoteModule\n\nVoteModule\n\nVoteModule -->\n\nRepoModule->VoteModule\n\n\n\n\n\nVoteService \n\nVoteService \n\nVoteService  -->\n\nVoteModule->VoteService \n\n\n\n\n\nVoteService\n\nVoteService\n\nVoteModule -->\n\nVoteService->VoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/vote/vote.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VoteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoVoteController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RepoModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VoteService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\nimport { VoteService } from \"./vote.service\";\nimport { RepoVoteController } from \"./repo-vote.controller\";\nimport { RepoModule } from \"../repo/repo.module\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbRepo, DbRepoToUserVotes], \"ApiConnection\"), RepoModule],\n  controllers: [RepoVoteController],\n  providers: [VoteService],\n  exports: [VoteService],\n})\nexport class VoteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VoteService.html":{"url":"injectables/VoteService.html","title":"injectable - VoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vote/vote.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downVoteByRepoId\n                            \n                            \n                                    Async\n                                voteByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoVoteRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/vote/vote.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoVoteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbRepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\n\n@Injectable()\nexport class VoteService {\n  constructor(\n    @InjectRepository(DbRepoToUserVotes, \"ApiConnection\")\n    private repoVoteRepository: Repository\n  ) {}\n\n  baseQueryBuilder() {\n    const builder = this.repoVoteRepository.createQueryBuilder(\"r2votes\").withDeleted();\n\n    return builder;\n  }\n\n  async voteByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .addSelect(\"r2votes.deleted_at\")\n      .where(\"r2votes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2votes.user_id = :userId\", { userId });\n\n    const voteExists = await queryBuilder.getOne();\n\n    if (voteExists) {\n      if (!voteExists.deleted_at) {\n        throw new ConflictException(\"You have already voted for this repo\");\n      }\n\n      await this.repoVoteRepository.restore(voteExists.id);\n\n      return voteExists;\n    }\n\n    return this.repoVoteRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downVoteByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .addSelect(\"r2votes.deleted_at\")\n      .where(\"r2votes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2votes.user_id = :userId\", { userId });\n\n    const voteExists = await queryBuilder.getOne();\n\n    if (!voteExists) {\n      throw new NotFoundException(\"You have not voted for this repo\");\n    }\n\n    if (voteExists.deleted_at) {\n      throw new ConflictException(\"You have already removed your vote\");\n    }\n\n    await this.repoVoteRepository.softDelete(voteExists.id);\n\n    return voteExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/api changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.39.0 (2023-07-05)\n🐛 Bug Fixes\n\nadd checks for requester and recipient for collaboration requests (#189) (f212fb2)\nchange swagger docs response for highlight reactions (#192) (56eb3bd)\nremove limit from repo recommendation query (638f9ec)\n\n🍕 Features\n\nadd endpoint for repo recommendations (#191) (0b6d16a)\nadd followers, following, recent pull requests and velocity counts to user info (#195) (109d081)\nenable promo codes with Stripe checkout (#190) (ad2c624)\n\n1.39.0-beta.5 (2023-07-05)\n🍕 Features\n\nadd followers, following, recent pull requests and velocity counts to user info (#195) (109d081)\n\n1.39.0-beta.4 (2023-07-03)\n🐛 Bug Fixes\n\nchange swagger docs response for highlight reactions (#192) (56eb3bd)\n\n1.39.0-beta.3 (2023-06-30)\n🐛 Bug Fixes\n\nremove limit from repo recommendation query (638f9ec)\n\n1.39.0-beta.2 (2023-06-29)\n🍕 Features\n\nadd endpoint for repo recommendations (#191) (0b6d16a)\n\n1.39.0-beta.1 (2023-06-29)\n🍕 Features\n\nenable promo codes with Stripe checkout (#190) (ad2c624)\n\n1.38.3-beta.1 (2023-06-28)\n🐛 Bug Fixes\n\nadd checks for requester and recipient for collaboration requests (#189) (f212fb2)\n\n📦 open-sauced/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.38.2 (2023-06-21)\n🐛 Bug Fixes\n\nupdate query for merged pull requests for repositories (#185) (f9defe2)\n\n1.38.2-beta.1 (2023-06-21)\n🐛 Bug Fixes\n\nupdate query for merged pull requests for repositories (#185) (f9defe2)\n\n1.38.1 (2023-06-16)\n🐛 Bug Fixes\n\nupdate existing user after they connect their account (#182) (b8e8c88)\n\n1.38.1-beta.1 (2023-06-16)\n🐛 Bug Fixes\n\nupdate existing user after they connect their account (#182) (b8e8c88)\n\n1.38.0 (2023-06-13)\n🍕 Features\n\ngenerate code test, explanation on PR (#179) (c292277)\n\n1.38.0-beta.1 (2023-06-12)\n🍕 Features\n\ngenerate code test, explanation on PR (#179) (c292277)\n\n1.37.0 (2023-06-06)\n🐛 Bug Fixes\n\nadd regex pattern to validate twitter username (#138) (71a164d)\n\n🍕 Features\n\nadd endpoint for fetching contributors based on filters (#177) (9427269)\nadd endpoints for managing endorsements (#176) (487c1a2)\nremove open-sauced/open-sauced from ci yml (#173) (a398b89)\n\n1.37.0-beta.4 (2023-06-01)\n🍕 Features\n\nadd endpoint for fetching contributors based on filters (#177) (9427269)\n\n1.37.0-beta.3 (2023-05-31)\n🍕 Features\n\nadd endpoints for managing endorsements (#176) (487c1a2)\n\n1.37.0-beta.2 (2023-05-31)\n🐛 Bug Fixes\n\nadd regex pattern to validate twitter username (#138) (71a164d)\n\n1.37.0-beta.1 (2023-05-24)\n🍕 Features\n\nremove open-sauced/open-sauced from ci yml (#173) (a398b89)\n\n1.36.0 (2023-05-23)\n🍕 Features\n\nadd endpoint to generate code refactor suggestions (#171) (0fe8b4d)\nadd endpoints for managing user collaborations (#170) (28a3b76)\n\n1.36.0-beta.2 (2023-05-22)\n🍕 Features\n\nadd endpoint to generate code refactor suggestions (#171) (0fe8b4d)\n\n1.36.0-beta.1 (2023-05-22)\n🍕 Features\n\nadd endpoints for managing user collaborations (#170) (28a3b76)\n\n1.35.0 (2023-05-18)\n🍕 Features\n\nadd endpoint to generate pull request description (#168) (3549897)\n\n1.35.0-beta.1 (2023-05-18)\n🍕 Features\n\nadd endpoint to generate pull request description (#168) (3549897)\n\n1.34.0 (2023-05-16)\n🍕 Features\n\nadd endpoints for retrieving highlights for followed users (#164) (03600f8)\nadd meta_id to user notifications for building URLs (#165) (113e98b)\n\n1.34.0-beta.2 (2023-05-16)\n🍕 Features\n\nadd meta_id to user notifications for building URLs (#165) (113e98b)\n\n1.34.0-beta.1 (2023-05-15)\n🍕 Features\n\nadd endpoints for retrieving highlights for followed users (#164) (03600f8)\n\n1.33.1 (2023-05-12)\n🐛 Bug Fixes\n\nallow voting for a repo after removing old vote (#161) (ff434b5)\n\n1.33.1-beta.1 (2023-05-12)\n🐛 Bug Fixes\n\nallow voting for a repo after removing old vote (#161) (ff434b5)\n\n1.33.0 (2023-05-11)\n🔥 Performance Improvements\n\nsimplify digital ocean static globals (88e08d2)\nstash stress tester changes (6fa4a7d)\n\n🤖 Build System\n\nexperiment with published package without json path hack (d3afb4b)\nre-use code across private repos and small fixes (3d2b7eb)\nupdate dependencies (abb24de)\nupdate deps (47dc78b)\n\n🔁 Continuous Integration\n\nfix some deprecated actions warnings (64d869f)\nupdate git action workflows (7c846ec)\n\n🍕 Features\n\nadd connected_at auth timestamp and correct login backfill created_at (7338f09), closes #147\nadd endpoint for fetching user notifications (#155) (01301c9)\nadd first commit and pull request date (08f1679)\nadd user notification count to session data (#158) (1c3378e)\nadd user top repos bag (5238f58)\nadd user top repos route (17d7725)\nadd user top repositories entities (7e29c6e)\nexperimental build improvements (70a6e7b)\n\n🐛 Bug Fixes\n\nadd missing user field migrations (2ee076b)\ncorrect all migrations up to not including pull requests (9bee970)\ncorrect build errors (20491d8)\ncorrect dockerfile paths for library usage (f73f891)\ncorrect merge conflict (436f2db)\ncorrect misaligned migrations to real values (bb26d27)\ncorrect npm package not releasing (672ea80)\ncorrect server versioning (1225197)\ncorrect some migration indexes (971adeb)\ncorrect some migration indexes and use new user indexer meta (23b2a83)\ncorrect user highlight migrations (80a866f)\ncorrect validation pipe error on numbers (ae44652), closes #154\nnormalize pull requests status for queries (a057e0e)\ntrigger deploy (fed79a1)\nupdate deploy URLs (83fe57d)\nupdate license year (#157) (9fc3be7)\nupdate queries for pull requests based on status (#159) (88e0adc)\n\n1.33.0-beta.9 (2023-05-11)\n🐛 Bug Fixes\n\nnormalize pull requests status for queries (a057e0e)\n\n1.33.0-beta.8 (2023-05-11)\n🐛 Bug Fixes\n\nupdate queries for pull requests based on status (#159) (88e0adc)\n\n1.33.0-beta.7 (2023-05-11)\n🍕 Features\n\nadd user notification count to session data (#158) (1c3378e)\n\n1.33.0-beta.6 (2023-05-11)\n🍕 Features\n\nadd endpoint for fetching user notifications (#155) (01301c9)\n\n🐛 Bug Fixes\n\ntrigger deploy (fed79a1)\nupdate deploy URLs (83fe57d)\nupdate license year (#157) (9fc3be7)\n\n1.33.0-beta.5 (2023-05-05)\n🐛 Bug Fixes\n\ncorrect server versioning (1225197)\n\n1.33.0-beta.4 (2023-05-05)\n🐛 Bug Fixes\n\ncorrect misaligned migrations to real values (bb26d27)\n\n1.33.0-beta.3 (2023-05-05)\n🐛 Bug Fixes\n\nadd missing user field migrations (2ee076b)\n\n1.33.0-beta.2 (2023-05-04)\n🔁 Continuous Integration\n\nfix some deprecated actions warnings (64d869f)\nupdate git action workflows (7c846ec)\n\n1.33.0-beta.1 (2023-05-04)\n🔥 Performance Improvements\n\nsimplify digital ocean static globals (88e08d2)\nstash stress tester changes (6fa4a7d)\n\n🍕 Features\n\nadd connected_at auth timestamp and correct login backfill created_at (7338f09), closes #147\nadd first commit and pull request date (08f1679)\nadd user top repos bag (5238f58)\nadd user top repos route (17d7725)\nadd user top repositories entities (7e29c6e)\nexperimental build improvements (70a6e7b)\n\n🐛 Bug Fixes\n\ncorrect all migrations up to not including pull requests (9bee970)\ncorrect build errors (20491d8)\ncorrect dockerfile paths for library usage (f73f891)\ncorrect merge conflict (436f2db)\ncorrect npm package not releasing (672ea80)\ncorrect some migration indexes (971adeb)\ncorrect some migration indexes and use new user indexer meta (23b2a83)\ncorrect user highlight migrations (80a866f)\ncorrect validation pipe error on numbers (ae44652), closes #154\n\n🤖 Build System\n\nexperiment with published package without json path hack (d3afb4b)\nre-use code across private repos and small fixes (3d2b7eb)\nupdate dependencies (abb24de)\nupdate deps (47dc78b)\n\n1.33.0-alpha.3 (2023-05-04)\n🤖 Build System\n\nupdate dependencies (abb24de)\n\n1.33.0-alpha.2 (2023-05-03)\n🐛 Bug Fixes\n\ncorrect validation pipe error on numbers (ae44652), closes #154\n\n1.33.0-alpha.1 (2023-05-03)\n🔥 Performance Improvements\n\nsimplify digital ocean static globals (88e08d2)\nstash stress tester changes (6fa4a7d)\n\n🤖 Build System\n\nexperiment with published package without json path hack (d3afb4b)\nre-use code across private repos and small fixes (3d2b7eb)\nupdate deps (47dc78b)\n\n🍕 Features\n\nadd connected_at auth timestamp and correct login backfill created_at (7338f09), closes #147\nadd first commit and pull request date (08f1679)\nadd user top repos bag (5238f58)\nadd user top repos route (17d7725)\nadd user top repositories entities (7e29c6e)\nexperimental build improvements (70a6e7b)\n\n🐛 Bug Fixes\n\ncorrect all migrations up to not including pull requests (9bee970)\ncorrect build errors (20491d8)\ncorrect dockerfile paths for library usage (f73f891)\ncorrect merge conflict (436f2db)\ncorrect npm package not releasing (672ea80)\ncorrect some migration indexes (971adeb)\ncorrect some migration indexes and use new user indexer meta (23b2a83)\ncorrect user highlight migrations (80a866f)\n\n1.32.0-alpha.1 (2023-04-28)\n🐛 Bug Fixes\n\ncorrect all migrations up to not including pull requests (9bee970)\ncorrect build errors (20491d8)\ncorrect dockerfile paths for library usage (f73f891)\ncorrect merge conflict (436f2db)\ncorrect npm package not releasing (672ea80)\ncorrect some migration indexes (971adeb)\ncorrect some migration indexes and use new user indexer meta (23b2a83)\n\n🔥 Performance Improvements\n\nsimplify digital ocean static globals (88e08d2)\nstash stress tester changes (6fa4a7d)\n\n🤖 Build System\n\nexperiment with published package without json path hack (d3afb4b)\nre-use code across private repos and small fixes (3d2b7eb)\nupdate deps (47dc78b)\n\n🍕 Features\n\nadd connected_at auth timestamp and correct login backfill created_at (7338f09), closes #147\nadd first commit and pull request date (08f1679)\nadd user top repos bag (5238f58)\nadd user top repos route (17d7725)\nadd user top repositories entities (7e29c6e)\nexperimental build improvements (70a6e7b)\n\n1.29.0-alpha.3 (2023-03-21)\n1.31.0 (2023-04-25)\n🐛 Bug Fixes\n\ncorrect npm package not releasing (672ea80)\n\n1.29.0-alpha.2 (2023-03-21)\n🐛 Bug Fixes\n\ncorrect dockerfile paths for library usage (f73f891)\n\n1.29.0-alpha.1 (2023-03-20)\n🍕 Features\n\nexperimental build improvements (70a6e7b)\n\n🤖 Build System\n\nexperiment with published package without json path hack (d3afb4b)\nre-use code across private repos and small fixes (3d2b7eb)\n\n🐛 Bug Fixes\n\ncorrect build errors (20491d8)\n\n1.32.0 (2023-05-02)\n🐛 Bug Fixes\n\nlowercase contributor value before using in queries (#150) (762c1cb)\n\n🍕 Features\n\nadd shipped_at field to user highlight data (#151) (4deaadd)\n\n1.32.0-beta.1 (2023-04-26)\n🍕 Features\n\nadd shipped_at field to user highlight data (#151) (4deaadd)\n\n1.31.1-beta.1 (2023-04-26)\n🐛 Bug Fixes\n\nlowercase contributor value before using in queries (#150) (762c1cb)\n\n1.31.0 (2023-04-25)\n🐛 Bug Fixes\n\nupdate query for insight members list (#143) (544673a)\n\n🍕 Features\n\nadd endpoint to retrieve pull request insights (#144) (828b7d2)\n\n1.31.0-beta.1 (2023-04-25)\n🍕 Features\n\nadd endpoint to retrieve pull request insights (#144) (828b7d2)\n\n1.30.2-beta.1 (2023-04-24)\n🐛 Bug Fixes\n\nupdate query for insight members list (#143) (544673a)\n\n1.30.1 (2023-04-20)\n🐛 Bug Fixes\n\nadd repo id to pull request data (38f1dc9)\nleft join users for insight members to show pending invites (611b923)\nonly add range filter when not requesting specific repos (#141) (28f6699)\n\n1.30.1-beta.3 (2023-04-20)\n🐛 Bug Fixes\n\nadd repo id to pull request data (38f1dc9)\n\n1.30.1-beta.2 (2023-04-20)\n🐛 Bug Fixes\n\nonly add range filter when not requesting specific repos (#141) (28f6699)\n\n1.30.1-beta.1 (2023-04-18)\n🐛 Bug Fixes\n\nleft join users for insight members to show pending invites (611b923)\n\n1.30.1-beta.1 (2023-04-14)\n🐛 Bug Fixes\n\ncorrect npm package not releasing (672ea80)\n\n1.29.0-alpha.2 (2023-03-21)\n\nadd owner information and relationships to insight pages (#136) (94331ba)\n\n1.30.0-beta.2 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect dockerfile paths for library usage (f73f891)\n\n1.29.0-alpha.1 (2023-03-20)\n\nadd user name to insight members list (7e2756b)\n\n1.30.0-beta.1 (2023-04-04)\n🍕 Features\n\nadd endpoints for managing insight team members (#135) (9b12042)\n\n1.29.1 (2023-03-31)\n🐛 Bug Fixes\n\nonly use repos_id for count query when using filters (#133) (cae5dbd)\n\n🤖 Build System\n\nforce release with dependency upgrades (293c4d3)\nupdate typescript and other non-blocking deps (c54dcd9)\n\n1.29.1-beta.1 (2023-03-31)\n🐛 Bug Fixes\n\nonly use repos_id for count query when using filters (#133) (cae5dbd)\n\n🤖 Build System\n\nexperiment with published package without json path hack (d3afb4b)\nre-use code across private repos and small fixes (3d2b7eb)\n\n🐛 Bug Fixes\n\ncorrect build errors (20491d8)\nremove day conversion from pr velocity (5ee770b)\nsort insights by updated at, fix user_id checks (#131) (2d6609a)\n\n1.29.0-beta.4 (2023-03-28)\n🐛 Bug Fixes\n\nsort insights by updated at, fix user_id checks (#131) (2d6609a)\n\n1.29.0-beta.3 (2023-03-28)\n🍕 Features\n\nadd endpoints for managing user follows (#130) (7728bc8)\n\n1.29.0-beta.2 (2023-03-21)\n🐛 Bug Fixes\n\nremove day conversion from pr velocity (5ee770b)\n\n1.29.0-beta.1 (2023-03-21)\n🍕 Features\n\nadd insights to repo search endpoint (#128) (d3cb75a)\n\n1.28.0 (2023-03-16)\n🤖 Build System\n\ncorrect ci diagram generation (475e5dd)\ncorrect diagram database generator inclusion (afde490)\n\n🧑‍💻 Code Refactoring\n\ncompletely remove supabase outside auth connector (6df9486)\nmove migrations to digital ocean structure and prepare for pgmigrate (c8dab92)\nremove stray diagrams (f57c5b6)\nremove supabase, code split migrations and diagrams (98980b0)\n\n🐛 Bug Fixes\n\nadd migration for pull requests table (1680fb3)\ncorrect missing alpha interests migrations (58540e7)\ncorrect references cascade options (a5a4789)\ncorrect user entity lenght (e043912)\ncorrect user entity name length (66fb61e)\nformatting (35a08da)\n\n🍕 Features\n\nadd common filter service and add filtering support for pull requests (#118) (cfe2a69)\nadd endpoint for pull requests (#116) (86e013f)\nadd endpoint to display pull requests for contributors (#117) (ca9a69c)\nadd etl supporting repos and users metadata (#89) (286e864)\nadd repo full_name to pull request endpoints (#124) (8bfda45)\nadd repo topics (d08173f)\nadd search endpoint for repos with filters (#125) (85a7549)\nadd support for capturing repo fullname on onboarding/insight repos (#103) (be5fae7)\nupdate environment and database connections to new logging model (39bdd16)\n\n1.28.0-beta.3 (2023-03-15)\n🍕 Features\n\nadd search endpoint for repos with filters (#125) (85a7549)\n\n1.28.0-beta.2 (2023-03-15)\n🍕 Features\n\nadd repo full_name to pull request endpoints (#124) (8bfda45)\n\n1.28.0-beta.1 (2023-03-15)\n🤖 Build System\n\ncorrect ci diagram generation (475e5dd)\ncorrect diagram database generator inclusion (afde490)\n\n🧑‍💻 Code Refactoring\n\ncompletely remove supabase outside auth connector (6df9486)\nmove migrations to digital ocean structure and prepare for pgmigrate (c8dab92)\nremove stray diagrams (f57c5b6)\nremove supabase, code split migrations and diagrams (98980b0)\n\n🍕 Features\n\nadd common filter service and add filtering support for pull requests (#118) (cfe2a69)\nadd endpoint for pull requests (#116) (86e013f)\nadd endpoint to display pull requests for contributors (#117) (ca9a69c)\nadd etl supporting repos and users metadata (#89) (286e864)\nadd repo topics (d08173f)\nadd support for capturing repo fullname on onboarding/insight repos (#103) (be5fae7)\nupdate environment and database connections to new logging model (39bdd16)\n\n🐛 Bug Fixes\n\nadd migration for pull requests table (1680fb3)\ncorrect missing alpha interests migrations (58540e7)\ncorrect references cascade options (a5a4789)\ncorrect user entity lenght (e043912)\ncorrect user entity name length (66fb61e)\nformatting (35a08da)\n\n1.27.0 (2023-03-10)\n🍕 Features\n\nadd endpoint to fetch an individual highlight (#115) (ed28e07)\n\n🐛 Bug Fixes\n\nuse take instead of limit for insight pages with join (#120) (c000984)\n\n1.27.0-beta.2 (2023-03-10)\n🐛 Bug Fixes\n\nuse take instead of limit for insight pages with join (#120) (c000984)\n\n1.27.0-beta.1 (2023-03-06)\n🍕 Features\n\nadd endpoint to fetch an individual highlight (#115) (ed28e07)\n\n1.26.0 (2023-02-28)\n1.27.0-alpha.1 (2023-03-09)\n🤖 Build System\n\ncorrect ci diagram generation (475e5dd)\ncorrect diagram database generator inclusion (afde490)\n\n🧑‍💻 Code Refactoring\n\ncompletely remove supabase outside auth connector (6df9486)\nmove migrations to digital ocean structure and prepare for pgmigrate (c8dab92)\nremove stray diagrams (f57c5b6)\nremove supabase, code split migrations and diagrams (98980b0)\n\n🍕 Features\n\nadd common filter service and add filtering support for pull requests (#118) (cfe2a69)\nadd endpoint for pull requests (#116) (86e013f)\nadd endpoint to display pull requests for contributors (#117) (ca9a69c)\nadd etl supporting repos and users metadata (#89) (286e864)\nadd repo topics (d08173f)\nadd support for capturing repo fullname on onboarding/insight repos (#103) (be5fae7)\nupdate environment and database connections to new logging model (39bdd16)\n\n🐛 Bug Fixes\n\nadd migration for pull requests table (1680fb3)\ncorrect missing alpha interests migrations (58540e7)\ncorrect references cascade options (a5a4789)\ncorrect user entity lenght (e043912)\ncorrect user entity name length (66fb61e)\nformatting (35a08da)\n\n1.25.0-alpha.10 (2023-03-08)\n🍕 Features\n\nadd common filter service and add filtering support for pull requests (#118) (cfe2a69)\n\n1.25.0-alpha.9 (2023-03-07)\n🍕 Features\n\nadd endpoint to display pull requests for contributors (#117) (ca9a69c)\n\n1.25.0-alpha.8 (2023-03-07)\n🍕 Features\n\nadd endpoint for pull requests (#116) (86e013f)\n\n1.25.0-alpha.7 (2023-03-07)\n🐛 Bug Fixes\n\ncorrect user entity name length (66fb61e)\n\n1.25.0-alpha.6 (2023-02-23)\n🐛 Bug Fixes\n\ncorrect references cascade options (a5a4789)\n\n1.25.0-alpha.5 (2023-02-16)\n🐛 Bug Fixes\n\nadd migration for pull requests table (1680fb3)\n\n1.25.0-alpha.4 (2023-02-16)\n🍕 Features\n\nadd repo topics (d08173f)\n\n1.25.0-alpha.3 (2023-02-14)\n🐛 Bug Fixes\n\ncorrect user entity lenght (e043912)\n\n1.25.0-alpha.2 (2023-02-10)\n🍕 Features\n\nadd support for capturing repo fullname on onboarding/insight repos (#103) (be5fae7)\n\n1.25.0-alpha.1 (2023-02-02)\n🍕 Features\n\nadd etl supporting repos and users metadata (#89) (286e864)\nupdate environment and database connections to new logging model (39bdd16)\n\n🤖 Build System\n\ncorrect ci diagram generation (475e5dd)\ncorrect diagram database generator inclusion (afde490)\n\n🧑‍💻 Code Refactoring\n\ncompletely remove supabase outside auth connector (6df9486)\nmove migrations to digital ocean structure and prepare for pgmigrate (c8dab92)\nremove stray diagrams (f57c5b6)\nremove supabase, code split migrations and diagrams (98980b0)\n\n🐛 Bug Fixes\n\ncorrect missing alpha interests migrations (58540e7)\n\n1.24.0 (2023-02-02)\n⏩ Reverts\n\nRevert \"feat: add etl supporting repos and users metadata (#87)\" (#88) (0b85d93), closes #87 #88\n\n🐛 Bug Fixes\n\nadd extra fields to user data endpoint (83c6888)\nadd user profile fields to migrations, endpoints (#92) (c6c07c6)\nupdate swagger docs for user profile endpoints (5f9be41)\n\n🍕 Features\n\nadd endpoint to update user email preferences (#90) (8c6884c)\nadd etl supporting repos and users metadata (#87) (9c605d0)\nupdate typescript and build packages (6b832e4)\n\n🤖 Build System\n\ncorrect optional api parameters in user creation endpoints (d50b86f)\nupdate dependencies (5e1cb54)\n\n1.24.0 (2023-02-02)\n⏩ Reverts\n\nRevert \"feat: add etl supporting repos and users metadata (#87)\" (#88) (0b85d93), closes #87 #88\n\n🐛 Bug Fixes\n\nadd extra fields to user data endpoint (83c6888)\nadd user profile fields to migrations, endpoints (#92) (c6c07c6)\nupdate swagger docs for user profile endpoints (5f9be41)\n\n🍕 Features\n\nadd endpoint to update user email preferences (#90) (8c6884c)\nadd etl supporting repos and users metadata (#87) (9c605d0)\nupdate typescript and build packages (6b832e4)\n\n🤖 Build System\n\ncorrect optional api parameters in user creation endpoints (d50b86f)\n\n1.24.0 (2023-02-02)\n⏩ Reverts\n\nRevert \"feat: add etl supporting repos and users metadata (#87)\" (#88) (0b85d93), closes #87 #88\n\n🍕 Features\n\nadd endpoint to update user email preferences (#90) (8c6884c)\nadd etl supporting repos and users metadata (#87) (9c605d0)\n\n🐛 Bug Fixes\n\nadd extra fields to user data endpoint (83c6888)\nadd user profile fields to migrations, endpoints (#92) (c6c07c6)\nupdate swagger docs for user profile endpoints (5f9be41)\n\n1.24.0-beta.5 (2023-02-01)\n🐛 Bug Fixes\n\nadd extra fields to user data endpoint (83c6888)\n\n1.24.0-beta.4 (2023-02-01)\n🐛 Bug Fixes\n\nadd user profile fields to migrations, endpoints (#92) (c6c07c6)\n\n1.24.0-beta.3 (2023-01-31)\n🐛 Bug Fixes\n\nupdate swagger docs for user profile endpoints (5f9be41)\n\n1.24.0-beta.2 (2023-01-31)\n🍕 Features\n\nadd endpoint to update user email preferences (#90) (8c6884c)\n\n1.24.0-beta.1 (2023-01-30)\n🍕 Features\n\nadd etl supporting repos and users metadata (#87) (9c605d0)\n\n⏩ Reverts\n\nRevert \"feat: add etl supporting repos and users metadata (#87)\" (#88) (0b85d93), closes #87 #88\n\n1.23.0 (2023-01-30)\n1.24.0-alpha.6 (2023-02-01)\n🧑‍💻 Code Refactoring\n\ncompletely remove supabase outside auth connector (6df9486)\n\n1.24.0-alpha.5 (2023-02-01)\n🤖 Build System\n\ncorrect ci diagram generation (475e5dd)\n\n1.24.0-alpha.4 (2023-02-01)\n🧑‍💻 Code Refactoring\n\nmove migrations to digital ocean structure and prepare for pgmigrate (c8dab92)\nremove stray diagrams (f57c5b6)\n\n1.24.0-alpha.3 (2023-01-31)\n🧑‍💻 Code Refactoring\n\nremove supabase, code split migrations and diagrams (98980b0)\n\n🤖 Build System\n\ncorrect diagram database generator inclusion (afde490)\n\n1.24.0-alpha.2 (2023-01-31)\n🍕 Features\n\nupdate environment and database connections to new logging model (39bdd16)\n\n1.24.0-alpha.1 (2023-01-30)\n🍕 Features\n\nadd etl supporting repos and users metadata (#89) (286e864)\n\n1.23.0-beta.1 (2023-01-23)\n🍕 Features\n\nadd additional information to user record (#81) (5e24505)\n\n1.22.0 (2023-01-13)\n🍕 Features\n\nadd endpoint to find a user by username (#77) (bd905ab)\n\n🤖 Build System\n\nadd full_name to insight repos migrations (0eb10bb)\nadd indexer meta fields to repos (e3161ab)\n\n1.22.0-beta.2 (2023-01-11)\n🤖 Build System\n\nadd indexer meta fields to repos (e3161ab)\n\n1.22.0-beta.1 (2023-01-09)\n🍕 Features\n\nadd endpoint to find a user by username (#77) (bd905ab)\n\n1.21.1-beta.1 (2023-01-09)\n🤖 Build System\n\nadd full_name to insight repos migrations (0eb10bb)\n\n1.21.0 (2022-12-22)\n🍕 Features\n\nadd stripe webhook integration for subscriptions (#74) (b9d5a6e)\n\n1.21.0-beta.1 (2022-12-21)\n🍕 Features\n\nadd stripe webhook integration for subscriptions (#74) (b9d5a6e)\n\n1.20.0 (2022-12-16)\n🍕 Features\n\nadd endpoint for creating checkout session (#72) (2ce16fd)\n\n1.20.0-beta.1 (2022-12-16)\n🍕 Features\n\nadd endpoint for creating checkout session (#72) (2ce16fd)\n\n1.19.0 (2022-11-29)\n🍕 Features\n\nadd endpoints to update/remove insight page (#68) (df56c4f)\n\n1.19.0-beta.1 (2022-11-22)\n🍕 Features\n\nadd endpoints to update/remove insight page (#68) (df56c4f)\n\n1.18.1 (2022-11-18)\n🐛 Bug Fixes\n\nuse save operation directly for insights, insight repos (#66) (bd25889)\n\n1.18.1-beta.1 (2022-11-18)\n🐛 Bug Fixes\n\nuse save operation directly for insights, insight repos (#66) (bd25889)\n\n1.18.0 (2022-11-17)\n🍕 Features\n\nadd repos when creating an insight page (#63) (1f021a4)\n\n🐛 Bug Fixes\n\nadd visibility flag to insight page creation (#64) (2ddb855)\n\n1.18.0-beta.2 (2022-11-16)\n🐛 Bug Fixes\n\nadd visibility flag to insight page creation (#64) (2ddb855)\n\n1.18.0-beta.1 (2022-11-15)\n🍕 Features\n\nadd repos when creating an insight page (#63) (1f021a4)\n\n1.17.1 (2022-11-12)\n🐛 Bug Fixes\n\ncorrect open sauced member created_at timestamp (89b5329)\n\n1.17.1-beta.1 (2022-11-11)\n🐛 Bug Fixes\n\ncorrect open sauced member created_at timestamp (89b5329)\n\n1.17.0 (2022-11-11)\n🐛 Bug Fixes\n\ncorrect database loading backfill not saving user (7cfc04b)\n\n🍕 Features\n\nadd associating users to repositories to onboarding endpoint (#57) (cda2cb2)\nadd endpoint to retrieve insight page by id (#58) (648dbeb)\n\n1.17.0-beta.3 (2022-11-10)\n🍕 Features\n\nadd endpoint to retrieve insight page by id (#58) (648dbeb)\n\n1.17.0-beta.2 (2022-11-10)\n🐛 Bug Fixes\n\ncorrect database loading backfill not saving user (7cfc04b)\n\n1.17.0-beta.1 (2022-11-01)\n🍕 Features\n\nadd associating users to repositories to onboarding endpoint (#57) (cda2cb2)\n\n1.16.0 (2022-10-28)\n🐛 Bug Fixes\n\ncorrect fastify dev dependency (de9cea0)\n\n🍕 Features\n\nadd users insights controller (#55) (c4addf6)\n\n1.16.0-beta.1 (2022-10-28)\n🍕 Features\n\nadd users insights controller (#55) (c4addf6)\n\n1.15.1-beta.1 (2022-10-28)\n🐛 Bug Fixes\n\ncorrect fastify dev dependency (de9cea0)\n\n1.15.0 (2022-10-17)\n🤖 Build System\n\nimplement minimal pino logger (b991dad)\n\n🍕 Features\n\nimplement http and database logging capabilities (3a662d0), closes #37\n\n🧑‍💻 Code Refactoring\n\ncorrect http timestamp logging (3782b21)\ncorrect type dependencies (9895327)\nimprove sql logging and slow query timeout (5385049)\nmake logging beautiful everywhere (99ac2c6)\n\n🎨 Styles\n\nadd fastify express middleware adapter linting (fc74284)\nremove extraneous console.logs (e3d7bd7)\n\n1.15.0-beta.2 (2022-10-13)\n🎨 Styles\n\nremove extraneous console.logs (e3d7bd7)\n\n1.15.0-beta.1 (2022-10-13)\n🤖 Build System\n\nimplement minimal pino logger (b991dad)\n\n🍕 Features\n\nimplement http and database logging capabilities (3a662d0), closes #37\n\n🎨 Styles\n\nadd fastify express middleware adapter linting (fc74284)\n\n🧑‍💻 Code Refactoring\n\ncorrect http timestamp logging (3782b21)\ncorrect type dependencies (9895327)\nimprove sql logging and slow query timeout (5385049)\nmake logging beautiful everywhere (99ac2c6)\n\n1.14.0 (2022-10-04)\n📝 Documentation\n\nmentioned .env file (#42) (a17b835), closes #41\n\n🐛 Bug Fixes\n\nincrease paginated response limit to 500 (b174a3f), closes #43\n\n1.14.0-beta.2 (2022-10-03)\n🐛 Bug Fixes\n\nincrease paginated response limit to 500 (b174a3f), closes #43\n\n1.14.0-beta.1 (2022-10-03)\n📝 Documentation\n\nmentioned .env file (#42) (a17b835), closes #41\n\n1.13.0 (2022-10-03)\n🤖 Build System\n\nadd ability to switch between servers (f5b6599)\ndefault do swagger documentation (de371dc)\n\n🐛 Bug Fixes\n\ncorrect rate limits (63639b4), closes #36\n\n📝 Documentation\n\nadd better swagger description and release targets (742b073)\n\n🔁 Continuous Integration\n\ncorrect release workflow garbage collection trigger mechanics (6b157e5)\n\n📦 @open-sauced/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.12.0 (2022-09-28)\n🍕 Features\n\nadd ability to retrieve/update waitlist status for a user (aef9df6)\n\n🐛 Bug Fixes\n\nreview feedback fixes (f3808a5)\nuse request exception/responses (fcaddb5)\n\n1.12.0-beta.3 (2022-10-03)\n🔁 Continuous Integration\n\ncorrect release workflow garbage collection trigger mechanics (6b157e5)\n\n1.12.0-beta.2 (2022-10-03)\n🤖 Build System\n\nadd ability to switch between servers (f5b6599)\ndefault do swagger documentation (de371dc)\n\n🐛 Bug Fixes\n\ncorrect rate limits (63639b4), closes #36\n\n📝 Documentation\n\nadd better swagger description and release targets (742b073)\n\n1.12.0-beta.1 (2022-09-28)\n🍕 Features\n\nadd ability to retrieve/update waitlist status for a user (aef9df6)\n\n🐛 Bug Fixes\n\nreview feedback fixes (f3808a5)\nuse request exception/responses (fcaddb5)\n\n1.11.0 (2022-09-27)\n🍕 Features\n\nadd role for insights to session information endpoint (#32) (5699f6a)\n\n📝 Documentation\n\nadjust the pizzas emoji in readme (f5f2761)\n\n1.11.0-beta.2 (2022-09-27)\n📝 Documentation\n\nadjust the pizzas emoji in readme (f5f2761)\n\n1.11.0-beta.1 (2022-09-27)\n🍕 Features\n\nadd role for insights to session information endpoint (#32) (5699f6a)\n\n1.10.0 (2022-09-16)\n🧑‍💻 Code Refactoring\n\ncorrect controller function naming (0046b05)\nremove non-meta hidden properties from typeorm entity display (4601be2)\n\n📝 Documentation\n\nimprove readme for first time users (f8c9324)\n\n🎨 Styles\n\ncorrect lint errors (4b264d5)\ncorrect lint errors from writing too much manual stuff (2073883)\n\n🤖 Build System\n\nupdate dependencies (4c3782f)\n\n🐛 Bug Fixes\n\nadd check/insert public user to session endpoint (03bf95b)\ncorrect repository service order 500 error (e5e2e03)\ncorrectly hide api hidden model properties from typeorm select (8810e03)\nexclude generated temporary view from database visualisation (b457783)\n\n🍕 Features\n\nadd onboarding information to session endpoint and endpoint for completing onboarding (155e99e)\nadd paginated contributions service (d2745ff)\nadded is_onboarded boolean to migration for public.users table (1edaeda)\n\n1.9.0 (2022-08-30)\n🔁 Continuous Integration\n\nattempt to push docr only on successful release (957b86e)\nimprove local development workflow along vite apps (b9f3798)\nonly deploy documentation on main branch (fad79b1), closes #14\n\n🎨 Styles\n\ncorrect lint errors from hasty push (fe20c2d)\n\n🤖 Build System\n\nupdate dependencies to latest non breaking versions (59dd7bf)\n\n🍕 Features\n\nadd is_accepted admin managed field to repo user submissions (b0169e7)\nadd list authenticated user stargazed repos (2a8d198)\nadd list authenticated user starred repos (f5f942f)\nadd list authenticated user submitted repos (334268d)\nadd list authenticated user voted repos (f96a793)\nadd repo up vote and down vote functionality (16678a7), closes #19\nadd star repo authenticated feature (e392288), closes #20\nadd stargaze repo authenticated feature (f8d41f1), closes #22\nadd submit repo authenticated feature (09c96fe), closes #21\nadd supabase auth session handler and working guards (ed9729a), closes #24\nimplement eslint hot opensauced rules (e0d38ca)\nimplement simple supabase strategy guard (2f966a3)\n\n📝 Documentation\n\nadd powered by digital ocean readme badge and referal link (5925b74)\nupdate repo api model properties and hide soft delete tags for all entities (2bdec65)\n\n🧑‍💻 Code Refactoring\n\nadd Contribution api model properties (a08abfd)\nadd DbRepoToUserStargazers api model properties (247e0ba)\nadd DbRepoToUserStars api model properties (14b6a44)\nadd DbRepoToUserSubmissions api model properties (dbc66f3)\nadd DbRepoToUserVotes api model properties (d051987)\nadd User api model properties (618225f)\nclean up repo controller extra decorators (3282435)\ncode split repository entities (ae43450)\ncorrect stray console.log (b4c9879)\nimplement new eslint style changes (c8115b6)\nrename Contribution entity into DbContribution (3774b36)\nrename enum (b8b22da)\nrename Repo entity into DbRepo (f05c29c)\nrename RepoToUserStargazers entity into DbRepoToUserStargazers (867d740)\nrename RepoToUserStars entity into DbRepoToUserStars (d08b3ff)\nrename RepoToUserSubmissions entity into DbRepoToUserSubmissions (9484df4)\nrename RepoToUserVotes entity into DbRepoToUserVotes (61ac1e7)\nrename User entity into DbUser (04082d7)\n\n🐛 Bug Fixes\n\ncorrect additional relation entities appearing in openapi schema (f4570c3)\ncorrect counting of many to many tables (7249714)\ncorrect date type meta tags openapi types (860fff3)\ncorrect remaining dtos and auth controller return values (1bbeaf6)\ncorrect repo authenticated services return types (e42223f)\ncorrect repo contributions count (8952f19)\ncorrect repo listing database relationship names (f29f5f2)\nmake order work for repo listing (69b2067)\nremove more relationship entities from openapi response schemas (d315ea4)\nundo rogue controller route name change (6a4810f)\n\n1.9.0-beta.19 (2022-09-16)\n🍕 Features\n\nadded is_onboarded boolean to migration for public.users table (1edaeda)\n\n1.9.0-beta.18 (2022-09-16)\n🍕 Features\n\nadd onboarding information to session endpoint and endpoint for completing onboarding (155e99e)\n\n🐛 Bug Fixes\n\nadd check/insert public user to session endpoint (03bf95b)\n\n1.9.0-beta.17 (2022-09-06)\n🤖 Build System\n\nupdate dependencies (4c3782f)\n\n1.9.0-beta.16 (2022-09-06)\n🍕 Features\n\nadd paginated contributions service (d2745ff)\n\n🧑‍💻 Code Refactoring\n\ncorrect controller function naming (0046b05)\nremove non-meta hidden properties from typeorm entity display (4601be2)\n\n🐛 Bug Fixes\n\ncorrectly hide api hidden model properties from typeorm select (8810e03)\nexclude generated temporary view from database visualisation (b457783)\n\n📝 Documentation\n\nimprove readme for first time users (f8c9324)\n\n🎨 Styles\n\ncorrect lint errors from writing too much manual stuff (2073883)\n\n1.9.0-beta.15 (2022-09-01)\n🐛 Bug Fixes\n\ncorrect repository service order 500 error (e5e2e03)\n\n🎨 Styles\n\ncorrect lint errors (4b264d5)\n\n1.9.0-beta.14 (2022-08-30)\n📝 Documentation\n\nupdate repo api model properties and hide soft delete tags for all entities (2bdec65)\n\n🧑‍💻 Code Refactoring\n\nadd Contribution api model properties (a08abfd)\nadd DbRepoToUserStargazers api model properties (247e0ba)\nadd DbRepoToUserStars api model properties (14b6a44)\nadd DbRepoToUserSubmissions api model properties (dbc66f3)\nadd DbRepoToUserVotes api model properties (d051987)\nadd User api model properties (618225f)\n\n🐛 Bug Fixes\n\ncorrect remaining dtos and auth controller return values (1bbeaf6)\n\n1.9.0-beta.13 (2022-08-29)\n🐛 Bug Fixes\n\ncorrect repo listing database relationship names (f29f5f2)\n\n🧑‍💻 Code Refactoring\n\nclean up repo controller extra decorators (3282435)\n\n🍕 Features\n\nadd list authenticated user stargazed repos (2a8d198)\nadd list authenticated user starred repos (f5f942f)\nadd list authenticated user submitted repos (334268d)\nadd list authenticated user voted repos (f96a793)\n\n1.9.0-beta.12 (2022-08-29)\n🤖 Build System\n\nupdate dependencies to latest non breaking versions (59dd7bf)\n\n🐛 Bug Fixes\n\ncorrect repo authenticated services return types (e42223f)\n\n🍕 Features\n\nadd is_accepted admin managed field to repo user submissions (b0169e7)\nadd submit repo authenticated feature (09c96fe), closes #21\nimplement eslint hot opensauced rules (e0d38ca)\n\n🧑‍💻 Code Refactoring\n\nimplement new eslint style changes (c8115b6)\n\n1.9.0-beta.11 (2022-08-28)\n🍕 Features\n\nadd star repo authenticated feature (e392288), closes #20\nadd stargaze repo authenticated feature (f8d41f1), closes #22\n\n🐛 Bug Fixes\n\ncorrect additional relation entities appearing in openapi schema (f4570c3)\ncorrect date type meta tags openapi types (860fff3)\nremove more relationship entities from openapi response schemas (d315ea4)\n\n🧑‍💻 Code Refactoring\n\nrename Contribution entity into DbContribution (3774b36)\nrename enum (b8b22da)\nrename Repo entity into DbRepo (f05c29c)\nrename RepoToUserStargazers entity into DbRepoToUserStargazers (867d740)\nrename RepoToUserStars entity into DbRepoToUserStars (d08b3ff)\nrename RepoToUserSubmissions entity into DbRepoToUserSubmissions (9484df4)\nrename RepoToUserVotes entity into DbRepoToUserVotes (61ac1e7)\nrename User entity into DbUser (04082d7)\n\n1.9.0-beta.10 (2022-08-26)\n🐛 Bug Fixes\n\nundo rogue controller route name change (6a4810f)\n\n1.9.0-beta.9 (2022-08-25)\n🐛 Bug Fixes\n\ncorrect repo contributions count (8952f19)\n\n1.9.0-beta.8 (2022-08-25)\n🐛 Bug Fixes\n\nmake order work for repo listing (69b2067)\n\n🎨 Styles\n\ncorrect lint errors from hasty push (fe20c2d)\n\n1.9.0-beta.7 (2022-08-25)\n📝 Documentation\n\nadd powered by digital ocean readme badge and referal link (5925b74)\n\n1.9.0-beta.6 (2022-08-25)\n🧑‍💻 Code Refactoring\n\ncode split repository entities (ae43450)\n\n🍕 Features\n\nadd repo up vote and down vote functionality (16678a7), closes #19\n\n1.9.0-beta.5 (2022-08-19)\n🔁 Continuous Integration\n\nattempt to push docr only on successful release (957b86e)\n\n1.9.0-beta.4 (2022-08-19)\n🔁 Continuous Integration\n\nimprove local development workflow along vite apps (b9f3798)\n\n1.9.0-beta.3 (2022-08-19)\n🐛 Bug Fixes\n\ncorrect counting of many to many tables (7249714)\n\n🧑‍💻 Code Refactoring\n\ncorrect stray console.log (b4c9879)\n\n1.9.0-beta.2 (2022-08-19)\n🔁 Continuous Integration\n\nonly deploy documentation on main branch (fad79b1), closes #14\n\n🍕 Features\n\nadd supabase auth session handler and working guards (ed9729a), closes #24\n\n1.9.0-beta.1 (2022-08-18)\n🍕 Features\n\nimplement simple supabase strategy guard (2f966a3)\n\n1.8.2 (2022-08-12)\n🐛 Bug Fixes\n\ncorrect ci release url docs (f0304d4)\n\n1.8.1 (2022-08-12)\n🔁 Continuous Integration\n\nimprove release urls (dd5e668)\n\n1.8.0 (2022-08-12)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\nupdate readme badges (17c54b9)\n\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\nadd get repository by id and full name (4552c66)\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.5 (2022-08-06)\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.4 (2022-08-06)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\n\n1.8.0-beta.3 (2022-08-05)\n🍕 Features\n\nadd get repository by id and full name (4552c66)\n\n1.8.0-beta.2 (2022-08-05)\n🍕 Features\n\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n1.8.0-beta.1 (2022-07-30)\n📝 Documentation\n\nupdate readme badges (17c54b9)\n\n1.7.12 (2022-07-30)\n🐛 Bug Fixes\n\npush all tags to docr (a9e1df6)\n\n1.7.11 (2022-07-30)\n🔁 Continuous Integration\n\npush to digital ocean container registry (cd8f21d)\n\n1.7.10 (2022-07-30)\n🔁 Continuous Integration\n\ncorrect the digital ocean tagging (673dca9)\n\n1.7.9 (2022-07-30)\n✅ Tests\n\ncheck release job outputs (31e4d60)\n\n1.7.8 (2022-07-29)\n🔁 Continuous Integration\n\ncorrect environment variables (6d23c24)\n\n1.7.7 (2022-07-29)\n✅ Tests\n\nprint out proper pull request target env variables (20880c7)\n\n1.7.6 (2022-07-29)\n🔁 Continuous Integration\n\necho github context (7adfb6b)\n\n1.7.5 (2022-07-29)\n🔁 Continuous Integration\n\nprovide variable as ENV (b57f47b)\n\n1.7.4 (2022-07-29)\n🔁 Continuous Integration\n\nchange pull request event target (20bc1e7)\n\n1.7.3 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect digital ocean docker tag based on target (b1a67da)\n\n1.7.2 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect static domain and release clean up workflow (a229a3b)\nupdate dependencies and list docr tags (79bf61d)\n\n🔁 Continuous Integration\n\nadd docr push dry run (5eddeb1)\nadd release workflow concurrency for demo purposes (63d6a92)\nextend digital ocean temporary token (d0d5ca5)\ntest bash variable environment (e1fe498)\n\n1.7.1 (2022-07-27)\n🔁 Continuous Integration\n\ndeploy developer mkdocs to github pages test (8837b2a)\n\n1.7.0 (2022-07-27)\n📝 Documentation\n\nchange github pages deploy to take tech mkdocs instead of api (bc3a37d)\n\n1.6.17 (2022-07-24)\n🔁 Continuous Integration\n\nadd temporary debug logging (ba8dfbb)\n\n1.6.16 (2022-07-23)\n🔁 Continuous Integration\n\nproperly copy contents from mounted container volume (c013b70)\n\n1.6.15 (2022-07-23)\n🔁 Continuous Integration\n\ncreate new container from release (b1eda28)\n\n1.6.14 (2022-07-23)\n🔁 Continuous Integration\n\ntest file is generated properly (c127cea)\n\n🤖 Build System\n\nattempt docker inspection again (2c0b3d1)\n\n1.6.13 (2022-07-23)\n🔁 Continuous Integration\n\ntest proper container name exposing (cc46460)\n\n1.6.12 (2022-07-23)\n🔁 Continuous Integration\n\ntest local swagger spec (7e9b8a4)\n\n1.6.11 (2022-07-21)\n🔁 Continuous Integration\n\ntest getting docker process list output (f5385b3)\n\n1.6.10 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to get value from running container (911df68)\ntest accessing running container by re-creating (77c734c)\n\n1.6.9 (2022-07-21)\n🔁 Continuous Integration\n\nget container name from runner context (94ba4e1)\n\n1.6.8 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to assign docker service name to running container (fe4b9e9)\n\n1.6.7 (2022-07-21)\n✅ Tests\n\nmount docker service and volumes (0848443)\n\n1.6.6 (2022-07-21)\n✅ Tests\n\nload docker container from artifact (b7c3395)\n\n1.6.5 (2022-07-21)\n🐛 Bug Fixes\n\ncorrect docker local creation (cd306f8)\n\n1.6.4 (2022-07-21)\n✅ Tests\n\nload docker container in flight environment (e145e2d)\n\n1.6.3 (2022-07-20)\n🤖 Build System\n\nupdate deployment and add simple repo submission structure (33fea7e)\n\n1.6.2 (2022-07-19)\n🤖 Build System\n\nrevert to production release container (8aee8e5)\n\n1.6.1 (2022-07-19)\n🤖 Build System\n\nimprove swagger generation (22d3cc1)\n\n🐛 Bug Fixes\n\ncorrect workflow yaml comments (7fe63aa)\n\n1.6.0 (2022-07-19)\n🎨 Styles\n\nimplement correct eslint rules for immediate scoping (bd6d621), closes #1\n\n🍕 Features\n\nupdate dependencies and nest to stable new version (c24937f)\n\n🔁 Continuous Integration\n\nadd docker build and static swagger docs jobs (81e8bbc)\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n🤖 Build System\n\nadd better eslint baseline configuration (3918a78)\nadd minimal eslint configuration (a0db0aa)\nadd minor deployment improvements and github pages adjustments (cb83f9d)\nimplement prettier rules in typescript eslint (166050d)\n\n🐛 Bug Fixes\n\ncorrect release workflow artifact strategy (b5b6ac5)\ncorrect rogue workflow artifact (61b67d5)\n\n1.5.1 (2022-07-13)\n🔁 Continuous Integration\n\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n📦 0-vortex/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.5.0 (2022-06-21)\n🍕 Features\n\nimplement proper starsCount (fdc11ea)\nimplement proper votesCount (607cf5d)\n\n1.4.0 (2022-06-17)\n🍕 Features\n\nadd minimal pagination decorator (ac31556)\n\n1.3.0 (2022-06-10)\n🍕 Features\n\nadd abstract pagination component (630f3b5)\nadd repository relations and limit select (b4d3785)\n\n1.2.0 (2022-06-09)\n🍕 Features\n\nattach user relationship to get repos (e663170)\n\n1.1.0 (2022-06-07)\n🍕 Features\n\nadd basic tld entities (273f337)\n\n1.0.2 (2022-06-05)\n🤖 Build System\n\nadd supabase migration system (34d521d)\n\n1.0.1 (2022-06-05)\n✅ Tests\n\nverify database diagrams generation (73d1c74)\n\n1.0.0 (2022-06-05)\n🍕 Features\n\nadjust health checks endpoints (cb9206d)\ninitial commit (5e7c6c7)\n\n🐛 Bug Fixes\n\ncorrect npm scripts, workflow node versiond and update deps (2c0b15f)\nupdate nest typeorm integration and correct db status (58bf922)\n\n🔥 Performance Improvements\n\nremove minor version engines requirements (7db9008)\n\n✅ Tests\n\nexplain current test configuration and unblock pipelines (272c09a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/dtos/supabase-auth-response.dto.ts\n            \n            class\n            SupabaseAuthDto\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/auth/dtos/user-onboarding.dto.ts\n            \n            class\n            UserOnboardingDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/supabase.guard.ts\n            \n            injectable\n            SupabaseGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.strategy.ts\n            \n            injectable\n            SupabaseStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/supabase.user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.user.decorator.ts\n            \n            variable\n            UserId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/filter-options.dto.ts\n            \n            class\n            FilterOptionsDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta-parameters.dto.ts\n            \n            interface\n            PageMetaParameters\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/dtos/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/filters/repo-filter.service.ts\n            \n            injectable\n            RepoFilterService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/common/middleware/database-logger.middleware.ts\n            \n            class\n            DatabaseLoggerMiddleware\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/middleware/http-logger.middleware.ts\n            \n            injectable\n            HttpLoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/util/cli-duration.ts\n            \n            variable\n            cliDuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/api.config.ts\n            \n            variable\n            ApiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/db-api.config.ts\n            \n            variable\n            DbApiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/db-logging.config.ts\n            \n            variable\n            DbLoggingConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/endpoint.config.ts\n            \n            variable\n            EndpointConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/endpoint.config.ts\n            \n            variable\n            getDomain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/openai.config.ts\n            \n            variable\n            OpenAIConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/stripe.config.ts\n            \n            variable\n            StripeConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.entity.ts\n            \n            entity\n            DbContribution\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.service.ts\n            \n            injectable\n            ContributionService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/contribution/dtos/contribution-page-options.dto.ts\n            \n            class\n            ContributionPageOptionsDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/contribution/repo-contributions.controller.ts\n            \n            controller\n            RepoContributionsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/contributor/contributor.controller.ts\n            \n            controller\n            ContributorController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/customer/customer.entity.ts\n            \n            entity\n            DbCustomer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customer/customer.service.ts\n            \n            injectable\n            CustomerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/emoji/emoji.controller.ts\n            \n            controller\n            EmojiController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/emoji/emoji.service.ts\n            \n            injectable\n            EmojiService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/emoji/entities/emoji.entity.ts\n            \n            entity\n            DbEmoji\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/endorsement/dto/create-endorsement.dto.ts\n            \n            class\n            CreateEndorsementDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/endorsement/dto/update-endorsement.dto.ts\n            \n            class\n            UpdateEndorsementDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/endorsement/endorsement-token.guard.ts\n            \n            guard\n            EndorsementTokenGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/endorsement/endorsement.controller.ts\n            \n            controller\n            EndorsementController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/endorsement/endorsement.service.ts\n            \n            injectable\n            EndorsementService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/endorsement/entities/endorsement.entity.ts\n            \n            entity\n            DbEndorsement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/highlight/dtos/highlight-options.dto.ts\n            \n            class\n            DbUserHighlightReactionResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/highlight/dtos/highlight-options.dto.ts\n            \n            class\n            HighlightOptionsDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/highlight/entities/user-highlight-repo.entity.ts\n            \n            class\n            DbUserHighlightRepo\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/highlight/highlight.controller.ts\n            \n            controller\n            HighlightController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/insight/dtos/create-insight-member.dto.ts\n            \n            class\n            CreateInsightMemberDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/insight/dtos/create-insight.dto.ts\n            \n            class\n            CreateInsightDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/insight/dtos/insight-options.dto.ts\n            \n            class\n            InsightOptionsDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/insight/dtos/insight-page-options.dto.ts\n            \n            class\n            InsightPageOptionsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/insight/dtos/update-insight-member.dto.ts\n            \n            class\n            UpdateInsightMemberDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/insight/dtos/update-insight.dto.ts\n            \n            class\n            UpdateInsightDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/insight/entities/insight-member.entity.ts\n            \n            entity\n            DbInsightMember\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/insight/entities/insight-repo.entity.ts\n            \n            entity\n            DbInsightRepo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/insight/entities/insight.entity.ts\n            \n            entity\n            DbInsight\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/insight/insight-member.service.ts\n            \n            injectable\n            InsightMemberService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/insight/insight-repo.service.ts\n            \n            injectable\n            InsightRepoService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/insight/insight.controller.ts\n            \n            controller\n            InsightController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/insight/insights.service.ts\n            \n            injectable\n            InsightsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/insight/user-insight-member.controller.ts\n            \n            controller\n            UserInsightMemberController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/insight/user-insight.controller.ts\n            \n            controller\n            UserInsightsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/log/custom-logger.ts\n            \n            injectable\n            CustomLogger\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/log/dtos/create-log.dto.ts\n            \n            class\n            CreateLogDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/log/log.entity.ts\n            \n            entity\n            DbLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/log/log.service.ts\n            \n            injectable\n            LogService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/open-ai/open-ai.service.ts\n            \n            injectable\n            OpenAiService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/open-ai/open-ai.service.ts\n            \n            interface\n            ChatResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pull-requests/code-explanation.controller.ts\n            \n            controller\n            CodeExplanationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pull-requests/code-explanation.service.ts\n            \n            injectable\n            CodeExplanationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pull-requests/code-refactor-suggestion.controller.ts\n            \n            controller\n            CodeRefactorSuggestionController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pull-requests/code-refactor-suggestion.service.ts\n            \n            injectable\n            CodeRefactorSuggestionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pull-requests/code-test-suggestion.service.ts\n            \n            injectable\n            CodeTestSuggestionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pull-requests/code-test.suggestion.controller.ts\n            \n            controller\n            CodeTestSuggestionController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pull-requests/dtos/create-code-explanation.dto.ts\n            \n            class\n            GenerateCodeExplanationDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/pull-requests/dtos/create-code-refactor-suggestion.dto.ts\n            \n            class\n            GenerateCodeRefactorSuggestionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/pull-requests/dtos/create-code-test-suggestion.dto.ts\n            \n            class\n            GenerateCodeTestSuggestionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pull-requests/dtos/create-pull-request-description.dto.ts\n            \n            class\n            GeneratePullRequestDescriptionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/pull-requests/dtos/pull-request-contributor-options.dto.ts\n            \n            class\n            PullRequestContributorOptionsDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/pull-requests/dtos/pull-request-contributor.dto.ts\n            \n            class\n            DbPullRequestContributor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/pull-requests/dtos/pull-request-page-options.dto.ts\n            \n            class\n            PullRequestPageOptionsDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/pull-requests/entities/pull-request-insight.entity.ts\n            \n            entity\n            DbPRInsight\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pull-requests/entities/pull-request.entity.ts\n            \n            entity\n            DbPullRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pull-requests/pull-request-description.controller.ts\n            \n            controller\n            PullRequestDescriptionController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pull-requests/pull-request-description.service.ts\n            \n            injectable\n            PullRequestDescriptionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pull-requests/pull-request-insights.service.ts\n            \n            injectable\n            PullRequestInsightsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/pull-requests/pull-request.controller.ts\n            \n            controller\n            PullRequestController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pull-requests/pull-request.service.ts\n            \n            injectable\n            PullRequestService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/repo/dtos/repo-info.dto.ts\n            \n            class\n            RepoInfo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/repo/dtos/repo-page-options.dto.ts\n            \n            class\n            RepoPageOptionsDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/repo/dtos/repo-search-options.dto.ts\n            \n            class\n            RepoSearchOptionsDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.entity.ts\n            \n            entity\n            DbRepo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.stargazers.entity.ts\n            \n            entity\n            DbRepoToUserStargazers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.stars.entity.ts\n            \n            entity\n            DbRepoToUserStars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.submissions.entity.ts\n            \n            entity\n            DbRepoToUserSubmissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.votes.entity.ts\n            \n            entity\n            DbRepoToUserVotes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.controller.ts\n            \n            controller\n            RepoController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/repo/repo.service.ts\n            \n            injectable\n            RepoService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/star/repo-star.controller.ts\n            \n            controller\n            RepoStarController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/star/star.service.ts\n            \n            injectable\n            StarService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/stargaze/repo-stargaze.controller.ts\n            \n            controller\n            RepoStargazeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/stargaze/stargaze.service.ts\n            \n            injectable\n            StargazeService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/stripe-webhook/stripe-webhook.controller.ts\n            \n            controller\n            StripeWebhookController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stripe-webhook/stripe-webhook.controller.ts\n            \n            variable\n            relevantEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stripe-webhook/utils.ts\n            \n            variable\n            toDateTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stripe/stripe.service.ts\n            \n            injectable\n            StripeService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/submit/repo-submit.controller.ts\n            \n            controller\n            RepoSubmitController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/submit/submit.service.ts\n            \n            injectable\n            SubmitService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/subscription/stripe-subscription.dto.ts\n            \n            entity\n            DbSubscription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscription/stripe-subscription.service.ts\n            \n            injectable\n            StripeSubscriptionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user-repo/dtos/user-repo-options.dto.ts\n            \n            class\n            UserRepoOptionsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user-repo/dtos/user-repos.dto.ts\n            \n            class\n            UserRepoOptionsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user-repo/user-repo.entity.ts\n            \n            entity\n            DbUserRepo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user-repo/user-repos.service.ts\n            \n            injectable\n            UserReposService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dtos/create-user-collaboration.dto.ts\n            \n            class\n            CreateUserCollaborationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dtos/create-user-highlight.dto.ts\n            \n            class\n            CreateUserHighlightDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dtos/update-user-collaboration.dto.ts\n            \n            class\n            UpdateUserCollaborationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dtos/update-user-email-prefs.dto.ts\n            \n            class\n            UpdateUserEmailPreferencesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dtos/update-user-interests.dto.ts\n            \n            class\n            UpdateUserProfileInterestsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dtos/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user/entities/user-collaboration.entity.ts\n            \n            entity\n            DbUserCollaboration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user-follows.entity.ts\n            \n            entity\n            DbUserToUserFollows\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user-highlight-reaction.entity.ts\n            \n            entity\n            DbUserHighlightReaction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user-highlight.entity.ts\n            \n            entity\n            DbUserHighlight\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user-notification.constants.ts\n            \n            variable\n            userNotificationTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user-notification.entity.ts\n            \n            entity\n            DbUserNotification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user-top-repo.entity.ts\n            \n            entity\n            DbUserTopRepo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user-collaboration.controller.ts\n            \n            controller\n            UserCollaborationController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user-collaboration.service.ts\n            \n            injectable\n            UserCollaborationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user-endorsement.controller.ts\n            \n            controller\n            UserEndorsementController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user-follow.controller.ts\n            \n            controller\n            UserFollowsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user-follow.service.ts\n            \n            injectable\n            UserFollowService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user-highlight.controller.ts\n            \n            controller\n            UserHighlightsController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/user-highlights.service.ts\n            \n            injectable\n            UserHighlightsService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/user/user-notifcation.service.ts\n            \n            injectable\n            UserNotificationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user-notification.controller.ts\n            \n            controller\n            UserNotificationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/user-recommendation.controller.ts\n            \n            controller\n            UserRecommendationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            DbUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/vote/repo-vote.controller.ts\n            \n            controller\n            RepoVoteController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/vote/vote.service.ts\n            \n            injectable\n            VoteService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContributionOrderFieldsEnum   (src/.../contribution-page-options.dto.ts)\n                        \n                        \n                            InsightFilterFieldsEnum   (src/.../insight-options.dto.ts)\n                        \n                        \n                            OrderDirectionEnum   (src/.../order-direction.constant.ts)\n                        \n                        \n                            PullRequestOrderFieldsEnum   (src/.../pull-request-page-options.dto.ts)\n                        \n                        \n                            PullRequestStatusEnum   (src/.../pull-request-page-options.dto.ts)\n                        \n                        \n                            RepoFilterFieldsEnum   (src/.../repo-page-options.dto.ts)\n                        \n                        \n                            RepoOrderFieldsEnum   (src/.../repo-page-options.dto.ts)\n                        \n                        \n                            UserNotificationTypes   (src/.../user-notification.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/contribution/dtos/contribution-page-options.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        ContributionOrderFieldsEnum\n                    \n                \n                        \n                            \n                                 count\n                            \n                        \n                        \n                            \n                                Value : count\n                            \n                        \n                        \n                            \n                                 last_merged_at\n                            \n                        \n                        \n                            \n                                Value : last_merged_at\n                            \n                        \n                        \n                            \n                                 created_at\n                            \n                        \n                        \n                            \n                                Value : created_at\n                            \n                        \n                        \n                            \n                                 updated_at\n                            \n                        \n                        \n                            \n                                Value : updated_at\n                            \n                        \n                        \n                            \n                                 contributor\n                            \n                        \n                        \n                            \n                                Value : contributor\n                            \n                        \n            \n        \n\n    src/insight/dtos/insight-options.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        InsightFilterFieldsEnum\n                    \n                \n                        \n                            \n                                 Recent\n                            \n                        \n                        \n                            \n                                Value : recent\n                            \n                        \n                        \n                            \n                                 Top100\n                            \n                        \n                        \n                            \n                                Value : top-100-repos\n                            \n                        \n                        \n                            \n                                 MinimumContributors\n                            \n                        \n                        \n                            \n                                Value : minimum-5-contributors\n                            \n                        \n                        \n                            \n                                 MostActive\n                            \n                        \n                        \n                            \n                                Value : most-active\n                            \n                        \n                        \n                            \n                                 MostSpammed\n                            \n                        \n                        \n                            \n                                Value : most-spammed\n                            \n                        \n            \n        \n\n    src/common/constants/order-direction.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderDirectionEnum\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n    src/pull-requests/dtos/pull-request-page-options.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        PullRequestOrderFieldsEnum\n                    \n                \n                        \n                            \n                                 created_at\n                            \n                        \n                        \n                            \n                                Value : created_at\n                            \n                        \n                        \n                            \n                                 closed_at\n                            \n                        \n                        \n                            \n                                Value : closed_at\n                            \n                        \n                        \n                            \n                                 merged_at\n                            \n                        \n                        \n                            \n                                Value : merged_at\n                            \n                        \n                        \n                            \n                                 updated_at\n                            \n                        \n                        \n                            \n                                Value : updated_at\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PullRequestStatusEnum\n                    \n                \n                        \n                            \n                                 open\n                            \n                        \n                        \n                            \n                                Value : open\n                            \n                        \n                        \n                            \n                                 closed\n                            \n                        \n                        \n                            \n                                Value : closed\n                            \n                        \n            \n        \n\n    src/repo/dtos/repo-page-options.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        RepoFilterFieldsEnum\n                    \n                \n                        \n                            \n                                 Recent\n                            \n                        \n                        \n                            \n                                Value : recent\n                            \n                        \n                        \n                            \n                                 Top100\n                            \n                        \n                        \n                            \n                                Value : top-100-repos\n                            \n                        \n                        \n                            \n                                 MinimumContributors\n                            \n                        \n                        \n                            \n                                Value : minimum-5-contributors\n                            \n                        \n                        \n                            \n                                 MostActive\n                            \n                        \n                        \n                            \n                                Value : most-active\n                            \n                        \n                        \n                            \n                                 MostSpammed\n                            \n                        \n                        \n                            \n                                Value : most-spammed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RepoOrderFieldsEnum\n                    \n                \n                        \n                            \n                                 issues\n                            \n                        \n                        \n                            \n                                Value : issues\n                            \n                        \n                        \n                            \n                                 stars\n                            \n                        \n                        \n                            \n                                Value : stars\n                            \n                        \n                        \n                            \n                                 watchers\n                            \n                        \n                        \n                            \n                                Value : watchers\n                            \n                        \n                        \n                            \n                                 subscribers\n                            \n                        \n                        \n                            \n                                Value : subscribers\n                            \n                        \n                        \n                            \n                                 created_at\n                            \n                        \n                        \n                            \n                                Value : created_at\n                            \n                        \n                        \n                            \n                                 updated_at\n                            \n                        \n                        \n                            \n                                Value : updated_at\n                            \n                        \n                        \n                            \n                                 name\n                            \n                        \n                        \n                            \n                                Value : name\n                            \n                        \n                        \n                            \n                                 contributionsCount\n                            \n                        \n                        \n                            \n                                Value : contributionsCount\n                            \n                        \n                        \n                            \n                                 votesCount\n                            \n                        \n                        \n                            \n                                Value : votesCount\n                            \n                        \n                        \n                            \n                                 submissionsCount\n                            \n                        \n                        \n                            \n                                Value : submissionsCount\n                            \n                        \n                        \n                            \n                                 stargazersCount\n                            \n                        \n                        \n                            \n                                Value : stargazersCount\n                            \n                        \n                        \n                            \n                                 starsCount\n                            \n                        \n                        \n                            \n                                Value : starsCount\n                            \n                        \n            \n        \n\n    src/user/entities/user-notification.constants.ts\n    \n        \n            \n                \n                    \n                        \n                        UserNotificationTypes\n                    \n                \n                        \n                            \n                                 Welcome\n                            \n                        \n                        \n                            \n                                Value : welcome\n                            \n                        \n                        \n                            \n                                 HighlightReaction\n                            \n                        \n                        \n                            \n                                Value : highlight_reaction\n                            \n                        \n                        \n                            \n                                 Follow\n                            \n                        \n                        \n                            \n                                Value : follow\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n  🍕 Open Sauced Insights API 🍕\n  The path to your next Open Source contribution\n  \n  \n  \n\n\n\n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n🚀 Live release environments\n\napi.opensauced.pizza\nbeta.api.opensauced.pizza\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=16.7.0\nnpm>=8.0.0\ndocker>=20.10.12\n\nYou also need the .env environment file added to your repo for the project to run. To get it, kindly contact @open-sauced/triage team.\n\nNote: For Windows users, the API_HOST key's value in the .env file should be 127.0.0.1, instead of 0.0.0.0, so that the project can run correctly on localhost.\n\n🖥️ Local development\nTo install the application:\nnpm ciTo start a local copy of the app on port 3001:\nnpm run start:dev🧪 Test\nFor running the test suite, use the following command. Since the tests run in watch mode by default, some users may encounter errors about too many files being open. In this case, it may be beneficial to install watchman.\nnpm testYou can request a coverage report by running the following command:\nnpm run test:coverageFor writing tests, the rule is move business or service logic to the lib folder and write unit tests. Logic that needs to be in a React component, then leverage tools like Cypress or Vitest mocking to write tests.\n📦 Docker builds\nA development preview can also be run from docker:\ndocker build -t api.opensauced.pizza .\ndocker run -p 8080:3001 api.opensauced.pizzaAlternatively you can pull the production container and skip all builds:\ndocker run -dit -p 8080:3001 ghcr.io/open-sauced/api.opensauced.pizza🎨 Code linting\nTo check the code and styles quality, use the following command:\nnpm run lintThis will also display during development, but not break on errors.\nTo fix the linting errors, use the following command:\nnpm run formatIt is advised to run this command before committing or opening a pull request.\n📕 Types\nWe have a couple of scripts to check and adjust missing types.\nIn order to dry run what types would be added to package.json:\nnpm run types:auto-checkIn order to add any missing types to package.json:\nnpm run types:auto-add🚀 Production deployment\nA production deployment is a complete build of the project, including the build of the static assets.\nnpm run build🔑 Database structure\nClick the image to see the schema diagram full documentation.\n\n🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\nBelow is visual representation of our code repository. It is generated by Octo Repo Visualizer.\nThis visualization is being updated on release to our default branch by our release workflow.\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContributionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContributorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmojiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EndorsementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HighlightModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InsightsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenAiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PullRequestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepoFilterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StargazeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StripeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StripeSubscriptionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StripeWebHookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubmitModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserReposModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VoteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ContributionModule\n\n\n\ncluster_ContributionModule_exports\n\n\n\ncluster_ContributionModule_providers\n\n\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_exports\n\n\n\ncluster_CustomerModule_providers\n\n\n\ncluster_EmojiModule\n\n\n\ncluster_EmojiModule_providers\n\n\n\ncluster_EndorsementModule\n\n\n\ncluster_EndorsementModule_exports\n\n\n\ncluster_EndorsementModule_providers\n\n\n\ncluster_InsightsModule\n\n\n\ncluster_InsightsModule_exports\n\n\n\ncluster_InsightsModule_providers\n\n\n\ncluster_LogModule\n\n\n\ncluster_LogModule_exports\n\n\n\ncluster_LogModule_providers\n\n\n\ncluster_OpenAiModule\n\n\n\ncluster_OpenAiModule_exports\n\n\n\ncluster_OpenAiModule_providers\n\n\n\ncluster_PullRequestModule\n\n\n\ncluster_PullRequestModule_imports\n\n\n\ncluster_PullRequestModule_exports\n\n\n\ncluster_PullRequestModule_providers\n\n\n\ncluster_RepoFilterModule\n\n\n\ncluster_RepoFilterModule_exports\n\n\n\ncluster_RepoFilterModule_providers\n\n\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\ncluster_StargazeModule\n\n\n\ncluster_StargazeModule_exports\n\n\n\ncluster_StargazeModule_providers\n\n\n\ncluster_StarModule\n\n\n\ncluster_StarModule_exports\n\n\n\ncluster_StarModule_providers\n\n\n\ncluster_StripeModule\n\n\n\ncluster_StripeModule_exports\n\n\n\ncluster_StripeModule_providers\n\n\n\ncluster_StripeSubscriptionModule\n\n\n\ncluster_StripeSubscriptionModule_exports\n\n\n\ncluster_StripeSubscriptionModule_providers\n\n\n\ncluster_StripeWebHookModule\n\n\n\ncluster_StripeWebHookModule_exports\n\n\n\ncluster_SubmitModule\n\n\n\ncluster_SubmitModule_exports\n\n\n\ncluster_SubmitModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserReposModule\n\n\n\ncluster_UserReposModule_exports\n\n\n\ncluster_UserReposModule_providers\n\n\n\ncluster_VoteModule\n\n\n\ncluster_VoteModule_exports\n\n\n\ncluster_VoteModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nEndorsementModule\n\nEndorsementModule\n\nEndorsementModule -->\n\nAuthModule->EndorsementModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nContributionModule\n\nContributionModule\n\nAppModule -->\n\nContributionModule->AppModule\n\n\n\n\n\nContributionService \n\nContributionService \n\nContributionService  -->\n\nContributionModule->ContributionService \n\n\n\n\n\nContributorModule\n\nContributorModule\n\nAppModule -->\n\nContributorModule->AppModule\n\n\n\n\n\nCustomerModule\n\nCustomerModule\n\nAuthModule -->\n\nCustomerModule->AuthModule\n\n\n\n\n\nStripeWebHookModule\n\nStripeWebHookModule\n\nStripeWebHookModule -->\n\nCustomerModule->StripeWebHookModule\n\n\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nCustomerService \n\nCustomerService \n\nCustomerService  -->\n\nCustomerModule->CustomerService \n\n\n\n\n\nEmojiModule\n\nEmojiModule\n\nAppModule -->\n\nEmojiModule->AppModule\n\n\n\nAppModule -->\n\nEndorsementModule->AppModule\n\n\n\n\n\nEndorsementService \n\nEndorsementService \n\nEndorsementService  -->\n\nEndorsementModule->EndorsementService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nHighlightModule\n\nHighlightModule\n\nAppModule -->\n\nHighlightModule->AppModule\n\n\n\n\n\nInsightsModule\n\nInsightsModule\n\nAppModule -->\n\nInsightsModule->AppModule\n\n\n\n\n\nInsightRepoService \n\nInsightRepoService \n\nInsightRepoService  -->\n\nInsightsModule->InsightRepoService \n\n\n\n\n\nInsightsService \n\nInsightsService \n\nInsightsService  -->\n\nInsightsModule->InsightsService \n\n\n\n\n\nOpenAiModule\n\nOpenAiModule\n\n\n\nPullRequestModule\n\nPullRequestModule\n\nPullRequestModule -->\n\nOpenAiModule->PullRequestModule\n\n\n\nAppModule -->\n\nOpenAiModule->AppModule\n\n\n\n\n\nOpenAiService \n\nOpenAiService \n\nOpenAiService  -->\n\nOpenAiModule->OpenAiService \n\n\n\nContributorModule -->\n\nPullRequestModule->ContributorModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPullRequestModule->UserModule\n\n\n\nAppModule -->\n\nPullRequestModule->AppModule\n\n\n\n\n\nPullRequestService \n\nPullRequestService \n\nPullRequestService  -->\n\nPullRequestModule->PullRequestService \n\n\n\n\n\nRepoModule\n\nRepoModule\n\nContributionModule -->\n\nRepoModule->ContributionModule\n\n\n\n\n\nStarModule\n\nStarModule\n\nStarModule -->\n\nRepoModule->StarModule\n\n\n\n\n\nStargazeModule\n\nStargazeModule\n\nStargazeModule -->\n\nRepoModule->StargazeModule\n\n\n\n\n\nSubmitModule\n\nSubmitModule\n\nSubmitModule -->\n\nRepoModule->SubmitModule\n\n\n\nUserModule -->\n\nRepoModule->UserModule\n\n\n\n\n\nVoteModule\n\nVoteModule\n\nVoteModule -->\n\nRepoModule->VoteModule\n\n\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\nAppModule -->\n\nStarModule->AppModule\n\n\n\n\n\nStarService \n\nStarService \n\nStarService  -->\n\nStarModule->StarService \n\n\n\nAppModule -->\n\nStargazeModule->AppModule\n\n\n\n\n\nStargazeService \n\nStargazeService \n\nStargazeService  -->\n\nStargazeModule->StargazeService \n\n\n\n\n\nStripeSubscriptionModule\n\nStripeSubscriptionModule\n\nStripeWebHookModule -->\n\nStripeSubscriptionModule->StripeWebHookModule\n\n\n\nAppModule -->\n\nStripeSubscriptionModule->AppModule\n\n\n\n\n\nStripeSubscriptionService \n\nStripeSubscriptionService \n\nStripeSubscriptionService  -->\n\nStripeSubscriptionModule->StripeSubscriptionService \n\n\n\nAppModule -->\n\nStripeWebHookModule->AppModule\n\n\n\n\n\nStripeWebhookController \n\nStripeWebhookController \n\nStripeWebhookController  -->\n\nStripeWebHookModule->StripeWebhookController \n\n\n\nAppModule -->\n\nSubmitModule->AppModule\n\n\n\n\n\nSubmitService \n\nSubmitService \n\nSubmitService  -->\n\nSubmitModule->SubmitService \n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nEndorsementModule -->\n\nUserModule->EndorsementModule\n\n\n\nHighlightModule -->\n\nUserModule->HighlightModule\n\n\n\nInsightsModule -->\n\nUserModule->InsightsModule\n\n\n\nStripeWebHookModule -->\n\nUserModule->StripeWebHookModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nEndorsementService  -->\n\nUserModule->EndorsementService \n\n\n\nRepoService  -->\n\nUserModule->RepoService \n\n\n\n\n\nUserFollowService \n\nUserFollowService \n\nUserFollowService  -->\n\nUserModule->UserFollowService \n\n\n\n\n\nUserHighlightsService \n\nUserHighlightsService \n\nUserHighlightsService  -->\n\nUserModule->UserHighlightsService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserReposModule\n\nUserReposModule\n\nAuthModule -->\n\nUserReposModule->AuthModule\n\n\n\nAppModule -->\n\nUserReposModule->AppModule\n\n\n\n\n\nUserReposService \n\nUserReposService \n\nUserReposService  -->\n\nUserReposModule->UserReposService \n\n\n\nAppModule -->\n\nVoteModule->AppModule\n\n\n\n\n\nVoteService \n\nVoteService \n\nVoteService  -->\n\nVoteModule->VoteService \n\n\n\n\n\nStripeModule\n\nStripeModule\n\nAuthModule -->\n\nStripeModule->AuthModule\n\n\n\nStripeWebHookModule -->\n\nStripeModule->StripeWebHookModule\n\n\n\n\n\nStripeService \n\nStripeService \n\nStripeService  -->\n\nStripeModule->StripeService \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\nContributionService\n\nContributionService\n\nContributionModule -->\n\nContributionService->ContributionModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\nEmojiService\n\nEmojiService\n\nEmojiModule -->\n\nEmojiService->EmojiModule\n\n\n\n\n\nEndorsementService\n\nEndorsementService\n\nEndorsementModule -->\n\nEndorsementService->EndorsementModule\n\n\n\nUserModule -->\n\nEndorsementService->UserModule\n\n\n\n\n\nInsightMemberService\n\nInsightMemberService\n\nInsightsModule -->\n\nInsightMemberService->InsightsModule\n\n\n\n\n\nInsightRepoService\n\nInsightRepoService\n\nInsightsModule -->\n\nInsightRepoService->InsightsModule\n\n\n\n\n\nInsightsService\n\nInsightsService\n\nInsightsModule -->\n\nInsightsService->InsightsModule\n\n\n\n\n\nCustomLogger \n\nCustomLogger \n\n\n\nLogModule\n\nLogModule\n\nCustomLogger  -->\n\nLogModule->CustomLogger \n\n\n\n\n\nCustomLogger\n\nCustomLogger\n\nLogModule -->\n\nCustomLogger->LogModule\n\n\n\n\n\nLogService\n\nLogService\n\nLogModule -->\n\nLogService->LogModule\n\n\n\n\n\nOpenAiService\n\nOpenAiService\n\nOpenAiModule -->\n\nOpenAiService->OpenAiModule\n\n\n\n\n\nRepoFilterModule\n\nRepoFilterModule\n\nPullRequestModule -->\n\nRepoFilterModule->PullRequestModule\n\n\n\nRepoModule -->\n\nRepoFilterModule->RepoModule\n\n\n\n\n\nRepoFilterService \n\nRepoFilterService \n\nRepoFilterService  -->\n\nRepoFilterModule->RepoFilterService \n\n\n\n\n\nCodeExplanationService\n\nCodeExplanationService\n\nPullRequestModule -->\n\nCodeExplanationService->PullRequestModule\n\n\n\n\n\nCodeRefactorSuggestionService\n\nCodeRefactorSuggestionService\n\nPullRequestModule -->\n\nCodeRefactorSuggestionService->PullRequestModule\n\n\n\n\n\nCodeTestSuggestionService\n\nCodeTestSuggestionService\n\nPullRequestModule -->\n\nCodeTestSuggestionService->PullRequestModule\n\n\n\n\n\nPullRequestDescriptionService\n\nPullRequestDescriptionService\n\nPullRequestModule -->\n\nPullRequestDescriptionService->PullRequestModule\n\n\n\n\n\nPullRequestInsightsService\n\nPullRequestInsightsService\n\nPullRequestModule -->\n\nPullRequestInsightsService->PullRequestModule\n\n\n\n\n\nPullRequestService\n\nPullRequestService\n\nPullRequestModule -->\n\nPullRequestService->PullRequestModule\n\n\n\n\n\nRepoFilterService\n\nRepoFilterService\n\nUserModule -->\n\nRepoFilterService->UserModule\n\n\n\nRepoFilterModule -->\n\nRepoFilterService->RepoFilterModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\nUserModule -->\n\nRepoService->UserModule\n\n\n\n\n\nStargazeService\n\nStargazeService\n\nStargazeModule -->\n\nStargazeService->StargazeModule\n\n\n\n\n\nStarService\n\nStarService\n\nStarModule -->\n\nStarService->StarModule\n\n\n\n\n\nStripeService\n\nStripeService\n\nStripeModule -->\n\nStripeService->StripeModule\n\n\n\n\n\nStripeSubscriptionService\n\nStripeSubscriptionService\n\nStripeSubscriptionModule -->\n\nStripeSubscriptionService->StripeSubscriptionModule\n\n\n\n\n\nSubmitService\n\nSubmitService\n\nSubmitModule -->\n\nSubmitService->SubmitModule\n\n\n\n\n\nUserCollaborationService\n\nUserCollaborationService\n\nUserModule -->\n\nUserCollaborationService->UserModule\n\n\n\n\n\nUserFollowService\n\nUserFollowService\n\nUserModule -->\n\nUserFollowService->UserModule\n\n\n\n\n\nUserHighlightsService\n\nUserHighlightsService\n\nUserModule -->\n\nUserHighlightsService->UserModule\n\n\n\n\n\nUserNotificationService\n\nUserNotificationService\n\nUserModule -->\n\nUserNotificationService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nUserReposService\n\nUserReposService\n\nUserReposModule -->\n\nUserReposService->UserReposModule\n\n\n\n\n\nVoteService\n\nVoteService\n\nVoteModule -->\n\nVoteService->VoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        24 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    28 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    24 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    33 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    38 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.39.0\n        \n            Description : API dot Open Sauced is NestJS and SupaBase powered OAS3 backend designed to remove client complexity and provide a structured graph of all @open-sauced integrations\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/api.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/api.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/api.opensauced.pizza.git\n        \n            Author : TED Vortex \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SupabaseAuthRequest   (src/.../supabase.user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/supabase.user.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    SupabaseAuthRequest\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiConfig   (src/.../api.config.ts)\n                        \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            cliDuration   (src/.../cli-duration.ts)\n                        \n                        \n                            DbApiConfig   (src/.../db-api.config.ts)\n                        \n                        \n                            DbLoggingConfig   (src/.../db-logging.config.ts)\n                        \n                        \n                            EndpointConfig   (src/.../endpoint.config.ts)\n                        \n                        \n                            getDomain   (src/.../endpoint.config.ts)\n                        \n                        \n                            OpenAIConfig   (src/.../openai.config.ts)\n                        \n                        \n                            relevantEvents   (src/.../stripe-webhook.controller.ts)\n                        \n                        \n                            StripeConfig   (src/.../stripe.config.ts)\n                        \n                        \n                            toDateTime   (src/.../utils.ts)\n                        \n                        \n                            User   (src/.../supabase.user.decorator.ts)\n                        \n                        \n                            UserId   (src/.../supabase.user.decorator.ts)\n                        \n                        \n                            userNotificationTypes   (src/.../user-notification.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/api.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"api\", () => ({\n  codename: String(process.env.API_CODENAME ?? \"api-local\"),\n  logging: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n  host: String(process.env.API_HOST ?? \"0.0.0.0\"),\n  port: String(process.env.API_PORT ?? \"3001\"),\n  domain: String(process.env.API_DOMAIN ?? \"api.opensauced.pizza\"),\n  development: !process.env.CI,\n  memory_heap: Number(parseInt(process.env.MEMORY_HEAP ?? \"200\", 10) * 1024 * 1024),\n  memory_rss: Number(parseInt(process.env.MEMORY_RSS ?? \"3000\", 10) * 1024 * 1024),\n  disk_percentage: Number(parseFloat(process.env.DISK_PERCENGATE ?? \"0.7\")),\n  disk_size: Number(parseInt(process.env.DISK_SIZE ?? \"100\", 10) * 1024 * 1024 * 1024),\n  endorsementServiceToken: String(process.env.ENDORSEMENT_SERVICE_TOKEN ?? \"\"),\n}))\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (model: TModel) =>\n  applyDecorators(\n    ApiExtraModels(PageDto, model),\n    ApiOkResponse({\n      description: \"Successfully received model list\",\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PageDto) },\n          {\n            properties: {\n              data: {\n                type: \"array\",\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n    })\n  )\n                    \n                \n\n\n        \n    \n\n    src/common/util/cli-duration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cliDuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (startTime: number, text: string) =>\n  `${text} ${clc.yellow(`+${String(Date.now() - startTime)}ms`)}`\n                    \n                \n\n\n        \n    \n\n    src/config/db-api.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DbApiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"db-api\", () => ({\n  connection: String(process.env.TYPEORM_CONNECTION_API ?? \"postgres\"),\n  host: String(process.env.TYPEORM_HOST_API ?? \"localhost\"),\n  port: String(process.env.TYPEORM_PORT_API ?? \"25060\"),\n  username: String(process.env.TYPEORM_USERNAME_API ?? \"doadmin\"),\n  password: String(process.env.TYPEORM_PASSWORD_API ?? \"UCN2zrH2WGxKck7tT2JG4MY6wbHkeX9s\"),\n  database: String(process.env.TYPEORM_DATABASE_API ?? \"defaultdb\"),\n  certificate: String(process.env.TYPEORM_SSL_CERT_API ?? \"-----------------------------\"),\n  maxQueryExecutionTime: Number(parseInt(process.env.TYPEORM_MAX_QUERY_EXECUTION_TIME_API ?? \"10000\", 10)),\n}))\n                    \n                \n\n\n        \n    \n\n    src/config/db-logging.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DbLoggingConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"db-logging\", () => ({\n  connection: String(process.env.TYPEORM_CONNECTION_LOGGING ?? \"postgres\"),\n  host: String(process.env.TYPEORM_HOST_LOGGING ?? \"localhost\"),\n  port: String(process.env.TYPEORM_PORT_LOGGING ?? \"25060\"),\n  username: String(process.env.TYPEORM_USERNAME_LOGGING ?? \"doadmin\"),\n  password: String(process.env.TYPEORM_PASSWORD_LOGGING ?? \"UCN2zrH2WGxKck7tT2JG4MY6wbHkeX9s\"),\n  database: String(process.env.TYPEORM_DATABASE_LOGGING ?? \"defaultdb\"),\n  certificate: String(process.env.TYPEORM_SSL_CERT_LOGGING ?? \"-----------------------------\"),\n  maxQueryExecutionTime: Number(parseInt(process.env.TYPEORM_MAX_QUERY_EXECUTION_TIME_LOGGING ?? \"10000\", 10)),\n}))\n                    \n                \n\n\n        \n    \n\n    src/config/endpoint.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EndpointConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"endpoint\", () => ({\n  landing: getDomain(),\n  app: getDomain(\"app\"),\n  hot: getDomain(\"hot\"),\n  docs: getDomain(\"docs\"),\n  explore: getDomain(\"explore\"),\n  admin: getDomain(\"admin\"),\n}))\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (subdomain?: string) =>\n  new URL(`https://${subdomain ? `${subdomain}.` : \"\"}${process.env.DOMAIN ?? \"opensauced.pizza\"}`).toString()\n                    \n                \n\n\n        \n    \n\n    src/config/openai.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OpenAIConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"openai\", () => ({\n  APIKey: String(process.env.OPENAI_API_KEY ?? \"apikey\"),\n  modelName: String(process.env.OPENAI_MODEL_NAME ?? \"gpt-3.5-turbo\"),\n  completionsURL: String(process.env.OPENAI_COMPLETIONS_API_URL ?? \"\"),\n}))\n                    \n                \n\n\n        \n    \n\n    src/stripe-webhook/stripe-webhook.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        relevantEvents\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set([\n  \"checkout.session.completed\",\n  \"customer.subscription.created\",\n  \"customer.subscription.updated\",\n  \"customer.subscription.deleted\",\n])\n                    \n                \n\n\n        \n    \n\n    src/config/stripe.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StripeConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"stripe\", () => ({\n  secretKey: String(process.env.STRIPE_SECRET_KEY ?? \"\"),\n  webhookSecret: String(process.env.STRIPE_WEBHOOK_SECRET_LIVE ?? process.env.STRIPE_WEBHOOK_SECRET ?? \"\"),\n  subscriptionPriceID: String(process.env.STRIPE_SUBSCRIPTION_PRICE_ID ?? \"\"),\n  subscriptionSessionCheckoutSuccessURL: String(process.env.STRIPE_CHECKOUT_SESSION_SUCCESS_URL ?? \"\"),\n  subscriptionSessionCancelURL: String(process.env.STRIPE_CHECKOUT_SESSION_CANCEL_URL ?? \"\"),\n}))\n                    \n                \n\n\n        \n    \n\n    src/stripe-webhook/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toDateTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (secs: number) => {\n  // unix epoch start\n  const t = new Date(\"1970-01-01T00:30:00Z\");\n\n  t.setSeconds(secs);\n  return t;\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/supabase.user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, context: ExecutionContext) => {\n  const request = context.switchToHttp().getRequest();\n\n  return request.user;\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, context: ExecutionContext) => {\n  const request = context.switchToHttp().getRequest();\n\n  return parseInt(request.user?.user_metadata.sub as string, 10);\n})\n                    \n                \n\n\n        \n    \n\n    src/user/entities/user-notification.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userNotificationTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\"highlight_reaction\", \"follow\"] as const\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
