var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.391,1,2.058]],["body/modules/AppModule.html",[0,1.748,1,3.807,2,1.366,3,2.322,4,2.401,5,2.401,6,3.168,7,0.034,8,3.168,9,3.168,10,2.587,11,1.658,12,1.366,13,0.419,14,0.374,15,0.332,16,2.882,17,2.986,18,0.918,19,1.049,20,2.401,21,2.084,22,4.036,23,4.204,24,2.401,25,4.036,26,2.882,27,3.362,28,2.084,29,2.882,30,2.882,31,2.882,32,4.658,33,1.049,34,2.882,35,4.036,36,2.882,37,4.036,38,2.882,39,4.036,40,2.882,41,2.882,42,0.956,43,2.084,44,1.24,45,1.501,46,2.102,47,2.401,48,2.102,49,2.401,50,2.102,51,2.401,52,2.102,53,2.401,54,2.102,55,2.401,56,2.882,57,2.882,58,2.401,59,2.882,60,2.401,61,2.882,62,2.882,63,0.516,64,2.882,65,2.882,66,2.882,67,2.882,68,2.882,69,2.882,70,2.882,71,2.882,72,2.882,73,1.847,74,2.882,75,2.882,76,2.587,77,0.964,78,2.882,79,2.882,80,1.248,81,2.084,82,0.419,83,0.251,84,2.401,85,0.021,86,0.021]],["title/controllers/AuthController.html",[87,1.522,88,2.058]],["body/controllers/AuthController.html",[7,0.033,13,0.564,14,0.504,15,0.446,18,0.786,19,1.411,63,0.694,80,1.679,82,0.564,83,0.338,85,0.025,86,0.025,87,1.837,88,3.153,89,3.229,90,2.803,91,3.229,92,0.564,93,2.831,94,5.685,95,1.093,96,3.876,97,4.919,98,3.557,99,3.153,100,4.098,101,4.098,102,4.098,103,3.876,104,3.876,105,0.918,106,3.876,107,2.23,108,2.815,109,3.229,110,3.229,111,3.876,112,4.919,113,3.153,114,3.557,115,2.803,116,2.019,117,2.019,118,3.229,119,3.876,120,3.876,121,3.876,122,3.876,123,2.803,124,3.876,125,3.229,126,3.876,127,1.837,128,2.484]],["title/modules/AuthModule.html",[0,1.391,6,1.847]],["body/modules/AuthModule.html",[0,2.105,2,1.802,3,2.796,6,3.597,7,0.033,10,3.114,11,2.187,12,1.802,13,0.553,14,0.494,15,0.437,17,2.436,18,0.849,19,1.384,80,2.105,81,3.513,82,0.553,83,0.332,85,0.025,86,0.025,88,3.433,117,3.295,118,3.166,129,3.166,130,3.166,131,3.166,132,3.64,133,3.8,134,4.047,135,4.858,136,2.748,137,3.8,138,3.8]],["title/entities/Contribution.html",[46,1.672,139,0.76]],["body/entities/Contribution.html",[7,0.033,13,0.364,14,0.325,15,0.288,18,0.531,33,0.911,42,1.343,43,1.81,46,1.901,63,1.102,76,2.339,77,0.837,82,0.364,83,0.218,85,0.019,86,0.019,92,0.364,95,1.624,105,1.364,108,2.465,139,0.864,140,2.085,141,1.029,142,4.306,143,4.306,144,2.042,145,2.042,146,1.832,147,4.306,148,2.895,149,2.042,150,3.114,151,3.639,152,3.943,153,3.943,154,3.943,155,3.943,156,2.503,157,1.757,158,3.422,159,2.085,160,2.1,161,2.503,162,2.635,163,1.187,164,2.635,165,2.408,166,2.635,167,2.635,168,2.244,169,2.503,170,1.187,171,2.503,172,1.81,173,2.503,174,2.503,175,1.304,176,2.503,177,1.901,178,2.503,179,2.639,180,2.503,181,1.187,182,2.503,183,2.503,184,2.49,185,2.639,186,1.81,187,1.901,188,1.901,189,1.73,190,1.73,191,1.73,192,1.029,193,1.81,194,1.44,195,1.81,196,2.503]],["title/controllers/HealthController.html",[87,1.522,197,2.058]],["body/controllers/HealthController.html",[7,0.034,13,0.411,14,0.367,15,0.325,18,0.728,19,1.028,23,3.837,24,2.351,28,2.041,73,1.809,80,1.223,82,0.411,83,0.246,85,0.02,86,0.02,87,1.338,90,2.041,92,0.411,93,2.289,95,1.122,98,3.616,99,3.205,105,0.942,107,2.289,113,2.952,114,3.33,115,2.041,116,1.47,123,2.876,127,1.886,197,2.549,198,2.351,199,4.557,200,3.99,201,4.557,202,5.47,203,2.822,204,3.977,205,2.877,206,3.205,207,3.977,208,2.822,209,3.313,210,2.822,211,3.977,212,2.822,213,3.977,214,3.977,215,3.977,216,4.606,217,3.977,218,3.977,219,2.822,220,2.822,221,1.624,222,4.557,223,2.822,224,2.822,225,2.822,226,1.624,227,2.822,228,3.313,229,3.977,230,2.822,231,2.822,232,2.822,233,2.822,234,2.822,235,2.822,236,3.977,237,2.822,238,3.313,239,2.822,240,2.822,241,2.822,242,2.822,243,2.822,244,2.822,245,2.822,246,2.822,247,2.822,248,2.822,249,2.822,250,2.822,251,2.822,252,2.822,253,2.822]],["title/modules/HealthModule.html",[0,1.391,8,1.847]],["body/modules/HealthModule.html",[0,2.341,2,2.14,7,0.033,8,3.11,13,0.657,14,0.587,15,0.52,17,2.893,18,0.842,19,1.644,27,4.502,28,3.264,80,2.341,82,0.657,83,0.394,85,0.028,86,0.028,197,3.708,254,4.514,255,4.514]],["title/classes/PageDto.html",[83,0.28,256,1.847]],["body/classes/PageDto.html",[7,0.034,13,0.507,14,0.452,15,0.401,18,0.794,60,3.824,63,1.064,82,0.507,83,0.448,85,0.024,86,0.024,92,0.507,95,1.294,105,1.216,116,1.813,141,1.294,192,0.982,221,2.004,226,3.352,256,2.641,257,2.232,258,2.901,259,4.726,260,4.296,261,4.59,262,5.673,263,3.469,264,4.59,265,2.004,266,1.813,267,3.482,268,3.482,269,3.482,270,3.482,271,3.482,272,3.482,273,4.278,274,5.135,275,5.135,276,2.901,277,2.518,278,2.901,279,2.901,280,3.482,281,2.901,282,3.482,283,3.482]],["title/classes/PageMetaDto.html",[83,0.28,263,1.847]],["body/classes/PageMetaDto.html",[7,0.033,13,0.451,14,0.402,15,0.356,18,0.617,63,1.032,82,0.451,83,0.27,85,0.022,86,0.022,92,0.451,95,1.588,105,1.366,116,1.613,128,2.719,141,1.196,157,1.963,192,0.873,221,2.441,226,3.637,257,1.985,260,2.239,263,2.441,265,1.782,266,1.613,273,5.144,277,3.764,284,3.763,285,2.58,286,4.839,287,4.839,288,4.542,289,4.839,290,3.499,291,3.096,292,4.336,293,4.242,294,3.764,295,3.096,296,3.096,297,3.096,298,3.096,299,3.096,300,3.096,301,1.613,302,4.031,303,3.096,304,3.534,305,3.096,306,2.239,307,3.096,308,3.096,309,3.096,310,3.096,311,3.096]],["title/classes/PageOptionsDto.html",[83,0.28,301,1.672]],["body/classes/PageOptionsDto.html",[7,0.033,13,0.439,14,0.392,15,0.347,18,0.749,63,1,82,0.439,83,0.416,85,0.021,86,0.021,92,0.439,95,1.346,105,1.219,116,1.57,127,1.429,128,3.796,141,1.174,157,1.914,159,2.35,226,3.407,257,1.932,266,2.909,276,2.511,277,3.45,279,2.511,284,3.462,290,3.45,301,2.169,302,2.511,304,2.511,306,3.721,312,2.511,313,4.334,314,4.165,315,4.771,316,3.058,317,4.771,318,3.015,319,4.165,320,3.015,321,3.015,322,4.165,323,3.015,324,3.015,325,4.165,326,4.165,327,3.015,328,3.015,329,3.015,330,3.015,331,5.146,332,3.015,333,4.771,334,5.146,335,3.015,336,3.015,337,3.015,338,3.015,339,3.015,340,4.165,341,4.165,342,3.015]],["title/entities/Repo.html",[42,0.76,139,0.76]],["body/entities/Repo.html",[7,0.034,13,0.225,14,0.201,15,0.178,18,0.662,33,0.563,42,0.596,44,1.506,45,0.805,46,2.249,47,1.288,48,2.554,50,2.554,52,2.554,54,2.554,63,1.11,76,2.347,77,0.517,82,0.225,83,0.135,85,0.013,86,0.013,92,0.225,95,1.666,105,1.399,108,2.74,139,0.596,141,0.709,144,1.507,145,1.507,146,1.467,149,1.507,150,2.298,151,3.805,152,4.2,153,4.2,154,4.2,155,3.597,157,1.759,158,3.645,159,2.231,160,2.729,162,2.39,163,0.733,164,2.39,165,2.184,166,2.39,167,2.39,168,2.047,170,0.733,172,1.118,175,0.805,177,1.31,179,1.818,181,0.733,184,2.575,185,1.818,186,1.118,187,1.31,188,1.31,189,1.192,190,1.192,191,1.192,192,1.218,193,2.298,194,0.89,195,1.118,294,1.818,343,1.288,344,2.298,345,3.178,346,3.178,347,3.178,348,3.178,349,3.178,350,1.829,351,3.178,352,3.661,353,3.178,354,2.318,355,3.178,356,3.356,357,2.514,358,1.546,359,1.546,360,1.546,361,1.546,362,1.546,363,1.546,364,1.546,365,1.288,366,1.546,367,1.546,368,3.661,369,1.546,370,2.514,371,1.546,372,1.546,373,1.546,374,1.546,375,2.514,376,1.546,377,2.514,378,1.546,379,2.514,380,1.546,381,2.514,382,1.546,383,1.546,384,1.546,385,1.546,386,1.546,387,1.546,388,1.546,389,1.546,390,1.546,391,3.597,392,1.546,393,1.546,394,1.546,395,1.546,396,0.991,397,0.89,398,0.805,399,1.288,400,1.546,401,1.546]],["title/controllers/RepoController.html",[87,1.522,402,2.058]],["body/controllers/RepoController.html",[7,0.033,13,0.385,14,0.344,15,0.305,18,0.803,19,0.964,42,1.436,63,1.011,80,1.147,82,0.385,83,0.231,84,2.206,85,0.02,86,0.02,87,1.255,90,1.915,92,0.385,93,2.187,95,1.254,98,3.873,105,1.053,107,2.558,108,2.789,109,2.206,110,2.206,113,3.114,114,3.513,115,1.915,116,1.379,123,3.215,125,3.704,127,2.108,146,1.619,157,1.487,192,1.254,200,3.684,226,1.524,256,1.524,265,2.558,266,2.316,301,2.789,396,2.85,402,2.436,403,2.206,404,4.286,405,4.286,406,4.446,407,2.206,408,2.648,409,5.356,410,2.648,411,3.801,412,4.286,413,2.648,414,4.462,415,2.206,416,2.648,417,4.048,418,2.648,419,2.648,420,2.648,421,2.648,422,3.166,423,3.801,424,2.648,425,2.648,426,2.648,427,3.801,428,2.316,429,2.206,430,1.255,431,4.446,432,2.206,433,2.206,434,2.206,435,1.915,436,2.648,437,1.915,438,2.648,439,2.648,440,2.648,441,2.648,442,2.648,443,2.648,444,2.648,445,2.648,446,2.648,447,2.648,448,2.648,449,2.648,450,2.648]],["title/modules/RepoModule.html",[0,1.391,9,1.847]],["body/modules/RepoModule.html",[0,2.166,2,1.885,3,2.877,7,0.033,9,3.525,10,3.205,11,2.288,12,1.885,13,0.579,14,0.517,15,0.458,17,2.549,18,0.86,19,1.448,20,3.313,21,2.876,42,0.942,80,2.166,81,3.616,82,0.579,83,0.347,85,0.026,86,0.026,134,4.166,402,3.506,428,3.315,429,3.313,430,1.885,451,3.313,452,3.313,453,3.313,454,3.977,455,3.977,456,3.977]],["title/injectables/RepoService.html",[428,1.672,457,1.522]],["body/injectables/RepoService.html",[7,0.034,13,0.376,14,0.336,15,0.297,18,0.797,19,0.941,21,1.868,33,0.941,42,1.138,44,0.793,63,0.86,77,0.864,82,0.376,83,0.225,85,0.019,86,0.019,92,0.376,93,2.148,105,1.207,107,2.764,108,2.766,127,2.277,146,1.597,157,1.466,192,1.498,193,1.868,200,3.662,221,2.148,222,2.152,256,1.486,263,2.764,265,2.764,266,2.502,278,2.152,288,3.11,301,2.852,404,3.11,405,3.11,407,3.11,412,3.653,414,4.424,415,3.11,417,2.152,422,3.653,428,1.945,430,1.225,432,3.11,433,2.152,434,2.152,457,1.77,458,1.656,459,2.152,460,4.803,461,2.583,462,3.079,463,2.583,464,3.734,465,2.583,466,2.583,467,2.583,468,2.583,469,2.583,470,2.583,471,2.583,472,2.583,473,2.583,474,2.583,475,2.583,476,2.583,477,2.152,478,2.583,479,2.152,480,2.583,481,2.152,482,2.583,483,2.152,484,5.607,485,5.311,486,4.385,487,2.583,488,5.311,489,4.803,490,3.734,491,3.734,492,2.764,493,2.583,494,2.583,495,2.583,496,2.583,497,2.583,498,2.583,499,2.583,500,2.583,501,2.583,502,2.583]],["title/entities/RepoToUserStargazers.html",[54,1.672,139,0.76]],["body/entities/RepoToUserStargazers.html",[7,0.034,13,0.388,14,0.346,15,0.307,18,0.649,33,0.97,42,1.363,44,1.768,45,1.387,54,1.988,63,1.058,77,0.891,82,0.388,83,0.232,85,0.02,86,0.02,92,0.388,95,1.594,105,1.339,139,0.904,141,1.076,144,2.31,145,2.115,146,2.153,148,2.567,149,2.115,157,1.794,159,1.933,162,2.544,163,1.263,164,2.544,165,2.325,166,2.544,167,2.544,168,2.31,170,1.263,175,1.988,177,2.537,181,1.263,184,2.445,187,2.323,188,2.323,189,1.809,190,1.809,191,1.809,192,1.258,354,2.567,397,1.533,398,1.387,430,1.263,483,2.219,503,2.219,504,3.516,505,2.663,506,2.663,507,2.859,508,2.663,509,2.663,510,2.663,511,2.663,512,2.663,513,2.663,514,2.663,515,2.663,516,2.663,517,2.663]],["title/entities/RepoToUserStars.html",[50,1.672,139,0.76]],["body/entities/RepoToUserStars.html",[7,0.034,13,0.388,14,0.346,15,0.307,18,0.649,33,0.97,42,1.363,44,1.768,45,1.387,50,1.988,63,1.058,77,0.891,82,0.388,83,0.232,85,0.02,86,0.02,92,0.388,95,1.594,105,1.339,139,0.904,141,1.076,144,2.31,145,2.115,146,2.153,148,2.567,149,2.115,157,1.794,159,1.933,162,2.544,163,1.263,164,2.544,165,2.325,166,2.544,167,2.544,168,2.31,170,1.263,175,1.988,177,2.537,181,1.263,184,2.445,187,2.323,188,2.323,189,1.809,190,1.809,191,1.809,192,1.258,354,2.567,397,1.533,398,1.387,430,1.263,479,2.219,504,3.516,507,2.859,518,2.219,519,2.663,520,2.663,521,2.663,522,2.663,523,2.663,524,2.663,525,2.663,526,2.663,527,2.663,528,2.663,529,2.663,530,2.663]],["title/entities/RepoToUserSubmissions.html",[52,1.672,139,0.76]],["body/entities/RepoToUserSubmissions.html",[7,0.034,13,0.388,14,0.346,15,0.307,18,0.649,33,0.97,42,1.363,44,1.768,45,1.387,52,1.988,63,1.058,77,0.891,82,0.388,83,0.232,85,0.02,86,0.02,92,0.388,95,1.594,105,1.339,139,0.904,141,1.076,144,2.31,145,2.115,146,2.153,148,2.567,149,2.115,157,1.794,159,1.933,162,2.544,163,1.263,164,2.544,165,2.325,166,2.544,167,2.544,168,2.31,170,1.263,175,1.988,177,2.537,181,1.263,184,2.445,187,2.323,188,2.323,189,1.809,190,1.809,191,1.809,192,1.258,354,2.567,397,1.533,398,1.387,430,1.263,481,2.219,504,3.516,507,2.859,531,2.219,532,2.663,533,2.663,534,2.663,535,2.663,536,2.663,537,2.663,538,2.663,539,2.663,540,2.663,541,2.663,542,2.663,543,2.663]],["title/entities/RepoToUserVotes.html",[48,1.672,139,0.76]],["body/entities/RepoToUserVotes.html",[7,0.034,13,0.388,14,0.346,15,0.307,18,0.649,33,0.97,42,1.363,44,1.768,45,1.387,48,1.988,63,1.058,77,0.891,82,0.388,83,0.232,85,0.02,86,0.02,92,0.388,95,1.594,105,1.339,139,0.904,141,1.076,144,2.31,145,2.115,146,2.153,148,2.567,149,2.115,157,1.794,159,1.933,162,2.544,163,1.263,164,2.544,165,2.325,166,2.544,167,2.544,168,2.31,170,1.263,175,1.988,177,2.537,181,1.263,184,2.445,187,2.323,188,2.323,189,1.809,190,1.809,191,1.809,192,1.258,354,2.567,397,1.533,398,1.387,430,1.263,477,2.219,504,3.516,507,2.859,544,2.219,545,2.663,546,2.663,547,2.663,548,2.663,549,2.663,550,2.663,551,2.663,552,2.663,553,2.663,554,2.663,555,2.663,556,2.663]],["title/injectables/SupabaseGuard.html",[117,1.672,457,1.522]],["body/injectables/SupabaseGuard.html",[7,0.033,13,0.679,14,0.607,15,0.537,18,0.802,19,1.7,82,0.679,83,0.407,85,0.028,86,0.028,117,2.871,136,3.375,194,2.686,457,2.614,458,2.992,557,3.888,558,4.667,559,4.667]],["title/injectables/SupabaseStrategy.html",[132,1.847,457,1.522]],["body/injectables/SupabaseStrategy.html",[7,0.034,13,0.516,14,0.461,15,0.408,18,0.83,19,1.291,44,1.089,63,0.832,82,0.516,83,0.309,85,0.024,86,0.024,91,2.953,92,0.516,93,2.673,101,2.953,105,1.227,107,2.673,127,1.681,132,2.673,136,2.563,192,1.31,194,2.04,200,3.32,209,2.953,221,2.981,265,2.673,266,2.419,457,2.202,458,2.272,504,2.673,560,2.953,561,4.644,562,4.644,563,3.545,564,4.644,565,5.18,566,3.545,567,3.545,568,3.545,569,4.644,570,5.497,571,3.545,572,4.644,573,3.545,574,3.545,575,4.644,576,2.953,577,2.977,578,3.545,579,3.545,580,3.545,581,3.545,582,3.545,583,3.545,584,3.545,585,3.545,586,3.545,587,3.545,588,3.545,589,3.545,590,3.545,591,3.545]],["title/entities/User.html",[44,0.986,139,0.76]],["body/entities/User.html",[7,0.034,13,0.331,14,0.296,15,0.262,18,0.738,33,0.828,42,1.202,43,1.645,44,1.044,48,2.879,49,1.895,50,2.879,51,1.895,52,2.879,53,1.895,54,2.879,55,1.895,63,1.081,76,3.253,77,0.761,82,0.331,83,0.198,85,0.017,86,0.017,92,0.331,95,1.65,105,1.386,139,0.805,141,0.959,144,1.93,145,1.93,146,1.483,149,1.93,151,1.645,157,1.511,158,2.459,159,2.194,160,1.957,162,2.406,163,1.078,164,2.406,165,2.198,166,2.406,167,2.406,168,2.142,170,1.078,172,1.645,181,1.078,184,2.293,185,2.459,186,1.645,189,1.612,190,1.612,191,1.612,192,0.641,194,1.309,195,1.645,294,3.67,356,4.029,365,3.392,391,4.228,396,2.61,592,1.895,593,4.072,594,4.072,595,4.072,596,4.072,597,2.274,598,2.274,599,2.274,600,2.274,601,2.274,602,2.274,603,2.274,604,3.4,605,2.274,606,3.4,607,2.274,608,3.4,609,2.274,610,3.4,611,2.274,612,3.4,613,2.274,614,2.274,615,2.274]],["title/changelog.html",[616,1.729,617,1.951,618,2.247]],["body/changelog.html",[3,1.833,7,0.032,12,0.585,15,0.312,33,0.986,42,0.292,44,0.379,58,1.738,73,0.791,77,0.906,85,0.011,86,0.011,99,0.791,100,1.028,102,1.028,128,0.791,146,0.76,150,0.892,160,0.71,179,0.892,192,1.004,199,1.028,201,1.738,205,0.71,228,1.028,290,0.892,306,1.959,316,0.791,396,0.791,462,1.737,492,1.2,577,0.791,616,0.791,618,1.738,619,1.234,620,2.086,621,1.738,622,1.738,623,2.086,624,1.028,625,5.132,626,4.114,627,2.709,628,4.324,629,4.324,630,4.91,631,1.234,632,3.602,633,2.086,634,1.234,635,1.234,636,5.554,637,5.599,638,2.086,639,1.234,640,1.234,641,3.864,642,2.042,643,5.554,644,3.185,645,3.185,646,2.086,647,2.709,648,2.086,649,4.503,650,2.086,651,2.086,652,2.086,653,4.792,654,2.709,655,3.56,656,2.086,657,2.086,658,3.56,659,2.086,660,1.738,661,2.086,662,3.864,663,2.086,664,2.086,665,2.086,666,2.086,667,2.709,668,2.086,669,4.503,670,4.503,671,2.086,672,1.234,673,4.657,674,1.234,675,1.234,676,3.56,677,1.234,678,1.234,679,5.953,680,3.56,681,1.234,682,2.257,683,2.086,684,2.709,685,1.234,686,1.234,687,3.185,688,3.185,689,4.792,690,1.234,691,1.234,692,1.234,693,1.234,694,1.234,695,1.234,696,4.114,697,1.234,698,1.234,699,1.234,700,1.234,701,4.114,702,2.709,703,1.508,704,1.234,705,1.234,706,1.234,707,2.086,708,2.086,709,2.709,710,2.086,711,1.234,712,1.234,713,1.234,714,3.185,715,2.086,716,1.234,717,1.234,718,1.028,719,1.738,720,1.234,721,1.234,722,2.086,723,1.028,724,1.234,725,1.234,726,4.503,727,1.234,728,1.234,729,1.234,730,2.086,731,1.234,732,1.234,733,1.234,734,3.864,735,1.234,736,1.738,737,1.234,738,1.234,739,1.028,740,1.234,741,1.234,742,1.234,743,1.234,744,1.234,745,1.234,746,2.086,747,1.234,748,1.234,749,3.602,750,1.234,751,1.234,752,1.234,753,2.086,754,3.185,755,1.234,756,2.086,757,2.709,758,1.234,759,1.234,760,1.234,761,1.234,762,0.892,763,1.234,764,1.234,765,1.234,766,1.234,767,1.234,768,1.234,769,1.234,770,3.56,771,2.086,772,1.028,773,1.234,774,1.234,775,1.234,776,1.234,777,1.234,778,1.234,779,1.234,780,1.234,781,1.234,782,1.234,783,2.709,784,1.234,785,1.234,786,1.234,787,1.234,788,1.234,789,1.234,790,1.234,791,1.738,792,1.234,793,1.234,794,1.234,795,4.503,796,1.234,797,1.234,798,1.234,799,1.234,800,2.709,801,1.234,802,1.234,803,1.234,804,1.234,805,1.234,806,1.234,807,1.234,808,1.234,809,1.234,810,1.234,811,1.234,812,1.234,813,1.234,814,1.234,815,1.234,816,1.234,817,2.709,818,1.234,819,1.234,820,1.234,821,1.234,822,1.234,823,1.234,824,1.234,825,1.234,826,1.234,827,1.234,828,1.234,829,1.028,830,1.234,831,1.234,832,2.709,833,1.234,834,1.234,835,1.234,836,1.234,837,2.086,838,1.234,839,1.234,840,1.234,841,1.234,842,1.234,843,1.234,844,3.185,845,3.185,846,2.086,847,1.234,848,1.234,849,1.234,850,1.738,851,1.234,852,1.738,853,1.234,854,1.234,855,1.234,856,2.086,857,2.086,858,2.086,859,1.738,860,2.086,861,1.234,862,2.709,863,1.234,864,2.086,865,1.234,866,2.086,867,2.086,868,1.234,869,1.234,870,1.234,871,1.234,872,1.234,873,1.234,874,1.234,875,1.234,876,1.234,877,1.234,878,1.234,879,1.234,880,1.234,881,1.234,882,1.234,883,1.234,884,1.234,885,1.234,886,2.086,887,1.234,888,1.234,889,1.234,890,1.234,891,1.234,892,1.234,893,1.234,894,1.234,895,1.234,896,1.234,897,1.234,898,1.234,899,1.234,900,1.234,901,1.234,902,1.234,903,1.234,904,1.234,905,1.234,906,1.028,907,1.234,908,1.234,909,1.234,910,1.234,911,1.234,912,1.234,913,1.234,914,1.234,915,1.234,916,1.234,917,1.234,918,1.028,919,1.234,920,1.234,921,1.234,922,1.234,923,1.234,924,1.234,925,1.234,926,1.234,927,1.028,928,1.234,929,1.234,930,1.234,931,1.234,932,1.234,933,1.234,934,1.234,935,1.234]],["title/coverage.html",[936,3.622]],["body/coverage.html",[7,0.033,15,0.397,42,0.816,44,1.059,46,1.795,48,1.795,50,1.795,52,1.795,54,1.795,63,0.617,83,0.446,85,0.023,86,0.023,87,2.422,88,2.209,89,2.871,117,1.795,132,1.983,139,1.404,140,2.871,160,3.689,197,2.209,198,2.871,256,1.983,258,2.871,263,1.983,284,2.923,285,2.871,301,1.795,312,2.871,343,2.871,402,2.209,403,2.871,428,1.795,435,2.492,437,2.492,457,2.422,459,2.871,492,1.983,503,2.871,518,2.871,531,2.871,544,2.871,557,2.871,560,2.871,592,2.871,642,2.209,719,3.798,936,2.871,937,3.447,938,3.447,939,3.447,940,6.196,941,5.437,942,2.871,943,2.871,944,3.447,945,2.871,946,2.871,947,3.447,948,2.871,949,3.447,950,2.871,951,3.447,952,3.447,953,2.871]],["title/miscellaneous/enumerations.html",[954,1.169,955,3.209]],["body/miscellaneous/enumerations.html",[7,0.031,85,0.029,86,0.029,92,0.698,313,4.052,316,3.592,398,2.918,399,4.668,954,2.079,955,3.997,956,4.798,957,4.798]],["title/miscellaneous/functions.html",[954,1.169,958,3.209]],["body/miscellaneous/functions.html",[7,0.029,85,0.029,86,0.029,92,0.716,948,4.098,950,4.995,954,2.131,958,4.098,959,4.919]],["title/index.html",[92,0.393,616,1.729,617,1.951]],["body/index.html",[7,0.032,11,1.888,12,1.556,14,0.426,46,1.709,73,3.417,85,0.023,86,0.023,99,2.829,205,3.201,206,3.417,238,2.734,313,2.373,350,1.888,462,2.104,492,1.888,577,3.417,621,4.634,622,2.734,632,3.676,642,2.104,660,2.734,682,2.734,739,4.876,749,3.676,762,2.373,791,3.676,829,3.676,850,2.734,906,2.734,918,4.634,953,2.734,960,3.282,961,3.282,962,3.282,963,3.282,964,3.282,965,3.282,966,3.282,967,4.153,968,2.734,969,3.282,970,3.282,971,4.413,972,3.282,973,3.282,974,3.282,975,3.282,976,3.282,977,3.282,978,3.282,979,4.985,980,4.413,981,3.282,982,3.282,983,4.413,984,3.282,985,3.282,986,3.282,987,3.282,988,3.282,989,4.413,990,3.282,991,4.413,992,4.413,993,3.282,994,3.282,995,3.282,996,3.282,997,3.282,998,3.282,999,3.282,1000,3.282,1001,3.282,1002,3.282,1003,3.282,1004,3.282,1005,3.282,1006,2.734,1007,3.282,1008,4.413,1009,3.282,1010,3.282,1011,3.282,1012,3.282,1013,3.282,1014,3.282,1015,3.282,1016,3.282,1017,3.282,1018,3.282,1019,3.282,1020,3.282,1021,3.282,1022,3.282,1023,3.282,1024,3.282,1025,2.373]],["title/license.html",[350,1.552,616,1.729,617,1.951]],["body/license.html",[7,0.025,12,1.787,85,0.025,86,0.025,165,2.311,205,2.169,206,2.416,350,2.169,625,3.14,642,2.416,723,3.14,772,4.026,967,3.14,968,5.158,1025,2.726,1026,5.334,1027,3.769,1028,4.833,1029,3.769,1030,3.769,1031,3.769,1032,3.769,1033,3.769,1034,3.769,1035,3.769,1036,3.769,1037,3.769,1038,3.769,1039,4.833,1040,3.769,1041,3.769,1042,4.833,1043,3.769,1044,3.769,1045,3.769,1046,3.769,1047,3.769,1048,3.769,1049,3.769,1050,4.833,1051,3.769,1052,3.769,1053,3.769,1054,3.769,1055,3.769,1056,3.769,1057,4.833,1058,4.833,1059,3.769,1060,3.769,1061,3.769,1062,3.769,1063,3.769,1064,3.769,1065,3.769,1066,3.769,1067,3.769,1068,3.769,1069,3.769,1070,3.769,1071,3.769,1072,3.769,1073,3.769,1074,3.769,1075,3.769,1076,3.769,1077,3.769,1078,3.769,1079,3.769,1080,3.769,1081,3.769,1082,3.769,1083,3.769,1084,3.769,1085,3.769,1086,3.769,1087,3.769]],["title/modules.html",[2,2.061]],["body/modules.html",[1,3.023,2,2.236,6,2.714,7,0.029,8,2.714,9,2.714,85,0.029,86,0.029,1088,5.892,1089,5.892,1090,5.892,1091,6.082,1092,3.929,1093,4.716]],["title/overview.html",[1094,3.622]],["body/overview.html",[1,3.956,2,1.848,3,2.841,4,3.247,5,3.247,6,3.584,7,0.032,8,3.118,9,3.455,10,3.165,11,2.243,12,1.848,77,1.303,80,1.688,85,0.025,86,0.025,117,3.177,129,3.247,130,3.247,131,3.247,132,3.51,257,2.498,428,3.177,451,3.247,452,3.247,453,3.247,458,2.498,859,3.247,1094,3.247,1095,3.898,1096,5.419]],["title/properties.html",[141,1.086,1097,2.698]],["body/properties.html",[7,0.033,85,0.027,86,0.027,141,1.221,205,3.032,206,3.378,344,3.13,350,2.491,462,2.775,576,3.606,577,2.775,624,3.606,718,3.606,762,3.13,852,3.606,927,3.606,1025,3.13,1092,3.606,1098,4.328,1099,4.328,1100,4.328,1101,4.328,1102,4.328,1103,4.328,1104,4.328,1105,4.328,1106,4.328,1107,4.328,1108,4.328,1109,5.269,1110,4.328,1111,4.328,1112,4.328,1113,4.328,1114,4.328,1115,4.328,1116,4.328,1117,4.328]],["title/miscellaneous/typealiases.html",[954,1.169,1118,3.852]],["body/miscellaneous/typealiases.html",[7,0.029,63,1.005,85,0.029,86,0.029,92,0.701,260,4.06,284,3.086,292,4.677,954,2.086,1119,4.815,1120,4.815,1121,5.615,1122,4.815]],["title/miscellaneous/variables.html",[703,2.785,954,1.169]],["body/miscellaneous/variables.html",[7,0.034,42,0.934,63,0.706,85,0.026,86,0.026,92,0.574,108,2.053,113,2.527,127,1.869,141,1.112,159,1.973,259,3.284,281,3.284,316,3.188,344,2.851,435,3.596,437,3.596,492,2.269,703,2.851,736,3.284,942,3.284,943,4.143,945,3.284,946,4.143,954,1.708,1006,3.284,1123,3.943,1124,3.943,1125,4.973,1126,3.943,1127,3.943,1128,3.943,1129,3.943,1130,3.943,1131,3.943,1132,4.973,1133,3.943,1134,3.943,1135,3.943,1136,4.973,1137,3.943,1138,3.943,1139,3.943]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":160,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["0/1",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["0848443",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["1.0.0",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["1.6.10",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["1.6.11",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["1.6.12",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["1.6.13",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["1.6.14",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["1.6.15",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["1.6.16",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["1.6.17",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["1.6.3",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["1.6.4",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["1.6.5",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["1.6.6",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["1.6.7",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["1.6.8",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["1.6.9",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["1.7.1",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["1.7.10",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["1.7.11",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["1.7.12",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["1.7.3",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["1.7.5",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["1.7.6",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["1.7.7",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["1.7.8",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["1.7.9",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["1.8.1",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["1.8.2",{"_index":624,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["10",{"_index":306,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(50)@isoptional",{"_index":327,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["12",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["166050d",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["17c54b9",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":323,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["20",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":625,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["20880c7",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["20bc1e7",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["22d3cc1",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":155,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["27",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["272c09a",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["273f337",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["2c0b15f",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["2c0b3d1",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1096,"title":{},"body":{"overview.html":{}}}],["30",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["31e4d60",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["33fea7e",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["34d521d",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["3918a78",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1095,"title":{},"body":{"overview.html":{}}}],["4552c66",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["50",{"_index":326,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["58bf922",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["5e7c6c7",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["5eddeb1",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["5f79c49",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["607cf5d",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["61b67d5",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["62b3eea",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["630f3b5",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["63d6a92",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":368,"title":{},"body":{"entities/Repo.html":{}}}],["673dca9",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["6d23c24",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":859,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["73d1c74",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["77c734c",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["79bf61d",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["7adfb6b",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["7db9008",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["7e9b8a4",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["7fe63aa",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["81e8bbc",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["8837b2a",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["8aee8e5",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["911df68",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["94ba4e1",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["a0db0aa",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["a229a3b",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["a9e1df6",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1056,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["ac31556",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["accessing",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["accessors",{"_index":314,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["action",{"_index":1081,"title":{},"body":{"license.html":{}}}],["add",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["add_table_nametest",{"_index":995,"title":{},"body":{"index.html":{}}}],["adding",{"_index":986,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["adjustments",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["af531e4",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1119,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allof",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1048,"title":{},"body":{"license.html":{}}}],["api",{"_index":762,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["api.opensauced.pizza",{"_index":963,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconfig",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["apidocs",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["apiextramodels(pagedto",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apinotfoundresponse",{"_index":431,"title":{},"body":{"controllers/RepoController.html":{}}}],["apiokresponse",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"miscellaneous/variables.html":{}}}],["apioperation",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["apipaginatedresponse",{"_index":435,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse(repo",{"_index":449,"title":{},"body":{"controllers/RepoController.html":{}}}],["apiproperty",{"_index":273,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{}}}],["apiproperty({type",{"_index":271,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":331,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({enum",{"_index":318,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":322,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apitags",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["apitags(\"authentication",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"health",{"_index":219,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"repositories",{"_index":440,"title":{},"body":{"controllers/RepoController.html":{}}}],["apply",{"_index":993,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":1085,"title":{},"body":{"license.html":{}}}],["array",{"_index":281,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["artifact",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":399,"title":{},"body":{"entities/Repo.html":{},"miscellaneous/enumerations.html":{}}}],["assign",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1035,"title":{},"body":{"license.html":{}}}],["async",{"_index":200,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["attach",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["attempt",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{}}}],["auth.controller",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":88,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":561,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticate(req",{"_index":564,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authentication",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication'})@apiokresponse({type",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":558,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authguard(\"supabase",{"_index":559,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1115,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":1074,"title":{},"body":{"license.html":{}}}],["authuser",{"_index":570,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["autoloadentities",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1093,"title":{},"body":{"modules.html":{}}}],["await",{"_index":489,"title":{},"body":{"injectables/RepoService.html":{}}}],["b1a67da",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["b1eda28",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["b4d3785",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["b57f47b",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["b5b6ac5",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["b7c3395",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["ba8dfbb",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1101,"title":{},"body":{"properties.html":{}}}],["badges",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"changelog.html":{}}}],["baseentity",{"_index":185,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["baseline",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["basequerybuilder",{"_index":460,"title":{},"body":{"injectables/RepoService.html":{}}}],["bash",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["bc3a37d",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["bd6d621",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["beta.api.opensauced.pizza",{"_index":964,"title":{},"body":{"index.html":{}}}],["better",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["bigint",{"_index":158,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["binaries",{"_index":969,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":294,"title":{},"body":{"classes/PageMetaDto.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":950,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1091,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1088,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1111,"title":{},"body":{"properties.html":{}}}],["build",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1027,"title":{},"body":{"license.html":{}}}],["c013b70",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["c127cea",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["c24937f",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["cb83f9d",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["cb9206d",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["cc46460",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["cd306f8",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["cd8f21d",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":618,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":621,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["channel",{"_index":1023,"title":{},"body":{"index.html":{}}}],["character",{"_index":152,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["charge",{"_index":1032,"title":{},"body":{"license.html":{}}}],["check",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["checkauthstatus",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["checks",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1077,"title":{},"body":{"license.html":{}}}],["class",{"_index":83,"title":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"coverage.html":{}}}],["classes",{"_index":257,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"overview.html":{}}}],["clean",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":1003,"title":{},"body":{"index.html":{}}}],["client",{"_index":1103,"title":{},"body":{"properties.html":{}}}],["closes",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_repomodule",{"_index":451,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_exports",{"_index":453,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_providers",{"_index":452,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["column",{"_index":184,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["column(\"text",{"_index":400,"title":{},"body":{"entities/Repo.html":{}}}],["column('text",{"_index":361,"title":{},"body":{"entities/Repo.html":{}}}],["column({default",{"_index":365,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["column({type",{"_index":151,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["command",{"_index":989,"title":{},"body":{"index.html":{}}}],["commands",{"_index":977,"title":{},"body":{"index.html":{}}}],["comments",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["common/decorators/api",{"_index":436,"title":{},"body":{"controllers/RepoController.html":{}}}],["common/dtos/page",{"_index":432,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["common/dtos/page.dto",{"_index":434,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["community",{"_index":1015,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":1104,"title":{},"body":{"properties.html":{}}}],["component",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["concurrency",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1055,"title":{},"body":{"license.html":{}}}],["config/api.config",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["config/endpoint.config",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configservice.get(\"db.connection",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.database",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.host",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.password",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.port",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.username",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1086,"title":{},"body":{"license.html":{}}}],["console.log(\"supabaseguard",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(builder.getsql",{"_index":499,"title":{},"body":{"injectables/RepoService.html":{}}}],["const",{"_index":484,"title":{},"body":{"injectables/RepoService.html":{}}}],["constants/order.constant",{"_index":337,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["constructor",{"_index":221,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["constructor(data",{"_index":261,"title":{},"body":{"classes/PageDto.html":{}}}],["constructor(private",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoController.html":{}}}],["constructor(reporepository",{"_index":461,"title":{},"body":{"injectables/RepoService.html":{}}}],["constructor(undefined",{"_index":291,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["container",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["continuous",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1082,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1010,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":1008,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":46,"title":{"entities/Contribution.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"coverage.html":{},"index.html":{}}}],["contribution.repo",{"_index":357,"title":{},"body":{"entities/Repo.html":{}}}],["contribution/contribution.entity",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{}}}],["contributions",{"_index":193,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{}}}],["contributor",{"_index":142,"title":{},"body":{"entities/Contribution.html":{}}}],["controller",{"_index":87,"title":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"health",{"_index":220,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"repos",{"_index":439,"title":{},"body":{"controllers/RepoController.html":{}}}],["controllers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"overview.html":{}}}],["conversation",{"_index":1018,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1050,"title":{},"body":{"license.html":{}}}],["copy",{"_index":772,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":1026,"title":{},"body":{"license.html":{}}}],["correct",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":143,"title":{},"body":{"entities/Contribution.html":{}}}],["coverage",{"_index":936,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["created",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["created_at",{"_index":144,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":190,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createdatecolumn({type",{"_index":163,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["creating",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["d0d5ca5",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["d77ea52",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1078,"title":{},"body":{"license.html":{}}}],["data",{"_index":259,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["datasource",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":162,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["db",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["db:changesif",{"_index":990,"title":{},"body":{"index.html":{}}}],["db:commit",{"_index":994,"title":{},"body":{"index.html":{}}}],["db:push",{"_index":1002,"title":{},"body":{"index.html":{}}}],["db:resetpush",{"_index":1000,"title":{},"body":{"index.html":{}}}],["db:startmake",{"_index":985,"title":{},"body":{"index.html":{}}}],["dbconfig",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["dd5e668",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1037,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1087,"title":{},"body":{"license.html":{}}}],["debug",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["decorator",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["default",{"_index":159,"title":{},"body":{"entities/Contribution.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["delete",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["deleted_at",{"_index":145,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["deletedatecolumn",{"_index":189,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["deletedatecolumn({type",{"_index":170,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["demo",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":398,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":344,"title":{},"body":{"entities/Repo.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":1102,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":971,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":1007,"title":{},"body":{"index.html":{}}}],["diagrams",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":988,"title":{},"body":{"index.html":{}}}],["digital",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["discord.find",{"_index":1019,"title":{},"body":{"index.html":{}}}],["disk",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":218,"title":{},"body":{"controllers/HealthController.html":{}}}],["distribute",{"_index":1046,"title":{},"body":{"license.html":{}}}],["docker",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.12",{"_index":975,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["docr",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":642,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":1098,"title":{},"body":{"properties.html":{}}}],["dry",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["e145e2d",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["e1fe498",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["e663170",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":280,"title":{},"body":{"classes/PageDto.html":{}}}],["eba258a",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["echo",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":1009,"title":{},"body":{"index.html":{}}}],["endpointconfig",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":207,"title":{},"body":{"controllers/HealthController.html":{}}}],["engines",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["entities",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"overview.html":{}}}],["entity",{"_index":139,"title":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":338,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["enumerations",{"_index":955,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":319,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["env",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["environments",{"_index":962,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":723,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["everything",{"_index":991,"title":{},"body":{"index.html":{}}}],["explain",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["exports",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"modules/RepoModule.html":{}}}],["exposing",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1065,"title":{},"body":{"license.html":{}}}],["extend",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":194,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["extractjwt",{"_index":573,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":589,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractor",{"_index":588,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["f0304d4",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["f5385b3",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["fdc11ea",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["fe4b9e9",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":1036,"title":{},"body":{"license.html":{}}}],["findall",{"_index":422,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findall(pageoptionsdto",{"_index":466,"title":{},"body":{"injectables/RepoService.html":{}}}],["findonebyid",{"_index":404,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyid(id",{"_index":407,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo",{"_index":405,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo(owner",{"_index":415,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["finds",{"_index":409,"title":{},"body":{"controllers/RepoController.html":{}}}],["finduserlist",{"_index":406,"title":{},"body":{"controllers/RepoController.html":{}}}],["finduserlist(pageoptionsdto",{"_index":420,"title":{},"body":{"controllers/RepoController.html":{}}}],["fine",{"_index":992,"title":{},"body":{"index.html":{}}}],["first",{"_index":980,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1070,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["flight",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":967,"title":{},"body":{"index.html":{},"license.html":{}}}],["free",{"_index":1031,"title":{},"body":{"license.html":{}}}],["full",{"_index":660,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["full_name",{"_index":345,"title":{},"body":{"entities/Repo.html":{}}}],["function",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":958,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1053,"title":{},"body":{"license.html":{}}}],["generated",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["get(\"/:id",{"_index":441,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/:owner/:repo",{"_index":444,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/list",{"_index":448,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/service",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/status",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"/web",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":408,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/:owner/:repo')@apioperation({operationid",{"_index":416,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/list')@apioperation({operationid",{"_index":421,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":203,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/status')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":210,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdomain",{"_index":946,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethello",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["getschemapath(model",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(pagedto",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getskip",{"_index":329,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getting",{"_index":616,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1113,"title":{},"body":{"properties.html":{}}}],["github",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":1030,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1092,"title":{},"body":{"modules.html":{},"properties.html":{}}}],["guide",{"_index":1012,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1013,"title":{},"body":{"index.html":{}}}],["has_stars_data",{"_index":593,"title":{},"body":{"entities/User.html":{}}}],["hasnextpage",{"_index":286,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":287,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["health",{"_index":199,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["health.controller",{"_index":255,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":216,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":213,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":197,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":8,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["healthstatusservice",{"_index":204,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":211,"title":{},"body":{"controllers/HealthController.html":{}}}],["hereby",{"_index":1029,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1075,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1108,"title":{},"body":{"properties.html":{}}}],["host",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["httpcode(httpstatus.ok",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["httphealthindicator",{"_index":214,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/open",{"_index":1109,"title":{},"body":{"properties.html":{}}}],["httpstatus",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["id",{"_index":146,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{}}}],["id'})@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":410,"title":{},"body":{"controllers/RepoController.html":{}}}],["identifier",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1004,"title":{},"body":{"index.html":{}}}],["immediate",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1066,"title":{},"body":{"license.html":{}}}],["import",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["imports",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}}}],["improve",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1059,"title":{},"body":{"license.html":{}}}],["including",{"_index":1039,"title":{},"body":{"license.html":{}}}],["index",{"_index":92,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["initial",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":457,"title":{"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}},"body":{"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":458,"title":{},"body":{"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":470,"title":{},"body":{"injectables/RepoService.html":{}}}],["injectrepository(repo",{"_index":471,"title":{},"body":{"injectables/RepoService.html":{}}}],["inspection",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["installed",{"_index":970,"title":{},"body":{"index.html":{}}}],["instead",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":1106,"title":{},"body":{"properties.html":{}}}],["is_fork",{"_index":346,"title":{},"body":{"entities/Repo.html":{}}}],["is_open_sauced_member",{"_index":594,"title":{},"body":{"entities/User.html":{}}}],["is_private",{"_index":595,"title":{},"body":{"entities/User.html":{}}}],["isarray",{"_index":274,"title":{},"body":{"classes/PageDto.html":{}}}],["isarray()@apiproperty({isarray",{"_index":267,"title":{},"body":{"classes/PageDto.html":{}}}],["isenum",{"_index":332,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(order",{"_index":339,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isglobal",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":333,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isoptional",{"_index":334,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["issues",{"_index":347,"title":{},"body":{"entities/Repo.html":{}}}],["item",{"_index":488,"title":{},"body":{"injectables/RepoService.html":{}}}],["itemcount",{"_index":288,"title":{},"body":{"classes/PageMetaDto.html":{},"injectables/RepoService.html":{}}}],["items",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["job",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["jobs",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":1017,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":188,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["js",{"_index":579,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["jwt",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{}}}],["keywords",{"_index":1107,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1064,"title":{},"body":{"license.html":{}}}],["language",{"_index":348,"title":{},"body":{"entities/Repo.html":{}}}],["last_fetched_contributors_at",{"_index":349,"title":{},"body":{"entities/Repo.html":{}}}],["last_merged_at",{"_index":147,"title":{},"body":{"entities/Contribution.html":{}}}],["leftjoinandselect(\"repo.contributions",{"_index":475,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(\"repo.user",{"_index":474,"title":{},"body":{"injectables/RepoService.html":{}}}],["length",{"_index":154,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["liability",{"_index":1079,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1076,"title":{},"body":{"license.html":{}}}],["license",{"_index":350,"title":{"license.html":{}},"body":{"entities/Repo.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1040,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1067,"title":{},"body":{"license.html":{}}}],["links",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":736,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":1122,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["live",{"_index":961,"title":{},"body":{"index.html":{}}}],["load",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["loadrelationcountandmap(\"repo.stargazerscount",{"_index":482,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.starscount",{"_index":478,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.submissionscount",{"_index":480,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.votescount",{"_index":476,"title":{},"body":{"injectables/RepoService.html":{}}}],["local",{"_index":791,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["localhost:54321",{"_index":984,"title":{},"body":{"index.html":{}}}],["locally",{"_index":983,"title":{},"body":{"index.html":{}}}],["logging",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":972,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":187,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["manytoone(undefined",{"_index":175,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["matching",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":309,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["max",{"_index":335,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(50",{"_index":342,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maximum",{"_index":325,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["memory",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":217,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1069,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1044,"title":{},"body":{"license.html":{}}}],["meta",{"_index":260,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["meta.dto",{"_index":278,"title":{},"body":{"classes/PageDto.html":{},"injectables/RepoService.html":{}}}],["meta.dto.ts",{"_index":285,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:12",{"_index":296,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:15",{"_index":298,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:18",{"_index":295,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":293,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:6",{"_index":297,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":299,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["metadata",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["migration",{"_index":906,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["migrations",{"_index":998,"title":{},"body":{"index.html":{}}}],["min",{"_index":336,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":341,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimal",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":340,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minor",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":954,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1025,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mkdocs",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":1043,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["mount",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["mounted",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":192,"title":{},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{}}}],["need",{"_index":966,"title":{},"body":{"index.html":{}}}],["nest",{"_index":850,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nestjs",{"_index":576,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/config",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["nestjs/passport",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/swagger",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{}}}],["nestjs/terminus",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["nestjs/typeorm",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{}}}],["nestjs/typeorm/dist/interfaces/typeorm",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["never",{"_index":565,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["new",{"_index":492,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":960,"title":{},"body":{"index.html":{}}}],["node",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["node>=16.7.0",{"_index":973,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1073,"title":{},"body":{"license.html":{}}}],["notable",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["notfoundexception",{"_index":412,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["notice",{"_index":1057,"title":{},"body":{"license.html":{}}}],["now",{"_index":168,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["npm",{"_index":918,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm>=8.0.0",{"_index":974,"title":{},"body":{"index.html":{}}}],["number",{"_index":157,"title":{},"body":{"entities/Contribution.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["oas3",{"_index":1100,"title":{},"body":{"properties.html":{}}}],["obtaining",{"_index":1034,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["onetomany",{"_index":391,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":356,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["open",{"_index":205,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["open_issues",{"_index":596,"title":{},"body":{"entities/User.html":{}}}],["opensauced.pizza\"}`).tostring",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operationid",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["optional",{"_index":266,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["options.dto",{"_index":433,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["options.dto.ts",{"_index":312,"title":{},"body":{"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:10",{"_index":321,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:20",{"_index":324,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":328,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":330,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.interface",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":313,"title":{},"body":{"classes/PageOptionsDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["order.asc",{"_index":317,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["orderby",{"_index":397,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["orderby(\"repo.pushed_at",{"_index":495,"title":{},"body":{"injectables/RepoService.html":{}}}],["otherwise",{"_index":1084,"title":{},"body":{"license.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["outputs",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1094,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":1021,"title":{},"body":{"index.html":{}}}],["owner",{"_index":417,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["owner}/${repo",{"_index":494,"title":{},"body":{"injectables/RepoService.html":{}}}],["package",{"_index":1097,"title":{"properties.html":{}},"body":{}}],["page",{"_index":277,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["pagecount",{"_index":289,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":256,"title":{"classes/PageDto.html":{}},"body":{"classes/PageDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagedto(entities",{"_index":502,"title":{},"body":{"injectables/RepoService.html":{}}}],["pagemetadto",{"_index":263,"title":{"classes/PageMetaDto.html":{}},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagemetadto})@validatenested()@type(undefined",{"_index":272,"title":{},"body":{"classes/PageDto.html":{}}}],["pagemetaparameters",{"_index":292,"title":{},"body":{"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["pageoptionsdto",{"_index":301,"title":{"classes/PageOptionsDto.html":{}},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pageoptionsdto.order",{"_index":496,"title":{},"body":{"injectables/RepoService.html":{}}}],["pageoptionsdto.page",{"_index":303,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.take",{"_index":305,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pages",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["paginated",{"_index":437,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginates",{"_index":423,"title":{},"body":{"controllers/RepoController.html":{}}}],["pagination",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":426,"title":{},"body":{"controllers/RepoController.html":{}}}],["param(\"id",{"_index":442,"title":{},"body":{"controllers/RepoController.html":{}}}],["param(\"owner",{"_index":445,"title":{},"body":{"controllers/RepoController.html":{}}}],["param(\"repo",{"_index":446,"title":{},"body":{"controllers/RepoController.html":{}}}],["parameters",{"_index":265,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["parameters.dto",{"_index":300,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["parameters.dto.ts",{"_index":1121,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["particular",{"_index":1071,"title":{},"body":{"license.html":{}}}],["passport",{"_index":574,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["passportmodule",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":572,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["password",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":238,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["performance",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1028,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1051,"title":{},"body":{"license.html":{}}}],["person",{"_index":1033,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1052,"title":{},"body":{"license.html":{}}}],["pipelines",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":1011,"title":{},"body":{"index.html":{}}}],["port",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":1061,"title":{},"body":{"license.html":{}}}],["powered",{"_index":1099,"title":{},"body":{"properties.html":{}}}],["prefix",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["prerequisites",{"_index":965,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["primarycolumn",{"_index":186,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn(\"bigint",{"_index":195,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn('bigint",{"_index":172,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn",{"_index":507,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["print",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":222,"title":{},"body":{"controllers/HealthController.html":{},"injectables/RepoService.html":{}}}],["proceed",{"_index":1014,"title":{},"body":{"index.html":{}}}],["process",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["process.env.domain",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.supabase_api_key",{"_index":584,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_jwt_secret",{"_index":587,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_url",{"_index":582,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["production",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":622,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":414,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["proper",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":141,"title":{"properties.html":{}},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":718,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["provided",{"_index":1062,"title":{},"body":{"license.html":{}}}],["providers",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{}}}],["public",{"_index":504,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{}}}],["publish",{"_index":1045,"title":{},"body":{"license.html":{}}}],["pull",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1072,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["push",{"_index":682,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pushed_at",{"_index":351,"title":{},"body":{"entities/Repo.html":{}}}],["query",{"_index":427,"title":{},"body":{"controllers/RepoController.html":{}}}],["querybuilder",{"_index":485,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getcount",{"_index":500,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getmany",{"_index":501,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getone",{"_index":490,"title":{},"body":{"injectables/RepoService.html":{}}}],["questions",{"_index":1016,"title":{},"body":{"index.html":{}}}],["re",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["readme",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{}}}],["received",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["referencedcolumnname",{"_index":177,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["registry",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["relations",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["relationship",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":632,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remote",{"_index":1001,"title":{},"body":{"index.html":{}}}],["remove",{"_index":927,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["repo",{"_index":42,"title":{"entities/Repo.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo'})@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":418,"title":{},"body":{"controllers/RepoController.html":{}}}],["repo.contributions",{"_index":196,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.contributions)@joincolumn({name",{"_index":176,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.controller",{"_index":455,"title":{},"body":{"modules/RepoModule.html":{}}}],["repo.entity",{"_index":430,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouserstargazers",{"_index":483,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{}}}],["repo.repotouserstargazers)@joincolumn({name",{"_index":509,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["repo.repotouserstars",{"_index":479,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{}}}],["repo.repotouserstars)@joincolumn({name",{"_index":522,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["repo.repotousersubmissions",{"_index":481,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserSubmissions.html":{}}}],["repo.repotousersubmissions)@joincolumn({name",{"_index":535,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["repo.repotouservotes",{"_index":477,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouservotes)@joincolumn({name",{"_index":548,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["repo.service",{"_index":429,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{}}}],["repo.to.user.stargazers.entity",{"_index":395,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.stars.entity",{"_index":393,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.submissions.entity",{"_index":394,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.votes.entity",{"_index":392,"title":{},"body":{"entities/Repo.html":{}}}],["repo.user",{"_index":604,"title":{},"body":{"entities/User.html":{}}}],["repo/repo.entity",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/User.html":{}}}],["repo/repo.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["repo/repo.to.user.stargazers.entity",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.stars.entity",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.submissions.entity",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.votes.entity",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo_id",{"_index":148,"title":{},"body":{"entities/Contribution.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["repocontroller",{"_index":402,"title":{"controllers/RepoController.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"coverage.html":{}}}],["repomodule",{"_index":9,"title":{"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["reporepository",{"_index":464,"title":{},"body":{"injectables/RepoService.html":{}}}],["repos",{"_index":396,"title":{},"body":{"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/User.html":{},"changelog.html":{}}}],["reposervice",{"_index":428,"title":{"injectables/RepoService.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"coverage.html":{},"overview.html":{}}}],["repository",{"_index":462,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["repotouserstargazers",{"_index":54,"title":{"entities/RepoToUserStargazers.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstargazers.repo",{"_index":375,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstargazers.user",{"_index":606,"title":{},"body":{"entities/User.html":{}}}],["repotouserstars",{"_index":50,"title":{"entities/RepoToUserStars.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstars.repo",{"_index":377,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstars.user",{"_index":608,"title":{},"body":{"entities/User.html":{}}}],["repotousersubmissions",{"_index":52,"title":{"entities/RepoToUserSubmissions.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserSubmissions.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotousersubmissions.repo",{"_index":379,"title":{},"body":{"entities/Repo.html":{}}}],["repotousersubmissions.user",{"_index":610,"title":{},"body":{"entities/User.html":{}}}],["repotouservotes",{"_index":48,"title":{"entities/RepoToUserVotes.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouservotes.repo",{"_index":381,"title":{},"body":{"entities/Repo.html":{}}}],["repotouservotes.user",{"_index":612,"title":{},"body":{"entities/User.html":{}}}],["repo})@apinotfoundresponse({type",{"_index":411,"title":{},"body":{"controllers/RepoController.html":{}}}],["req",{"_index":567,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["request",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["requirements",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"index.html":{},"overview.html":{}}}],["response.decorator",{"_index":438,"title":{},"body":{"controllers/RepoController.html":{}}}],["response.decorator.ts",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["restriction",{"_index":1038,"title":{},"body":{"license.html":{}}}],["results",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["revert",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1041,"title":{},"body":{"license.html":{}}}],["rogue",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":739,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runner",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["sauced",{"_index":206,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["sauced/api.opensauced.pizza",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["sauced/api.opensauced.pizza#readme",{"_index":1110,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza.git",{"_index":1114,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza/issues",{"_index":1112,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":1006,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scoping",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1005,"title":{},"body":{"index.html":{}}}],["select",{"_index":179,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"changelog.html":{}}}],["select(['repo.id",{"_index":473,"title":{},"body":{"injectables/RepoService.html":{}}}],["sell",{"_index":1049,"title":{},"body":{"license.html":{}}}],["service",{"_index":201,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["shall",{"_index":1058,"title":{},"body":{"license.html":{}}}],["simple",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["simplest",{"_index":996,"title":{},"body":{"index.html":{}}}],["skip",{"_index":315,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["skip(pageoptionsdto.skip",{"_index":497,"title":{},"body":{"injectables/RepoService.html":{}}}],["soft",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":968,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"index.html":{}}}],["spec",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["src/.../api",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoint.config.ts",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":959,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.constant.ts",{"_index":956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../page",{"_index":1120,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:17",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/supabase.guard.ts",{"_index":557,"title":{},"body":{"injectables/SupabaseGuard.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts",{"_index":560,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts:11",{"_index":563,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:22",{"_index":571,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:26",{"_index":566,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/common/constants/order.constant.ts",{"_index":957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/decorators/api",{"_index":942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/page",{"_index":284,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/dtos/page.dto.ts",{"_index":258,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts:11",{"_index":270,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dtos/page.dto.ts:16",{"_index":264,"title":{},"body":{"classes/PageDto.html":{}}}],["src/config/endpoint.config.ts",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contribution/contribution.entity.ts",{"_index":140,"title":{},"body":{"entities/Contribution.html":{},"coverage.html":{}}}],["src/contribution/contribution.entity.ts:19",{"_index":173,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:25",{"_index":180,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:31",{"_index":161,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:36",{"_index":174,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:42",{"_index":169,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:48",{"_index":182,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:53",{"_index":171,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:59",{"_index":156,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:65",{"_index":183,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:72",{"_index":178,"title":{},"body":{"entities/Contribution.html":{}}}],["src/health/health.controller.ts",{"_index":198,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":208,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":212,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":254,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":948,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/repo/repo.controller.ts",{"_index":403,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{}}}],["src/repo/repo.controller.ts:22",{"_index":413,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:36",{"_index":419,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:51",{"_index":425,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.entity.ts",{"_index":343,"title":{},"body":{"entities/Repo.html":{},"coverage.html":{}}}],["src/repo/repo.entity.ts:104",{"_index":363,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:107",{"_index":362,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:113",{"_index":369,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:119",{"_index":372,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:125",{"_index":386,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:132",{"_index":388,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:135",{"_index":358,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:138",{"_index":382,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:141",{"_index":378,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:144",{"_index":380,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:147",{"_index":376,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:30",{"_index":364,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:36",{"_index":389,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:42",{"_index":367,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:48",{"_index":383,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:54",{"_index":390,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:60",{"_index":384,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:63",{"_index":366,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:69",{"_index":359,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:75",{"_index":385,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:81",{"_index":374,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:87",{"_index":371,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:92",{"_index":360,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:98",{"_index":373,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.module.ts",{"_index":454,"title":{},"body":{"modules/RepoModule.html":{}}}],["src/repo/repo.service.ts",{"_index":459,"title":{},"body":{"injectables/RepoService.html":{},"coverage.html":{}}}],["src/repo/repo.service.ts:11",{"_index":463,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:17",{"_index":465,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:28",{"_index":468,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:43",{"_index":469,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:60",{"_index":467,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts",{"_index":503,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:21",{"_index":508,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:24",{"_index":515,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:27",{"_index":511,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:33",{"_index":505,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:39",{"_index":512,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:44",{"_index":506,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:51",{"_index":514,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:58",{"_index":510,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stars.entity.ts",{"_index":518,"title":{},"body":{"entities/RepoToUserStars.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:21",{"_index":521,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:24",{"_index":528,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:27",{"_index":524,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:33",{"_index":519,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:39",{"_index":525,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:44",{"_index":520,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:51",{"_index":527,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:58",{"_index":523,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts",{"_index":531,"title":{},"body":{"entities/RepoToUserSubmissions.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:21",{"_index":534,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:24",{"_index":541,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:27",{"_index":537,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:33",{"_index":532,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:39",{"_index":538,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:44",{"_index":533,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:51",{"_index":540,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:58",{"_index":536,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.votes.entity.ts",{"_index":544,"title":{},"body":{"entities/RepoToUserVotes.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:21",{"_index":547,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:24",{"_index":554,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:27",{"_index":550,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:33",{"_index":545,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:39",{"_index":551,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:44",{"_index":546,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:51",{"_index":553,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:58",{"_index":549,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/user/user.entity.ts",{"_index":592,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:22",{"_index":600,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:28",{"_index":603,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:31",{"_index":599,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:34",{"_index":602,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:37",{"_index":601,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:43",{"_index":597,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:49",{"_index":614,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:54",{"_index":598,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:57",{"_index":605,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:60",{"_index":613,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:63",{"_index":609,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:66",{"_index":611,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:69",{"_index":607,"title":{},"body":{"entities/User.html":{}}}],["stable",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["stars",{"_index":352,"title":{},"body":{"entities/Repo.html":{}}}],["starscount",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":982,"title":{},"body":{"index.html":{}}}],["started",{"_index":617,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":978,"title":{},"body":{"index.html":{}}}],["statements",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"changelog.html":{}}}],["strategy",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"miscellaneous/variables.html":{}}}],["string})@httpcode(httpstatus.ok",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["structure",{"_index":829,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["structured",{"_index":1105,"title":{},"body":{"properties.html":{}}}],["studio",{"_index":979,"title":{},"body":{"index.html":{}}}],["styles",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["subdomain",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":1054,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1047,"title":{},"body":{"license.html":{}}}],["submission",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["subscribers",{"_index":353,"title":{},"body":{"entities/Repo.html":{}}}],["substantial",{"_index":1060,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summary",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["supabase",{"_index":577,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["supabase.guard",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["supabase.strategy",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["supabase/supabase",{"_index":578,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabase>=0.18.0",{"_index":976,"title":{},"body":{"index.html":{}}}],["supabaseauthstrategy",{"_index":575,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseguard",{"_index":117,"title":{"injectables/SupabaseGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/SupabaseGuard.html":{},"coverage.html":{},"overview.html":{}}}],["supabasejwtsecret",{"_index":586,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasekey",{"_index":583,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseoptions",{"_index":585,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasestrategy",{"_index":132,"title":{"injectables/SupabaseStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":581,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super",{"_index":580,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.authenticate(req",{"_index":591,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.validate(user",{"_index":590,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["support",{"_index":1089,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1090,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":262,"title":{},"body":{"classes/PageDto.html":{}}}],["table",{"_index":953,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["tagging",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":290,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["take(pageoptionsdto.take",{"_index":498,"title":{},"body":{"injectables/RepoService.html":{}}}],["target",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["tech",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["ted",{"_index":1116,"title":{},"body":{"properties.html":{}}}],["temporary",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":749,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["them'})@httpcode(httpstatus.ok)@apipaginatedresponse(repo)@apiokresponse({type",{"_index":424,"title":{},"body":{"controllers/RepoController.html":{}}}],["thing",{"_index":981,"title":{},"body":{"index.html":{}}}],["this.basequerybuilder",{"_index":486,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":237,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":240,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":232,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":234,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.data",{"_index":282,"title":{},"body":{"classes/PageDto.html":{}}}],["this.database.pingcheck(\"db",{"_index":230,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":239,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":235,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hasnextpage",{"_index":311,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":310,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.health.check",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.itemcount",{"_index":307,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":231,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":233,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.meta",{"_index":283,"title":{},"body":{"classes/PageDto.html":{}}}],["this.page",{"_index":302,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":308,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.reporepository.createquerybuilder(\"repo",{"_index":472,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.reposervice.findall(pageoptionsdto",{"_index":450,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.reposervice.findonebyid(id",{"_index":443,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.reposervice.findonebyownerandrepo(owner",{"_index":447,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.take",{"_index":304,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["thresholdpercent",{"_index":236,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":491,"title":{},"body":{"injectables/RepoService.html":{}}}],["time",{"_index":166,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["timestamp",{"_index":164,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["tld",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["tmodel",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_timestamp(0",{"_index":370,"title":{},"body":{"entities/Repo.html":{}}}],["token",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1083,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":279,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["true",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"classes/PageDto.html":{}}}],["true})@type(undefined",{"_index":269,"title":{},"body":{"classes/PageDto.html":{}}}],["true})@validatenested({each",{"_index":268,"title":{},"body":{"classes/PageDto.html":{}}}],["type",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1118,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{}}}],["typeormhealthindicator",{"_index":215,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{}}}],["typeormmodule.forfeature([repo",{"_index":456,"title":{},"body":{"modules/RepoModule.html":{}}}],["typeormmodule.forrootasync",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["undefined})@isenum(order)@isoptional",{"_index":320,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["unknown",{"_index":209,"title":{},"body":{"controllers/HealthController.html":{},"injectables/SupabaseStrategy.html":{}}}],["up",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["updated_at",{"_index":149,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["updatedatecolumn",{"_index":191,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["updatedatecolumn({type",{"_index":181,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["url",{"_index":150,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"changelog.html":{}}}],["url(`https://${subdomain",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urls",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":1042,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(supabaseguard",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":44,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["user.repos",{"_index":401,"title":{},"body":{"entities/Repo.html":{}}}],["user.repos)@joincolumn({name",{"_index":387,"title":{},"body":{"entities/Repo.html":{}}}],["user.repotouserstargazers",{"_index":517,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["user.repotouserstargazers)@joincolumn({name",{"_index":513,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["user.repotouserstars",{"_index":530,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotouserstars)@joincolumn({name",{"_index":526,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotousersubmissions",{"_index":543,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["user.repotousersubmissions)@joincolumn({name",{"_index":539,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["user.repotouservotes",{"_index":556,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user.repotouservotes)@joincolumn({name",{"_index":552,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user/user.entity",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["user_id",{"_index":354,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["username",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":615,"title":{},"body":{"entities/User.html":{}}}],["users_to_repos_stargazers",{"_index":516,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["users_to_repos_stars",{"_index":529,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["users_to_repos_submissions",{"_index":542,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["users_to_repos_votes",{"_index":555,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["validate",{"_index":562,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validate(user",{"_index":569,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validatenested",{"_index":275,"title":{},"body":{"classes/PageDto.html":{}}}],["validator",{"_index":276,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["value",{"_index":316,"title":{},"body":{"classes/PageOptionsDto.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":719,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":703,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":153,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["verify",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":852,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versiond",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":1020,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1024,"title":{},"body":{"index.html":{}}}],["visually",{"_index":987,"title":{},"body":{"index.html":{}}}],["void",{"_index":568,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["volume",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["volumes",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["vortex",{"_index":1117,"title":{},"body":{"properties.html":{}}}],["vortex/api.opensauced.pizza",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["votescount",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1068,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1063,"title":{},"body":{"license.html":{}}}],["watchers",{"_index":355,"title":{},"body":{"entities/Repo.html":{}}}],["way",{"_index":997,"title":{},"body":{"index.html":{}}}],["web",{"_index":202,"title":{},"body":{"controllers/HealthController.html":{}}}],["where(\"repo.full_name",{"_index":493,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(\"repo.id",{"_index":487,"title":{},"body":{"injectables/RepoService.html":{}}}],["whether",{"_index":1080,"title":{},"body":{"license.html":{}}}],["without",{"_index":165,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"license.html":{}}}],["workflow",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":999,"title":{},"body":{"index.html":{}}}],["yaml",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":1022,"title":{},"body":{"index.html":{}}}],["zone",{"_index":167,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            RepoModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm/dist/interfaces/typeorm-options.interface\";\nimport { DataSource } from \"typeorm\";\n\nimport { RepoModule } from \"./repo/repo.module\";\nimport apiConfig from \"./config/api.config\";\nimport dbConfig from \"./config/database.config\";\nimport endpointConfig from \"./config/endpoint.config\";\nimport { HealthModule } from \"./health/health.module\";\nimport { Repo } from \"./repo/repo.entity\";\nimport { User } from \"./user/user.entity\";\nimport { Contribution } from \"./contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo/repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"./repo/repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"./repo/repo.to.user.stargazers.entity\";\nimport { AuthModule } from \"./auth/auth.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        apiConfig,\n        dbConfig,\n        endpointConfig\n      ],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\"db.connection\"),\n        host: configService.get(\"db.host\"),\n        port: configService.get(\"db.port\"),\n        username: configService.get(\"db.username\"),\n        password: configService.get(\"db.password\"),\n        database: configService.get(\"db.database\"),\n        autoLoadEntities: false,\n        entities: [\n          User,\n          Repo,\n          Contribution,\n          RepoToUserVotes,\n          RepoToUserStars,\n          RepoToUserSubmissions,\n          RepoToUserStargazers,\n        ],\n        synchronize: false,\n      }),\n      inject: [ConfigService],\n    }),\n    TerminusModule,\n    HttpModule,\n    AuthModule,\n    HealthModule,\n    RepoModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  constructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/status')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'checkAuthStatus', summary: 'Check the status of JWT based authentication'})@ApiOkResponse({type: String})@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, UseGuards } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { SupabaseGuard } from \"./supabase.guard\";\n\n@ApiTags(\"Authentication\")\n@Controller(\"auth\")\nexport class AuthController {\n  @Get(\"/status\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"checkAuthStatus\",\n    summary: \"Check the status of JWT based authentication\",\n  })\n  @ApiOkResponse({ type: String })\n  @HttpCode(HttpStatus.OK)\n  getHello(): string {\n    console.log(\"SupabaseGuard\");\n\n    return \"1\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseStrategy } from \"./supabase.strategy\";\nimport { AuthController } from \"./auth.controller\";\n\n@Module({\n  imports: [PassportModule],\n  providers: [SupabaseStrategy, SupabaseGuard],\n  exports: [SupabaseStrategy, SupabaseGuard],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Contribution.html":{"url":"entities/Contribution.html","title":"entity - Contribution","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Contribution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributor\n                            \n                            \n                                count\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                id\n                            \n                            \n                                last_merged_at\n                            \n                            \n                                repo\n                            \n                            \n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_merged_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.contributions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:65\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  ManyToOne,\n  JoinColumn,\n  DeleteDateColumn,\n  CreateDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { Repo } from \"../repo/repo.entity\";\n\n@Entity({\n  name: \"contributions\"\n})\nexport class Contribution extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  repo_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  count: number;\n\n  @Column({\n    type: \"timestamp without time zone\"\n  })\n  last_merged_at: Date;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  contributor: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => Repo, (repo) => repo.contributions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  repo: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@ApiTags(\"Health\")\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service() {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\"),\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\"),\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web() {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, ValidateNested } from \"class-validator\";\nimport { PageMetaDto } from \"./page-meta.dto\";\nimport { Type } from \"class-transformer\";\n\nexport class PageDto {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  @ValidateNested({ each: true })\n  @Type(() => Array)\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PageMetaDto })\n  @ValidateNested()\n  @Type(() => PageMetaDto)\n  readonly meta: PageMetaDto;\n\n  constructor(data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { PageMetaParameters } from \"./page-meta-parameters.dto\";\n\nexport class PageMetaDto {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: PageMetaParameters) {\n    this.page = pageOptionsDto.page || 1;\n    this.take = pageOptionsDto.take || 10;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Order, enumName: 'Order', default: undefined})@IsEnum(Order)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dtos/page-options.dto.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEnum, IsInt, IsOptional, Max, Min } from \"class-validator\";\nimport { Order } from \"../constants/order.constant\";\n\nexport class PageOptionsDto {\n  @ApiPropertyOptional({ enum: Order, enumName: \"Order\", default: Order.ASC })\n  @IsEnum(Order)\n  @IsOptional()\n  readonly order?: Order = Order.ASC;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 50,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(50)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return ((this.page || 1) - 1) * (this.take || 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Repo.html":{"url":"entities/Repo.html","title":"entity - Repo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Repo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributions\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                description\n                            \n                            \n                                full_name\n                            \n                            \n                                id\n                            \n                            \n                                is_fork\n                            \n                            \n                                issues\n                            \n                            \n                                language\n                            \n                            \n                                last_fetched_contributors_at\n                            \n                            \n                                license\n                            \n                            \n                                name\n                            \n                            \n                                pushed_at\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                stars\n                            \n                            \n                                subscribers\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                            \n                                user_id\n                            \n                            \n                                watchers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contribution[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, contribution => contribution.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_fork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_fetched_contributors_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => to_timestamp(0)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        license\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repos)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  JoinColumn,\n  ManyToOne,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  DeleteDateColumn\n} from \"typeorm\";\n\nimport { User } from \"../user/user.entity\";\nimport { Contribution } from \"../contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"./repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"./repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"repos\",\n  orderBy: {\n    stars: \"DESC\",\n    name: \"ASC\"\n  }\n})\nexport class Repo extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  user_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  issues: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  stars: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  watchers: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  subscribers: number;\n\n  @Column({ default: false })\n  is_fork: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  pushed_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"to_timestamp(0)\",\n  })\n  last_fetched_contributors_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  name: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  full_name: string;\n\n  @Column(\"text\")\n  description: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  language: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  license: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => User, user => user.repos)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  user: User;\n\n  @OneToMany(() => Contribution, contribution => contribution.repo)\n  contributions: Contribution[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.repo)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.repo)\n  repoToUserStars: RepoToUserStars[];\n\n  @OneToMany(() => RepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.repo)\n  repoToUserSubmissions: RepoToUserSubmissions[];\n\n  @OneToMany(() => RepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.repo)\n  repoToUserStargazers: RepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoController.html":{"url":"controllers/RepoController.html","title":"controller - RepoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'findOneById', summary: 'Finds a repo by :id'})@HttpCode(HttpStatus.OK)@ApiOkResponse({type: Repo})@ApiNotFoundResponse({type: NotFoundException})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:owner/:repo')@ApiOperation({operationId: 'findOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo'})@HttpCode(HttpStatus.OK)@ApiOkResponse({type: Repo})@ApiNotFoundResponse({type: NotFoundException})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserList\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserList(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@ApiOperation({operationId: 'findAll', summary: 'Finds all repos and paginates them'})@HttpCode(HttpStatus.OK)@ApiPaginatedResponse(Repo)@ApiOkResponse({type: Repo})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, NotFoundException, Param, Query } from \"@nestjs/common\";\nimport { RepoService } from \"./repo.service\";\nimport { Repo } from \"./repo.entity\";\nimport { ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repositories\")\nexport class RepoController {\n  constructor(private readonly repoService: RepoService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"findOneById\",\n    summary: \"Finds a repo by :id\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: Repo })\n  @ApiNotFoundResponse({ type: NotFoundException })\n  async findOneById(\n    @Param(\"id\") id: number,\n  ): Promise {\n    return this.repoService.findOneById(id);\n  }\n\n  @Get(\"/:owner/:repo\")\n  @ApiOperation({\n    operationId: \"findOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: Repo })\n  @ApiNotFoundResponse({ type: NotFoundException })\n  async findOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n  ): Promise {\n    return this.repoService.findOneByOwnerAndRepo(owner, repo);\n  }\n\n  @Get(\"/list\")\n  @ApiOperation({\n    operationId: \"findAll\",\n    summary: \"Finds all repos and paginates them\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiPaginatedResponse(Repo)\n  @ApiOkResponse({ type: Repo })\n  async findUserList(\n    @Query() pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepoModule.html":{"url":"modules/RepoModule.html","title":"module - RepoModule","body":"\n                   \n\n\n\n\n    Modules\n    RepoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_providers\n\n\n\ncluster_RepoModule_exports\n\n\n\n\nRepoService \n\nRepoService \n\n\n\nRepoModule\n\nRepoModule\n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/repo/repo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepoService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { RepoService } from \"./repo.service\";\nimport { RepoController } from \"./repo.controller\";\nimport { Repo } from \"./repo.entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Repo])],\n  controllers: [RepoController],\n  providers: [RepoService],\n  exports: [RepoService],\n})\nexport class RepoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepoService.html":{"url":"injectables/RepoService.html","title":"injectable - RepoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/repo/repo.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { Repo } from \"./repo.entity\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Injectable()\nexport class RepoService {\n  constructor(\n    @InjectRepository(Repo)\n    private repoRepository: Repository,\n  ) {}\n\n  baseQueryBuilder() {\n    return this.repoRepository.createQueryBuilder(\"repo\")\n      // .select(['repo.id'])\n      .leftJoinAndSelect(\"repo.user\", \"user\")\n      .leftJoinAndSelect(\"repo.contributions\", \"contributions\")\n      .loadRelationCountAndMap(\"repo.votesCount\", \"repo.repoToUserVotes\")\n      .loadRelationCountAndMap(\"repo.starsCount\", \"repo.repoToUserStars\")\n      .loadRelationCountAndMap(\"repo.submissionsCount\", \"repo.repoToUserSubmissions\")\n      .loadRelationCountAndMap(\"repo.stargazersCount\", \"repo.repoToUserStargazers\");\n  }\n\n  async findOneById(id: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.id = :id\", { id });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findOneByOwnerAndRepo(owner: string, repo: string): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.full_name = :name\", {\n        name: `${owner}/${repo}`\n      });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findAll(\n    pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .orderBy(\"repo.pushed_at\", pageOptionsDto.order)\n      .skip(pageOptionsDto.skip)\n      .take(pageOptionsDto.take);\n\n    // console.log(builder.getSql());\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStargazers.html":{"url":"entities/RepoToUserStargazers.html","title":"entity - RepoToUserStargazers","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStargazers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.stargazers.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStargazers)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStargazers)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stargazers\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserStargazers {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStargazers)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStargazers)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStars.html":{"url":"entities/RepoToUserStars.html","title":"entity - RepoToUserStars","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStars\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.stars.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStars)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStars)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stars\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserStars {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStars)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStars)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserSubmissions.html":{"url":"entities/RepoToUserSubmissions.html","title":"entity - RepoToUserSubmissions","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserSubmissions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.submissions.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserSubmissions)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserSubmissions)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_submissions\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserSubmissions {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserVotes.html":{"url":"entities/RepoToUserVotes.html","title":"entity - RepoToUserVotes","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserVotes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.votes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserVotes)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserVotes)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_votes\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserVotes {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserVotes)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserVotes)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseGuard.html":{"url":"injectables/SupabaseGuard.html","title":"injectable - SupabaseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class SupabaseGuard extends AuthGuard(\"supabase\") {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseStrategy.html":{"url":"injectables/SupabaseStrategy.html","title":"injectable - SupabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/supabase.strategy.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(req: never)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(user: AuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { SupabaseAuthStrategy } from \"nestjs-supabase-auth\";\nimport { AuthUser } from \"@supabase/supabase-js\";\n\n@Injectable()\nexport class SupabaseStrategy extends PassportStrategy(\n  SupabaseAuthStrategy,\n  \"supabase\",\n) {\n  public constructor() {\n    super({\n      supabaseUrl: process.env.SUPABASE_URL,\n      supabaseKey: process.env.SUPABASE_API_KEY,\n      supabaseOptions: {},\n      supabaseJwtSecret: process.env.SUPABASE_JWT_SECRET,\n      extractor: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate(user: AuthUser) {\n    return super.validate(user);\n  }\n\n  authenticate(req: never) {\n    super.authenticate(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                has_stars_data\n                            \n                            \n                                id\n                            \n                            \n                                is_open_sauced_member\n                            \n                            \n                                is_private\n                            \n                            \n                                open_issues\n                            \n                            \n                                repos\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has_stars_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_open_sauced_member\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open_issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repo => repo.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  OneToMany,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { Repo } from \"../repo/repo.entity\";\nimport { RepoToUserVotes } from \"../repo/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"../repo/repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"../repo/repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"../repo/repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"users\"\n})\nexport class User extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  open_issues: number;\n\n  @Column({ default: false })\n  has_stars_data: boolean;\n\n  @Column({ default: false })\n  is_private: boolean;\n\n  @Column({ default: false })\n  is_open_sauced_member: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @OneToMany(() => Repo, repo => repo.user)\n  repos: Repo[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.user)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.user)\n  repoToUserStars: RepoToUserStars[];\n\n  @OneToMany(() => RepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.user)\n  repoToUserSubmissions: RepoToUserSubmissions[];\n\n  @OneToMany(() => RepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.user)\n  repoToUserStargazers: RepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.8.2 (2022-08-12)\n🐛 Bug Fixes\n\ncorrect ci release url docs (f0304d4)\n\n1.8.1 (2022-08-12)\n🔁 Continuous Integration\n\nimprove release urls (dd5e668)\n\n1.8.0 (2022-08-12)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\nupdate readme badges (17c54b9)\n\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\nadd get repository by id and full name (4552c66)\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.5 (2022-08-06)\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.4 (2022-08-06)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\n\n1.8.0-beta.3 (2022-08-05)\n🍕 Features\n\nadd get repository by id and full name (4552c66)\n\n1.8.0-beta.2 (2022-08-05)\n🍕 Features\n\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n1.8.0-beta.1 (2022-07-30)\n📝 Documentation\n\nupdate readme badges (17c54b9)\n\n1.7.12 (2022-07-30)\n🐛 Bug Fixes\n\npush all tags to docr (a9e1df6)\n\n1.7.11 (2022-07-30)\n🔁 Continuous Integration\n\npush to digital ocean container registry (cd8f21d)\n\n1.7.10 (2022-07-30)\n🔁 Continuous Integration\n\ncorrect the digital ocean tagging (673dca9)\n\n1.7.9 (2022-07-30)\n✅ Tests\n\ncheck release job outputs (31e4d60)\n\n1.7.8 (2022-07-29)\n🔁 Continuous Integration\n\ncorrect environment variables (6d23c24)\n\n1.7.7 (2022-07-29)\n✅ Tests\n\nprint out proper pull request target env variables (20880c7)\n\n1.7.6 (2022-07-29)\n🔁 Continuous Integration\n\necho github context (7adfb6b)\n\n1.7.5 (2022-07-29)\n🔁 Continuous Integration\n\nprovide variable as ENV (b57f47b)\n\n1.7.4 (2022-07-29)\n🔁 Continuous Integration\n\nchange pull request event target (20bc1e7)\n\n1.7.3 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect digital ocean docker tag based on target (b1a67da)\n\n1.7.2 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect static domain and release clean up workflow (a229a3b)\nupdate dependencies and list docr tags (79bf61d)\n\n🔁 Continuous Integration\n\nadd docr push dry run (5eddeb1)\nadd release workflow concurrency for demo purposes (63d6a92)\nextend digital ocean temporary token (d0d5ca5)\ntest bash variable environment (e1fe498)\n\n1.7.1 (2022-07-27)\n🔁 Continuous Integration\n\ndeploy developer mkdocs to github pages test (8837b2a)\n\n1.7.0 (2022-07-27)\n📝 Documentation\n\nchange github pages deploy to take tech mkdocs instead of api (bc3a37d)\n\n1.6.17 (2022-07-24)\n🔁 Continuous Integration\n\nadd temporary debug logging (ba8dfbb)\n\n1.6.16 (2022-07-23)\n🔁 Continuous Integration\n\nproperly copy contents from mounted container volume (c013b70)\n\n1.6.15 (2022-07-23)\n🔁 Continuous Integration\n\ncreate new container from release (b1eda28)\n\n1.6.14 (2022-07-23)\n🔁 Continuous Integration\n\ntest file is generated properly (c127cea)\n\n🤖 Build System\n\nattempt docker inspection again (2c0b3d1)\n\n1.6.13 (2022-07-23)\n🔁 Continuous Integration\n\ntest proper container name exposing (cc46460)\n\n1.6.12 (2022-07-23)\n🔁 Continuous Integration\n\ntest local swagger spec (7e9b8a4)\n\n1.6.11 (2022-07-21)\n🔁 Continuous Integration\n\ntest getting docker process list output (f5385b3)\n\n1.6.10 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to get value from running container (911df68)\ntest accessing running container by re-creating (77c734c)\n\n1.6.9 (2022-07-21)\n🔁 Continuous Integration\n\nget container name from runner context (94ba4e1)\n\n1.6.8 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to assign docker service name to running container (fe4b9e9)\n\n1.6.7 (2022-07-21)\n✅ Tests\n\nmount docker service and volumes (0848443)\n\n1.6.6 (2022-07-21)\n✅ Tests\n\nload docker container from artifact (b7c3395)\n\n1.6.5 (2022-07-21)\n🐛 Bug Fixes\n\ncorrect docker local creation (cd306f8)\n\n1.6.4 (2022-07-21)\n✅ Tests\n\nload docker container in flight environment (e145e2d)\n\n1.6.3 (2022-07-20)\n🤖 Build System\n\nupdate deployment and add simple repo submission structure (33fea7e)\n\n1.6.2 (2022-07-19)\n🤖 Build System\n\nrevert to production release container (8aee8e5)\n\n1.6.1 (2022-07-19)\n🤖 Build System\n\nimprove swagger generation (22d3cc1)\n\n🐛 Bug Fixes\n\ncorrect workflow yaml comments (7fe63aa)\n\n1.6.0 (2022-07-19)\n🎨 Styles\n\nimplement correct eslint rules for immediate scoping (bd6d621), closes #1\n\n🍕 Features\n\nupdate dependencies and nest to stable new version (c24937f)\n\n🔁 Continuous Integration\n\nadd docker build and static swagger docs jobs (81e8bbc)\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n🤖 Build System\n\nadd better eslint baseline configuration (3918a78)\nadd minimal eslint configuration (a0db0aa)\nadd minor deployment improvements and github pages adjustments (cb83f9d)\nimplement prettier rules in typescript eslint (166050d)\n\n🐛 Bug Fixes\n\ncorrect release workflow artifact strategy (b5b6ac5)\ncorrect rogue workflow artifact (61b67d5)\n\n1.5.1 (2022-07-13)\n🔁 Continuous Integration\n\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n📦 0-vortex/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.5.0 (2022-06-21)\n🍕 Features\n\nimplement proper starsCount (fdc11ea)\nimplement proper votesCount (607cf5d)\n\n1.4.0 (2022-06-17)\n🍕 Features\n\nadd minimal pagination decorator (ac31556)\n\n1.3.0 (2022-06-10)\n🍕 Features\n\nadd abstract pagination component (630f3b5)\nadd repository relations and limit select (b4d3785)\n\n1.2.0 (2022-06-09)\n🍕 Features\n\nattach user relationship to get repos (e663170)\n\n1.1.0 (2022-06-07)\n🍕 Features\n\nadd basic tld entities (273f337)\n\n1.0.2 (2022-06-05)\n🤖 Build System\n\nadd supabase migration system (34d521d)\n\n1.0.1 (2022-06-05)\n✅ Tests\n\nverify database diagrams generation (73d1c74)\n\n1.0.0 (2022-06-05)\n🍕 Features\n\nadjust health checks endpoints (cb9206d)\ninitial commit (5e7c6c7)\n\n🐛 Bug Fixes\n\ncorrect npm scripts, workflow node versiond and update deps (2c0b15f)\nupdate nest typeorm integration and correct db status (58bf922)\n\n🔥 Performance Improvements\n\nremove minor version engines requirements (7db9008)\n\n✅ Tests\n\nexplain current test configuration and unblock pipelines (272c09a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/supabase.guard.ts\n            \n            injectable\n            SupabaseGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.strategy.ts\n            \n            injectable\n            SupabaseStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/dtos/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/endpoint.config.ts\n            \n            variable\n            getDomain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.entity.ts\n            \n            entity\n            Contribution\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.controller.ts\n            \n            controller\n            RepoController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repo/repo.entity.ts\n            \n            entity\n            Repo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.service.ts\n            \n            injectable\n            RepoService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.stargazers.entity.ts\n            \n            entity\n            RepoToUserStargazers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.stars.entity.ts\n            \n            entity\n            RepoToUserStars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.submissions.entity.ts\n            \n            entity\n            RepoToUserSubmissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.votes.entity.ts\n            \n            entity\n            RepoToUserVotes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../order.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/order.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        Order\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n  🍕 Open Sauced Nest Supabase API🍕\n  The path to your next Open Source contribution\n\n\n\n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n🚀 Live release environments\n\napi.opensauced.pizza\nbeta.api.opensauced.pizza\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=16.7.0\nnpm>=8.0.0\ndocker>=20.10.12\nsupabase>=0.18.0\n\n🔑 Database commands\nStarting the Supabase Studio\nFirst thing we have to do for local development is start the studio locally at localhost:54321:\nnpm run db:startMake changes\nIf we are adding a new table structure, first do it visually in the Supabase Studio and test locally.\nCheck the migration difference with the following command:\nnpm run db:changesIf everything is fine we can run the following command to apply the changes to the database:\nnpm run db:commit add_table_nameTest changes\nSimplest way to test the migrations are working is to reset the local database:\nnpm run db:resetPush changes\nIf everything is fine we can push the changes to the remote database:\nnpm run db:push🔑 Supabase structure\nClick the image to see the schema diagram full documentation.\n\n🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.8.2\n        \n            Description : API dot Open Sauced is NestJS and SupaBase powered OAS3 backend designed to remove client complexity and provide a structured graph of all @open-sauced integrations\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/api.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/api.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/api.opensauced.pizza.git\n        \n            Author : TED Vortex \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageMetaParameters   (src/.../page-meta-parameters.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/dtos/page-meta-parameters.dto.ts\n    \n    \n        \n            \n                \n                    \n                    PageMetaParameters\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            getDomain   (src/.../endpoint.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  model: TModel,\n) => {\n  return applyDecorators(\n    ApiExtraModels(PageDto, Repo),\n    ApiOkResponse({\n      description: \"Successfully received model list\",\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PageDto) },\n          {\n            properties: {\n              data: {\n                type: \"array\",\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/config/endpoint.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (subdomain?: string) =>\n  new URL(`https://${subdomain ? `${subdomain}.` : \"\" }${process.env.DOMAIN || \"opensauced.pizza\"}`).toString()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
