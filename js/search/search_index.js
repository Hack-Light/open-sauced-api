var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.259,1,1.93]],["body/modules/AppModule.html",[0,1.532,1,3.414,2,1.196,3,2.092,4,2.193,5,2.193,6,2.894,7,0.039,8,2.894,9,2.35,10,1.477,11,1.196,12,0.48,13,0.427,14,0.376,15,2.657,16,2.728,17,1.074,18,1.082,19,2.193,20,1.888,21,3.762,22,3.92,23,2.193,24,3.762,25,2.657,26,3.105,27,1.888,28,2.657,29,2.657,30,2.657,31,4.367,32,1.082,33,2.657,34,3.762,35,2.657,36,3.762,37,2.657,38,3.762,39,2.657,40,2.657,41,0.938,42,1.888,43,1.261,44,1.66,45,1.877,46,2.193,47,1.877,48,2.193,49,1.877,50,2.193,51,2.657,52,2.193,53,2.657,54,2.193,55,2.657,56,2.657,57,0.537,58,2.657,59,2.657,60,2.657,61,2.657,62,2.657,63,2.657,64,2.657,65,2.657,66,2.657,67,1.66,68,2.657,69,2.657,70,2.35,71,0.981,72,2.657,73,2.657,74,1.326,75,1.888,76,0.48,77,0.283,78,2.193,79,0.023,80,0.023]],["title/modules/AuthModule.html",[0,1.259,81,1.93]],["body/modules/AuthModule.html",[0,1.944,2,1.706,3,2.653,7,0.037,9,2.981,10,2.108,11,1.706,12,0.685,13,0.609,14,0.537,16,2.368,17,0.944,18,1.544,75,3.39,76,0.685,77,0.404,79,0.029,80,0.029,81,3.657,82,3.129,83,3.129,84,3.129,85,3.383,86,3.791,87,3.939,88,3.791,89,4.772,90,3.129]],["title/entities/Contribution.html",[45,1.542,91,0.939]],["body/entities/Contribution.html",[7,0.038,12,0.47,13,0.417,14,0.368,17,0.669,32,1.058,41,1.379,42,1.846,45,1.848,57,1.158,70,2.313,71,0.96,76,0.47,77,0.277,79,0.023,80,0.023,91,1.126,92,2.145,93,0.417,94,1.126,95,4.314,96,4.314,97,2.764,98,4.314,99,3.531,100,3.561,101,3.341,102,1.782,103,3.531,104,3.881,105,3.881,106,3.881,107,3.881,108,1.465,109,2.599,110,2.325,111,3.341,112,2.059,113,2.059,114,2.599,115,1.846,116,2.599,117,2.631,118,2.631,119,2.313,120,2.631,121,2.631,122,2.599,123,1.623,124,2.599,125,2.313,126,2.599,127,2.631,128,2.599,129,2.599,130,2.873,131,2.631,132,1.846,133,2.313,134,2.313,135,1.126,136,1.846,137,1.623,138,1.846,139,2.599]],["title/controllers/HealthController.html",[140,1.718,141,1.93]],["body/controllers/HealthController.html",[7,0.039,12,0.485,13,0.431,14,0.38,17,0.862,18,1.093,22,3.624,23,2.215,27,1.907,67,1.676,74,1.339,76,0.485,77,0.286,79,0.023,80,0.023,93,0.431,102,1.27,108,1.044,140,1.492,141,2.366,142,2.215,143,2.215,144,3.127,145,2.366,146,3.716,147,3.938,148,4.77,149,2.684,150,2.684,151,2.366,152,3.127,153,2.684,154,2.684,155,3.788,156,3.788,157,3.788,158,4.391,159,3.788,160,3.788,161,3.12,162,2.215,163,1.492,164,2.684,165,2.684,166,1.492,167,4.31,168,2.684,169,2.684,170,2.684,171,1.492,172,2.684,173,1.89,174,3.788,175,2.684,176,2.684,177,2.684,178,2.684,179,2.684,180,2.684,181,3.788,182,2.684,183,3.127,184,2.684,185,2.684,186,2.684,187,2.684,188,2.684,189,2.684,190,2.684,191,2.684,192,2.684,193,2.684,194,2.684,195,2.684,196,2.684,197,2.684,198,2.684]],["title/modules/HealthModule.html",[0,1.259,6,1.718]],["body/modules/HealthModule.html",[0,2.069,2,1.887,6,2.824,7,0.038,12,0.758,13,0.673,14,0.594,16,2.619,17,0.987,18,1.708,26,4.192,27,2.979,74,2.534,76,0.758,77,0.447,79,0.031,80,0.031,141,3.413,199,4.193,200,4.193]],["title/classes/PageDto.html",[77,0.329,201,1.718]],["body/classes/PageDto.html",[7,0.038,12,0.56,13,0.497,14,0.439,17,0.916,54,3.452,57,1.127,76,0.56,77,0.504,79,0.026,80,0.026,93,0.497,94,1.272,102,1.402,108,1.305,135,0.942,163,1.722,166,1.722,171,3.035,201,2.326,202,1.934,203,2.556,204,4.371,205,3.964,206,4.182,207,5.296,208,3.155,209,4.182,210,1.722,211,1.545,212,3.097,213,3.097,214,3.097,215,3.097,216,3.097,217,3.097,218,3.909,219,4.735,220,4.735,221,2.556,222,2.2,223,2.556,224,2.556,225,3.097,226,2.556,227,3.097,228,3.097]],["title/classes/PageMetaDto.html",[77,0.329,208,1.718]],["body/classes/PageMetaDto.html",[7,0.038,12,0.49,13,0.435,14,0.384,17,0.689,57,1.087,76,0.49,77,0.289,79,0.023,80,0.023,93,0.435,94,1.16,102,1.755,108,1.483,110,2.473,135,0.824,163,1.507,166,2.122,171,3.326,202,1.693,205,1.926,208,2.122,210,1.507,211,1.353,218,4.807,222,3.404,229,3.432,230,2.238,231,4.415,232,4.415,233,4.169,234,4.415,235,3.137,236,2.711,237,3.955,238,3.815,239,3.404,240,2.711,241,2.711,242,2.711,243,2.711,244,2.711,245,2.711,246,1.353,247,3.644,248,2.711,249,2.711,250,3.149,251,2.711,252,1.926,253,2.711,254,2.711,255,2.711,256,2.711,257,2.711]],["title/classes/PageOptionsDto.html",[77,0.329,246,1.542]],["body/classes/PageOptionsDto.html",[7,0.038,12,0.475,13,0.422,14,0.373,17,0.854,57,1.048,76,0.475,77,0.463,79,0.023,80,0.023,93,0.422,94,1.136,102,1.455,108,1.303,110,2.401,112,3.084,163,1.463,171,3.084,173,1.313,202,1.643,211,2.588,221,2.171,222,3.086,224,2.171,229,3.119,235,3.086,246,1.864,247,2.171,249,3.941,250,2.171,252,3.359,258,2.171,259,3.996,260,3.735,261,4.343,262,2.713,263,4.343,264,2.631,265,3.735,266,2.631,267,2.631,268,3.735,269,2.631,270,2.631,271,3.735,272,3.735,273,2.631,274,2.631,275,2.631,276,2.631,277,4.728,278,2.631,279,4.343,280,4.728,281,2.631,282,2.631,283,2.631,284,2.631,285,2.631,286,3.735,287,3.735,288,2.631]],["title/entities/Repo.html",[41,0.77,91,0.939]],["body/entities/Repo.html",[7,0.038,12,0.253,13,0.225,14,0.198,17,0.677,32,0.57,41,0.573,43,1.542,44,0.875,45,2.008,46,1.156,47,2.295,49,2.295,57,1.18,70,2.117,71,0.517,76,0.253,77,0.149,79,0.014,80,0.014,91,0.699,93,0.225,94,0.699,97,2.082,100,2.417,101,3.52,102,1.842,103,3.52,104,3.909,105,3.909,106,3.909,107,3.323,108,1.515,110,2.23,111,3.364,112,2.955,113,2.47,115,0.995,117,3.156,118,3.156,119,2.774,120,3.156,121,3.156,123,0.875,125,1.437,127,1.634,130,2.848,131,1.634,132,0.995,133,1.437,134,1.437,135,1.224,136,2.08,137,0.875,138,0.995,239,1.634,289,1.156,290,1.829,291,2.08,292,2.928,293,2.928,294,2.928,295,2.928,296,2.928,297,1.628,298,2.928,299,3.39,300,2.928,301,2.928,302,2.66,303,2.928,304,2.417,305,2.3,306,1.4,307,1.156,308,3.323,309,1.4,310,1.4,311,1.4,312,1.4,313,1.4,314,1.156,315,1.4,316,1.4,317,3.39,318,1.4,319,2.3,320,1.4,321,1.4,322,1.4,323,1.4,324,2.3,325,1.4,326,2.3,327,1.4,328,1.4,329,1.4,330,1.4,331,1.4,332,1.4,333,1.4,334,1.4,335,1.4,336,1.4,337,1.899,338,2.3,339,2.798,340,1.4,341,1.4,342,0.875,343,0.995,344,0.875,345,1.156,346,1.4,347,1.4]],["title/controllers/RepoController.html",[140,1.718,348,1.93]],["body/controllers/RepoController.html",[7,0.038,12,0.59,13,0.525,14,0.463,17,1.022,18,1.331,41,1.213,57,0.876,74,1.631,76,0.59,77,0.348,78,2.697,79,0.027,80,0.027,93,0.525,102,1.095,108,0.9,135,0.994,140,1.817,143,2.697,145,2.708,146,3.039,151,2.041,161,3.08,162,2.697,163,1.817,171,1.817,173,1.631,201,1.817,210,1.817,211,1.631,246,2.766,342,2.041,348,2.708,349,2.697,350,4.865,351,3.268,352,3.268,353,3.268,354,3.579,355,3.268,356,3.268,357,4.335,358,2.428,359,2.697,360,1.817,361,2.697,362,2.697,363,2.697,364,2.322,365,3.268,366,2.322,367,3.268,368,3.268,369,3.268,370,3.268,371,3.268,372,3.268,373,3.268]],["title/modules/RepoModule.html",[0,1.259,8,1.718]],["body/modules/RepoModule.html",[0,1.885,2,1.625,3,2.573,7,0.038,8,3.22,9,2.89,10,2.008,11,1.625,12,0.652,13,0.58,14,0.511,16,2.255,17,1.006,18,1.471,19,2.981,20,2.565,41,0.9,74,2.309,75,3.287,76,0.652,77,0.385,79,0.028,80,0.028,87,3.819,348,3.189,358,3.016,359,2.981,360,2.008,374,2.981,375,2.981,376,2.981,377,3.611,378,3.611,379,3.611]],["title/injectables/RepoService.html",[358,1.542,380,1.718]],["body/injectables/RepoService.html",[7,0.038,12,0.535,13,0.475,14,0.419,17,0.996,18,1.205,20,2.103,32,1.205,41,0.738,43,0.992,57,0.819,71,1.093,76,0.535,77,0.315,79,0.025,80,0.025,93,0.475,108,1.117,135,1.233,136,2.103,145,2.533,146,2.889,151,1.848,166,2.255,167,2.443,173,1.477,201,1.646,208,2.767,210,2.255,211,2.023,223,2.443,233,3.347,246,2.751,354,3.347,358,2.023,360,1.646,361,3.347,362,2.443,363,2.443,380,2.255,381,2.103,382,2.443,383,4.626,384,2.959,385,3.108,386,2.959,387,4.055,388,2.959,389,2.959,390,2.959,391,2.959,392,4.976,393,2.959,394,2.959,395,2.959,396,2.959,397,2.959,398,2.959,399,2.443,400,2.959,401,2.443,402,2.959,403,2.959,404,2.959,405,2.959,406,2.959,407,4.055,408,2.959,409,2.959,410,2.255,411,2.959]],["title/entities/RepoToUserStars.html",[49,1.542,91,0.939]],["body/entities/RepoToUserStars.html",[7,0.038,12,0.511,13,0.454,14,0.4,17,0.816,32,1.151,41,1.405,43,1.889,44,1.765,49,1.96,57,1.036,71,1.044,76,0.511,77,0.301,79,0.024,80,0.024,91,1.194,93,0.454,94,1.194,97,3.208,99,3.208,102,1.718,108,1.413,110,2.389,123,2.453,125,3.048,130,2.851,133,2.82,134,2.82,135,1.373,290,1.765,302,3.208,343,2.008,344,1.765,360,1.571,401,2.333,412,2.333,413,4.215,414,3.727,415,2.826,416,2.826,417,2.826,418,2.826,419,2.826,420,2.826,421,2.826,422,2.826,423,2.826]],["title/entities/RepoToUserVotes.html",[47,1.542,91,0.939]],["body/entities/RepoToUserVotes.html",[7,0.038,12,0.511,13,0.454,14,0.4,17,0.816,32,1.151,41,1.405,43,1.889,44,1.765,47,1.96,57,1.036,71,1.044,76,0.511,77,0.301,79,0.024,80,0.024,91,1.194,93,0.454,94,1.194,97,3.208,99,3.208,102,1.718,108,1.413,110,2.389,123,2.453,125,3.048,130,2.851,133,2.82,134,2.82,135,1.373,290,1.765,302,3.208,343,2.008,344,1.765,360,1.571,399,2.333,413,4.215,414,3.727,424,2.333,425,2.826,426,2.826,427,2.826,428,2.826,429,2.826,430,2.826,431,2.826,432,2.826,433,2.826]],["title/injectables/SupabaseStrategy.html",[85,1.718,380,1.718]],["body/injectables/SupabaseStrategy.html",[7,0.038,12,0.594,13,0.528,14,0.466,17,0.976,18,1.339,43,1.102,57,0.664,76,0.594,77,0.35,79,0.027,80,0.027,85,2.421,90,2.714,93,0.528,108,1.199,135,1,137,2.054,145,2.719,146,3.048,151,2.054,152,2.714,166,2.714,173,1.641,210,1.828,211,1.641,380,2.421,381,2.336,413,3.093,434,2.714,435,4.353,436,3.288,437,4.353,438,5.194,439,3.288,440,4.353,441,3.288,442,3.288,443,3.288,444,4.353,445,2.714,446,2.719,447,3.288,448,3.288,449,3.288,450,3.288,451,3.288,452,3.288,453,3.288,454,3.288,455,3.288,456,3.288,457,3.288,458,3.288,459,3.288,460,3.288,461,3.288,462,2.714,463,3.288]],["title/entities/User.html",[43,1.035,91,0.939]],["body/entities/User.html",[7,0.038,12,0.433,13,0.384,14,0.339,17,0.818,32,0.975,41,1.252,42,1.701,43,1.17,47,2.785,48,1.976,49,2.588,50,1.976,57,1.128,70,3.138,71,0.884,76,0.433,77,0.255,79,0.021,80,0.021,91,1.061,93,0.384,94,1.061,97,2.291,102,1.817,103,1.701,108,1.494,110,2.038,111,2.48,112,2.884,113,1.941,115,1.701,117,2.48,118,2.48,119,2.18,120,2.48,121,2.48,130,2.676,131,2.48,132,1.701,135,0.728,137,1.496,138,1.701,239,3.57,290,2.573,304,3.4,307,1.976,308,2.881,314,3.4,337,2.881,339,3.737,342,2.573,464,1.976,465,4.119,466,4.119,467,4.119,468,4.119,469,2.394,470,2.394,471,2.394,472,2.394,473,2.394,474,2.394,475,3.491,476,2.394,477,3.491,478,2.394,479,3.491,480,2.394,481,2.394]],["title/changelog.html",[482,1.624,483,1.848,484,2.147]],["body/changelog.html",[3,1.127,7,0.037,11,0.541,14,0.372,32,0.49,41,0.3,43,0.403,52,1.673,67,0.751,71,0.444,79,0.012,80,0.012,113,0.669,127,0.855,135,0.799,144,0.993,147,1.673,235,0.855,249,0.855,252,0.855,262,0.751,342,0.751,385,0.751,410,1.127,446,0.751,462,1.673,482,0.751,484,1.673,485,0.751,486,1.203,487,2.027,488,1.673,489,1.673,490,2.027,491,0.993,492,4.769,493,5.646,494,2.027,495,5.239,496,5.288,497,4.613,498,2.627,499,2.627,500,1.203,501,1.203,502,1.203,503,3.97,504,0.993,505,3.08,506,1.203,507,1.203,508,1.203,509,1.203,510,3.97,511,2.627,512,1.44,513,1.203,514,1.203,515,1.203,516,3.083,517,2.027,518,2.627,519,2.027,520,1.203,521,1.203,522,1.203,523,3.083,524,2.027,525,1.203,526,1.203,527,0.993,528,1.673,529,1.203,530,1.203,531,2.027,532,0.993,533,1.203,534,1.203,535,3.732,536,3.732,537,4.34,538,1.203,539,1.203,540,1.203,541,1.203,542,2.027,543,1.203,544,1.203,545,1.203,546,3.732,547,1.203,548,3.442,549,1.673,550,2.027,551,1.203,552,1.203,553,4.824,554,0.993,555,1.203,556,0.993,557,1.203,558,1.203,559,1.203,560,1.203,561,1.203,562,1.203,563,2.027,564,1.203,565,1.203,566,3.442,567,1.203,568,1.203,569,1.203,570,2.027,571,3.083,572,1.203,573,2.027,574,2.627,575,1.203,576,1.203,577,0.751,578,1.203,579,1.203,580,0.855,581,1.203,582,1.203,583,1.203,584,1.203,585,1.203,586,1.203,587,1.203,588,3.442,589,2.027,590,0.993,591,1.203,592,1.203,593,4.486,594,1.203,595,1.203,596,1.203,597,1.203,598,1.203,599,1.203,600,1.203,601,1.203,602,3.97,603,3.97,604,2.627,605,1.203,606,1.203,607,1.203,608,1.203,609,1.203,610,1.203,611,1.203,612,1.673,613,2.627,614,1.203,615,1.203,616,1.203,617,4.34,618,1.203,619,1.203,620,1.203,621,1.203,622,2.627,623,1.203,624,1.203,625,1.203,626,1.203,627,1.203,628,1.203,629,1.203,630,1.203,631,1.203,632,1.203,633,1.203,634,1.203,635,1.203,636,1.203,637,1.203,638,1.203,639,2.627,640,1.203,641,1.203,642,1.203,643,1.203,644,1.203,645,1.203,646,1.203,647,1.203,648,1.203,649,2.027,650,1.203,651,1.203,652,0.993,653,1.203,654,1.203,655,2.627,656,1.203,657,1.203,658,1.203,659,1.203,660,1.203,661,2.027,662,1.203,663,1.203,664,1.203,665,1.203,666,1.203,667,1.203,668,3.083,669,3.083,670,2.027,671,1.203,672,1.203,673,1.203,674,1.203,675,3.97,676,1.673,677,1.203,678,1.673,679,1.203,680,1.203,681,1.203,682,1.203,683,2.027,684,2.027,685,2.027,686,2.027,687,2.027,688,1.203,689,1.203,690,2.627,691,1.203,692,2.027,693,1.203,694,2.027,695,2.027,696,1.203,697,1.203,698,1.203,699,1.203,700,1.203,701,1.203,702,1.203,703,1.203,704,1.203,705,1.203,706,1.203,707,1.203,708,1.203,709,4.17,710,1.203,711,1.203,712,1.203,713,1.203,714,1.203,715,1.203,716,2.027,717,1.203,718,1.203,719,1.203,720,1.203,721,1.203,722,1.203,723,1.203,724,1.203,725,1.203,726,1.203,727,1.203,728,1.203,729,1.203,730,1.203,731,1.203,732,1.203,733,1.203,734,1.203,735,1.203,736,2.627,737,0.993,738,1.203,739,1.203,740,1.203,741,1.203,742,1.203,743,1.203,744,1.203,745,1.203,746,1.203,747,1.203,748,1.203,749,1.203,750,1.203,751,0.993,752,1.203,753,1.203,754,1.203,755,1.203,756,1.203,757,1.203,758,1.203,759,1.203,760,1.203,761,0.993,762,1.203,763,1.203,764,1.203,765,1.203,766,1.203,767,1.203,768,1.203,769,1.203]],["title/coverage.html",[770,3.447]],["body/coverage.html",[7,0.038,14,0.466,41,0.82,43,1.102,45,1.641,47,1.641,49,1.641,57,0.664,77,0.52,79,0.027,80,0.027,85,1.828,91,1.643,92,2.714,113,3.365,140,2.421,141,2.054,142,2.714,201,1.828,203,2.714,208,1.828,229,2.719,230,2.714,246,1.641,258,2.714,289,2.714,348,2.054,349,2.714,358,1.641,364,2.336,366,2.336,380,2.421,382,2.714,410,1.828,412,2.714,424,2.714,434,2.714,464,2.714,528,3.593,577,2.054,770,2.714,771,3.288,772,3.288,773,4.88,774,2.714,775,2.714,776,5.75,777,3.288,778,4.353,779,2.714,780,2.714,781,2.714,782,3.288,783,2.714,784,3.288,785,3.288,786,2.714]],["title/miscellaneous/enumerations.html",[787,1.059,788,3.058]],["body/miscellaneous/enumerations.html",[7,0.036,79,0.033,80,0.033,93,0.725,259,3.77,262,3.314,344,3.314,345,4.38,787,1.838,788,3.725,789,4.513,790,4.513]],["title/miscellaneous/functions.html",[787,1.059,791,3.058]],["body/miscellaneous/functions.html",[7,0.033,79,0.033,80,0.033,93,0.747,781,3.839,783,4.711,787,1.894,791,3.839,792,4.65]],["title/index.html",[93,0.418,482,1.624,483,1.848]],["body/index.html",[7,0.035,10,1.636,11,1.325,13,0.473,45,1.468,67,3.101,79,0.025,80,0.025,183,2.429,259,2.091,297,1.636,385,1.838,410,1.636,446,3.101,485,3.25,488,4.295,489,2.429,504,3.334,505,2.429,554,2.429,556,4.544,566,3.334,577,1.838,580,2.091,612,3.334,652,3.334,676,2.429,737,2.429,751,4.295,786,2.429,793,3.527,794,2.943,795,2.943,796,2.943,797,3.807,798,2.429,799,2.943,800,2.943,801,4.04,802,2.943,803,2.943,804,2.943,805,2.943,806,2.943,807,2.943,808,2.943,809,4.612,810,4.04,811,2.943,812,2.943,813,4.04,814,2.943,815,2.943,816,2.943,817,2.943,818,2.943,819,4.04,820,2.943,821,4.04,822,4.04,823,2.943,824,2.943,825,2.943,826,2.943,827,2.943,828,2.943,829,2.943,830,2.943,831,2.943,832,2.943,833,2.943,834,2.943,835,2.943,836,2.429,837,2.943,838,2.943,839,4.04,840,2.943,841,2.943,842,2.943,843,2.943,844,2.943,845,2.943,846,2.943,847,2.943,848,2.943,849,2.943,850,2.943,851,2.943,852,2.943,853,2.943,854,2.943,855,2.943,856,2.091]],["title/license.html",[297,1.446,482,1.624,483,1.848]],["body/license.html",[7,0.027,11,1.527,79,0.027,80,0.027,119,3.095,297,1.886,485,2.119,492,2.8,532,2.8,577,2.119,590,3.668,793,2.41,797,2.8,798,4.833,856,2.41,857,4.956,858,3.392,859,4.444,860,3.392,861,3.392,862,3.392,863,3.392,864,3.392,865,3.392,866,3.392,867,3.392,868,3.392,869,3.392,870,4.444,871,3.392,872,3.392,873,4.444,874,3.392,875,3.392,876,3.392,877,3.392,878,3.392,879,3.392,880,3.392,881,4.444,882,3.392,883,3.392,884,3.392,885,3.392,886,3.392,887,3.392,888,4.444,889,4.444,890,3.392,891,3.392,892,3.392,893,3.392,894,3.392,895,3.392,896,3.392,897,3.392,898,3.392,899,3.392,900,3.392,901,3.392,902,3.392,903,3.392,904,3.392,905,3.392,906,3.392,907,3.392,908,3.392,909,3.392,910,3.392,911,3.392,912,3.392,913,3.392,914,3.392,915,3.392,916,3.392,917,3.392,918,3.392]],["title/modules.html",[2,1.879]],["body/modules.html",[1,2.76,2,1.989,6,2.457,7,0.032,8,2.457,79,0.032,80,0.032,81,2.76,919,5.588,920,5.588,921,5.588,922,5.779,923,3.648,924,4.419]],["title/overview.html",[925,3.447]],["body/overview.html",[1,3.586,2,1.676,3,2.624,4,3.074,5,3.074,6,2.881,7,0.036,8,3.193,9,2.948,10,2.071,11,1.676,71,1.375,74,1.858,79,0.029,80,0.029,81,3.51,82,3.074,83,3.074,84,3.074,85,3.243,202,2.326,358,2.91,374,3.074,375,3.074,376,3.074,381,2.646,925,3.074,926,3.724,927,4.719,928,3.724,929,3.724]],["title/properties.html",[94,1.126,930,2.601]],["body/properties.html",[7,0.037,79,0.03,80,0.03,94,1.213,291,2.834,297,2.218,385,2.492,445,3.293,446,2.492,485,3.077,491,3.293,527,3.293,580,2.834,678,3.293,761,3.293,793,3.5,856,2.834,923,3.293,931,3.989,932,3.989,933,3.989,934,3.989,935,3.989,936,3.989,937,3.989,938,3.989,939,3.989,940,3.989,941,3.989,942,4.926,943,3.989,944,3.989,945,3.989,946,3.989,947,3.989,948,3.989,949,3.989,950,3.989]],["title/miscellaneous/typealiases.html",[787,1.059,951,3.705]],["body/miscellaneous/typealiases.html",[7,0.033,57,1.075,79,0.033,80,0.033,93,0.728,205,3.78,229,2.831,237,4.391,787,1.846,952,4.532,953,4.532,954,5.32,955,4.532]],["title/miscellaneous/variables.html",[512,2.632,787,1.059]],["body/miscellaneous/variables.html",[7,0.039,41,0.891,57,0.722,79,0.028,80,0.028,93,0.574,94,1.087,101,2.54,112,2.556,161,2.54,173,1.784,204,2.951,226,2.951,262,2.871,291,2.54,364,3.266,366,3.266,410,1.988,512,2.54,549,2.951,774,2.951,775,3.795,779,2.951,780,3.795,787,1.456,836,2.951,956,3.574,957,3.574,958,4.597,959,3.574,960,3.574,961,3.574,962,3.574,963,3.574,964,3.574,965,4.597,966,3.574,967,3.574,968,3.574,969,4.597,970,3.574,971,3.574,972,3.574]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":113,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["0/1",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["0848443",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":249,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["1.0.0",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["1.6.10",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["1.6.11",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["1.6.12",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["1.6.13",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["1.6.14",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["1.6.15",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["1.6.16",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["1.6.17",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["1.6.3",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["1.6.4",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["1.6.5",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["1.6.6",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["1.6.7",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["1.6.8",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["1.6.9",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["1.7.1",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["1.7.10",{"_index":491,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["1.7.2",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["1.7.3",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["1.7.5",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["1.7.6",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["1.7.7",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["1.7.8",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["1.7.9",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":252,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(50)@isoptional",{"_index":273,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["13",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["166050d",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":269,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["2",{"_index":927,"title":{},"body":{"overview.html":{}}}],["20",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":492,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["20880c7",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["20bc1e7",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["22d3cc1",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":107,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["27",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["272c09a",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["273f337",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["2c0b15f",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["2c0b3d1",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":929,"title":{},"body":{"overview.html":{}}}],["30",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["31e4d60",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["33fea7e",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["34d521d",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["3918a78",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":926,"title":{},"body":{"overview.html":{}}}],["5",{"_index":928,"title":{},"body":{"overview.html":{}}}],["50",{"_index":272,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["58bf922",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["5e7c6c7",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["5eddeb1",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["5f79c49",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["607cf5d",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["61b67d5",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["630f3b5",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["63d6a92",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":317,"title":{},"body":{"entities/Repo.html":{}}}],["673dca9",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["6d23c24",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["73d1c74",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["77c734c",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["79bf61d",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["7adfb6b",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["7db9008",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["7e9b8a4",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["7fe63aa",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["81e8bbc",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["8837b2a",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["8aee8e5",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["911df68",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["94ba4e1",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["a0db0aa",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["a229a3b",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":887,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["ac31556",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["accessing",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["accessors",{"_index":260,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["action",{"_index":912,"title":{},"body":{"license.html":{}}}],["add",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["add_table_nametest",{"_index":825,"title":{},"body":{"index.html":{}}}],["adding",{"_index":816,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["adjustments",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":952,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allof",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":879,"title":{},"body":{"license.html":{}}}],["api",{"_index":580,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["apiconfig",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["apiextramodels(pagedto",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":161,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse",{"_index":364,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse(repo",{"_index":372,"title":{},"body":{"controllers/RepoController.html":{}}}],["apiproperty",{"_index":218,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{}}}],["apiproperty({type",{"_index":216,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":277,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({enum",{"_index":264,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":268,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apitags",{"_index":162,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["apitags(\"health",{"_index":164,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"repositories",{"_index":369,"title":{},"body":{"controllers/RepoController.html":{}}}],["apply",{"_index":823,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":916,"title":{},"body":{"license.html":{}}}],["array",{"_index":226,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["artifact",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":345,"title":{},"body":{"entities/Repo.html":{},"miscellaneous/enumerations.html":{}}}],["assign",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":866,"title":{},"body":{"license.html":{}}}],["async",{"_index":146,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["attach",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["attempt",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":447,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticate(req",{"_index":461,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authmodule",{"_index":81,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":948,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":905,"title":{},"body":{"license.html":{}}}],["authuser",{"_index":438,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["autoloadentities",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":924,"title":{},"body":{"modules.html":{}}}],["await",{"_index":407,"title":{},"body":{"injectables/RepoService.html":{}}}],["b1a67da",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["b1eda28",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["b4d3785",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["b57f47b",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["b5b6ac5",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["b7c3395",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["ba8dfbb",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":934,"title":{},"body":{"properties.html":{}}}],["based",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["baseentity",{"_index":131,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["baseline",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["bash",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["bc3a37d",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["bd6d621",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["better",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["bigint",{"_index":111,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["binaries",{"_index":799,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":239,"title":{},"body":{"classes/PageMetaDto.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":783,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":922,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":919,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":944,"title":{},"body":{"properties.html":{}}}],["build",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":393,"title":{},"body":{"injectables/RepoService.html":{}}}],["builder.getcount",{"_index":408,"title":{},"body":{"injectables/RepoService.html":{}}}],["builder.getmany",{"_index":409,"title":{},"body":{"injectables/RepoService.html":{}}}],["c",{"_index":858,"title":{},"body":{"license.html":{}}}],["c013b70",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["c127cea",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["c24937f",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["cb83f9d",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["cb9206d",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["cc46460",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["cd306f8",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":484,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":488,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["channel",{"_index":854,"title":{},"body":{"index.html":{}}}],["character",{"_index":104,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["charge",{"_index":863,"title":{},"body":{"license.html":{}}}],["check",{"_index":504,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["checks",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":908,"title":{},"body":{"license.html":{}}}],["class",{"_index":77,"title":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"coverage.html":{}}}],["classes",{"_index":202,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"overview.html":{}}}],["clean",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":833,"title":{},"body":{"index.html":{}}}],["client",{"_index":936,"title":{},"body":{"properties.html":{}}}],["closes",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":82,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":84,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":83,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_repomodule",{"_index":374,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_exports",{"_index":376,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_providers",{"_index":375,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["column",{"_index":130,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["column(\"text",{"_index":346,"title":{},"body":{"entities/Repo.html":{}}}],["column('text",{"_index":310,"title":{},"body":{"entities/Repo.html":{}}}],["column({default",{"_index":314,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["column({type",{"_index":103,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["command",{"_index":819,"title":{},"body":{"index.html":{}}}],["commands",{"_index":807,"title":{},"body":{"index.html":{}}}],["comments",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["common/decorators/api",{"_index":365,"title":{},"body":{"controllers/RepoController.html":{}}}],["common/dtos/page",{"_index":361,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["common/dtos/page.dto",{"_index":363,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["community",{"_index":846,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":937,"title":{},"body":{"properties.html":{}}}],["component",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["concurrency",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":886,"title":{},"body":{"license.html":{}}}],["config/api.config",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["config/endpoint.config",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configservice.get(\"db.connection",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.database",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.host",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.password",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.port",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.username",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":917,"title":{},"body":{"license.html":{}}}],["console.log(builder.getsql",{"_index":406,"title":{},"body":{"injectables/RepoService.html":{}}}],["const",{"_index":392,"title":{},"body":{"injectables/RepoService.html":{}}}],["constants/order.constant",{"_index":283,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["constructor",{"_index":166,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["constructor(data",{"_index":206,"title":{},"body":{"classes/PageDto.html":{}}}],["constructor(private",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoController.html":{}}}],["constructor(reporepository",{"_index":384,"title":{},"body":{"injectables/RepoService.html":{}}}],["constructor(undefined",{"_index":236,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["container",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["continuous",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":913,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":841,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":839,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":45,"title":{"entities/Contribution.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"coverage.html":{},"index.html":{}}}],["contribution.repo",{"_index":305,"title":{},"body":{"entities/Repo.html":{}}}],["contribution/contribution.entity",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{}}}],["contributions",{"_index":136,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{}}}],["contributor",{"_index":95,"title":{},"body":{"entities/Contribution.html":{}}}],["controller",{"_index":140,"title":{"controllers/HealthController.html":{},"controllers/RepoController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":165,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"repos",{"_index":368,"title":{},"body":{"controllers/RepoController.html":{}}}],["controllers",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"overview.html":{}}}],["conversation",{"_index":849,"title":{},"body":{"index.html":{}}}],["copies",{"_index":881,"title":{},"body":{"license.html":{}}}],["copy",{"_index":590,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":857,"title":{},"body":{"license.html":{}}}],["correct",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":96,"title":{},"body":{"entities/Contribution.html":{}}}],["coverage",{"_index":770,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["created",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["created_at",{"_index":290,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":337,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["createdatecolumn({type",{"_index":307,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["creating",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["d0d5ca5",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":909,"title":{},"body":{"license.html":{}}}],["data",{"_index":204,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["datasource",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":117,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["db",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["db:changesif",{"_index":820,"title":{},"body":{"index.html":{}}}],["db:commit",{"_index":824,"title":{},"body":{"index.html":{}}}],["db:push",{"_index":832,"title":{},"body":{"index.html":{}}}],["db:resetpush",{"_index":830,"title":{},"body":{"index.html":{}}}],["db:startmake",{"_index":815,"title":{},"body":{"index.html":{}}}],["dbconfig",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["deal",{"_index":868,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":918,"title":{},"body":{"license.html":{}}}],["debug",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["decorator",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":102,"title":{},"body":{"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["default",{"_index":112,"title":{},"body":{"entities/Contribution.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":108,"title":{},"body":{"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["demo",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":344,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":291,"title":{},"body":{"entities/Repo.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":935,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":801,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":837,"title":{},"body":{"index.html":{}}}],["diagrams",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":818,"title":{},"body":{"index.html":{}}}],["digital",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["discord.find",{"_index":850,"title":{},"body":{"index.html":{}}}],["disk",{"_index":170,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":160,"title":{},"body":{"controllers/HealthController.html":{}}}],["distribute",{"_index":877,"title":{},"body":{"license.html":{}}}],["docker",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.12",{"_index":805,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["docr",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":577,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":931,"title":{},"body":{"properties.html":{}}}],["dry",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["e145e2d",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["e1fe498",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["e663170",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":225,"title":{},"body":{"classes/PageDto.html":{}}}],["echo",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":840,"title":{},"body":{"index.html":{}}}],["endpointconfig",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["engines",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["entities",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"overview.html":{}}}],["entity",{"_index":91,"title":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":284,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["enumerations",{"_index":788,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":265,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["env",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["eslint",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":532,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["everything",{"_index":821,"title":{},"body":{"index.html":{}}}],["explain",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["exports",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{},"modules/RepoModule.html":{}}}],["exposing",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":896,"title":{},"body":{"license.html":{}}}],["extend",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":137,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["extractjwt",{"_index":441,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":459,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractor",{"_index":458,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["f5385b3",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["fdc11ea",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["fe4b9e9",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":867,"title":{},"body":{"license.html":{}}}],["findall",{"_index":383,"title":{},"body":{"injectables/RepoService.html":{}}}],["findall(pageoptionsdto",{"_index":388,"title":{},"body":{"injectables/RepoService.html":{}}}],["finduserlist",{"_index":350,"title":{},"body":{"controllers/RepoController.html":{}}}],["finduserlist(pageoptionsdto",{"_index":351,"title":{},"body":{"controllers/RepoController.html":{}}}],["fine",{"_index":822,"title":{},"body":{"index.html":{}}}],["first",{"_index":810,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":901,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["flight",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":797,"title":{},"body":{"index.html":{},"license.html":{}}}],["free",{"_index":862,"title":{},"body":{"license.html":{}}}],["full",{"_index":838,"title":{},"body":{"index.html":{}}}],["full_name",{"_index":292,"title":{},"body":{"entities/Repo.html":{}}}],["function",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":791,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":884,"title":{},"body":{"license.html":{}}}],["generated",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["get(\"/list",{"_index":370,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/service",{"_index":172,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":186,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/list')@httpcode(httpstatus.ok)@apipaginatedresponse(repo)@apiokresponse({type",{"_index":352,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/service')@healthcheck()@apiokresponse",{"_index":149,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@healthcheck()@apiokresponse",{"_index":153,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdomain",{"_index":780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getschemapath(model",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(pagedto",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getskip",{"_index":275,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getting",{"_index":482,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":946,"title":{},"body":{"properties.html":{}}}],["github",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":861,"title":{},"body":{"license.html":{}}}],["graph",{"_index":923,"title":{},"body":{"modules.html":{},"properties.html":{}}}],["guide",{"_index":843,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":844,"title":{},"body":{"index.html":{}}}],["has_stars_data",{"_index":465,"title":{},"body":{"entities/User.html":{}}}],["hasnextpage",{"_index":231,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":232,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["health",{"_index":144,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["health.controller",{"_index":200,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":158,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":155,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":141,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":6,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hereby",{"_index":860,"title":{},"body":{"license.html":{}}}],["holders",{"_index":906,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":941,"title":{},"body":{"properties.html":{}}}],["host",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":168,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode",{"_index":355,"title":{},"body":{"controllers/RepoController.html":{}}}],["httpcode(httpstatus.ok",{"_index":371,"title":{},"body":{"controllers/RepoController.html":{}}}],["httphealthindicator",{"_index":156,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/open",{"_index":942,"title":{},"body":{"properties.html":{}}}],["httpstatus",{"_index":356,"title":{},"body":{"controllers/RepoController.html":{}}}],["id",{"_index":97,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["identifier",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":834,"title":{},"body":{"index.html":{}}}],["immediate",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":897,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["imports",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}}}],["improve",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":890,"title":{},"body":{"license.html":{}}}],["including",{"_index":870,"title":{},"body":{"license.html":{}}}],["index",{"_index":93,"title":{"index.html":{}},"body":{"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["initial",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":380,"title":{"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}},"body":{"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":381,"title":{},"body":{"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":390,"title":{},"body":{"injectables/RepoService.html":{}}}],["injectrepository(repo",{"_index":391,"title":{},"body":{"injectables/RepoService.html":{}}}],["inspection",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["installed",{"_index":800,"title":{},"body":{"index.html":{}}}],["instead",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":939,"title":{},"body":{"properties.html":{}}}],["is_fork",{"_index":293,"title":{},"body":{"entities/Repo.html":{}}}],["is_open_sauced_member",{"_index":466,"title":{},"body":{"entities/User.html":{}}}],["is_private",{"_index":467,"title":{},"body":{"entities/User.html":{}}}],["isarray",{"_index":219,"title":{},"body":{"classes/PageDto.html":{}}}],["isarray()@apiproperty({isarray",{"_index":212,"title":{},"body":{"classes/PageDto.html":{}}}],["isenum",{"_index":278,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(order",{"_index":285,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isglobal",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":279,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isoptional",{"_index":280,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["issues",{"_index":294,"title":{},"body":{"entities/Repo.html":{}}}],["itemcount",{"_index":233,"title":{},"body":{"classes/PageMetaDto.html":{},"injectables/RepoService.html":{}}}],["items",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["job",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["jobs",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":848,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":134,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["js",{"_index":449,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["jwt",{"_index":443,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["keywords",{"_index":940,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":895,"title":{},"body":{"license.html":{}}}],["language",{"_index":295,"title":{},"body":{"entities/Repo.html":{}}}],["last_fetched_contributors_at",{"_index":296,"title":{},"body":{"entities/Repo.html":{}}}],["last_merged_at",{"_index":98,"title":{},"body":{"entities/Contribution.html":{}}}],["leftjoinandselect(\"repo.contributions",{"_index":397,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(\"repo.user",{"_index":396,"title":{},"body":{"injectables/RepoService.html":{}}}],["length",{"_index":106,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["liability",{"_index":910,"title":{},"body":{"license.html":{}}}],["liable",{"_index":907,"title":{},"body":{"license.html":{}}}],["license",{"_index":297,"title":{"license.html":{}},"body":{"entities/Repo.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":871,"title":{},"body":{"license.html":{}}}],["limited",{"_index":898,"title":{},"body":{"license.html":{}}}],["list",{"_index":549,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":955,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["loadrelationcountandmap(\"repo.starscount",{"_index":400,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.votescount",{"_index":398,"title":{},"body":{"injectables/RepoService.html":{}}}],["local",{"_index":612,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["localhost:54321",{"_index":814,"title":{},"body":{"index.html":{}}}],["locally",{"_index":813,"title":{},"body":{"index.html":{}}}],["logging",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":802,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":133,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["manytoone(undefined",{"_index":123,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["matching",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":255,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["max",{"_index":281,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(50",{"_index":288,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maximum",{"_index":271,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["memory",{"_index":169,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":159,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":900,"title":{},"body":{"license.html":{}}}],["merge",{"_index":875,"title":{},"body":{"license.html":{}}}],["meta",{"_index":205,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["meta.dto",{"_index":223,"title":{},"body":{"classes/PageDto.html":{},"injectables/RepoService.html":{}}}],["meta.dto.ts",{"_index":230,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:12",{"_index":241,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:15",{"_index":243,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:18",{"_index":240,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":238,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:6",{"_index":242,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":244,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["methods",{"_index":145,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["migration",{"_index":737,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["migrations",{"_index":828,"title":{},"body":{"index.html":{}}}],["min",{"_index":282,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":287,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimal",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":286,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minor",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":787,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":856,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mkdocs",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":874,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["mount",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["mounted",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":135,"title":{},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{}}}],["need",{"_index":796,"title":{},"body":{"index.html":{}}}],["nest",{"_index":676,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nestjs",{"_index":445,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/config",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["nestjs/passport",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/swagger",{"_index":163,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{}}}],["nestjs/terminus",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["nestjs/typeorm",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{}}}],["nestjs/typeorm/dist/interfaces/typeorm",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":410,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":794,"title":{},"body":{"index.html":{}}}],["node",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["node>=16.7.0",{"_index":803,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":904,"title":{},"body":{"license.html":{}}}],["notable",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":888,"title":{},"body":{"license.html":{}}}],["now",{"_index":308,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["npm",{"_index":751,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm>=8.0.0",{"_index":804,"title":{},"body":{"index.html":{}}}],["number",{"_index":110,"title":{},"body":{"entities/Contribution.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["oas3",{"_index":933,"title":{},"body":{"properties.html":{}}}],["obtaining",{"_index":865,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["onetomany",{"_index":339,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":304,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["open",{"_index":485,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["open_issues",{"_index":468,"title":{},"body":{"entities/User.html":{}}}],["opensauced.pizza\"}`).tostring",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":211,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["options.dto",{"_index":362,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["options.dto.ts",{"_index":258,"title":{},"body":{"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:10",{"_index":267,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:20",{"_index":270,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":274,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":276,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.interface",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":259,"title":{},"body":{"classes/PageOptionsDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["order.asc",{"_index":263,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["orderby",{"_index":343,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["orderby(\"repo.pushed_at",{"_index":402,"title":{},"body":{"injectables/RepoService.html":{}}}],["otherwise",{"_index":915,"title":{},"body":{"license.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["outputs",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":925,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":852,"title":{},"body":{"index.html":{}}}],["package",{"_index":930,"title":{"properties.html":{}},"body":{}}],["page",{"_index":222,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["pagecount",{"_index":234,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":201,"title":{"classes/PageDto.html":{}},"body":{"classes/PageDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagedto(entities",{"_index":411,"title":{},"body":{"injectables/RepoService.html":{}}}],["pagemetadto",{"_index":208,"title":{"classes/PageMetaDto.html":{}},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagemetadto})@validatenested()@type(undefined",{"_index":217,"title":{},"body":{"classes/PageDto.html":{}}}],["pagemetaparameters",{"_index":237,"title":{},"body":{"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["pageoptionsdto",{"_index":246,"title":{"classes/PageOptionsDto.html":{}},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pageoptionsdto.order",{"_index":403,"title":{},"body":{"injectables/RepoService.html":{}}}],["pageoptionsdto.page",{"_index":248,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.take",{"_index":251,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pages",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["paginated",{"_index":366,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":210,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["parameters.dto",{"_index":245,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["parameters.dto.ts",{"_index":954,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["particular",{"_index":902,"title":{},"body":{"license.html":{}}}],["passport",{"_index":442,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["passportmodule",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":440,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["password",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":183,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["performance",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":859,"title":{},"body":{"license.html":{}}}],["permit",{"_index":882,"title":{},"body":{"license.html":{}}}],["person",{"_index":864,"title":{},"body":{"license.html":{}}}],["persons",{"_index":883,"title":{},"body":{"license.html":{}}}],["pipelines",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":842,"title":{},"body":{"index.html":{}}}],["port",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":892,"title":{},"body":{"license.html":{}}}],["powered",{"_index":932,"title":{},"body":{"properties.html":{}}}],["prefix",{"_index":143,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["prerequisites",{"_index":795,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["primarycolumn",{"_index":132,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn(\"bigint",{"_index":138,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn('bigint",{"_index":115,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn",{"_index":414,"title":{},"body":{"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["print",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":167,"title":{},"body":{"controllers/HealthController.html":{},"injectables/RepoService.html":{}}}],["proceed",{"_index":845,"title":{},"body":{"index.html":{}}}],["process",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["process.env.domain",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.supabase_jwt_secret",{"_index":457,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_key",{"_index":454,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_url",{"_index":452,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["production",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":489,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":354,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["proper",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":94,"title":{"properties.html":{}},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":527,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["provided",{"_index":893,"title":{},"body":{"license.html":{}}}],["providers",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{}}}],["public",{"_index":413,"title":{},"body":{"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{}}}],["publish",{"_index":876,"title":{},"body":{"license.html":{}}}],["pull",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":903,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["push",{"_index":554,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pushed_at",{"_index":298,"title":{},"body":{"entities/Repo.html":{}}}],["query",{"_index":357,"title":{},"body":{"controllers/RepoController.html":{}}}],["questions",{"_index":847,"title":{},"body":{"index.html":{}}}],["re",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":171,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{}}}],["received",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["referencedcolumnname",{"_index":125,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["relations",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["relationship",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":505,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remote",{"_index":831,"title":{},"body":{"index.html":{}}}],["remove",{"_index":761,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["repo",{"_index":41,"title":{"entities/Repo.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo.contributions",{"_index":139,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.contributions)@joincolumn({name",{"_index":124,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.controller",{"_index":378,"title":{},"body":{"modules/RepoModule.html":{}}}],["repo.entity",{"_index":360,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouserstars",{"_index":401,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{}}}],["repo.repotouserstars)@joincolumn({name",{"_index":416,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["repo.repotouservotes",{"_index":399,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouservotes)@joincolumn({name",{"_index":426,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["repo.service",{"_index":359,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{}}}],["repo.to.user.stars.entity",{"_index":341,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.votes.entity",{"_index":340,"title":{},"body":{"entities/Repo.html":{}}}],["repo.user",{"_index":475,"title":{},"body":{"entities/User.html":{}}}],["repo/repo.entity",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/User.html":{}}}],["repo/repo.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["repo/repo.to.user.stars.entity",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.votes.entity",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo_id",{"_index":99,"title":{},"body":{"entities/Contribution.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["repocontroller",{"_index":348,"title":{"controllers/RepoController.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"coverage.html":{}}}],["repomodule",{"_index":8,"title":{"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["reporepository",{"_index":387,"title":{},"body":{"injectables/RepoService.html":{}}}],["repos",{"_index":342,"title":{},"body":{"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/User.html":{},"changelog.html":{}}}],["reposervice",{"_index":358,"title":{"injectables/RepoService.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"coverage.html":{},"overview.html":{}}}],["repository",{"_index":385,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["repotouserstars",{"_index":49,"title":{"entities/RepoToUserStars.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstars.repo",{"_index":324,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstars.user",{"_index":477,"title":{},"body":{"entities/User.html":{}}}],["repotouservotes",{"_index":47,"title":{"entities/RepoToUserVotes.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouservotes.repo",{"_index":326,"title":{},"body":{"entities/Repo.html":{}}}],["repotouservotes.user",{"_index":479,"title":{},"body":{"entities/User.html":{}}}],["request",{"_index":462,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"changelog.html":{}}}],["requirements",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"index.html":{},"overview.html":{}}}],["response.decorator",{"_index":367,"title":{},"body":{"controllers/RepoController.html":{}}}],["response.decorator.ts",{"_index":775,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["restriction",{"_index":869,"title":{},"body":{"license.html":{}}}],["results",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":173,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":151,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["revert",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":872,"title":{},"body":{"license.html":{}}}],["rogue",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":556,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runner",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["sauced",{"_index":793,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["sauced/api.opensauced.pizza",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["sauced/api.opensauced.pizza#readme",{"_index":943,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza.git",{"_index":947,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza/issues",{"_index":945,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":836,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scoping",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":835,"title":{},"body":{"index.html":{}}}],["select",{"_index":127,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"changelog.html":{}}}],["select(['repo.id",{"_index":395,"title":{},"body":{"injectables/RepoService.html":{}}}],["sell",{"_index":880,"title":{},"body":{"license.html":{}}}],["service",{"_index":147,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["shall",{"_index":889,"title":{},"body":{"license.html":{}}}],["simple",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["simplest",{"_index":826,"title":{},"body":{"index.html":{}}}],["skip",{"_index":261,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["skip(pageoptionsdto.skip",{"_index":404,"title":{},"body":{"injectables/RepoService.html":{}}}],["software",{"_index":798,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"index.html":{}}}],["spec",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["src/.../api",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoint.config.ts",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":792,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.constant.ts",{"_index":789,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../page",{"_index":953,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.module.ts",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/supabase.strategy.ts",{"_index":434,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts:11",{"_index":436,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:22",{"_index":439,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/common/constants/order.constant.ts",{"_index":790,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/decorators/api",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/page",{"_index":229,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/dtos/page.dto.ts",{"_index":203,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts:11",{"_index":215,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dtos/page.dto.ts:16",{"_index":209,"title":{},"body":{"classes/PageDto.html":{}}}],["src/config/endpoint.config.ts",{"_index":779,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contribution/contribution.entity.ts",{"_index":92,"title":{},"body":{"entities/Contribution.html":{},"coverage.html":{}}}],["src/contribution/contribution.entity.ts:15",{"_index":128,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:21",{"_index":114,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:26",{"_index":122,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:32",{"_index":109,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:38",{"_index":129,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:45",{"_index":126,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:9",{"_index":116,"title":{},"body":{"entities/Contribution.html":{}}}],["src/health/health.controller.ts",{"_index":142,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:28",{"_index":150,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:47",{"_index":154,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":199,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":781,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/repo/repo.controller.ts",{"_index":349,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{}}}],["src/repo/repo.controller.ts:18",{"_index":353,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.entity.ts",{"_index":289,"title":{},"body":{"entities/Repo.html":{},"coverage.html":{}}}],["src/repo/repo.entity.ts:104",{"_index":318,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:110",{"_index":321,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:116",{"_index":332,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:123",{"_index":334,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:126",{"_index":306,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:129",{"_index":327,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:132",{"_index":325,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:26",{"_index":313,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:32",{"_index":335,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:38",{"_index":316,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:44",{"_index":328,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:50",{"_index":336,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:56",{"_index":329,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:59",{"_index":315,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:65",{"_index":309,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:71",{"_index":331,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:77",{"_index":323,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:83",{"_index":320,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:89",{"_index":322,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:95",{"_index":312,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:98",{"_index":311,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.module.ts",{"_index":377,"title":{},"body":{"modules/RepoModule.html":{}}}],["src/repo/repo.service.ts",{"_index":382,"title":{},"body":{"injectables/RepoService.html":{},"coverage.html":{}}}],["src/repo/repo.service.ts:11",{"_index":386,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:17",{"_index":389,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.to.user.stars.entity.ts",{"_index":412,"title":{},"body":{"entities/RepoToUserStars.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:13",{"_index":415,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:16",{"_index":421,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:19",{"_index":418,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:26",{"_index":420,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:33",{"_index":417,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.votes.entity.ts",{"_index":424,"title":{},"body":{"entities/RepoToUserVotes.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:13",{"_index":425,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:16",{"_index":431,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:19",{"_index":428,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:26",{"_index":430,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:33",{"_index":427,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/user/user.entity.ts",{"_index":464,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:11",{"_index":471,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:17",{"_index":474,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:20",{"_index":470,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:23",{"_index":473,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:26",{"_index":472,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:32",{"_index":469,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:35",{"_index":476,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:38",{"_index":480,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:41",{"_index":478,"title":{},"body":{"entities/User.html":{}}}],["stable",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["stars",{"_index":299,"title":{},"body":{"entities/Repo.html":{}}}],["starscount",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":812,"title":{},"body":{"index.html":{}}}],["started",{"_index":483,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":808,"title":{},"body":{"index.html":{}}}],["statements",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":101,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":652,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["structured",{"_index":938,"title":{},"body":{"properties.html":{}}}],["studio",{"_index":809,"title":{},"body":{"index.html":{}}}],["styles",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["subdomain",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":885,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":878,"title":{},"body":{"license.html":{}}}],["submission",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["subscribers",{"_index":300,"title":{},"body":{"entities/Repo.html":{}}}],["substantial",{"_index":891,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supabase",{"_index":446,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["supabase.strategy",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{}}}],["supabase/supabase",{"_index":448,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabase>=0.18.0",{"_index":806,"title":{},"body":{"index.html":{}}}],["supabaseauthstrategy",{"_index":444,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasejwtsecret",{"_index":456,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasekey",{"_index":453,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseoptions",{"_index":455,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasestrategy",{"_index":85,"title":{"injectables/SupabaseStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":451,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super",{"_index":450,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.authenticate(req",{"_index":463,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.validate(user",{"_index":460,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["support",{"_index":920,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":921,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":207,"title":{},"body":{"classes/PageDto.html":{}}}],["table",{"_index":786,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["tagging",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":235,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["take(pageoptionsdto.take",{"_index":405,"title":{},"body":{"injectables/RepoService.html":{}}}],["target",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["tech",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["ted",{"_index":949,"title":{},"body":{"properties.html":{}}}],["temporary",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":566,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["thing",{"_index":811,"title":{},"body":{"index.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":182,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":185,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":198,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":190,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":194,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":196,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":192,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":188,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":177,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":179,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.data",{"_index":227,"title":{},"body":{"classes/PageDto.html":{}}}],["this.database.pingcheck(\"db",{"_index":175,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":184,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":180,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hasnextpage",{"_index":257,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":256,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.health.check",{"_index":174,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":197,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":189,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":193,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":195,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":191,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":187,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.itemcount",{"_index":253,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":176,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":178,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.meta",{"_index":228,"title":{},"body":{"classes/PageDto.html":{}}}],["this.page",{"_index":247,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":254,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.reporepository.createquerybuilder(\"repo",{"_index":394,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.reposervice.findall(pageoptionsdto",{"_index":373,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.take",{"_index":250,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["thresholdpercent",{"_index":181,"title":{},"body":{"controllers/HealthController.html":{}}}],["time",{"_index":120,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["timestamp",{"_index":118,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["tld",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["tmodel",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_timestamp(0",{"_index":319,"title":{},"body":{"entities/Repo.html":{}}}],["token",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":914,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":224,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["true",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"classes/PageDto.html":{}}}],["true})@type(undefined",{"_index":214,"title":{},"body":{"classes/PageDto.html":{}}}],["true})@validatenested({each",{"_index":213,"title":{},"body":{"classes/PageDto.html":{}}}],["type",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":951,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{}}}],["typeormhealthindicator",{"_index":157,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{}}}],["typeormmodule.forfeature([repo",{"_index":379,"title":{},"body":{"modules/RepoModule.html":{}}}],["typeormmodule.forrootasync",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["undefined})@isenum(order)@isoptional",{"_index":266,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["unknown",{"_index":152,"title":{},"body":{"controllers/HealthController.html":{},"injectables/SupabaseStrategy.html":{}}}],["up",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["updated_at",{"_index":301,"title":{},"body":{"entities/Repo.html":{}}}],["updatedatecolumn",{"_index":338,"title":{},"body":{"entities/Repo.html":{}}}],["updatedatecolumn({type",{"_index":330,"title":{},"body":{"entities/Repo.html":{}}}],["url",{"_index":100,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["url(`https://${subdomain",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":873,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":43,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["user.repos",{"_index":347,"title":{},"body":{"entities/Repo.html":{}}}],["user.repos)@joincolumn({name",{"_index":333,"title":{},"body":{"entities/Repo.html":{}}}],["user.repotouserstars",{"_index":423,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotouserstars)@joincolumn({name",{"_index":419,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotouservotes",{"_index":433,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user.repotouservotes)@joincolumn({name",{"_index":429,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user/user.entity",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["user_id",{"_index":302,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["username",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":481,"title":{},"body":{"entities/User.html":{}}}],["users_to_repos_stars",{"_index":422,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["users_to_repos_votes",{"_index":432,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["validate",{"_index":435,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validate(user",{"_index":437,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validatenested",{"_index":220,"title":{},"body":{"classes/PageDto.html":{}}}],["validator",{"_index":221,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["value",{"_index":262,"title":{},"body":{"classes/PageOptionsDto.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":528,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":512,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":105,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["verify",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":678,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versiond",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":851,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":855,"title":{},"body":{"index.html":{}}}],["visually",{"_index":817,"title":{},"body":{"index.html":{}}}],["volume",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["volumes",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["vortex",{"_index":950,"title":{},"body":{"properties.html":{}}}],["vortex/api.opensauced.pizza",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["votescount",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":899,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":894,"title":{},"body":{"license.html":{}}}],["watchers",{"_index":303,"title":{},"body":{"entities/Repo.html":{}}}],["way",{"_index":827,"title":{},"body":{"index.html":{}}}],["web",{"_index":148,"title":{},"body":{"controllers/HealthController.html":{}}}],["whether",{"_index":911,"title":{},"body":{"license.html":{}}}],["without",{"_index":119,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{},"license.html":{}}}],["workflow",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":829,"title":{},"body":{"index.html":{}}}],["yaml",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":853,"title":{},"body":{"index.html":{}}}],["zone",{"_index":121,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            RepoModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm/dist/interfaces/typeorm-options.interface\";\nimport { DataSource } from \"typeorm\";\n\nimport { RepoModule } from \"./repo/repo.module\";\nimport apiConfig from \"./config/api.config\";\nimport dbConfig from \"./config/database.config\";\nimport endpointConfig from \"./config/endpoint.config\";\nimport { HealthModule } from \"./health/health.module\";\nimport { Repo } from \"./repo/repo.entity\";\nimport { User } from \"./user/user.entity\";\nimport { Contribution } from \"./contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo/repo.to.user.stars.entity\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        apiConfig,\n        dbConfig,\n        endpointConfig\n      ],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\"db.connection\"),\n        host: configService.get(\"db.host\"),\n        port: configService.get(\"db.port\"),\n        username: configService.get(\"db.username\"),\n        password: configService.get(\"db.password\"),\n        database: configService.get(\"db.database\"),\n        autoLoadEntities: false,\n        entities: [\n          User,\n          Repo,\n          Contribution,\n          RepoToUserVotes,\n          RepoToUserStars,\n        ],\n        synchronize: false,\n      }),\n      inject: [ConfigService],\n    }),\n    TerminusModule,\n    HttpModule,\n    HealthModule,\n    RepoModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  constructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SupabaseStrategy } from \"./supabase.strategy\";\nimport { PassportModule } from \"@nestjs/passport\";\n\n@Module({\n  imports: [PassportModule],\n  providers: [SupabaseStrategy],\n  exports: [SupabaseStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Contribution.html":{"url":"entities/Contribution.html","title":"entity - Contribution","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Contribution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributor\n                            \n                            \n                                count\n                            \n                            \n                                id\n                            \n                            \n                                last_merged_at\n                            \n                            \n                                repo\n                            \n                            \n                                repo_id\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_merged_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.contributions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, BaseEntity, PrimaryColumn, ManyToOne, JoinColumn } from \"typeorm\";\nimport { Repo } from \"../repo/repo.entity\";\n\n@Entity({\n  name: \"contributions\"\n})\nexport class Contribution extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  repo_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  count: number;\n\n  @Column({\n    type: \"timestamp without time zone\"\n  })\n  last_merged_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  contributor: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => Repo, (repo) => repo.contributions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  repo: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiTags } from \"@nestjs/swagger\";\n\n@ApiTags(\"health\")\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @HealthCheck()\n  @ApiOkResponse()\n  async service() {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\"),\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\"),\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @HealthCheck()\n  @ApiOkResponse()\n  async web() {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, ValidateNested } from \"class-validator\";\nimport { PageMetaDto } from \"./page-meta.dto\";\nimport { Type } from \"class-transformer\";\n\nexport class PageDto {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  @ValidateNested({ each: true })\n  @Type(() => Array)\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PageMetaDto })\n  @ValidateNested()\n  @Type(() => PageMetaDto)\n  readonly meta: PageMetaDto;\n\n  constructor(data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { PageMetaParameters } from \"./page-meta-parameters.dto\";\n\nexport class PageMetaDto {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: PageMetaParameters) {\n    this.page = pageOptionsDto.page || 1;\n    this.take = pageOptionsDto.take || 10;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Order, enumName: 'Order', default: undefined})@IsEnum(Order)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dtos/page-options.dto.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEnum, IsInt, IsOptional, Max, Min } from \"class-validator\";\nimport { Order } from \"../constants/order.constant\";\n\nexport class PageOptionsDto {\n  @ApiPropertyOptional({ enum: Order, enumName: \"Order\", default: Order.ASC })\n  @IsEnum(Order)\n  @IsOptional()\n  readonly order?: Order = Order.ASC;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 50,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(50)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return ((this.page || 1) - 1) * (this.take || 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Repo.html":{"url":"entities/Repo.html","title":"entity - Repo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Repo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributions\n                            \n                            \n                                created_at\n                            \n                            \n                                description\n                            \n                            \n                                full_name\n                            \n                            \n                                id\n                            \n                            \n                                is_fork\n                            \n                            \n                                issues\n                            \n                            \n                                language\n                            \n                            \n                                last_fetched_contributors_at\n                            \n                            \n                                license\n                            \n                            \n                                name\n                            \n                            \n                                pushed_at\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                stars\n                            \n                            \n                                subscribers\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                            \n                                user_id\n                            \n                            \n                                watchers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contribution[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, contribution => contribution.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_fork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_fetched_contributors_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => to_timestamp(0)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        license\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repos)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  JoinColumn,\n  ManyToOne,\n  CreateDateColumn,\n  UpdateDateColumn, OneToMany\n} from \"typeorm\";\n\nimport { User } from \"../user/user.entity\";\nimport { Contribution } from \"../contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo.to.user.stars.entity\";\n\n@Entity({\n  name: \"repos\",\n  orderBy: {\n    stars: \"DESC\",\n    name: \"ASC\"\n  }\n})\nexport class Repo extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  user_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  issues: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  stars: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  watchers: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  subscribers: number;\n\n  @Column({ default: false })\n  is_fork: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  pushed_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"to_timestamp(0)\",\n  })\n  last_fetched_contributors_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  name: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  full_name: string;\n\n  @Column(\"text\")\n  description: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  language: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  license: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => User, user => user.repos)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  user: User;\n\n  @OneToMany(() => Contribution, contribution => contribution.repo)\n  contributions: Contribution[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.repo)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.repo)\n  repoToUserStars: RepoToUserStars[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoController.html":{"url":"controllers/RepoController.html","title":"controller - RepoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserList\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserList(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@HttpCode(HttpStatus.OK)@ApiPaginatedResponse(Repo)@ApiOkResponse({type: Repo})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, Query } from \"@nestjs/common\";\nimport { RepoService } from \"./repo.service\";\nimport { Repo } from \"./repo.entity\";\nimport { ApiOkResponse, ApiTags } from \"@nestjs/swagger\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repositories\")\nexport class RepoController {\n  constructor(private readonly repoService: RepoService) {}\n\n  @Get(\"/list\")\n  @HttpCode(HttpStatus.OK)\n  @ApiPaginatedResponse(Repo)\n  @ApiOkResponse({ type: Repo })\n  async findUserList(\n    @Query() pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepoModule.html":{"url":"modules/RepoModule.html","title":"module - RepoModule","body":"\n                   \n\n\n\n\n    Modules\n    RepoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_providers\n\n\n\ncluster_RepoModule_exports\n\n\n\n\nRepoService \n\nRepoService \n\n\n\nRepoModule\n\nRepoModule\n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/repo/repo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepoService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { RepoService } from \"./repo.service\";\nimport { RepoController } from \"./repo.controller\";\nimport { Repo } from \"./repo.entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Repo])],\n  controllers: [RepoController],\n  providers: [RepoService],\n  exports: [RepoService],\n})\nexport class RepoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepoService.html":{"url":"injectables/RepoService.html","title":"injectable - RepoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/repo/repo.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { Repo } from \"./repo.entity\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Injectable()\nexport class RepoService {\n  constructor(\n    @InjectRepository(Repo)\n    private repoRepository: Repository,\n  ) {}\n\n  async findAll(\n    pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    const builder = this.repoRepository.createQueryBuilder(\"repo\")\n      // .select(['repo.id'])\n      .leftJoinAndSelect(\"repo.user\", \"user\")\n      .leftJoinAndSelect(\"repo.contributions\", \"contributions\")\n      .loadRelationCountAndMap(\"repo.votesCount\", \"repo.repoToUserVotes\")\n      .loadRelationCountAndMap(\"repo.starsCount\", \"repo.repoToUserStars\")\n      .orderBy(\"repo.pushed_at\", pageOptionsDto.order)\n      .skip(pageOptionsDto.skip)\n      .take(pageOptionsDto.take);\n\n    // console.log(builder.getSql());\n\n    const itemCount = await builder.getCount();\n    const entities = await builder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStars.html":{"url":"entities/RepoToUserStars.html","title":"entity - RepoToUserStars","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStars\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.stars.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStars)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStars)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stars\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserStars {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStars)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStars)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserVotes.html":{"url":"entities/RepoToUserVotes.html","title":"entity - RepoToUserVotes","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserVotes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.votes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserVotes)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserVotes)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_votes\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserVotes {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @ManyToOne(() => User, (user) => user.repoToUserVotes)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserVotes)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseStrategy.html":{"url":"injectables/SupabaseStrategy.html","title":"injectable - SupabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/supabase.strategy.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(user: AuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { SupabaseAuthStrategy } from \"nestjs-supabase-auth\";\nimport { AuthUser } from \"@supabase/supabase-js\";\n\n@Injectable()\nexport class SupabaseStrategy extends PassportStrategy(\n  SupabaseAuthStrategy,\n  \"supabase\",\n) {\n  public constructor() {\n    super({\n      supabaseUrl: process.env.SUPABASE_URL,\n      supabaseKey: process.env.SUPABASE_KEY,\n      supabaseOptions: {},\n      supabaseJwtSecret: process.env.SUPABASE_JWT_SECRET,\n      extractor: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate(user: AuthUser) {\n    return super.validate(user);\n  }\n\n  // authenticate(req: Request) {\n  //   super.authenticate(req);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                has_stars_data\n                            \n                            \n                                id\n                            \n                            \n                                is_open_sauced_member\n                            \n                            \n                                is_private\n                            \n                            \n                                open_issues\n                            \n                            \n                                repos\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserVotes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has_stars_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_open_sauced_member\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open_issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repo => repo.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, BaseEntity, PrimaryColumn, OneToMany, CreateDateColumn } from \"typeorm\";\nimport { Repo } from \"../repo/repo.entity\";\nimport { RepoToUserVotes } from \"../repo/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"../repo/repo.to.user.stars.entity\";\n\n@Entity({\n  name: \"users\"\n})\nexport class User extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  open_issues: number;\n\n  @Column({ default: false })\n  has_stars_data: boolean;\n\n  @Column({ default: false })\n  is_private: boolean;\n\n  @Column({ default: false })\n  is_open_sauced_member: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @OneToMany(() => Repo, repo => repo.user)\n  repos: Repo[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.user)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.user)\n  repoToUserStars: RepoToUserVotes[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.7.10 (2022-07-30)\n🔁 Continuous Integration\n\ncorrect the digital ocean tagging (673dca9)\n\n1.7.9 (2022-07-30)\n✅ Tests\n\ncheck release job outputs (31e4d60)\n\n1.7.8 (2022-07-29)\n🔁 Continuous Integration\n\ncorrect environment variables (6d23c24)\n\n1.7.7 (2022-07-29)\n✅ Tests\n\nprint out proper pull request target env variables (20880c7)\n\n1.7.6 (2022-07-29)\n🔁 Continuous Integration\n\necho github context (7adfb6b)\n\n1.7.5 (2022-07-29)\n🔁 Continuous Integration\n\nprovide variable as ENV (b57f47b)\n\n1.7.4 (2022-07-29)\n🔁 Continuous Integration\n\nchange pull request event target (20bc1e7)\n\n1.7.3 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect digital ocean docker tag based on target (b1a67da)\n\n1.7.2 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect static domain and release clean up workflow (a229a3b)\nupdate dependencies and list docr tags (79bf61d)\n\n🔁 Continuous Integration\n\nadd docr push dry run (5eddeb1)\nadd release workflow concurrency for demo purposes (63d6a92)\nextend digital ocean temporary token (d0d5ca5)\ntest bash variable environment (e1fe498)\n\n1.7.1 (2022-07-27)\n🔁 Continuous Integration\n\ndeploy developer mkdocs to github pages test (8837b2a)\n\n1.7.0 (2022-07-27)\n📝 Documentation\n\nchange github pages deploy to take tech mkdocs instead of api (bc3a37d)\n\n1.6.17 (2022-07-24)\n🔁 Continuous Integration\n\nadd temporary debug logging (ba8dfbb)\n\n1.6.16 (2022-07-23)\n🔁 Continuous Integration\n\nproperly copy contents from mounted container volume (c013b70)\n\n1.6.15 (2022-07-23)\n🔁 Continuous Integration\n\ncreate new container from release (b1eda28)\n\n1.6.14 (2022-07-23)\n🔁 Continuous Integration\n\ntest file is generated properly (c127cea)\n\n🤖 Build System\n\nattempt docker inspection again (2c0b3d1)\n\n1.6.13 (2022-07-23)\n🔁 Continuous Integration\n\ntest proper container name exposing (cc46460)\n\n1.6.12 (2022-07-23)\n🔁 Continuous Integration\n\ntest local swagger spec (7e9b8a4)\n\n1.6.11 (2022-07-21)\n🔁 Continuous Integration\n\ntest getting docker process list output (f5385b3)\n\n1.6.10 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to get value from running container (911df68)\ntest accessing running container by re-creating (77c734c)\n\n1.6.9 (2022-07-21)\n🔁 Continuous Integration\n\nget container name from runner context (94ba4e1)\n\n1.6.8 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to assign docker service name to running container (fe4b9e9)\n\n1.6.7 (2022-07-21)\n✅ Tests\n\nmount docker service and volumes (0848443)\n\n1.6.6 (2022-07-21)\n✅ Tests\n\nload docker container from artifact (b7c3395)\n\n1.6.5 (2022-07-21)\n🐛 Bug Fixes\n\ncorrect docker local creation (cd306f8)\n\n1.6.4 (2022-07-21)\n✅ Tests\n\nload docker container in flight environment (e145e2d)\n\n1.6.3 (2022-07-20)\n🤖 Build System\n\nupdate deployment and add simple repo submission structure (33fea7e)\n\n1.6.2 (2022-07-19)\n🤖 Build System\n\nrevert to production release container (8aee8e5)\n\n1.6.1 (2022-07-19)\n🤖 Build System\n\nimprove swagger generation (22d3cc1)\n\n🐛 Bug Fixes\n\ncorrect workflow yaml comments (7fe63aa)\n\n1.6.0 (2022-07-19)\n🎨 Styles\n\nimplement correct eslint rules for immediate scoping (bd6d621), closes #1\n\n🍕 Features\n\nupdate dependencies and nest to stable new version (c24937f)\n\n🔁 Continuous Integration\n\nadd docker build and static swagger docs jobs (81e8bbc)\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n🤖 Build System\n\nadd better eslint baseline configuration (3918a78)\nadd minimal eslint configuration (a0db0aa)\nadd minor deployment improvements and github pages adjustments (cb83f9d)\nimplement prettier rules in typescript eslint (166050d)\n\n🐛 Bug Fixes\n\ncorrect release workflow artifact strategy (b5b6ac5)\ncorrect rogue workflow artifact (61b67d5)\n\n1.5.1 (2022-07-13)\n🔁 Continuous Integration\n\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n📦 0-vortex/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.5.0 (2022-06-21)\n🍕 Features\n\nimplement proper starsCount (fdc11ea)\nimplement proper votesCount (607cf5d)\n\n1.4.0 (2022-06-17)\n🍕 Features\n\nadd minimal pagination decorator (ac31556)\n\n1.3.0 (2022-06-10)\n🍕 Features\n\nadd abstract pagination component (630f3b5)\nadd repository relations and limit select (b4d3785)\n\n1.2.0 (2022-06-09)\n🍕 Features\n\nattach user relationship to get repos (e663170)\n\n1.1.0 (2022-06-07)\n🍕 Features\n\nadd basic tld entities (273f337)\n\n1.0.2 (2022-06-05)\n🤖 Build System\n\nadd supabase migration system (34d521d)\n\n1.0.1 (2022-06-05)\n✅ Tests\n\nverify database diagrams generation (73d1c74)\n\n1.0.0 (2022-06-05)\n🍕 Features\n\nadjust health checks endpoints (cb9206d)\ninitial commit (5e7c6c7)\n\n🐛 Bug Fixes\n\ncorrect npm scripts, workflow node versiond and update deps (2c0b15f)\nupdate nest typeorm integration and correct db status (58bf922)\n\n🔥 Performance Improvements\n\nremove minor version engines requirements (7db9008)\n\n✅ Tests\n\nexplain current test configuration and unblock pipelines (272c09a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/supabase.strategy.ts\n            \n            injectable\n            SupabaseStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/dtos/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/endpoint.config.ts\n            \n            variable\n            getDomain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.entity.ts\n            \n            entity\n            Contribution\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.controller.ts\n            \n            controller\n            RepoController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/repo/repo.entity.ts\n            \n            entity\n            Repo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.service.ts\n            \n            injectable\n            RepoService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.stars.entity.ts\n            \n            entity\n            RepoToUserStars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.votes.entity.ts\n            \n            entity\n            RepoToUserVotes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../order.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/order.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        Order\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n  🍕 Open Sauced Nest Supabase API🍕\n  The path to your next Open Source contribution\n\n\n\n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=16.7.0\nnpm>=8.0.0\ndocker>=20.10.12\nsupabase>=0.18.0\n\n🔑 Database commands\nStarting the Supabase Studio\nFirst thing we have to do for local development is start the studio locally at localhost:54321:\nnpm run db:startMake changes\nIf we are adding a new table structure, first do it visually in the Supabase Studio and test locally.\nCheck the migration difference with the following command:\nnpm run db:changesIf everything is fine we can run the following command to apply the changes to the database:\nnpm run db:commit add_table_nameTest changes\nSimplest way to test the migrations are working is to reset the local database:\nnpm run db:resetPush changes\nIf everything is fine we can push the changes to the remote database:\nnpm run db:push🔑 Supabase structure\nClick the image to see the schema diagram full documentation.\n\n🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.7.10\n        \n            Description : API dot Open Sauced is NestJS and SupaBase powered OAS3 backend designed to remove client complexity and provide a structured graph of all @open-sauced integrations\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/api.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/api.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/api.opensauced.pizza.git\n        \n            Author : TED Vortex \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageMetaParameters   (src/.../page-meta-parameters.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/dtos/page-meta-parameters.dto.ts\n    \n    \n        \n            \n                \n                    \n                    PageMetaParameters\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            getDomain   (src/.../endpoint.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  model: TModel,\n) => {\n  return applyDecorators(\n    ApiExtraModels(PageDto, Repo),\n    ApiOkResponse({\n      description: \"Successfully received model list\",\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PageDto) },\n          {\n            properties: {\n              data: {\n                type: \"array\",\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/config/endpoint.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (subdomain?: string) =>\n  new URL(`https://${subdomain ? `${subdomain}.` : \"\" }${process.env.DOMAIN || \"opensauced.pizza\"}`).toString()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
