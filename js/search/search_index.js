var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.313,1,2.197]],["body/modules/AppModule.html",[0,1.688,1,4.187,2,1.417,3,2.331,4,2.597,5,2.597,6,3.455,7,0.029,8,3.455,9,3.455,10,3.455,11,2.555,12,1.676,13,1.417,14,0.359,15,0.322,16,0.286,17,3.089,18,2.937,19,0.855,20,0.972,21,2.273,22,1.837,23,4.296,24,4.489,25,2.597,26,4.296,27,3.089,28,3.612,29,2.273,30,3.089,31,3.089,32,3.089,33,4.94,34,1.126,35,3.089,36,4.296,37,3.089,38,4.296,39,3.089,40,4.296,41,3.089,42,3.089,43,1.003,44,1.837,45,1.256,46,1.676,47,2.139,48,2.597,49,1.688,50,1.837,51,2.139,52,2.597,53,2.139,54,2.597,55,2.139,56,2.597,57,3.089,58,3.089,59,3.089,60,2.597,61,3.089,62,2.597,63,3.089,64,3.089,65,0.479,66,3.089,67,3.089,68,3.089,69,3.089,70,3.089,71,3.089,72,3.089,73,3.089,74,3.089,75,2.03,76,3.089,77,3.089,78,2.824,79,1.126,80,3.089,81,3.089,82,1.214,83,2.03,84,0.359,85,0.155,86,2.597,87,0.018,88,0.018]],["title/controllers/AuthController.html",[89,1.418,90,2.197]],["body/controllers/AuthController.html",[7,0.029,14,0.428,15,0.384,16,0.341,19,0.787,20,1.159,45,1.742,65,0.751,82,1.448,84,0.428,85,0.185,87,0.021,88,0.021,89,1.563,90,3.181,91,3.097,92,2.421,93,3.214,94,0.474,95,2.41,96,5.405,97,3.684,98,4.825,99,1,100,3.684,101,4.84,102,3.181,103,4.84,104,4.068,105,3.684,106,3.684,107,0.736,108,3.684,109,1.69,110,0.797,111,1.247,112,1.834,113,3.773,114,3.097,115,3.097,116,3.097,117,4.068,118,2.878,119,3.181,120,2.421,121,1.69,122,1.834,123,3.097,124,2.71,125,2.191,126,3.684,127,3.684,128,3.684,129,3.684,130,3.684,131,2.191,132,3.684,133,3.097,134,2.421,135,3.684,136,3.097,137,2.191,138,4.068,139,4.068,140,4.068,141,4.068,142,1.764,143,1.764,144,3.684,145,3.684,146,1.563,147,1.159,148,3.684]],["title/modules/AuthModule.html",[0,1.313,6,1.987]],["body/modules/AuthModule.html",[0,2.037,2,1.88,3,2.812,6,3.911,7,0.029,11,3.082,12,2.223,13,1.88,14,0.476,15,0.427,16,0.379,18,2.436,19,0.793,20,1.289,82,2.037,83,3.407,84,0.476,85,0.206,87,0.022,88,0.022,90,3.737,122,3.312,123,3.444,149,3.444,150,3.444,151,3.444,152,3.956,153,4.097,154,3.813,155,5.183,156,3.014,157,4.097,158,4.097]],["title/entities/Contribution.html",[47,1.664,159,0.842]],["body/entities/Contribution.html",[7,0.029,14,0.322,15,0.289,16,0.257,19,0.512,34,1.011,43,1.406,44,1.65,47,1.983,65,1.008,78,2.617,79,1.011,84,0.322,85,0.139,87,0.017,88,0.017,94,0.357,99,1.658,107,1.221,110,0.861,142,1.698,143,1.698,147,1.695,159,1.003,160,2.332,161,1.081,162,4.658,163,4.658,164,2.319,165,4.658,166,2.924,167,3.427,168,2.534,169,3.965,170,4.279,171,4.279,172,4.279,173,4.279,174,2.774,175,1.64,176,3.745,177,2.045,178,2.368,179,2.774,180,2.944,181,1.381,182,2.944,183,2.713,184,2.944,185,2.944,186,2.534,187,2.774,188,1.381,189,2.774,190,2.041,191,2.774,192,2.774,193,1.505,194,2.774,195,2.161,196,2.774,197,2.93,198,2.774,199,1.381,200,2.774,201,2.774,202,2.793,203,2.93,204,2.041,205,2.161,206,2.161,207,1.983,208,1.983,209,1.983,210,2.041,211,1.505,212,2.041,213,2.332]],["title/controllers/HealthController.html",[89,1.418,214,2.197]],["body/controllers/HealthController.html",[7,0.029,14,0.359,15,0.322,16,0.287,19,0.687,20,0.973,24,4.157,25,2.602,29,2.277,75,2.034,82,1.216,84,0.359,85,0.155,87,0.018,88,0.018,89,1.313,92,2.034,94,0.398,95,2.142,99,1.168,102,3.512,107,0.86,112,2.142,118,2.94,119,3.25,120,2.034,121,1.42,131,3.546,134,2.828,146,1.825,214,2.828,215,2.602,216,4.887,217,3.558,218,5.813,219,3.095,220,4.302,221,4.132,222,3.178,223,3.512,224,4.302,225,3.095,226,3.165,227,3.095,228,4.302,229,3.095,230,4.302,231,4.302,232,4.302,233,4.945,234,4.302,235,4.302,236,3.095,237,3.095,238,1.541,239,3.821,240,3.095,241,3.095,242,3.095,243,1.42,244,3.095,245,3.616,246,4.302,247,3.095,248,3.095,249,3.095,250,3.095,251,3.095,252,3.095,253,4.302,254,3.095,255,3.616,256,3.095,257,3.095,258,3.095,259,3.095,260,3.095,261,3.095,262,3.095,263,3.095,264,3.095,265,3.095,266,3.095,267,3.095,268,3.095,269,3.095,270,3.095]],["title/modules/HealthModule.html",[0,1.313,8,1.987]],["body/modules/HealthModule.html",[0,2.243,2,2.2,7,0.029,8,3.394,14,0.557,15,0.499,16,0.444,18,2.851,19,0.784,20,1.508,28,4.798,29,3.527,82,2.243,84,0.557,85,0.241,87,0.024,88,0.024,214,4.006,271,4.794,272,4.794]],["title/classes/PageDto.html",[85,0.168,273,1.987]],["body/classes/PageDto.html",[7,0.029,14,0.439,15,0.394,16,0.35,19,0.746,62,4.137,65,0.974,84,0.439,85,0.275,87,0.021,88,0.021,94,0.486,99,1.336,107,1.093,109,1.734,110,0.817,111,1.279,121,1.734,161,1.336,238,1.882,243,2.828,273,2.926,274,2.05,275,3.177,276,5.053,277,4.617,278,4.921,279,5.053,280,3.784,281,4.921,282,3.779,283,3.779,284,3.779,285,3.779,286,3.779,287,3.779,288,4.6,289,5.472,290,5.472,291,2.78,292,1.734,293,3.177,294,3.177,295,3.779,296,3.177,297,3.779,298,3.779]],["title/classes/PageMetaDto.html",[85,0.168,280,1.987]],["body/classes/PageMetaDto.html",[7,0.029,14,0.394,15,0.353,16,0.314,19,0.589,65,0.948,84,0.394,85,0.17,87,0.019,88,0.019,94,0.436,99,1.622,107,1.221,109,1.555,110,0.733,111,1.147,121,1.555,161,1.243,175,1.816,238,2.279,243,3.053,274,1.839,277,2.493,280,2.722,288,5.473,292,2.547,299,4.083,300,2.849,301,5.184,302,5.184,303,4.874,304,3.407,305,5.184,306,3.389,307,4.667,308,4.578,309,4.084,310,3.389,311,3.389,312,3.389,313,3.389,314,3.389,315,3.389,316,1.687,317,4.358,318,3.389,319,3.009,320,3.848,321,3.389,322,2.227,323,3.389,324,3.389,325,3.389,326,3.389,327,3.389]],["title/classes/PageOptionsDto.html",[85,0.168,316,1.664]],["body/classes/PageOptionsDto.html",[7,0.029,14,0.384,15,0.344,16,0.306,19,0.707,65,0.92,84,0.384,85,0.257,87,0.019,88,0.019,94,0.425,99,1.389,107,1.098,111,2.008,121,1.517,146,1.402,161,1.222,175,1.774,177,2.283,243,2.874,274,1.793,291,2.431,292,2.348,294,2.778,299,3.778,304,3.364,316,2.241,317,2.778,319,4.117,320,2.778,322,3.611,328,2.172,329,4.302,330,4.501,331,5.118,332,2.777,333,3.784,334,3.784,335,3.784,336,2.778,337,3.305,338,3.293,339,3.765,340,2.778,341,3.784,342,2.778,343,3.305,344,2.778,345,3.305,346,3.305,347,3.305,348,4.619,349,2.778,350,5.118,351,4.619,352,3.305,353,3.305,354,3.305,355,4.501,356,4.501,357,3.305,358,2.778,359,3.305]],["title/entities/Repo.html",[43,0.781,159,0.842]],["body/entities/Repo.html",[7,0.029,14,0.203,15,0.182,16,0.162,19,0.633,34,0.638,43,0.655,45,1.542,46,0.95,47,2.333,48,1.471,49,2.073,51,2.627,53,2.627,55,2.627,65,1.015,78,2.638,79,0.638,84,0.203,85,0.088,87,0.012,88,0.012,94,0.225,99,1.7,107,1.251,110,1.013,142,1.279,143,1.279,147,1.381,159,0.707,161,0.761,164,1.747,167,2.581,168,2.804,169,4.142,170,4.55,171,4.55,172,4.55,173,3.939,175,1.646,176,3.982,177,2.182,178,3.042,180,2.695,181,0.871,182,2.695,183,2.484,184,2.695,185,2.695,186,2.333,188,0.871,190,1.288,193,0.95,195,1.522,197,2.063,199,0.871,202,2.887,203,2.063,204,1.288,205,1.522,206,1.522,207,1.396,208,1.396,209,1.396,210,2.581,211,0.95,212,1.288,309,2.063,360,1.471,361,2.087,362,3.509,363,2.95,364,2.581,365,3.509,366,3.509,367,2.087,368,3.509,369,2.638,370,2.581,371,2.383,372,2.581,373,3.692,374,2.804,375,1.75,376,1.75,377,1.75,378,1.75,379,1.75,380,1.75,381,1.75,382,1.471,383,1.75,384,1.75,385,4.013,386,1.75,387,2.804,388,1.75,389,1.75,390,1.75,391,1.75,392,2.804,393,1.75,394,2.804,395,1.75,396,2.804,397,1.75,398,2.804,399,1.75,400,1.75,401,1.75,402,1.75,403,1.75,404,1.75,405,1.75,406,1.75,407,1.75,408,3.939,409,1.75,410,1.75,411,1.75,412,1.75,413,1.15,414,1.471,415,1.471,416,1.471,417,1.75,418,1.75]],["title/controllers/RepoController.html",[89,1.418,419,2.197]],["body/controllers/RepoController.html",[7,0.029,14,0.337,15,0.302,16,0.268,19,0.753,20,0.912,43,1.504,65,0.883,82,1.139,84,0.337,85,0.146,86,2.438,87,0.017,88,0.017,89,1.23,92,1.906,94,0.373,95,2.046,99,1.296,102,3.742,107,0.954,109,2.19,110,1.032,111,1.616,112,2.377,114,2.438,115,2.438,118,3.088,119,3.413,120,1.906,121,1.331,131,1.724,134,3.137,136,4.013,146,2.025,147,1.501,168,2.835,175,1.395,217,3.301,243,1.331,273,1.724,292,1.331,316,2.046,361,2.444,413,2.701,419,2.701,420,2.438,421,4.608,422,4.608,423,4.773,424,2.438,425,2.9,426,4.786,427,2.9,428,3.455,429,2.817,430,4.365,431,2.9,432,3.742,433,2.438,434,2.9,435,3.82,436,2.9,437,2.9,438,2.9,439,3.088,440,2.9,441,3.455,442,4.109,443,2.9,444,2.9,445,2.438,446,4.109,447,2.19,448,2.438,449,2.133,450,4.013,451,2.438,452,2.133,453,2.9,454,2.133,455,2.9,456,2.438,457,2.133,458,2.438,459,2.438,460,2.9,461,2.438,462,2.438,463,2.9,464,2.438,465,2.438,466,2.438,467,2.9,468,2.9,469,2.9]],["title/modules/RepoModule.html",[0,1.313,9,1.987]],["body/modules/RepoModule.html",[0,2.091,2,1.96,3,2.886,7,0.029,9,3.837,11,3.164,12,2.317,13,1.96,14,0.496,15,0.445,16,0.395,18,2.54,19,0.802,20,1.343,21,3.142,22,2.54,43,0.998,82,2.091,83,3.497,84,0.496,85,0.214,87,0.023,88,0.023,154,3.914,419,3.809,447,3.069,448,3.591,449,3.142,470,3.591,471,3.591,472,3.591,473,4.271,474,4.271,475,4.271]],["title/classes/RepoPageOptionsDto.html",[85,0.168,439,1.987]],["body/classes/RepoPageOptionsDto.html",[7,0.029,14,0.378,15,0.339,16,0.301,19,0.653,65,0.847,84,0.517,85,0.223,87,0.019,88,0.019,94,0.418,99,1.481,107,1.09,110,0.962,111,2.083,121,1.492,142,1.623,143,1.623,161,1.208,175,1.301,177,2.275,211,2.415,243,2.864,274,1.764,291,2.392,292,2.504,304,2.925,316,2.939,319,3.336,322,2.137,328,2.137,329,3.742,332,2.961,333,3.742,334,2.733,335,2.733,336,2.733,338,2.753,339,2.392,340,3.742,341,4.266,342,2.733,344,2.733,348,3.742,349,2.733,351,3.742,358,3.742,364,3.274,369,2.925,370,3.274,372,3.274,414,4.266,439,2.647,457,2.392,476,3.274,477,5.08,478,5.075,479,3.252,480,3.252,481,5.075,482,3.252,483,3.252,484,3.252,485,2.733,486,3.274,487,2.925,488,3.274,489,3.274,490,2.925,491,3.252]],["title/injectables/RepoService.html",[447,1.534,492,1.418]],["body/injectables/RepoService.html",[7,0.029,14,0.27,15,0.242,16,0.216,19,0.723,20,0.732,22,1.385,34,0.849,43,1.231,45,0.68,47,1.743,49,0.915,51,1.159,53,1.159,55,1.159,65,0.818,79,0.849,84,0.27,85,0.117,87,0.015,88,0.015,94,0.299,95,1.743,107,1.053,109,2.418,110,1.182,111,1.698,112,2.498,137,3.587,146,2.128,147,1.472,159,1.06,168,3.067,175,1.229,177,0.849,210,2.575,213,1.957,217,3.122,238,1.743,239,1.53,273,1.385,279,1.957,280,2.782,292,1.068,293,1.957,303,2.943,316,2.095,332,1.263,338,1.263,339,2.575,363,1.957,369,2.301,421,2.943,422,2.943,424,2.943,429,2.539,432,3.464,433,2.943,435,1.713,439,2.782,441,3.537,447,1.606,449,1.713,451,1.957,456,1.957,457,1.713,485,1.957,486,1.713,487,1.53,488,1.713,489,1.713,490,1.53,492,1.485,493,1.385,494,1.957,495,3.933,496,3.501,497,2.328,498,2.328,499,3.501,500,2.328,501,2.328,502,2.328,503,2.328,504,2.328,505,3.501,506,4.679,507,4.207,508,3.537,509,2.328,510,3.501,511,3.537,512,1.957,513,2.328,514,2.328,515,3.501,516,2.328,517,3.501,518,2.328,519,2.328,520,2.328,521,2.328,522,2.328,523,2.943,524,2.328,525,2.328,526,2.328,527,2.328,528,2.328,529,2.328,530,2.328,531,5.016,532,5.016,533,2.328,534,2.328,535,2.328,536,2.328,537,2.328,538,1.957,539,2.328,540,1.957,541,2.328,542,1.957,543,2.328,544,1.957,545,4.43,546,3.537,547,2.328,548,4.43,549,3.442,550,2.943,551,2.943,552,2.539,553,2.328,554,2.328,555,2.328,556,2.328,557,2.328,558,2.328,559,2.328,560,2.328,561,2.328,562,2.328,563,2.328,564,2.328,565,2.328,566,2.328,567,2.328,568,2.328]],["title/entities/RepoToUserStargazers.html",[55,1.664,159,0.842]],["body/entities/RepoToUserStargazers.html",[7,0.029,14,0.345,15,0.309,16,0.275,19,0.622,34,1.082,43,1.429,45,1.788,46,1.611,55,2.081,65,0.973,79,1.082,84,0.345,85,0.149,87,0.018,88,0.018,94,0.382,99,1.633,107,1.202,110,1.046,142,1.763,143,1.763,147,1.854,159,1.053,161,1.134,164,2.408,166,3.001,175,1.677,177,1.913,180,2.857,181,1.478,182,2.857,183,2.633,184,2.857,185,2.857,186,2.613,188,1.478,193,2.267,195,2.847,199,1.478,202,2.754,205,2.624,206,2.624,207,2.081,208,2.081,209,2.081,371,3.001,542,2.496,569,2.496,570,3.841,571,2.969,572,2.969,573,3.178,574,2.969,575,2.969,576,2.969,577,2.969,578,2.969,579,2.969,580,2.969,581,2.969,582,1.952,583,2.969,584,2.969]],["title/entities/RepoToUserStars.html",[51,1.664,159,0.842]],["body/entities/RepoToUserStars.html",[7,0.029,14,0.345,15,0.309,16,0.275,19,0.622,34,1.082,43,1.429,45,1.788,46,1.611,51,2.081,65,0.973,79,1.082,84,0.345,85,0.149,87,0.018,88,0.018,94,0.382,99,1.633,107,1.202,110,1.046,142,1.763,143,1.763,147,1.854,159,1.053,161,1.134,164,2.408,166,3.001,175,1.677,177,1.913,180,2.857,181,1.478,182,2.857,183,2.633,184,2.857,185,2.857,186,2.613,188,1.478,193,2.267,195,2.847,199,1.478,202,2.754,205,2.624,206,2.624,207,2.081,208,2.081,209,2.081,371,3.001,544,2.496,570,3.841,573,3.178,582,1.952,585,2.496,586,2.969,587,2.969,588,2.969,589,2.969,590,2.969,591,2.969,592,2.969,593,2.969,594,2.969,595,2.969,596,2.969,597,2.969]],["title/entities/RepoToUserSubmissions.html",[53,1.664,159,0.842]],["body/entities/RepoToUserSubmissions.html",[7,0.029,14,0.345,15,0.309,16,0.275,19,0.622,34,1.082,43,1.429,45,1.788,46,1.611,53,2.081,65,0.973,79,1.082,84,0.345,85,0.149,87,0.018,88,0.018,94,0.382,99,1.633,107,1.202,110,1.046,142,1.763,143,1.763,147,1.854,159,1.053,161,1.134,164,2.408,166,3.001,175,1.677,177,1.913,180,2.857,181,1.478,182,2.857,183,2.633,184,2.857,185,2.857,186,2.613,188,1.478,193,2.267,195,2.847,199,1.478,202,2.754,205,2.624,206,2.624,207,2.081,208,2.081,209,2.081,371,3.001,540,2.496,570,3.841,573,3.178,582,1.952,598,2.496,599,2.969,600,2.969,601,2.969,602,2.969,603,2.969,604,2.969,605,2.969,606,2.969,607,2.969,608,2.969,609,2.969,610,2.969]],["title/entities/RepoToUserVotes.html",[49,1.313,159,0.842]],["body/entities/RepoToUserVotes.html",[7,0.029,14,0.341,15,0.306,16,0.272,19,0.618,34,1.071,43,1.425,45,1.783,46,1.593,49,1.629,65,0.971,79,1.071,84,0.341,85,0.147,87,0.018,88,0.018,94,0.378,99,1.629,107,1.199,110,1.039,111,1.935,142,1.752,143,1.752,147,1.848,159,1.045,161,1.126,164,2.393,166,2.988,175,1.671,177,1.904,180,2.846,181,1.462,182,2.846,183,2.623,184,2.846,185,2.846,186,2.6,188,1.462,193,2.25,195,2.833,199,1.462,202,2.743,205,2.608,206,2.608,207,2.065,208,2.065,209,2.065,371,2.988,538,2.469,570,3.835,573,3.159,582,1.93,611,2.469,612,2.937,613,2.937,614,2.937,615,2.937,616,2.937,617,2.937,618,2.937,619,2.937,620,2.937,621,2.937,622,2.937,623,2.937]],["title/controllers/RepoVoteController.html",[89,1.418,624,2.197]],["body/controllers/RepoVoteController.html",[7,0.029,14,0.234,15,0.21,16,0.187,19,0.691,20,0.634,43,1.559,44,1.199,49,1.512,50,1.199,65,0.906,82,0.792,84,0.234,85,0.101,87,0.013,88,0.013,89,0.855,92,1.325,94,0.259,95,1.561,99,1.178,102,3.532,107,0.867,109,1.992,110,0.939,111,1.47,112,2.906,116,1.695,117,3.953,118,2.796,119,3.091,120,1.325,121,0.925,122,1.004,131,1.865,133,3.649,134,2.853,137,2.581,146,1.841,147,1.69,168,2.906,175,1.81,217,3.167,238,1.004,239,2.061,243,1.439,361,3.471,426,4.517,428,2.636,430,3.649,432,3.532,435,3.953,445,1.695,447,1.766,450,3.953,458,1.695,459,1.695,461,2.636,462,2.636,464,2.636,465,2.636,466,2.636,548,3.649,549,3.193,624,2.061,625,3.953,626,1.695,627,4.702,628,4.702,629,4.702,630,4.702,631,2.016,632,4.142,633,2.016,634,4.341,635,4.341,636,4.341,637,4.717,638,3.135,639,4.341,640,4.517,641,3.649,642,2.016,643,2.016,644,2.016,645,2.016,646,2.016,647,2.016,648,4.341,649,3.649,650,2.016,651,2.016,652,2.016,653,2.016,654,1.695,655,2.016,656,4.702,657,1.695,658,2.088,659,1.695,660,2.016,661,2.016,662,2.016,663,2.016,664,3.135,665,2.016,666,2.016,667,3.135,668,2.016]],["title/classes/SupabaseAuthResponse.html",[85,0.168,113,2.197]],["body/classes/SupabaseAuthResponse.html",[7,0.028,14,0.42,15,0.377,16,0.335,65,0.978,84,0.42,85,0.182,87,0.02,88,0.02,93,3.793,94,0.465,107,1.26,111,2.236,113,3.143,138,4.503,139,4.503,140,4.503,141,4.503,142,1.953,143,1.953,147,1.685,161,1.298,168,3.315,243,3.113,274,1.963,669,5.362,670,3.041,671,5.357,672,3.618,673,3.618,674,3.618,675,3.618,676,3.618,677,3.618,678,3.618,679,3.618]],["title/injectables/SupabaseGuard.html",[122,1.664,492,1.418]],["body/injectables/SupabaseGuard.html",[7,0.028,14,0.574,15,0.514,16,0.457,19,0.747,20,1.554,84,0.574,85,0.248,87,0.025,88,0.025,122,2.893,156,3.635,211,2.681,492,2.465,493,2.938,680,4.154,681,4.941,682,4.941]],["title/injectables/SupabaseStrategy.html",[152,1.987,492,1.418]],["body/injectables/SupabaseStrategy.html",[7,0.029,14,0.441,15,0.395,16,0.351,19,0.747,20,1.194,45,1.443,65,0.851,84,0.573,85,0.191,87,0.021,88,0.021,93,2.258,94,0.488,95,2.458,98,5.061,107,1.096,109,2.265,110,1.067,111,1.671,112,2.458,124,2.793,125,2.935,146,1.611,152,2.935,156,2.793,211,2.06,217,2.976,226,2.793,238,2.731,492,2.094,493,2.258,570,2.935,683,2.793,684,4.936,685,4.936,686,3.797,687,4.936,688,5.485,689,3.797,690,3.797,691,3.797,692,4.936,693,3.797,694,4.936,695,3.797,696,3.797,697,3.797,698,4.936,699,3.192,700,3.797,701,3.797,702,3.797,703,3.797,704,3.797,705,3.797,706,3.797,707,3.797,708,3.797,709,3.797,710,3.797,711,3.797,712,3.797]],["title/entities/User.html",[45,0.977,159,0.842]],["body/entities/User.html",[7,0.029,14,0.294,15,0.264,16,0.235,19,0.699,34,0.924,43,1.27,44,1.507,45,1.09,49,2.313,50,1.507,51,2.931,52,2.13,53,2.931,54,2.13,55,2.931,56,2.13,65,0.99,78,3.573,79,0.924,84,0.294,85,0.127,87,0.016,88,0.016,94,0.326,99,1.683,107,1.239,110,0.548,142,1.612,143,1.612,147,1.391,159,0.939,161,1.012,164,2.202,169,1.864,175,1.425,176,2.743,177,2.146,178,2.217,180,2.707,181,1.262,182,2.707,183,2.495,184,2.707,185,2.707,186,2.429,188,1.262,190,1.864,199,1.262,202,2.588,203,2.743,204,1.864,207,1.856,208,1.856,209,1.856,211,1.375,212,1.864,309,3.999,373,4.37,382,3.718,408,4.57,413,2.907,713,2.13,714,4.423,715,4.423,716,4.423,717,4.423,718,2.534,719,2.534,720,2.534,721,2.534,722,2.534,723,2.534,724,2.534,725,3.728,726,2.534,727,3.728,728,2.534,729,3.728,730,2.534,731,3.728,732,2.534,733,3.728,734,2.534,735,2.534,736,2.534]],["title/modules/VoteModule.html",[0,1.313,10,1.987]],["body/modules/VoteModule.html",[0,2.017,2,1.852,3,2.785,7,0.029,10,3.872,11,3.053,12,2.189,13,1.852,14,0.469,15,0.42,16,0.374,18,2.4,19,0.819,20,1.269,21,2.969,22,2.4,43,1.319,44,2.4,49,2.017,50,2.4,82,2.017,83,3.374,84,0.469,85,0.203,87,0.022,88,0.022,154,3.776,447,2.877,624,3.71,657,3.392,658,3.602,659,3.392,737,3.392,738,3.392,739,3.392,740,4.035,741,4.035,742,4.035]],["title/injectables/VoteService.html",[492,1.418,658,1.813]],["body/injectables/VoteService.html",[7,0.029,14,0.354,15,0.317,16,0.282,19,0.683,20,0.959,22,1.813,34,1.111,43,0.994,49,1.198,50,1.813,65,0.761,84,0.354,85,0.153,87,0.018,88,0.018,94,0.392,95,2.119,107,1.061,109,2.25,110,1.061,111,1.66,112,2.442,137,3.321,146,2.252,166,1.654,175,1.858,217,3.139,238,2.119,239,2.003,371,1.654,429,2.88,432,3.489,492,1.805,493,1.813,495,4.463,511,2.562,512,2.562,523,3.578,545,4.463,546,3.578,549,3.905,550,3.578,551,4.123,552,2.661,632,4.141,637,2.242,640,3.578,641,2.562,649,3.578,658,2.309,743,2.562,744,4.256,745,4.256,746,3.048,747,3.048,748,4.256,749,3.048,750,4.256,751,3.048,752,5.938,753,4.256,754,3.048,755,3.048,756,3.048,757,3.048,758,3.048,759,4.256,760,4.256,761,5.785,762,4.256,763,4.256,764,4.256,765,3.048,766,3.048,767,3.048,768,3.048]],["title/changelog.html",[769,1.843,770,2.063,771,2.357]],["body/changelog.html",[3,1.762,7,0.028,13,0.569,16,0.255,34,1.003,43,0.643,45,0.362,60,1.773,75,0.815,79,1.184,87,0.009,88,0.009,93,0.737,104,1.042,110,0.787,125,1.636,131,1.254,147,0.663,167,0.912,178,0.737,197,0.912,216,1.042,221,0.912,222,0.737,245,1.042,304,0.815,319,0.815,322,1.809,332,0.673,338,0.673,413,0.815,429,1.762,487,0.815,490,0.815,508,2.313,552,1.144,637,1.551,654,1.773,769,0.815,771,1.773,772,1.24,773,2.109,774,1.773,775,1.773,776,2.109,777,3.738,778,1.042,779,5.47,780,5.373,781,2.752,782,4.801,783,4.801,784,1.24,785,1.24,786,1.24,787,1.24,788,2.109,789,5.373,790,1.24,791,1.24,792,1.24,793,3.06,794,1.24,795,1.24,796,2.602,797,5.9,798,1.042,799,3.64,800,3.64,801,2.752,802,1.24,803,1.24,804,1.24,805,1.24,806,1.24,807,2.752,808,2.109,809,1.24,810,1.24,811,5.283,812,2.109,813,1.24,814,1.24,815,1.24,816,4.446,817,4.446,818,2.109,819,5.9,820,5.938,821,3.247,822,3.247,823,1.24,824,3.898,825,1.24,826,2.109,827,2.752,828,2.313,829,1.042,830,4.224,831,1.24,832,1.24,833,1.24,834,1.24,835,2.109,836,1.24,837,2.109,838,1.24,839,1.24,840,1.24,841,1.24,842,1.24,843,2.109,844,3.64,845,1.24,846,1.24,847,1.24,848,1.24,849,1.24,850,1.042,851,1.24,852,1.24,853,2.109,854,2.109,855,2.752,856,3.64,857,2.109,858,2.109,859,1.24,860,1.24,861,1.24,862,2.752,863,1.24,864,2.109,865,1.24,866,1.24,867,1.24,868,1.24,869,3.959,870,3.247,871,3.247,872,2.109,873,2.752,874,2.109,875,4.637,876,2.109,877,2.109,878,2.752,879,3.64,880,2.109,881,2.109,882,1.773,883,2.109,884,3.959,885,2.109,886,2.109,887,2.109,888,2.752,889,2.109,890,4.637,891,4.637,892,2.109,893,4.801,894,3.64,895,6.197,896,3.64,897,1.24,898,2.109,899,1.24,900,1.24,901,4.945,902,1.24,903,1.24,904,1.24,905,1.24,906,1.24,907,1.24,908,4.224,909,1.24,910,1.24,911,1.24,912,1.24,913,4.224,914,2.752,915,1.551,916,1.24,917,1.24,918,1.24,919,2.109,920,1.773,921,2.109,922,1.24,923,1.24,924,1.24,925,3.247,926,1.773,927,1.24,928,1.24,929,1.042,930,1.773,931,1.24,932,1.24,933,2.109,934,1.042,935,1.24,936,1.24,937,4.637,938,1.24,939,1.24,940,1.24,941,1.24,942,2.109,943,1.24,944,1.24,945,1.24,946,1.773,947,1.24,948,1.24,949,1.042,950,1.24,951,1.24,952,1.24,953,1.24,954,1.24,955,1.24,956,2.109,957,1.24,958,1.24,959,3.738,960,1.24,961,1.24,962,1.24,963,2.109,964,1.24,965,2.109,966,2.752,967,1.24,968,1.24,969,1.24,970,1.24,971,1.24,972,0.912,973,1.24,974,1.24,975,1.24,976,1.24,977,1.24,978,1.24,979,3.64,980,2.109,981,1.042,982,1.24,983,1.24,984,1.24,985,1.24,986,1.24,987,1.24,988,1.24,989,1.24,990,1.24,991,1.24,992,1.24,993,1.24,994,1.24,995,1.24,996,1.24,997,1.24,998,1.24,999,1.24,1000,1.24,1001,1.24,1002,4.637,1003,1.24,1004,1.24,1005,1.24,1006,1.24,1007,2.752,1008,1.24,1009,1.24,1010,1.24,1011,1.24,1012,1.24,1013,1.24,1014,1.24,1015,1.24,1016,1.24,1017,1.24,1018,1.24,1019,1.24,1020,1.24,1021,1.24,1022,1.24,1023,1.24,1024,2.752,1025,1.24,1026,1.24,1027,1.24,1028,1.24,1029,1.24,1030,1.24,1031,1.24,1032,1.24,1033,1.24,1034,1.24,1035,1.042,1036,1.24,1037,1.24,1038,1.24,1039,1.24,1040,1.24,1041,1.24,1042,2.109,1043,1.24,1044,1.24,1045,1.24,1046,1.24,1047,1.24,1048,3.247,1049,2.109,1050,1.24,1051,1.24,1052,1.24,1053,1.773,1054,1.24,1055,1.773,1056,1.24,1057,1.24,1058,1.24,1059,2.109,1060,2.109,1061,2.109,1062,1.773,1063,2.109,1064,1.24,1065,2.752,1066,1.24,1067,2.109,1068,1.24,1069,2.109,1070,2.109,1071,1.24,1072,1.24,1073,1.24,1074,1.24,1075,1.24,1076,1.24,1077,1.24,1078,1.24,1079,1.24,1080,1.24,1081,1.24,1082,1.24,1083,1.24,1084,1.24,1085,1.24,1086,2.109,1087,1.24,1088,1.24,1089,1.24,1090,1.24,1091,1.24,1092,1.24,1093,1.24,1094,1.24,1095,1.24,1096,1.24,1097,1.24,1098,1.24,1099,1.24,1100,1.24,1101,1.24,1102,1.24,1103,1.24,1104,1.24,1105,1.042,1106,1.24,1107,1.24,1108,1.24,1109,1.24,1110,1.24,1111,1.24,1112,1.24,1113,1.24,1114,1.24,1115,1.24,1116,1.24,1117,1.042,1118,1.24,1119,1.24,1120,1.24,1121,1.24,1122,1.24,1123,1.24,1124,1.24,1125,1.24,1126,1.24,1127,1.042,1128,1.24,1129,1.24,1130,1.24,1131,1.24,1132,1.24,1133,1.24,1134,1.24,1135,1.24]],["title/coverage.html",[1136,3.812]],["body/coverage.html",[7,0.029,16,0.316,43,0.798,45,1.345,47,1.702,49,1.343,51,1.702,53,1.702,55,1.702,65,0.53,85,0.292,87,0.02,88,0.02,89,2.363,90,2.246,91,2.873,93,2.032,113,2.246,122,1.702,152,2.032,159,1.542,160,2.873,178,4.022,214,2.246,215,2.873,273,2.032,275,2.873,280,2.032,292,1.568,299,3.026,300,2.873,316,1.702,328,3.026,360,2.873,419,2.246,420,2.873,439,2.032,447,1.568,452,2.514,454,2.514,476,2.514,492,2.363,494,2.873,552,1.854,569,2.873,585,2.873,598,2.873,611,2.873,624,2.246,625,2.873,626,2.873,632,2.246,658,1.854,669,2.873,670,2.873,680,2.873,683,2.514,713,2.873,743,2.873,796,2.246,930,4.683,1136,2.873,1137,3.418,1138,3.418,1139,3.418,1140,3.418,1141,6.519,1142,5.571,1143,3.387,1144,2.873,1145,2.873,1146,3.418,1147,2.873,1148,2.873,1149,3.418,1150,2.873,1151,3.418,1152,2.873,1153,5.206,1154,3.418,1155,3.418,1156,2.873]],["title/miscellaneous/enumerations.html",[1157,1.287,1158,3.373]],["body/miscellaneous/enumerations.html",[7,0.029,87,0.023,88,0.023,94,0.554,110,1.156,142,1.949,143,1.949,292,2.453,328,3.514,332,3.659,338,2.901,364,3.933,369,3.514,370,3.933,372,3.933,415,4.495,416,4.495,476,3.168,477,4.495,486,3.933,487,3.514,488,3.933,489,3.933,490,3.514,1157,1.976,1158,3.619,1159,4.306,1160,4.306,1161,4.306]],["title/miscellaneous/functions.html",[1157,1.287,1162,3.373]],["body/miscellaneous/functions.html",[7,0.025,87,0.025,88,0.025,94,0.666,1150,4.354,1152,5.291,1157,2.377,1162,4.354,1163,5.18]],["title/index.html",[94,0.361,769,1.843,770,2.063]],["body/index.html",[7,0.028,12,1.941,13,1.641,15,0.372,47,1.781,75,3.729,87,0.02,88,0.02,125,3.374,221,3.492,222,3.511,223,3.729,255,3.007,338,1.941,367,2.127,429,1.941,552,1.941,774,4.964,775,3.007,793,3.007,796,2.351,824,3.99,828,3.99,829,3.99,850,3.007,882,3.007,949,5.206,959,3.99,972,2.632,1035,3.99,1053,3.007,1105,3.007,1117,4.964,1156,3.007,1164,3.577,1165,3.577,1166,3.577,1167,3.577,1168,3.577,1169,3.577,1170,3.577,1171,4.478,1172,3.007,1173,3.577,1174,3.577,1175,3.577,1176,3.577,1177,3.577,1178,3.577,1179,3.577,1180,3.577,1181,3.577,1182,5.327,1183,4.747,1184,3.577,1185,3.577,1186,4.747,1187,3.577,1188,3.577,1189,3.577,1190,3.577,1191,3.577,1192,4.747,1193,3.577,1194,4.747,1195,4.747,1196,3.577,1197,3.577,1198,3.577,1199,3.577,1200,3.577,1201,3.577,1202,3.577,1203,3.577,1204,3.577,1205,3.577,1206,3.577,1207,3.577,1208,3.007,1209,3.577,1210,4.747,1211,3.577,1212,3.577,1213,3.577,1214,3.577,1215,3.577,1216,3.577,1217,3.577,1218,3.577,1219,3.577,1220,3.577,1221,3.577,1222,3.577,1223,3.577,1224,3.577,1225,3.577,1226,3.577,1227,2.632]],["title/license.html",[367,1.667,769,1.843,770,2.063]],["body/license.html",[7,0.022,13,1.866,87,0.022,88,0.022,183,2.6,222,2.418,223,2.672,367,2.418,779,3.418,796,2.672,934,3.418,981,4.336,1171,3.418,1172,5.481,1227,2.991,1228,5.665,1229,4.066,1230,5.158,1231,4.066,1232,4.066,1233,4.066,1234,4.066,1235,4.066,1236,4.066,1237,4.066,1238,4.066,1239,4.066,1240,4.066,1241,5.158,1242,4.066,1243,4.066,1244,5.158,1245,4.066,1246,4.066,1247,4.066,1248,4.066,1249,4.066,1250,4.066,1251,4.066,1252,5.158,1253,4.066,1254,4.066,1255,4.066,1256,4.066,1257,4.066,1258,4.066,1259,5.158,1260,5.158,1261,4.066,1262,4.066,1263,4.066,1264,4.066,1265,4.066,1266,4.066,1267,4.066,1268,4.066,1269,4.066,1270,4.066,1271,4.066,1272,4.066,1273,4.066,1274,4.066,1275,4.066,1276,4.066,1277,4.066,1278,4.066,1279,4.066,1280,4.066,1281,4.066,1282,4.066,1283,4.066,1284,4.066,1285,4.066,1286,4.066,1287,4.066,1288,4.066,1289,4.066]],["title/modules.html",[2,2.081]],["body/modules.html",[1,3.228,2,2.253,6,2.92,7,0.025,8,2.92,9,2.92,10,2.92,87,0.025,88,0.025,1290,6.359,1291,6.359,1292,6.359,1293,6.486,1294,4.128,1295,4.911]],["title/overview.html",[1296,3.812]],["body/overview.html",[1,4.295,2,1.806,3,2.741,4,3.309,5,3.309,6,3.855,7,0.028,8,3.318,9,3.705,10,3.816,11,3.005,12,2.136,13,1.806,79,1.435,82,1.547,87,0.021,88,0.021,122,3.155,149,3.309,150,3.309,151,3.309,152,3.768,274,2.136,447,2.945,470,3.309,471,3.309,472,3.309,493,2.341,658,3.437,737,3.309,738,3.309,739,3.309,1062,3.309,1296,3.309,1297,5.053,1298,5.053]],["title/properties.html",[161,1.089,1299,2.804]],["body/properties.html",[7,0.028,87,0.024,88,0.024,124,3.385,125,2.736,161,1.249,222,3.312,223,3.66,361,2.736,367,2.736,429,2.497,777,3.868,778,3.868,798,3.868,929,3.868,972,3.385,1055,3.868,1127,3.868,1227,3.385,1294,3.868,1300,4.601,1301,4.601,1302,4.601,1303,4.601,1304,4.601,1305,4.601,1306,4.601,1307,4.601,1308,4.601,1309,4.601,1310,5.569,1311,4.601,1312,4.601,1313,4.601,1314,4.601,1315,4.601,1316,4.601,1317,4.601,1318,4.601]],["title/miscellaneous/typealiases.html",[1157,1.287,1319,4.013]],["body/miscellaneous/typealiases.html",[7,0.025,65,0.903,87,0.025,88,0.025,94,0.637,277,4.282,299,3.258,307,4.894,683,3.646,699,5.361,1143,3.646,1157,2.274,1320,4.956,1321,4.956,1322,5.821,1323,4.956,1324,4.166,1325,4.956]],["title/miscellaneous/variables.html",[915,2.952,1157,1.287]],["body/miscellaneous/variables.html",[7,0.029,45,1.443,65,0.589,87,0.021,88,0.021,94,0.488,118,2.258,137,2.935,146,2.326,161,1.031,168,2.458,177,2.117,226,3.631,276,3.192,296,3.192,332,3.151,361,2.258,452,3.631,454,3.631,552,2.06,632,3.244,915,2.793,920,4.15,926,4.15,946,3.192,1143,2.793,1144,3.192,1145,4.15,1147,3.192,1148,4.15,1157,1.742,1208,3.192,1324,4.15,1326,3.797,1327,3.797,1328,5.485,1329,3.797,1330,3.797,1331,3.797,1332,3.797,1333,3.797,1334,3.797,1335,4.936,1336,3.797,1337,3.797,1338,3.797,1339,4.936,1340,3.797,1341,3.797,1342,3.797,1343,4.936,1344,4.936,1345,4.936,1346,4.936,1347,3.797,1348,3.797]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":178,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["0/1",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["0848443",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":319,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"changelog.html":{}}}],["1.0.0",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["1.6.10",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["1.6.11",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["1.6.12",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["1.6.13",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["1.6.14",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["1.6.15",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["1.6.16",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["1.6.17",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["1.6.3",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["1.6.4",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["1.6.5",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["1.6.6",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["1.6.7",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["1.6.8",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["1.6.9",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["1.7.1",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["1.7.10",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["1.7.11",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["1.7.12",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["1.7.3",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["1.7.5",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["1.7.6",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["1.7.7",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["1.7.8",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["1.7.9",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["1.8.1",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["1.8.2",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["1.9.0",{"_index":777,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["10",{"_index":322,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"changelog.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(50)@isoptional",{"_index":336,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["12",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["166050d",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["16678a7",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["17c54b9",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":344,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["20",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":779,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["20880c7",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["20bc1e7",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["22d3cc1",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":173,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["27",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["272c09a",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["273f337",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["2c0b15f",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["2c0b3d1",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["2f966a3",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["31e4d60",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["33fea7e",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["34d521d",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["3918a78",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1298,"title":{},"body":{"overview.html":{}}}],["4552c66",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1297,"title":{},"body":{"overview.html":{}}}],["50",{"_index":335,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["58bf922",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["5925b74",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["5e7c6c7",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["5eddeb1",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["5f79c49",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["607cf5d",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["61b67d5",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["62b3eea",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["630f3b5",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["63d6a92",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":385,"title":{},"body":{"entities/Repo.html":{}}}],["673dca9",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["69b2067",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["6d23c24",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1062,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["7249714",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["73d1c74",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["77c734c",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["79bf61d",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["7adfb6b",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["7db9008",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["7e9b8a4",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["7fe63aa",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["81e8bbc",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["8837b2a",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["8aee8e5",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["911df68",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["94ba4e1",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["957b86e",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["_data",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a0db0aa",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["a229a3b",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["a9e1df6",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1258,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["ac31556",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["accessing",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["accessors",{"_index":330,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["action",{"_index":1283,"title":{},"body":{"license.html":{}}}],["add",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["add_table_nametest",{"_index":1198,"title":{},"body":{"index.html":{}}}],["adding",{"_index":1189,"title":{},"body":{"index.html":{}}}],["addorderby(`\"${orderfield",{"_index":559,"title":{},"body":{"injectables/RepoService.html":{}}}],["addorderby(`\"repo\".\"created_at",{"_index":562,"title":{},"body":{"injectables/RepoService.html":{}}}],["addorderby(`\"repo\".\"stars",{"_index":561,"title":{},"body":{"injectables/RepoService.html":{}}}],["adds",{"_index":648,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["addselect((qb",{"_index":531,"title":{},"body":{"injectables/RepoService.html":{}}}],["adjust",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["adjustments",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["ae43450",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["af531e4",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":507,"title":{},"body":{"injectables/RepoService.html":{}}}],["aliases",{"_index":1320,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliasname",{"_index":515,"title":{},"body":{"injectables/RepoService.html":{}}}],["aliastable",{"_index":517,"title":{},"body":{"injectables/RepoService.html":{}}}],["alias}count",{"_index":516,"title":{},"body":{"injectables/RepoService.html":{}}}],["alias}countselect",{"_index":518,"title":{},"body":{"injectables/RepoService.html":{}}}],["allof",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["along",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":640,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["and/or",{"_index":1250,"title":{},"body":{"license.html":{}}}],["andwhere(\"r2votes.user_id",{"_index":760,"title":{},"body":{"injectables/VoteService.html":{}}}],["api",{"_index":972,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["api.opensauced.pizza",{"_index":1167,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoVoteController.html":{}}}],["apiconfig",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["apiconflictresponse",{"_index":656,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["apidocs",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["apiextramodels(pagedto",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apinotfoundresponse",{"_index":450,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["apiokresponse",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{},"miscellaneous/variables.html":{}}}],["apioperation",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["apipaginatedresponse",{"_index":452,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse(repo",{"_index":468,"title":{},"body":{"controllers/RepoController.html":{}}}],["apiproperty",{"_index":288,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{}}}],["apiproperty({type",{"_index":286,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":348,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["apipropertyoptional({enum",{"_index":340,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":333,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["apitags",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["apitags(\"authentication",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"health",{"_index":237,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"repository",{"_index":459,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["apply",{"_index":1196,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1287,"title":{},"body":{"license.html":{}}}],["array",{"_index":296,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["artifact",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":416,"title":{},"body":{"entities/Repo.html":{},"miscellaneous/enumerations.html":{}}}],["assign",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1237,"title":{},"body":{"license.html":{}}}],["async",{"_index":217,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["attach",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["attempt",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"changelog.html":{},"coverage.html":{}}}],["auth.controller",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/supabase.guard",{"_index":660,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["auth/supabase.user.decorator",{"_index":661,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["authcontroller",{"_index":90,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":684,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticate(req",{"_index":687,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticated",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":681,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authguard(\"supabase",{"_index":682,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1316,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":1276,"title":{},"body":{"license.html":{}}}],["autoloadentities",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1295,"title":{},"body":{"modules.html":{}}}],["await",{"_index":549,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["b1a67da",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["b1eda28",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["b4c9879",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["b4d3785",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["b57f47b",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["b5b6ac5",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["b7c3395",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["b9f3798",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["ba8dfbb",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1302,"title":{},"body":{"properties.html":{}}}],["badge",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["badges",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["baseentity",{"_index":203,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["baseline",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["basequerybuilder",{"_index":495,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["bash",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["bc3a37d",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["bd6d621",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["beta.6",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["beta.7",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["beta.8",{"_index":778,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["beta.api.opensauced.pizza",{"_index":1168,"title":{},"body":{"index.html":{}}}],["better",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["bigint",{"_index":176,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["binaries",{"_index":1173,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":309,"title":{},"body":{"classes/PageMetaDto.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["branch",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1293,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1290,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1312,"title":{},"body":{"properties.html":{}}}],["build",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":523,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["c",{"_index":1229,"title":{},"body":{"license.html":{}}}],["c013b70",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["c127cea",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["c24937f",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["cb83f9d",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["cb9206d",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["cc46460",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["cd306f8",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["cd8f21d",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":771,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":774,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["channel",{"_index":1225,"title":{},"body":{"index.html":{}}}],["character",{"_index":170,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["charge",{"_index":1234,"title":{},"body":{"license.html":{}}}],["check",{"_index":221,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["checkauthsession",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["checks",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1279,"title":{},"body":{"license.html":{}}}],["class",{"_index":85,"title":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthResponse.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["classes",{"_index":274,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthResponse.html":{},"overview.html":{}}}],["clean",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":1205,"title":{},"body":{"index.html":{}}}],["client",{"_index":1304,"title":{},"body":{"properties.html":{}}}],["closes",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_repomodule",{"_index":470,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_exports",{"_index":471,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_providers",{"_index":472,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_votemodule",{"_index":737,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["cluster_votemodule_exports",{"_index":738,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["cluster_votemodule_providers",{"_index":739,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["code",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["column",{"_index":202,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["column(\"text",{"_index":417,"title":{},"body":{"entities/Repo.html":{}}}],["column('text",{"_index":378,"title":{},"body":{"entities/Repo.html":{}}}],["column({default",{"_index":382,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["column({type",{"_index":169,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["command",{"_index":1192,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1180,"title":{},"body":{"index.html":{}}}],["comments",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["common/constants/order.constant",{"_index":513,"title":{},"body":{"injectables/RepoService.html":{}}}],["common/decorators/api",{"_index":453,"title":{},"body":{"controllers/RepoController.html":{}}}],["common/dtos/page",{"_index":485,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{}}}],["common/dtos/page.dto",{"_index":451,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["community",{"_index":1217,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":1305,"title":{},"body":{"properties.html":{}}}],["component",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["concurrency",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1257,"title":{},"body":{"license.html":{}}}],["config/api.config",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["config/endpoint.config",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configservice.get(\"db.connection",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.database",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.host",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.password",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.port",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.username",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["confirmed_at",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["conflictexception",{"_index":755,"title":{},"body":{"injectables/VoteService.html":{}}}],["conflictexception(\"you",{"_index":764,"title":{},"body":{"injectables/VoteService.html":{}}}],["connection",{"_index":1288,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["console.log(querybuilder.getsql",{"_index":565,"title":{},"body":{"injectables/RepoService.html":{}}}],["const",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["constants/order.constant",{"_index":354,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["constructor",{"_index":238,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["constructor(data",{"_index":278,"title":{},"body":{"classes/PageDto.html":{}}}],["constructor(private",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoController.html":{}}}],["constructor(reporepository",{"_index":497,"title":{},"body":{"injectables/RepoService.html":{}}}],["constructor(repovoterepository",{"_index":746,"title":{},"body":{"injectables/VoteService.html":{}}}],["constructor(undefined",{"_index":306,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["container",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":926,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continuous",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1284,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1212,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":1210,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":47,"title":{"entities/Contribution.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"coverage.html":{},"index.html":{}}}],["contribution.repo",{"_index":374,"title":{},"body":{"entities/Repo.html":{}}}],["contribution/contribution.entity",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{}}}],["contributions",{"_index":210,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{}}}],["contributions.repo_id",{"_index":529,"title":{},"body":{"injectables/RepoService.html":{}}}],["contributionscount",{"_index":486,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["contributor",{"_index":162,"title":{},"body":{"entities/Contribution.html":{}}}],["controller",{"_index":89,"title":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"health",{"_index":236,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"repo",{"_index":458,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["controllers",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"overview.html":{}}}],["conversation",{"_index":1220,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1252,"title":{},"body":{"license.html":{}}}],["copy",{"_index":981,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":1228,"title":{},"body":{"license.html":{}}}],["correct",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":163,"title":{},"body":{"entities/Contribution.html":{}}}],["counting",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":1136,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["created",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["created_at",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"classes/RepoPageOptionsDto.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["createdatecolumn",{"_index":208,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createdatecolumn({type",{"_index":181,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createparamdecorator",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["d0d5ca5",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["d77ea52",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1280,"title":{},"body":{"license.html":{}}}],["data",{"_index":276,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["datasource",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":180,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["db",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["db:changesif",{"_index":1193,"title":{},"body":{"index.html":{}}}],["db:commit",{"_index":1197,"title":{},"body":{"index.html":{}}}],["db:push",{"_index":1204,"title":{},"body":{"index.html":{}}}],["db:resetpush",{"_index":1202,"title":{},"body":{"index.html":{}}}],["db:startmake",{"_index":1188,"title":{},"body":{"index.html":{}}}],["dbconfig",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["dd5e668",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1239,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1289,"title":{},"body":{"license.html":{}}}],["debug",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["decorator",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"entities/User.html":{}}}],["default",{"_index":177,"title":{},"body":{"entities/Contribution.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"injectables/VoteService.html":{}}}],["delete",{"_index":654,"title":{},"body":{"controllers/RepoVoteController.html":{},"changelog.html":{}}}],["delete(\"/:id/vote",{"_index":666,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete(\"/:owner/:repo/vote",{"_index":668,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete('/:id/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":633,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete('/:owner/:repo/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":644,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["deleted_at",{"_index":164,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["deletedatecolumn",{"_index":207,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["deletedatecolumn({type",{"_index":188,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["demo",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":415,"title":{},"body":{"entities/Repo.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":361,"title":{},"body":{"entities/Repo.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":1303,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":829,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["diagram",{"_index":1209,"title":{},"body":{"index.html":{}}}],["diagrams",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":1191,"title":{},"body":{"index.html":{}}}],["digital",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["discord.find",{"_index":1221,"title":{},"body":{"index.html":{}}}],["disk",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":235,"title":{},"body":{"controllers/HealthController.html":{}}}],["distribute",{"_index":1248,"title":{},"body":{"license.html":{}}}],["docker",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.12",{"_index":1178,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["docr",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":796,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":1300,"title":{},"body":{"properties.html":{}}}],["down",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["downvotebyrepoid",{"_index":744,"title":{},"body":{"injectables/VoteService.html":{}}}],["downvotebyrepoid(repoid",{"_index":750,"title":{},"body":{"injectables/VoteService.html":{}}}],["downvoteonebyid",{"_index":627,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyid(id",{"_index":631,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyownerandrepo",{"_index":628,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyownerandrepo(owner",{"_index":643,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["dry",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["dtos/repo",{"_index":456,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["dtos/supabase",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["e145e2d",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["e1fe498",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["e663170",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":295,"title":{},"body":{"classes/PageDto.html":{}}}],["eba258a",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["echo",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["ed9729a",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["email",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["encourage",{"_index":1211,"title":{},"body":{"index.html":{}}}],["endpointconfig",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{}}}],["engines",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["entities",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"overview.html":{}}}],["entities/repo.entity",{"_index":449,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{}}}],["entity",{"_index":159,"title":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":358,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["enumerations",{"_index":1158,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":341,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["env",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["environments",{"_index":1166,"title":{},"body":{"index.html":{}}}],["errors",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["eslint",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":934,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["everything",{"_index":1194,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existing",{"_index":635,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["explain",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["exports",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{}}}],["exposing",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1267,"title":{},"body":{"license.html":{}}}],["extend",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":211,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["extractjwt",{"_index":695,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":710,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractor",{"_index":709,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["f0304d4",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["f5385b3",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["fad79b1",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["fdc11ea",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["fe20c2d",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["fe4b9e9",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":1238,"title":{},"body":{"license.html":{}}}],["findall",{"_index":441,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findall(pageoptionsdto",{"_index":501,"title":{},"body":{"injectables/RepoService.html":{}}}],["findonebyid",{"_index":421,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyid(id",{"_index":424,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo",{"_index":422,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo(owner",{"_index":433,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["finds",{"_index":426,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["finduserlist",{"_index":423,"title":{},"body":{"controllers/RepoController.html":{}}}],["finduserlist(pageoptionsdto",{"_index":438,"title":{},"body":{"controllers/RepoController.html":{}}}],["fine",{"_index":1195,"title":{},"body":{"index.html":{}}}],["first",{"_index":1183,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1272,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["flight",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1171,"title":{},"body":{"index.html":{},"license.html":{}}}],["found",{"_index":430,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["found'})@apiconflictresponse({description",{"_index":639,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["free",{"_index":1233,"title":{},"body":{"license.html":{}}}],["from(entity",{"_index":520,"title":{},"body":{"injectables/RepoService.html":{}}}],["full",{"_index":882,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["full_name",{"_index":362,"title":{},"body":{"entities/Repo.html":{}}}],["function",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":1162,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1255,"title":{},"body":{"license.html":{}}}],["generated",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["get(\"/:id",{"_index":460,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/:owner/:repo",{"_index":463,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/list",{"_index":467,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/service",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/session",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"/web",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":425,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/:owner/:repo')@apioperation({operationid",{"_index":434,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/list')@apioperation({operationid",{"_index":440,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":219,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/session')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdomain",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethello",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello(user",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["getschemapath(model",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(pagedto",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getskip",{"_index":346,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getting",{"_index":769,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1314,"title":{},"body":{"properties.html":{}}}],["github",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":1232,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1294,"title":{},"body":{"modules.html":{},"properties.html":{}}}],["guard",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["guarded",{"_index":662,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["guards",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1214,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1215,"title":{},"body":{"index.html":{}}}],["handler",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["has_stars_data",{"_index":714,"title":{},"body":{"entities/User.html":{}}}],["hasnextpage",{"_index":301,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":302,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["hasty",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["health",{"_index":216,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["health.controller",{"_index":272,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":233,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":230,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":214,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":8,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["healthstatusservice",{"_index":220,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{}}}],["hereby",{"_index":1231,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1277,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1309,"title":{},"body":{"properties.html":{}}}],["host",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":240,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["httpcode(httpstatus.ok",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["httphealthindicator",{"_index":231,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/open",{"_index":1310,"title":{},"body":{"properties.html":{}}}],["httpstatus",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["id",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"entities/User.html":{},"changelog.html":{}}}],["id'})@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":427,"title":{},"body":{"controllers/RepoController.html":{}}}],["identifier",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1206,"title":{},"body":{"index.html":{}}}],["immediate",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1268,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["imports",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{}}}],["improve",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1261,"title":{},"body":{"license.html":{}}}],["including",{"_index":1241,"title":{},"body":{"license.html":{}}}],["index",{"_index":94,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"injectables/VoteService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["information",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["information'})@apiokresponse({type",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["inherited",{"_index":481,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["initial",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":492,"title":{"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}},"body":{"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["injectables",{"_index":493,"title":{},"body":{"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"overview.html":{}}}],["injectrepository",{"_index":512,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["injectrepository(repo",{"_index":514,"title":{},"body":{"injectables/RepoService.html":{}}}],["injectrepository(repotouservotes",{"_index":756,"title":{},"body":{"injectables/VoteService.html":{}}}],["inspection",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["installed",{"_index":1174,"title":{},"body":{"index.html":{}}}],["instead",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":1307,"title":{},"body":{"properties.html":{}}}],["is_fork",{"_index":363,"title":{},"body":{"entities/Repo.html":{},"injectables/RepoService.html":{}}}],["is_open_sauced_member",{"_index":715,"title":{},"body":{"entities/User.html":{}}}],["is_private",{"_index":716,"title":{},"body":{"entities/User.html":{}}}],["isarray",{"_index":289,"title":{},"body":{"classes/PageDto.html":{}}}],["isarray()@apiproperty({isarray",{"_index":282,"title":{},"body":{"classes/PageDto.html":{}}}],["isenum",{"_index":349,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["isenum(order",{"_index":359,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(repoorder",{"_index":491,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["isglobal",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":350,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isoptional",{"_index":351,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["issues",{"_index":364,"title":{},"body":{"entities/Repo.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["item",{"_index":548,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{}}}],["itemcount",{"_index":303,"title":{},"body":{"classes/PageMetaDto.html":{},"injectables/RepoService.html":{}}}],["items",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["job",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["jobs",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":1219,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":206,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["jwt",{"_index":697,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["keywords",{"_index":1308,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1266,"title":{},"body":{"license.html":{}}}],["language",{"_index":365,"title":{},"body":{"entities/Repo.html":{}}}],["last_fetched_contributors_at",{"_index":366,"title":{},"body":{"entities/Repo.html":{}}}],["last_merged_at",{"_index":165,"title":{},"body":{"entities/Contribution.html":{}}}],["last_sign_in_at",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["leftjoinandmapmany(\"repo.contributions",{"_index":528,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(\"repo.user",{"_index":526,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(repotouserstars",{"_index":527,"title":{},"body":{"injectables/RepoService.html":{}}}],["length",{"_index":172,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["liability",{"_index":1281,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1278,"title":{},"body":{"license.html":{}}}],["license",{"_index":367,"title":{"license.html":{}},"body":{"entities/Repo.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":304,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"changelog.html":{}}}],["limit(pageoptionsdto.limit",{"_index":564,"title":{},"body":{"injectables/RepoService.html":{}}}],["limitation",{"_index":1242,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1269,"title":{},"body":{"license.html":{}}}],["link",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["lint",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":946,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["listing",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":1325,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["live",{"_index":1165,"title":{},"body":{"index.html":{}}}],["load",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["loadrelationcountandmap(\"repo.contributionscount",{"_index":536,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.stargazerscount",{"_index":541,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.starscount",{"_index":543,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.submissionscount",{"_index":539,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.votescount",{"_index":537,"title":{},"body":{"injectables/RepoService.html":{}}}],["local",{"_index":828,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["localhost:54321",{"_index":1187,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1186,"title":{},"body":{"index.html":{}}}],["logging",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":1175,"title":{},"body":{"index.html":{}}}],["main",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["manytoone",{"_index":205,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["manytoone(undefined",{"_index":193,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["matching",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":325,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["max",{"_index":352,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(50",{"_index":357,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maximum",{"_index":334,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["memory",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":234,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1271,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1246,"title":{},"body":{"license.html":{}}}],["meta",{"_index":277,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["meta.dto",{"_index":293,"title":{},"body":{"classes/PageDto.html":{},"injectables/RepoService.html":{}}}],["meta.dto.ts",{"_index":300,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:12",{"_index":311,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:15",{"_index":314,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:18",{"_index":310,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":308,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:6",{"_index":313,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":312,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["metadata",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["migration",{"_index":1105,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["migrations",{"_index":1201,"title":{},"body":{"index.html":{}}}],["min",{"_index":353,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":356,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimal",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":355,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minor",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1157,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1227,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mkdocs",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":1245,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{},"modules.html":{},"overview.html":{}}}],["mount",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["mounted",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"injectables/VoteService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["need",{"_index":1170,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1053,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nestjs",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["nestjs/config",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["nestjs/passport",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/swagger",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"controllers/RepoVoteController.html":{}}}],["nestjs/terminus",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["nestjs/typeorm",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["nestjs/typeorm/dist/interfaces/typeorm",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["never",{"_index":688,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["new",{"_index":552,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1164,"title":{},"body":{"index.html":{}}}],["node",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["node>=16.7.0",{"_index":1176,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1275,"title":{},"body":{"license.html":{}}}],["notable",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["notfoundexception",{"_index":511,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["notfoundexception(\"you",{"_index":767,"title":{},"body":{"injectables/VoteService.html":{}}}],["notice",{"_index":1259,"title":{},"body":{"license.html":{}}}],["now",{"_index":186,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["npm",{"_index":1117,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm>=8.0.0",{"_index":1177,"title":{},"body":{"index.html":{}}}],["null",{"_index":763,"title":{},"body":{"injectables/VoteService.html":{}}}],["number",{"_index":175,"title":{},"body":{"entities/Contribution.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"entities/User.html":{},"injectables/VoteService.html":{}}}],["oas3",{"_index":1301,"title":{},"body":{"properties.html":{}}}],["obtaining",{"_index":1236,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["offset(pageoptionsdto.skip",{"_index":563,"title":{},"body":{"injectables/RepoService.html":{}}}],["onetomany",{"_index":408,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":373,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["open",{"_index":222,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["open_issues",{"_index":717,"title":{},"body":{"entities/User.html":{}}}],["opensauced.pizza\"}`).tostring",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operationid",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["optional",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["options.dto",{"_index":457,"title":{},"body":{"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{}}}],["options.dto.ts",{"_index":328,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["options.dto.ts:15",{"_index":345,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:27",{"_index":337,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:28",{"_index":480,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":343,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":347,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.interface",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":338,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["order.asc",{"_index":558,"title":{},"body":{"injectables/RepoService.html":{}}}],["order.desc",{"_index":339,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{}}}],["orderby",{"_index":414,"title":{},"body":{"entities/Repo.html":{},"classes/RepoPageOptionsDto.html":{}}}],["orderby(`\"repo\".\"is_fork",{"_index":557,"title":{},"body":{"injectables/RepoService.html":{}}}],["orderdirection",{"_index":329,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["orderfield",{"_index":555,"title":{},"body":{"injectables/RepoService.html":{}}}],["otherwise",{"_index":1286,"title":{},"body":{"license.html":{}}}],["out",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["outputs",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1296,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":1223,"title":{},"body":{"index.html":{}}}],["owner",{"_index":435,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{}}}],["owner}/${repo",{"_index":554,"title":{},"body":{"injectables/RepoService.html":{}}}],["package",{"_index":1299,"title":{"properties.html":{}},"body":{}}],["page",{"_index":292,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["pagecount",{"_index":305,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":273,"title":{"classes/PageDto.html":{}},"body":{"classes/PageDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagedto(entities",{"_index":568,"title":{},"body":{"injectables/RepoService.html":{}}}],["pagemetadto",{"_index":280,"title":{"classes/PageMetaDto.html":{}},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagemetadto})@validatenested()@type(undefined",{"_index":287,"title":{},"body":{"classes/PageDto.html":{}}}],["pagemetaparameters",{"_index":307,"title":{},"body":{"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["pageoptionsdto",{"_index":316,"title":{"classes/PageOptionsDto.html":{}},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pageoptionsdto.limit",{"_index":321,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.orderby",{"_index":556,"title":{},"body":{"injectables/RepoService.html":{}}}],["pageoptionsdto.orderdirection",{"_index":560,"title":{},"body":{"injectables/RepoService.html":{}}}],["pageoptionsdto.page",{"_index":318,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto:15",{"_index":484,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["pageoptionsdto:27",{"_index":482,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["pageoptionsdto:32",{"_index":483,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["pages",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["paginated",{"_index":454,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginates",{"_index":442,"title":{},"body":{"controllers/RepoController.html":{}}}],["pagination",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":445,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"id",{"_index":461,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"owner",{"_index":464,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"repo",{"_index":465,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["parameters",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["parameters.dto",{"_index":315,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["parameters.dto.ts",{"_index":1322,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["partial",{"_index":700,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["particular",{"_index":1273,"title":{},"body":{"license.html":{}}}],["passport",{"_index":696,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["passportmodule",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":694,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["password",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["performance",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1230,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1253,"title":{},"body":{"license.html":{}}}],["person",{"_index":1235,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1254,"title":{},"body":{"license.html":{}}}],["pipelines",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":1213,"title":{},"body":{"index.html":{}}}],["port",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":1263,"title":{},"body":{"license.html":{}}}],["powered",{"_index":798,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["prefix",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["prerequisites",{"_index":1169,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["primarycolumn",{"_index":204,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn(\"bigint",{"_index":212,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn('bigint",{"_index":190,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn",{"_index":573,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["print",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":239,"title":{},"body":{"controllers/HealthController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["proceed",{"_index":1216,"title":{},"body":{"index.html":{}}}],["process",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["process.env.domain",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.supabase_api_key",{"_index":705,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_jwt_secret",{"_index":708,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_url",{"_index":703,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["production",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":775,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":432,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["proper",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":161,"title":{"properties.html":{}},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"classes/RepoPageOptionsDto.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"entities/User.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":929,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["provided",{"_index":1264,"title":{},"body":{"license.html":{}}}],["providers",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{}}}],["public",{"_index":570,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{}}}],["publish",{"_index":1247,"title":{},"body":{"license.html":{}}}],["pull",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1274,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["push",{"_index":793,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pushed_at",{"_index":368,"title":{},"body":{"entities/Repo.html":{}}}],["put",{"_index":655,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put(\"/:id/vote",{"_index":663,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put(\"/:owner/:repo/vote",{"_index":665,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put('/:id/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":647,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put('/:owner/:repo/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":652,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["query",{"_index":446,"title":{},"body":{"controllers/RepoController.html":{}}}],["querybuilder",{"_index":545,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["querybuilder.getcount",{"_index":566,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getmany",{"_index":567,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getone",{"_index":550,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["questions",{"_index":1218,"title":{},"body":{"index.html":{}}}],["re",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["readme",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["received",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refactoring",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["referal",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["referencedcolumnname",{"_index":195,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["registry",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["relations",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["relationship",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":824,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remote",{"_index":1203,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1127,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["removed",{"_index":641,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["removes",{"_index":634,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["repo",{"_index":43,"title":{"entities/Repo.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{}}}],["repo'})@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":436,"title":{},"body":{"controllers/RepoController.html":{}}}],["repo.contributions",{"_index":213,"title":{},"body":{"entities/Contribution.html":{},"injectables/RepoService.html":{}}}],["repo.contributions)@joincolumn({name",{"_index":194,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.controller",{"_index":474,"title":{},"body":{"modules/RepoModule.html":{}}}],["repo.entity",{"_index":582,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.id",{"_index":530,"title":{},"body":{"injectables/RepoService.html":{}}}],["repo.repotouserstargazers",{"_index":542,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{}}}],["repo.repotouserstargazers)@joincolumn({name",{"_index":575,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["repo.repotouserstars",{"_index":544,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{}}}],["repo.repotouserstars)@joincolumn({name",{"_index":589,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["repo.repotousersubmissions",{"_index":540,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserSubmissions.html":{}}}],["repo.repotousersubmissions)@joincolumn({name",{"_index":602,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["repo.repotouservotes",{"_index":538,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouservotes)@joincolumn({name",{"_index":615,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["repo.service",{"_index":448,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{}}}],["repo.to.user.stargazers.entity",{"_index":412,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.stars.entity",{"_index":410,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.submissions.entity",{"_index":411,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.votes.entity",{"_index":409,"title":{},"body":{"entities/Repo.html":{}}}],["repo.user",{"_index":725,"title":{},"body":{"entities/User.html":{}}}],["repo/entities/repo.entity",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"controllers/RepoVoteController.html":{},"entities/User.html":{},"modules/VoteModule.html":{}}}],["repo/entities/repo.to.user.stargazers.entity",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/entities/repo.to.user.stars.entity",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/entities/repo.to.user.submissions.entity",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/entities/repo.to.user.votes.entity",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoVoteController.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["repo/repo.module",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["repo/repo.service",{"_index":657,"title":{},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{}}}],["repo_id",{"_index":166,"title":{},"body":{"entities/Contribution.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/VoteService.html":{}}}],["repocontroller",{"_index":419,"title":{"controllers/RepoController.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"coverage.html":{}}}],["repoid",{"_index":752,"title":{},"body":{"injectables/VoteService.html":{}}}],["repomodule",{"_index":9,"title":{"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["repoorder",{"_index":477,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["repoorder.stars",{"_index":478,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["repopageoptionsdto",{"_index":439,"title":{"classes/RepoPageOptionsDto.html":{}},"body":{"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["reporepository",{"_index":499,"title":{},"body":{"injectables/RepoService.html":{}}}],["repos",{"_index":413,"title":{},"body":{"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/User.html":{},"changelog.html":{}}}],["reposervice",{"_index":447,"title":{"injectables/RepoService.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"coverage.html":{},"overview.html":{}}}],["repository",{"_index":429,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["repotouserstargazers",{"_index":55,"title":{"entities/RepoToUserStargazers.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstargazers.repo",{"_index":392,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstargazers.user",{"_index":727,"title":{},"body":{"entities/User.html":{}}}],["repotouserstars",{"_index":51,"title":{"entities/RepoToUserStars.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstars.repo",{"_index":394,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstars.user",{"_index":729,"title":{},"body":{"entities/User.html":{}}}],["repotousersubmissions",{"_index":53,"title":{"entities/RepoToUserSubmissions.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserSubmissions.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotousersubmissions.repo",{"_index":396,"title":{},"body":{"entities/Repo.html":{}}}],["repotousersubmissions.user",{"_index":731,"title":{},"body":{"entities/User.html":{}}}],["repotouservotes",{"_index":49,"title":{"entities/RepoToUserVotes.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["repotouservotes.repo",{"_index":398,"title":{},"body":{"entities/Repo.html":{}}}],["repotouservotes.user",{"_index":733,"title":{},"body":{"entities/User.html":{}}}],["repotouservotes})@apinotfoundresponse({description",{"_index":638,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["repovotecontroller",{"_index":624,"title":{"controllers/RepoVoteController.html":{}},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"coverage.html":{}}}],["repovoterepository",{"_index":748,"title":{},"body":{"injectables/VoteService.html":{}}}],["repo})@apinotfoundresponse({description",{"_index":428,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["req",{"_index":690,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["request",{"_index":920,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user?.user_metadata?.sub",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirements",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{},"index.html":{},"overview.html":{}}}],["response.decorator",{"_index":455,"title":{},"body":{"controllers/RepoController.html":{}}}],["response.decorator.ts",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.dto.ts",{"_index":670,"title":{},"body":{"classes/SupabaseAuthResponse.html":{},"coverage.html":{}}}],["response.dto.ts:2",{"_index":675,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:3",{"_index":679,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:4",{"_index":677,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:5",{"_index":674,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:6",{"_index":672,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:7",{"_index":676,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:8",{"_index":673,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:9",{"_index":678,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["restriction",{"_index":1240,"title":{},"body":{"license.html":{}}}],["results",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["revert",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1243,"title":{},"body":{"license.html":{}}}],["rogue",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["role",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["rules",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":949,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runner",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["sauced",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["sauced/api.opensauced.pizza",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["sauced/api.opensauced.pizza#readme",{"_index":1311,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza.git",{"_index":1315,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza/issues",{"_index":1313,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":1208,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scoping",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1207,"title":{},"body":{"index.html":{}}}],["select",{"_index":197,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"changelog.html":{}}}],["select(\"count(distinct",{"_index":519,"title":{},"body":{"injectables/RepoService.html":{}}}],["select(['repo.id",{"_index":525,"title":{},"body":{"injectables/RepoService.html":{}}}],["selectquerybuilder",{"_index":506,"title":{},"body":{"injectables/RepoService.html":{}}}],["sell",{"_index":1251,"title":{},"body":{"license.html":{}}}],["service",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{}}}],["session",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"changelog.html":{}}}],["shall",{"_index":1260,"title":{},"body":{"license.html":{}}}],["simple",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["simplest",{"_index":1199,"title":{},"body":{"index.html":{}}}],["skip",{"_index":331,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["soft",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1172,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"index.html":{}}}],["spec",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["split",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["src/.../api",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoint.config.ts",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.constant.ts",{"_index":1159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../page",{"_index":1321,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../repo",{"_index":1160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../supabase.strategy.ts",{"_index":1323,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../supabase.user.decorator.ts",{"_index":1324,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":17,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dtos/supabase",{"_index":669,"title":{},"body":{"classes/SupabaseAuthResponse.html":{},"coverage.html":{}}}],["src/auth/supabase.guard.ts",{"_index":680,"title":{},"body":{"injectables/SupabaseGuard.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts",{"_index":683,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/supabase.strategy.ts:12",{"_index":686,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:23",{"_index":693,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:27",{"_index":689,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.user.decorator.ts",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/order.constant.ts",{"_index":1161,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/decorators/api",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/page",{"_index":299,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/dtos/page.dto.ts",{"_index":275,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts:11",{"_index":285,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dtos/page.dto.ts:16",{"_index":281,"title":{},"body":{"classes/PageDto.html":{}}}],["src/config/endpoint.config.ts",{"_index":1147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contribution/contribution.entity.ts",{"_index":160,"title":{},"body":{"entities/Contribution.html":{},"coverage.html":{}}}],["src/contribution/contribution.entity.ts:19",{"_index":191,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:25",{"_index":198,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:31",{"_index":179,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:36",{"_index":192,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:42",{"_index":187,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:48",{"_index":200,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:53",{"_index":189,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:59",{"_index":174,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:65",{"_index":201,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:72",{"_index":196,"title":{},"body":{"entities/Contribution.html":{}}}],["src/health/health.controller.ts",{"_index":215,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":271,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/repo/dtos/repo",{"_index":476,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/repo/entities/repo.entity.ts",{"_index":360,"title":{},"body":{"entities/Repo.html":{},"coverage.html":{}}}],["src/repo/entities/repo.entity.ts:104",{"_index":380,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:107",{"_index":379,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:113",{"_index":386,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:119",{"_index":389,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:125",{"_index":403,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:132",{"_index":405,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:135",{"_index":375,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:138",{"_index":399,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:141",{"_index":395,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:144",{"_index":397,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:147",{"_index":393,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:30",{"_index":381,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:36",{"_index":406,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:42",{"_index":384,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:48",{"_index":400,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:54",{"_index":407,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:60",{"_index":401,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:63",{"_index":383,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:69",{"_index":376,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:75",{"_index":402,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:81",{"_index":391,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:87",{"_index":388,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:92",{"_index":377,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:98",{"_index":390,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts",{"_index":569,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:18",{"_index":574,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:21",{"_index":581,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:24",{"_index":577,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:30",{"_index":571,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:36",{"_index":578,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:41",{"_index":572,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:48",{"_index":580,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:55",{"_index":576,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts",{"_index":585,"title":{},"body":{"entities/RepoToUserStars.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:18",{"_index":588,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:21",{"_index":595,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:24",{"_index":591,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:30",{"_index":586,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:36",{"_index":592,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:41",{"_index":587,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:48",{"_index":594,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:55",{"_index":590,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts",{"_index":598,"title":{},"body":{"entities/RepoToUserSubmissions.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:18",{"_index":601,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:21",{"_index":608,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:24",{"_index":604,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:30",{"_index":599,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:36",{"_index":605,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:41",{"_index":600,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:48",{"_index":607,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:55",{"_index":603,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts",{"_index":611,"title":{},"body":{"entities/RepoToUserVotes.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:18",{"_index":614,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:21",{"_index":621,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:24",{"_index":617,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:30",{"_index":612,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:36",{"_index":618,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:41",{"_index":613,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:48",{"_index":620,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:55",{"_index":616,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.controller.ts",{"_index":420,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{}}}],["src/repo/repo.controller.ts:24",{"_index":431,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:40",{"_index":437,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:55",{"_index":444,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.module.ts",{"_index":473,"title":{},"body":{"modules/RepoModule.html":{}}}],["src/repo/repo.service.ts",{"_index":494,"title":{},"body":{"injectables/RepoService.html":{},"coverage.html":{}}}],["src/repo/repo.service.ts:12",{"_index":498,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:18",{"_index":509,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:28",{"_index":500,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:48",{"_index":503,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:63",{"_index":504,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:80",{"_index":502,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/user/user.entity.ts",{"_index":713,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:22",{"_index":721,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:28",{"_index":724,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:31",{"_index":720,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:34",{"_index":723,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:37",{"_index":722,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:43",{"_index":718,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:49",{"_index":735,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:54",{"_index":719,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:57",{"_index":726,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:60",{"_index":734,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:63",{"_index":730,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:66",{"_index":732,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:69",{"_index":728,"title":{},"body":{"entities/User.html":{}}}],["src/vote/repo",{"_index":625,"title":{},"body":{"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["src/vote/vote.module.ts",{"_index":740,"title":{},"body":{"modules/VoteModule.html":{}}}],["src/vote/vote.service.ts",{"_index":743,"title":{},"body":{"injectables/VoteService.html":{},"coverage.html":{}}}],["src/vote/vote.service.ts:13",{"_index":749,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:20",{"_index":754,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:45",{"_index":751,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:7",{"_index":747,"title":{},"body":{"injectables/VoteService.html":{}}}],["stable",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["stargazers",{"_index":535,"title":{},"body":{"injectables/RepoService.html":{}}}],["stargazerscount",{"_index":489,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["stars",{"_index":369,"title":{},"body":{"entities/Repo.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["starscount",{"_index":490,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["start",{"_index":1185,"title":{},"body":{"index.html":{}}}],["started",{"_index":770,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":1181,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["stray",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":168,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"miscellaneous/variables.html":{}}}],["string(sub",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["structure",{"_index":1035,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["structured",{"_index":1306,"title":{},"body":{"properties.html":{}}}],["studio",{"_index":1182,"title":{},"body":{"index.html":{}}}],["styles",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["subdomain",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":1256,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1249,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["submissions",{"_index":534,"title":{},"body":{"injectables/RepoService.html":{}}}],["submissionscount",{"_index":488,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["subquery",{"_index":510,"title":{},"body":{"injectables/RepoService.html":{}}}],["subquerycount",{"_index":496,"title":{},"body":{"injectables/RepoService.html":{}}}],["subquerycount(subquery",{"_index":505,"title":{},"body":{"injectables/RepoService.html":{}}}],["subscribers",{"_index":370,"title":{},"body":{"entities/Repo.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["substantial",{"_index":1262,"title":{},"body":{"license.html":{}}}],["successful",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summary",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["supabase",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["supabase.guard",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["supabase.strategy",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["supabase.user.decorator",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabase>=0.18.0",{"_index":1179,"title":{},"body":{"index.html":{}}}],["supabaseauthrequest",{"_index":699,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["supabaseauthresponse",{"_index":113,"title":{"classes/SupabaseAuthResponse.html":{}},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{},"coverage.html":{}}}],["supabaseauthresponse})@httpcode(httpstatus.ok",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabaseauthstrategy",{"_index":698,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseauthuser",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{}}}],["supabaseguard",{"_index":122,"title":{"injectables/SupabaseGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseGuard.html":{},"coverage.html":{},"overview.html":{}}}],["supabasejwtsecret",{"_index":707,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasekey",{"_index":704,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseoptions",{"_index":706,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasestrategy",{"_index":152,"title":{"injectables/SupabaseStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":702,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super",{"_index":701,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.authenticate(req",{"_index":712,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.validate(user",{"_index":711,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["support",{"_index":1291,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1292,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":279,"title":{},"body":{"classes/PageDto.html":{},"injectables/RepoService.html":{}}}],["table",{"_index":1156,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tables",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["tagging",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":508,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{}}}],["target}.id",{"_index":522,"title":{},"body":{"injectables/RepoService.html":{}}}],["tech",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["ted",{"_index":1317,"title":{},"body":{"properties.html":{}}}],["temporary",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":959,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["them'})@httpcode(httpstatus.ok)@apipaginatedresponse(repo)@apiokresponse({type",{"_index":443,"title":{},"body":{"controllers/RepoController.html":{}}}],["thing",{"_index":1184,"title":{},"body":{"index.html":{}}}],["this.basequerybuilder",{"_index":546,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":270,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":266,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":268,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.data",{"_index":297,"title":{},"body":{"classes/PageDto.html":{}}}],["this.database.pingcheck(\"db",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hasnextpage",{"_index":327,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":326,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.health.check",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":269,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":267,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.itemcount",{"_index":323,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.limit",{"_index":320,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.meta",{"_index":298,"title":{},"body":{"classes/PageDto.html":{}}}],["this.page",{"_index":317,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":324,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.reporepository.createquerybuilder(\"repo",{"_index":524,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.reposervice.findall(pageoptionsdto",{"_index":469,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.reposervice.findonebyid(id",{"_index":462,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["this.reposervice.findonebyownerandrepo(owner",{"_index":466,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["this.repovoterepository.createquerybuilder(\"r2votes",{"_index":757,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.restore(voteexists.id",{"_index":765,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.save",{"_index":766,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.softdelete(voteexists.id",{"_index":768,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.subquerycount(qb",{"_index":532,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.voteservice.downvotebyrepoid(item.id",{"_index":667,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["this.voteservice.votebyrepoid(item.id",{"_index":664,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["thresholdpercent",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":551,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["time",{"_index":184,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["timestamp",{"_index":182,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["tld",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["tmodel",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_timestamp(0",{"_index":387,"title":{},"body":{"entities/Repo.html":{}}}],["token",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1285,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":294,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["true",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"classes/PageDto.html":{}}}],["true})@type(undefined",{"_index":284,"title":{},"body":{"classes/PageDto.html":{}}}],["true})@validatenested({each",{"_index":283,"title":{},"body":{"classes/PageDto.html":{}}}],["type",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1319,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["typeormhealthindicator",{"_index":232,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{}}}],["typeormmodule.forfeature",{"_index":742,"title":{},"body":{"modules/VoteModule.html":{}}}],["typeormmodule.forfeature([repo",{"_index":475,"title":{},"body":{"modules/RepoModule.html":{}}}],["typeormmodule.forrootasync",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["undefined})@isenum(order)@isoptional",{"_index":342,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["undefined})@isenum(repoorder)@isoptional",{"_index":479,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["unknown",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{},"injectables/SupabaseStrategy.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["updated_at",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"classes/RepoPageOptionsDto.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["updatedatecolumn",{"_index":209,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["updatedatecolumn({type",{"_index":199,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["url",{"_index":167,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"changelog.html":{}}}],["url(`https://${subdomain",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urls",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":1244,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoVoteController.html":{}}}],["useguards(supabaseguard",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoVoteController.html":{}}}],["user",{"_index":45,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.repos",{"_index":418,"title":{},"body":{"entities/Repo.html":{}}}],["user.repos)@joincolumn({name",{"_index":404,"title":{},"body":{"entities/Repo.html":{}}}],["user.repotouserstargazers",{"_index":584,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["user.repotouserstargazers)@joincolumn({name",{"_index":579,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["user.repotouserstars",{"_index":597,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotouserstars)@joincolumn({name",{"_index":593,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotousersubmissions",{"_index":610,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["user.repotousersubmissions)@joincolumn({name",{"_index":606,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["user.repotouservotes",{"_index":623,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user.repotouservotes)@joincolumn({name",{"_index":619,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user/user.entity",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["user_id",{"_index":371,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/VoteService.html":{}}}],["user_metadata",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["user_name",{"_index":671,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["userid",{"_index":632,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":736,"title":{},"body":{"entities/User.html":{}}}],["users_to_repos_stargazers",{"_index":583,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["users_to_repos_stars",{"_index":596,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["users_to_repos_submissions",{"_index":609,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["users_to_repos_votes",{"_index":622,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["validate",{"_index":685,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validate(user",{"_index":692,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validatenested",{"_index":290,"title":{},"body":{"classes/PageDto.html":{}}}],["validator",{"_index":291,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["value",{"_index":332,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":930,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":915,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":171,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["verify",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1055,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versiond",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":1222,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1226,"title":{},"body":{"index.html":{}}}],["visually",{"_index":1190,"title":{},"body":{"index.html":{}}}],["vite",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":691,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["volume",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["volumes",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["vortex",{"_index":1318,"title":{},"body":{"properties.html":{}}}],["vortex/api.opensauced.pizza",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["vote",{"_index":637,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["vote'})@apiokresponse({description",{"_index":636,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller",{"_index":741,"title":{},"body":{"modules/VoteModule.html":{}}}],["vote.controller.ts",{"_index":626,"title":{},"body":{"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["vote.controller.ts:121",{"_index":645,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:42",{"_index":650,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:68",{"_index":653,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:95",{"_index":642,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.service",{"_index":659,"title":{},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{}}}],["vote/vote.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["votebyrepoid",{"_index":745,"title":{},"body":{"injectables/VoteService.html":{}}}],["votebyrepoid(repoid",{"_index":753,"title":{},"body":{"injectables/VoteService.html":{}}}],["voted",{"_index":649,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["voteexists",{"_index":761,"title":{},"body":{"injectables/VoteService.html":{}}}],["voteexists.deleted_at",{"_index":762,"title":{},"body":{"injectables/VoteService.html":{}}}],["votemodule",{"_index":10,"title":{"modules/VoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VoteModule.html":{},"modules.html":{},"overview.html":{}}}],["voteonebyid",{"_index":629,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyid(id",{"_index":646,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyownerandrepo",{"_index":630,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyownerandrepo(owner",{"_index":651,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["votes",{"_index":533,"title":{},"body":{"injectables/RepoService.html":{}}}],["votescount",{"_index":487,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["voteservice",{"_index":658,"title":{"injectables/VoteService.html":{}},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{},"overview.html":{}}}],["warranties",{"_index":1270,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1265,"title":{},"body":{"license.html":{}}}],["watchers",{"_index":372,"title":{},"body":{"entities/Repo.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["way",{"_index":1200,"title":{},"body":{"index.html":{}}}],["web",{"_index":218,"title":{},"body":{"controllers/HealthController.html":{}}}],["where(\"r2votes.repo_id",{"_index":759,"title":{},"body":{"injectables/VoteService.html":{}}}],["where(\"repo.full_name",{"_index":553,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(\"repo.id",{"_index":547,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(`${aliastable}.${target}_id",{"_index":521,"title":{},"body":{"injectables/RepoService.html":{}}}],["whether",{"_index":1282,"title":{},"body":{"license.html":{}}}],["withdeleted",{"_index":758,"title":{},"body":{"injectables/VoteService.html":{}}}],["without",{"_index":183,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"license.html":{}}}],["work",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":850,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["yaml",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":1224,"title":{},"body":{"index.html":{}}}],["zone",{"_index":185,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["zoom",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nVoteModule\n\nVoteModule\n\nAppModule -->\n\nVoteModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            RepoModule\n                        \n                        \n                            VoteModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm/dist/interfaces/typeorm-options.interface\";\nimport { DataSource } from \"typeorm\";\n\nimport { RepoModule } from \"./repo/repo.module\";\nimport apiConfig from \"./config/api.config\";\nimport dbConfig from \"./config/database.config\";\nimport endpointConfig from \"./config/endpoint.config\";\nimport { HealthModule } from \"./health/health.module\";\nimport { Repo } from \"./repo/entities/repo.entity\";\nimport { User } from \"./user/user.entity\";\nimport { Contribution } from \"./contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo/entities/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo/entities/repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"./repo/entities/repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"./repo/entities/repo.to.user.stargazers.entity\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { VoteModule } from \"./vote/vote.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        apiConfig,\n        dbConfig,\n        endpointConfig\n      ],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\"db.connection\"),\n        host: configService.get(\"db.host\"),\n        port: configService.get(\"db.port\"),\n        username: configService.get(\"db.username\"),\n        password: configService.get(\"db.password\"),\n        database: configService.get(\"db.database\"),\n        autoLoadEntities: false,\n        entities: [\n          User,\n          Repo,\n          Contribution,\n          RepoToUserVotes,\n          RepoToUserStars,\n          RepoToUserSubmissions,\n          RepoToUserStargazers,\n        ],\n        synchronize: false,\n      }),\n      inject: [ConfigService],\n    }),\n    TerminusModule,\n    HttpModule,\n    AuthModule,\n    HealthModule,\n    RepoModule,\n    VoteModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  constructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello(user: SupabaseAuthUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/session')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'checkAuthSession', summary: 'Get authenticated session information'})@ApiOkResponse({type: SupabaseAuthResponse})@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SupabaseAuthResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, UseGuards } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseAuthUser } from \"nestjs-supabase-auth\";\nimport { User } from \"./supabase.user.decorator\";\nimport { SupabaseAuthResponse } from \"./dtos/supabase-auth-response.dto\";\n\n@Controller(\"auth\")\n@ApiTags(\"Authentication service\")\nexport class AuthController {\n  @Get(\"/session\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"checkAuthSession\",\n    summary: \"Get authenticated session information\",\n  })\n  @ApiOkResponse({ type: SupabaseAuthResponse })\n  @HttpCode(HttpStatus.OK)\n  getHello(\n    @User() user: SupabaseAuthUser,\n  ): SupabaseAuthResponse {\n    const { role, email, confirmed_at, last_sign_in_at, created_at, updated_at, user_metadata: { sub } } = user;\n\n    return {\n      id: `${String(sub)}`,\n      role,\n      email,\n      confirmed_at,\n      last_sign_in_at,\n      created_at,\n      updated_at\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseStrategy } from \"./supabase.strategy\";\nimport { AuthController } from \"./auth.controller\";\n\n@Module({\n  imports: [PassportModule],\n  providers: [SupabaseStrategy, SupabaseGuard],\n  exports: [SupabaseStrategy, SupabaseGuard],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Contribution.html":{"url":"entities/Contribution.html","title":"entity - Contribution","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Contribution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributor\n                            \n                            \n                                count\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                id\n                            \n                            \n                                last_merged_at\n                            \n                            \n                                repo\n                            \n                            \n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_merged_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.contributions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:65\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  ManyToOne,\n  JoinColumn,\n  DeleteDateColumn,\n  CreateDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { Repo } from \"../repo/entities/repo.entity\";\n\n@Entity({\n  name: \"contributions\"\n})\nexport class Contribution extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  repo_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  count: number;\n\n  @Column({\n    type: \"timestamp without time zone\"\n  })\n  last_merged_at: Date;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  contributor: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => Repo, (repo) => repo.contributions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  repo: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service() {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\"),\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\"),\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web() {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, ValidateNested } from \"class-validator\";\nimport { PageMetaDto } from \"./page-meta.dto\";\nimport { Type } from \"class-transformer\";\n\nexport class PageDto {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  @ValidateNested({ each: true })\n  @Type(() => Array)\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PageMetaDto })\n  @ValidateNested()\n  @Type(() => PageMetaDto)\n  readonly meta: PageMetaDto;\n\n  constructor(data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                limit\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { PageMetaParameters } from \"./page-meta-parameters.dto\";\n\nexport class PageMetaDto {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly limit: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: PageMetaParameters) {\n    this.page = pageOptionsDto.page || 1;\n    this.limit = pageOptionsDto.limit || 10;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.limit);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Order, enumName: 'Order', default: undefined})@IsEnum(Order)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dtos/page-options.dto.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEnum, IsInt, IsOptional, Max, Min } from \"class-validator\";\nimport { Order } from \"../constants/order.constant\";\n\nexport class PageOptionsDto {\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 50,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(50)\n  @IsOptional()\n  readonly limit?: number = 10;\n\n  @ApiPropertyOptional({ enum: Order, enumName: \"Order\", default: Order.DESC })\n  @IsEnum(Order)\n  @IsOptional()\n  readonly orderDirection?: Order = Order.DESC;\n\n  get skip(): number {\n    return ((this.page || 1) - 1) * (this.limit || 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Repo.html":{"url":"entities/Repo.html","title":"entity - Repo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Repo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributions\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                description\n                            \n                            \n                                full_name\n                            \n                            \n                                id\n                            \n                            \n                                is_fork\n                            \n                            \n                                issues\n                            \n                            \n                                language\n                            \n                            \n                                last_fetched_contributors_at\n                            \n                            \n                                license\n                            \n                            \n                                name\n                            \n                            \n                                pushed_at\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                stars\n                            \n                            \n                                subscribers\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                            \n                                user_id\n                            \n                            \n                                watchers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contribution[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, contribution => contribution.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_fork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_fetched_contributors_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => to_timestamp(0)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        license\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repos)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  JoinColumn,\n  ManyToOne,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  DeleteDateColumn\n} from \"typeorm\";\n\nimport { User } from \"../../user/user.entity\";\nimport { Contribution } from \"../../contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"./repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"./repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"repos\",\n  orderBy: {\n    stars: \"DESC\",\n    name: \"ASC\"\n  }\n})\nexport class Repo extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  user_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  issues: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  stars: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  watchers: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  subscribers: number;\n\n  @Column({ default: false })\n  is_fork: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  pushed_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"to_timestamp(0)\",\n  })\n  last_fetched_contributors_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  name: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  full_name: string;\n\n  @Column(\"text\")\n  description: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  language: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  license: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => User, user => user.repos)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  user: User;\n\n  @OneToMany(() => Contribution, contribution => contribution.repo)\n  contributions: Contribution[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.repo)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.repo)\n  repoToUserStars: RepoToUserStars[];\n\n  @OneToMany(() => RepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.repo)\n  repoToUserSubmissions: RepoToUserSubmissions[];\n\n  @OneToMany(() => RepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.repo)\n  repoToUserStargazers: RepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoController.html":{"url":"controllers/RepoController.html","title":"controller - RepoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repo\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'findOneById', summary: 'Finds a repo by :id'})@HttpCode(HttpStatus.OK)@ApiOkResponse({type: Repo})@ApiNotFoundResponse({description: 'Repository not found'})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:owner/:repo')@ApiOperation({operationId: 'findOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo'})@HttpCode(HttpStatus.OK)@ApiOkResponse({type: Repo})@ApiNotFoundResponse({description: 'Repository not found'})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserList\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserList(pageOptionsDto: RepoPageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@ApiOperation({operationId: 'findAll', summary: 'Finds all repos and paginates them'})@HttpCode(HttpStatus.OK)@ApiPaginatedResponse(Repo)@ApiOkResponse({type: Repo})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, Param, Query } from \"@nestjs/common\";\nimport { RepoService } from \"./repo.service\";\nimport { Repo } from \"./entities/repo.entity\";\nimport { ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { RepoPageOptionsDto } from \"./dtos/repo-page-options.dto\";\n\n@Controller(\"repo\")\n@ApiTags(\"Repository service\")\nexport class RepoController {\n  constructor(private readonly repoService: RepoService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"findOneById\",\n    summary: \"Finds a repo by :id\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: Repo })\n  @ApiNotFoundResponse({\n    description: \"Repository not found\",\n  })\n  async findOneById(\n    @Param(\"id\") id: number,\n  ): Promise {\n    return this.repoService.findOneById(id);\n  }\n\n  @Get(\"/:owner/:repo\")\n  @ApiOperation({\n    operationId: \"findOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: Repo })\n  @ApiNotFoundResponse({\n    description: \"Repository not found\",\n  })\n  async findOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n  ): Promise {\n    return this.repoService.findOneByOwnerAndRepo(owner, repo);\n  }\n\n  @Get(\"/list\")\n  @ApiOperation({\n    operationId: \"findAll\",\n    summary: \"Finds all repos and paginates them\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiPaginatedResponse(Repo)\n  @ApiOkResponse({ type: Repo })\n  async findUserList(\n    @Query() pageOptionsDto: RepoPageOptionsDto,\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepoModule.html":{"url":"modules/RepoModule.html","title":"module - RepoModule","body":"\n                   \n\n\n\n\n    Modules\n    RepoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\n\nRepoService \n\nRepoService \n\n\n\nRepoModule\n\nRepoModule\n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/repo/repo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepoService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { Repo } from \"./entities/repo.entity\";\nimport { RepoService } from \"./repo.service\";\nimport { RepoController } from \"./repo.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Repo])],\n  controllers: [RepoController],\n  providers: [RepoService],\n  exports: [RepoService],\n})\nexport class RepoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RepoPageOptionsDto.html":{"url":"classes/RepoPageOptionsDto.html","title":"class - RepoPageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RepoPageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/dtos/repo-page-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                orderBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoOrder\n\n                    \n                \n                \n                    \n                        Default value : RepoOrder.stars\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: RepoOrder, enumName: 'RepoOrder', default: undefined})@IsEnum(RepoOrder)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/dtos/repo-page-options.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Order, enumName: 'Order', default: undefined})@IsEnum(Order)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsEnum, IsOptional } from \"class-validator\";\nimport { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\n\nexport enum RepoOrder {\n  issues = \"issues\",\n  stars = \"stars\",\n  watchers = \"watchers\",\n  subscribers = \"subscribers\",\n  created_at = \"created_at\",\n  updated_at = \"updated_at\",\n  name = \"name\",\n  contributionsCount = \"contributionsCount\",\n  votesCount = \"votesCount\",\n  submissionsCount = \"submissionsCount\",\n  stargazersCount = \"stargazersCount\",\n  starsCount = \"starsCount\",\n}\n\nexport class RepoPageOptionsDto extends PageOptionsDto {\n  @ApiPropertyOptional({\n    enum: RepoOrder,\n    enumName: \"RepoOrder\",\n    default: RepoOrder.stars\n  })\n  @IsEnum(RepoOrder)\n  @IsOptional()\n  readonly orderBy?: RepoOrder = RepoOrder.stars;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepoService.html":{"url":"injectables/RepoService.html","title":"injectable - RepoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                            \n                                subQueryCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/repo/repo.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: RepoPageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subQueryCount\n                        \n                    \n                \n            \n            \n                \nsubQueryCount(subQuery: SelectQueryBuilder, entity: string, alias: string, target: string)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    subQuery\n                                    \n                                            SelectQueryBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    entity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"repo\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository, SelectQueryBuilder } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { Repo } from \"./entities/repo.entity\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { RepoPageOptionsDto } from \"./dtos/repo-page-options.dto\";\nimport { Order } from \"../common/constants/order.constant\";\n\n@Injectable()\nexport class RepoService {\n  constructor(\n    @InjectRepository(Repo)\n    private repoRepository: Repository,\n  ) {}\n\n  subQueryCount(subQuery: SelectQueryBuilder, entity: string , alias: string, target = \"repo\") {\n    const aliasName = `${alias}Count`;\n    const aliasTable = `${alias}CountSelect`;\n\n    return subQuery\n      .select(\"COUNT(DISTINCT id)\", aliasName)\n      .from(entity, aliasTable)\n      .where(`${aliasTable}.${target}_id = ${target}.id`);\n  }\n\n  baseQueryBuilder() {\n    const builder = this.repoRepository.createQueryBuilder(\"repo\")\n      // .select(['repo.id'])\n      // .leftJoinAndSelect(\"repo.user\", \"user\")\n      // .leftJoinAndSelect(RepoToUserStars, \"stars\")\n      // .leftJoinAndMapMany(\"repo.contributions\", Contribution, \"contributions\", \"contributions.repo_id = repo.id\")\n      .addSelect((qb) => this.subQueryCount(qb, \"Contribution\", \"contributions\"), \"contributionsCount\")\n      .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserVotes\", \"votes\"), \"votesCount\")\n      .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserSubmissions\", \"submissions\"), \"submissionsCount\")\n      .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserStargazers\", \"stargazers\"), \"stargazersCount\")\n      .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserStars\", \"stars\"), \"starsCount\")\n      .loadRelationCountAndMap(\"repo.contributionsCount\", \"repo.contributions\")\n      .loadRelationCountAndMap(\"repo.votesCount\", \"repo.repoToUserVotes\")\n      .loadRelationCountAndMap(\"repo.submissionsCount\", \"repo.repoToUserSubmissions\")\n      .loadRelationCountAndMap(\"repo.stargazersCount\", \"repo.repoToUserStargazers\")\n      .loadRelationCountAndMap(\"repo.starsCount\", \"repo.repoToUserStars\");\n\n    return builder;\n  }\n\n  async findOneById(id: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.id = :id\", { id });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findOneByOwnerAndRepo(owner: string, repo: string): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.full_name = :name\", {\n        name: `${owner}/${repo}`\n      });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findAll(\n    pageOptionsDto: RepoPageOptionsDto\n  ): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n    const orderField = pageOptionsDto.orderBy || \"is_fork\";\n\n    queryBuilder\n      .orderBy(`\"repo\".\"is_fork\"`, Order.ASC)\n      .addOrderBy(`\"${orderField}\"`, pageOptionsDto.orderDirection)\n      .addOrderBy(`\"repo\".\"stars\"`, Order.DESC)\n      .addOrderBy(`\"repo\".\"created_at\"`, Order.DESC)\n      .offset(pageOptionsDto.skip)\n      .limit(pageOptionsDto.limit);\n\n    // console.log(queryBuilder.getSql());\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStargazers.html":{"url":"entities/RepoToUserStargazers.html","title":"entity - RepoToUserStargazers","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStargazers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.stargazers.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStargazers)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStargazers)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stargazers\",\n})\nexport class RepoToUserStargazers {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStargazers)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStargazers)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStars.html":{"url":"entities/RepoToUserStars.html","title":"entity - RepoToUserStars","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStars\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.stars.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStars)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStars)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stars\",\n})\nexport class RepoToUserStars {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStars)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStars)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserSubmissions.html":{"url":"entities/RepoToUserSubmissions.html","title":"entity - RepoToUserSubmissions","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserSubmissions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.submissions.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserSubmissions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserSubmissions)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_submissions\",\n})\nexport class RepoToUserSubmissions {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserVotes.html":{"url":"entities/RepoToUserVotes.html","title":"entity - RepoToUserVotes","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserVotes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.votes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserVotes)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserVotes)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_votes\",\n})\nexport class RepoToUserVotes {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at?: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at?: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at?: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserVotes)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserVotes)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoVoteController.html":{"url":"controllers/RepoVoteController.html","title":"controller - RepoVoteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoVoteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vote/repo-vote.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repo\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downVoteOneById\n                            \n                            \n                                    Async\n                                downVoteOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                voteOneById\n                            \n                            \n                                    Async\n                                voteOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downVoteOneById', summary: 'Finds a repo by :id and removes existing vote'})@ApiOkResponse({description: 'Returns the repo vote', type: RepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already removed your vote'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downVoteOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and removes existing vote'})@ApiOkResponse({description: 'Returns the repo vote', type: Repo})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already removed your vote'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'voteOneById', summary: 'Finds a repo by :id and adds a vote'})@ApiOkResponse({description: 'Returns the repo vote', type: RepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already voted for this repo'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'voteOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and adds a vote'})@ApiOkResponse({description: 'Returns the repo vote', type: Repo})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already voted for this repo'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param, Put, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags\n} from \"@nestjs/swagger\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { VoteService } from \"./vote.service\";\nimport { Repo } from \"../repo/entities/repo.entity\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { RepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\n\n@Controller(\"repo\")\n@ApiTags(\"Repository service guarded\", \"Vote service\")\nexport class RepoVoteController {\n  constructor(\n    private readonly repoService: RepoService,\n    private readonly voteService: VoteService,\n  ) {}\n\n  @Put(\"/:id/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"voteOneById\",\n    summary: \"Finds a repo by :id and adds a vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: RepoToUserVotes\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or vote not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already voted for this repo\",\n  })\n  async voteOneById(\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.voteService.voteByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"voteOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and adds a vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: Repo\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or vote not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already voted for this repo\",\n  })\n  async voteOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.voteService.voteByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downVoteOneById\",\n    summary: \"Finds a repo by :id and removes existing vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: RepoToUserVotes\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or vote not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already removed your vote\",\n  })\n  async downVoteOneById(\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.voteService.downVoteByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downVoteOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and removes existing vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: Repo\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or vote not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already removed your vote\",\n  })\n  async downVoteOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.voteService.downVoteByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SupabaseAuthResponse.html":{"url":"classes/SupabaseAuthResponse.html","title":"class - SupabaseAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SupabaseAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/supabase-auth-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                confirmed_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                created_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                    Optional\n                                last_sign_in_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        confirmed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        last_sign_in_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        user_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SupabaseAuthResponse {\n  readonly id: string;\n  readonly user_name?: string;\n  readonly role?: string;\n  readonly email?: string;\n  readonly confirmed_at?: string;\n  readonly last_sign_in_at?: string;\n  readonly created_at?: string;\n  readonly updated_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseGuard.html":{"url":"injectables/SupabaseGuard.html","title":"injectable - SupabaseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class SupabaseGuard extends AuthGuard(\"supabase\") {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseStrategy.html":{"url":"injectables/SupabaseStrategy.html","title":"injectable - SupabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/supabase.strategy.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(req: never)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(user: SupabaseAuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { SupabaseAuthStrategy, SupabaseAuthUser } from \"nestjs-supabase-auth\";\n\nexport type SupabaseAuthRequest = Partial & { user?: SupabaseAuthUser };\n\n@Injectable()\nexport class SupabaseStrategy extends PassportStrategy(\n  SupabaseAuthStrategy,\n  \"supabase\",\n) {\n  public constructor() {\n    super({\n      supabaseUrl: process.env.SUPABASE_URL,\n      supabaseKey: process.env.SUPABASE_API_KEY,\n      supabaseOptions: {},\n      supabaseJwtSecret: process.env.SUPABASE_JWT_SECRET,\n      extractor: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate(user: SupabaseAuthUser) {\n    return super.validate(user);\n  }\n\n  authenticate(req: never) {\n    super.authenticate(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                has_stars_data\n                            \n                            \n                                id\n                            \n                            \n                                is_open_sauced_member\n                            \n                            \n                                is_private\n                            \n                            \n                                open_issues\n                            \n                            \n                                repos\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has_stars_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_open_sauced_member\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open_issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repo => repo.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  OneToMany,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { Repo } from \"../repo/entities/repo.entity\";\nimport { RepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"../repo/entities/repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"users\"\n})\nexport class User extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  open_issues: number;\n\n  @Column({ default: false })\n  has_stars_data: boolean;\n\n  @Column({ default: false })\n  is_private: boolean;\n\n  @Column({ default: false })\n  is_open_sauced_member: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @OneToMany(() => Repo, repo => repo.user)\n  repos: Repo[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.user)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.user)\n  repoToUserStars: RepoToUserStars[];\n\n  @OneToMany(() => RepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.user)\n  repoToUserSubmissions: RepoToUserSubmissions[];\n\n  @OneToMany(() => RepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.user)\n  repoToUserStargazers: RepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VoteModule.html":{"url":"modules/VoteModule.html","title":"module - VoteModule","body":"\n                   \n\n\n\n\n    Modules\n    VoteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VoteModule\n\n\n\ncluster_VoteModule_exports\n\n\n\ncluster_VoteModule_providers\n\n\n\n\nVoteService \n\nVoteService \n\n\n\nVoteModule\n\nVoteModule\n\nVoteService  -->\n\nVoteModule->VoteService \n\n\n\n\n\nRepoService\n\nRepoService\n\nVoteModule -->\n\nRepoService->VoteModule\n\n\n\n\n\nVoteService\n\nVoteService\n\nVoteModule -->\n\nVoteService->VoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/vote/vote.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                        \n                            VoteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoVoteController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VoteService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { Repo } from \"../repo/entities/repo.entity\";\nimport { RepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { VoteService } from \"./vote.service\";\nimport { RepoVoteController } from \"./repo-vote.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([\n    Repo,\n    RepoToUserVotes\n  ])],\n  controllers: [RepoVoteController],\n  providers: [RepoService, VoteService],\n  exports: [VoteService],\n})\nexport class VoteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VoteService.html":{"url":"injectables/VoteService.html","title":"injectable - VoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vote/vote.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downVoteByRepoId\n                            \n                            \n                                    Async\n                                voteByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoVoteRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/vote/vote.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoVoteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { RepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\n\n@Injectable()\nexport class VoteService {\n  constructor(\n    @InjectRepository(RepoToUserVotes)\n    private repoVoteRepository: Repository,\n  ) {}\n\n  baseQueryBuilder() {\n    const builder = this.repoVoteRepository.createQueryBuilder(\"r2votes\")\n      .withDeleted();\n\n    return builder;\n  }\n\n  async voteByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2votes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2votes.user_id = :userId\", { userId });\n\n    const voteExists = await queryBuilder.getOne();\n\n    if (voteExists) {\n      if (voteExists.deleted_at === null) {\n        throw new ConflictException(\"You have already voted for this repo\");\n      }\n\n      await this.repoVoteRepository.restore(voteExists.id);\n\n      return voteExists;\n    }\n\n    return this.repoVoteRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downVoteByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2votes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2votes.user_id = :userId\", { userId });\n\n    const voteExists = await queryBuilder.getOne();\n\n    if (!voteExists) {\n      throw new NotFoundException(\"You have not voted for this repo\");\n    }\n\n    if (voteExists.deleted_at !== null) {\n      throw new ConflictException(\"You have already removed your vote\");\n    }\n\n    await this.repoVoteRepository.softDelete(voteExists.id);\n\n    return voteExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.9.0-beta.8 (2022-08-25)\n🐛 Bug Fixes\n\nmake order work for repo listing (69b2067)\n\n🎨 Styles\n\ncorrect lint errors from hasty push (fe20c2d)\n\n1.9.0-beta.7 (2022-08-25)\n📝 Documentation\n\nadd powered by digital ocean readme badge and referal link (5925b74)\n\n1.9.0-beta.6 (2022-08-25)\n🧑‍💻 Code Refactoring\n\ncode split repository entities (ae43450)\n\n🍕 Features\n\nadd repo up vote and down vote functionality (16678a7), closes #19\n\n1.9.0-beta.5 (2022-08-19)\n🔁 Continuous Integration\n\nattempt to push docr only on successful release (957b86e)\n\n1.9.0-beta.4 (2022-08-19)\n🔁 Continuous Integration\n\nimprove local development workflow along vite apps (b9f3798)\n\n1.9.0-beta.3 (2022-08-19)\n🐛 Bug Fixes\n\ncorrect counting of many to many tables (7249714)\n\n🧑‍💻 Code Refactoring\n\ncorrect stray console.log (b4c9879)\n\n1.9.0-beta.2 (2022-08-19)\n🔁 Continuous Integration\n\nonly deploy documentation on main branch (fad79b1), closes #14\n\n🍕 Features\n\nadd supabase auth session handler and working guards (ed9729a), closes #24\n\n1.9.0-beta.1 (2022-08-18)\n🍕 Features\n\nimplement simple supabase strategy guard (2f966a3)\n\n1.8.2 (2022-08-12)\n🐛 Bug Fixes\n\ncorrect ci release url docs (f0304d4)\n\n1.8.1 (2022-08-12)\n🔁 Continuous Integration\n\nimprove release urls (dd5e668)\n\n1.8.0 (2022-08-12)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\nupdate readme badges (17c54b9)\n\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\nadd get repository by id and full name (4552c66)\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.5 (2022-08-06)\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.4 (2022-08-06)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\n\n1.8.0-beta.3 (2022-08-05)\n🍕 Features\n\nadd get repository by id and full name (4552c66)\n\n1.8.0-beta.2 (2022-08-05)\n🍕 Features\n\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n1.8.0-beta.1 (2022-07-30)\n📝 Documentation\n\nupdate readme badges (17c54b9)\n\n1.7.12 (2022-07-30)\n🐛 Bug Fixes\n\npush all tags to docr (a9e1df6)\n\n1.7.11 (2022-07-30)\n🔁 Continuous Integration\n\npush to digital ocean container registry (cd8f21d)\n\n1.7.10 (2022-07-30)\n🔁 Continuous Integration\n\ncorrect the digital ocean tagging (673dca9)\n\n1.7.9 (2022-07-30)\n✅ Tests\n\ncheck release job outputs (31e4d60)\n\n1.7.8 (2022-07-29)\n🔁 Continuous Integration\n\ncorrect environment variables (6d23c24)\n\n1.7.7 (2022-07-29)\n✅ Tests\n\nprint out proper pull request target env variables (20880c7)\n\n1.7.6 (2022-07-29)\n🔁 Continuous Integration\n\necho github context (7adfb6b)\n\n1.7.5 (2022-07-29)\n🔁 Continuous Integration\n\nprovide variable as ENV (b57f47b)\n\n1.7.4 (2022-07-29)\n🔁 Continuous Integration\n\nchange pull request event target (20bc1e7)\n\n1.7.3 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect digital ocean docker tag based on target (b1a67da)\n\n1.7.2 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect static domain and release clean up workflow (a229a3b)\nupdate dependencies and list docr tags (79bf61d)\n\n🔁 Continuous Integration\n\nadd docr push dry run (5eddeb1)\nadd release workflow concurrency for demo purposes (63d6a92)\nextend digital ocean temporary token (d0d5ca5)\ntest bash variable environment (e1fe498)\n\n1.7.1 (2022-07-27)\n🔁 Continuous Integration\n\ndeploy developer mkdocs to github pages test (8837b2a)\n\n1.7.0 (2022-07-27)\n📝 Documentation\n\nchange github pages deploy to take tech mkdocs instead of api (bc3a37d)\n\n1.6.17 (2022-07-24)\n🔁 Continuous Integration\n\nadd temporary debug logging (ba8dfbb)\n\n1.6.16 (2022-07-23)\n🔁 Continuous Integration\n\nproperly copy contents from mounted container volume (c013b70)\n\n1.6.15 (2022-07-23)\n🔁 Continuous Integration\n\ncreate new container from release (b1eda28)\n\n1.6.14 (2022-07-23)\n🔁 Continuous Integration\n\ntest file is generated properly (c127cea)\n\n🤖 Build System\n\nattempt docker inspection again (2c0b3d1)\n\n1.6.13 (2022-07-23)\n🔁 Continuous Integration\n\ntest proper container name exposing (cc46460)\n\n1.6.12 (2022-07-23)\n🔁 Continuous Integration\n\ntest local swagger spec (7e9b8a4)\n\n1.6.11 (2022-07-21)\n🔁 Continuous Integration\n\ntest getting docker process list output (f5385b3)\n\n1.6.10 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to get value from running container (911df68)\ntest accessing running container by re-creating (77c734c)\n\n1.6.9 (2022-07-21)\n🔁 Continuous Integration\n\nget container name from runner context (94ba4e1)\n\n1.6.8 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to assign docker service name to running container (fe4b9e9)\n\n1.6.7 (2022-07-21)\n✅ Tests\n\nmount docker service and volumes (0848443)\n\n1.6.6 (2022-07-21)\n✅ Tests\n\nload docker container from artifact (b7c3395)\n\n1.6.5 (2022-07-21)\n🐛 Bug Fixes\n\ncorrect docker local creation (cd306f8)\n\n1.6.4 (2022-07-21)\n✅ Tests\n\nload docker container in flight environment (e145e2d)\n\n1.6.3 (2022-07-20)\n🤖 Build System\n\nupdate deployment and add simple repo submission structure (33fea7e)\n\n1.6.2 (2022-07-19)\n🤖 Build System\n\nrevert to production release container (8aee8e5)\n\n1.6.1 (2022-07-19)\n🤖 Build System\n\nimprove swagger generation (22d3cc1)\n\n🐛 Bug Fixes\n\ncorrect workflow yaml comments (7fe63aa)\n\n1.6.0 (2022-07-19)\n🎨 Styles\n\nimplement correct eslint rules for immediate scoping (bd6d621), closes #1\n\n🍕 Features\n\nupdate dependencies and nest to stable new version (c24937f)\n\n🔁 Continuous Integration\n\nadd docker build and static swagger docs jobs (81e8bbc)\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n🤖 Build System\n\nadd better eslint baseline configuration (3918a78)\nadd minimal eslint configuration (a0db0aa)\nadd minor deployment improvements and github pages adjustments (cb83f9d)\nimplement prettier rules in typescript eslint (166050d)\n\n🐛 Bug Fixes\n\ncorrect release workflow artifact strategy (b5b6ac5)\ncorrect rogue workflow artifact (61b67d5)\n\n1.5.1 (2022-07-13)\n🔁 Continuous Integration\n\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n📦 0-vortex/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.5.0 (2022-06-21)\n🍕 Features\n\nimplement proper starsCount (fdc11ea)\nimplement proper votesCount (607cf5d)\n\n1.4.0 (2022-06-17)\n🍕 Features\n\nadd minimal pagination decorator (ac31556)\n\n1.3.0 (2022-06-10)\n🍕 Features\n\nadd abstract pagination component (630f3b5)\nadd repository relations and limit select (b4d3785)\n\n1.2.0 (2022-06-09)\n🍕 Features\n\nattach user relationship to get repos (e663170)\n\n1.1.0 (2022-06-07)\n🍕 Features\n\nadd basic tld entities (273f337)\n\n1.0.2 (2022-06-05)\n🤖 Build System\n\nadd supabase migration system (34d521d)\n\n1.0.1 (2022-06-05)\n✅ Tests\n\nverify database diagrams generation (73d1c74)\n\n1.0.0 (2022-06-05)\n🍕 Features\n\nadjust health checks endpoints (cb9206d)\ninitial commit (5e7c6c7)\n\n🐛 Bug Fixes\n\ncorrect npm scripts, workflow node versiond and update deps (2c0b15f)\nupdate nest typeorm integration and correct db status (58bf922)\n\n🔥 Performance Improvements\n\nremove minor version engines requirements (7db9008)\n\n✅ Tests\n\nexplain current test configuration and unblock pipelines (272c09a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/supabase-auth-response.dto.ts\n            \n            class\n            SupabaseAuthResponse\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/supabase.guard.ts\n            \n            injectable\n            SupabaseGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.strategy.ts\n            \n            injectable\n            SupabaseStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/supabase.user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.user.decorator.ts\n            \n            variable\n            UserId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/dtos/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/endpoint.config.ts\n            \n            variable\n            getDomain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.entity.ts\n            \n            entity\n            Contribution\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/dtos/repo-page-options.dto.ts\n            \n            class\n            RepoPageOptionsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.entity.ts\n            \n            entity\n            Repo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.stargazers.entity.ts\n            \n            entity\n            RepoToUserStargazers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.stars.entity.ts\n            \n            entity\n            RepoToUserStars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.submissions.entity.ts\n            \n            entity\n            RepoToUserSubmissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.votes.entity.ts\n            \n            entity\n            RepoToUserVotes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.controller.ts\n            \n            controller\n            RepoController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repo/repo.service.ts\n            \n            injectable\n            RepoService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/vote/repo-vote.controller.ts\n            \n            controller\n            RepoVoteController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/vote/vote.service.ts\n            \n            injectable\n            VoteService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../order.constant.ts)\n                        \n                        \n                            RepoOrder   (src/.../repo-page-options.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/order.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        Order\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n    src/repo/dtos/repo-page-options.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        RepoOrder\n                    \n                \n                        \n                            \n                                 issues\n                            \n                        \n                        \n                            \n                                Value : issues\n                            \n                        \n                        \n                            \n                                 stars\n                            \n                        \n                        \n                            \n                                Value : stars\n                            \n                        \n                        \n                            \n                                 watchers\n                            \n                        \n                        \n                            \n                                Value : watchers\n                            \n                        \n                        \n                            \n                                 subscribers\n                            \n                        \n                        \n                            \n                                Value : subscribers\n                            \n                        \n                        \n                            \n                                 created_at\n                            \n                        \n                        \n                            \n                                Value : created_at\n                            \n                        \n                        \n                            \n                                 updated_at\n                            \n                        \n                        \n                            \n                                Value : updated_at\n                            \n                        \n                        \n                            \n                                 name\n                            \n                        \n                        \n                            \n                                Value : name\n                            \n                        \n                        \n                            \n                                 contributionsCount\n                            \n                        \n                        \n                            \n                                Value : contributionsCount\n                            \n                        \n                        \n                            \n                                 votesCount\n                            \n                        \n                        \n                            \n                                Value : votesCount\n                            \n                        \n                        \n                            \n                                 submissionsCount\n                            \n                        \n                        \n                            \n                                Value : submissionsCount\n                            \n                        \n                        \n                            \n                                 stargazersCount\n                            \n                        \n                        \n                            \n                                Value : stargazersCount\n                            \n                        \n                        \n                            \n                                 starsCount\n                            \n                        \n                        \n                            \n                                Value : starsCount\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n  🍕 Open Sauced Nest Supabase API🍕\n  The path to your next Open Source contribution\n  \n  \n  \n\n\n\n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n🚀 Live release environments\n\napi.opensauced.pizza\nbeta.api.opensauced.pizza\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=16.7.0\nnpm>=8.0.0\ndocker>=20.10.12\nsupabase>=0.18.0\n\n🔑 Database commands\nStarting the Supabase Studio\nFirst thing we have to do for local development is start the studio locally at localhost:54321:\nnpm run db:startMake changes\nIf we are adding a new table structure, first do it visually in the Supabase Studio and test locally.\nCheck the migration difference with the following command:\nnpm run db:changesIf everything is fine we can run the following command to apply the changes to the database:\nnpm run db:commit add_table_nameTest changes\nSimplest way to test the migrations are working is to reset the local database:\nnpm run db:resetPush changes\nIf everything is fine we can push the changes to the remote database:\nnpm run db:push🔑 Supabase structure\nClick the image to see the schema diagram full documentation.\n\n🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VoteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\ncluster_VoteModule\n\n\n\ncluster_VoteModule_exports\n\n\n\ncluster_VoteModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nVoteModule\n\nVoteModule\n\nAppModule -->\n\nVoteModule->AppModule\n\n\n\n\n\nVoteService \n\nVoteService \n\nVoteService  -->\n\nVoteModule->VoteService \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\nVoteModule -->\n\nRepoService->VoteModule\n\n\n\n\n\nVoteService\n\nVoteService\n\nVoteModule -->\n\nVoteService->VoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.9.0-beta.8\n        \n            Description : API dot Open Sauced is NestJS and SupaBase powered OAS3 backend designed to remove client complexity and provide a structured graph of all @open-sauced integrations\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/api.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/api.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/api.opensauced.pizza.git\n        \n            Author : TED Vortex \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageMetaParameters   (src/.../page-meta-parameters.dto.ts)\n                        \n                        \n                            SupabaseAuthRequest   (src/.../supabase.strategy.ts)\n                        \n                        \n                            SupabaseAuthRequest   (src/.../supabase.user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/dtos/page-meta-parameters.dto.ts\n    \n    \n        \n            \n                \n                    \n                    PageMetaParameters\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/auth/supabase.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    SupabaseAuthRequest\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/auth/supabase.user.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    SupabaseAuthRequest\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            getDomain   (src/.../endpoint.config.ts)\n                        \n                        \n                            User   (src/.../supabase.user.decorator.ts)\n                        \n                        \n                            UserId   (src/.../supabase.user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  model: TModel,\n) => {\n  return applyDecorators(\n    ApiExtraModels(PageDto, model),\n    ApiOkResponse({\n      description: \"Successfully received model list\",\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PageDto) },\n          {\n            properties: {\n              data: {\n                type: \"array\",\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/config/endpoint.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (subdomain?: string) =>\n  new URL(`https://${subdomain ? `${subdomain}.` : \"\" }${process.env.DOMAIN || \"opensauced.pizza\"}`).toString()\n                    \n                \n\n\n        \n    \n\n    src/auth/supabase.user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.user?.user_metadata?.sub as string;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
