var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.286,1,2.171]],["body/modules/AppModule.html",[0,1.639,1,4.125,2,1.376,3,2.277,4,2.543,5,2.543,6,3.394,7,0.03,8,3.394,9,3.394,10,3.394,11,2.5,12,1.632,13,1.376,14,0.367,15,0.329,16,0.292,17,3.03,18,2.879,19,0.883,20,0.935,21,2.222,22,1.791,23,4.228,24,4.423,25,2.543,26,4.228,27,3.03,28,3.548,29,2.222,30,3.03,31,3.03,32,3.03,33,4.87,34,1.088,35,3.03,36,4.228,37,3.03,38,4.228,39,3.03,40,4.228,41,3.03,42,3.03,43,0.886,44,1.791,45,1.21,46,1.632,47,2.087,48,2.543,49,1.639,50,1.791,51,2.087,52,2.543,53,2.087,54,2.543,55,2.087,56,2.543,57,3.03,58,3.03,59,3.03,60,2.543,61,3.03,62,2.543,63,3.03,64,3.03,65,0.491,66,3.03,67,3.03,68,3.03,69,3.03,70,3.03,71,3.03,72,3.03,73,3.03,74,3.03,75,1.983,76,3.03,77,3.03,78,2.766,79,1.088,80,3.03,81,3.03,82,1.175,83,1.983,84,0.367,85,0.19,86,2.543,87,0.019,88,0.019]],["title/controllers/AuthController.html",[89,1.391,90,2.171]],["body/controllers/AuthController.html",[7,0.03,14,0.439,15,0.393,16,0.349,19,0.812,20,1.118,45,1.687,65,0.774,82,1.405,84,0.439,85,0.227,87,0.021,88,0.021,89,1.519,90,3.123,91,3.041,92,2.371,93,3.156,94,0.486,95,2.356,96,5.338,97,3.623,98,4.761,99,1.037,100,3.623,101,4.773,102,3.123,103,4.773,104,4.006,105,3.623,106,3.623,107,0.759,108,3.623,109,1.646,110,0.89,111,1.301,112,1.788,113,3.712,114,3.041,115,3.041,116,3.041,117,4.006,118,2.822,119,3.123,120,2.371,121,1.788,122,1.788,123,3.041,124,2.657,125,2.142,126,3.623,127,3.623,128,3.623,129,3.623,130,3.623,131,2.142,132,3.623,133,3.041,134,2.371,135,3.623,136,3.041,137,2.142,138,4.006,139,4.006,140,4.006,141,4.006,142,2.001,143,2.001,144,3.623,145,3.623,146,1.519,147,1.118,148,3.623]],["title/modules/AuthModule.html",[0,1.286,6,1.961]],["body/modules/AuthModule.html",[0,1.985,2,1.834,3,2.757,6,3.851,7,0.03,11,3.026,12,2.175,13,1.834,14,0.489,15,0.438,16,0.389,18,2.387,19,0.819,20,1.246,82,1.985,83,3.349,84,0.489,85,0.253,87,0.023,88,0.023,90,3.678,122,3.253,123,3.389,149,3.389,150,3.389,151,3.389,152,3.896,153,4.038,154,3.754,155,5.119,156,2.961,157,4.038,158,4.038]],["title/entities/Contribution.html",[47,1.637,159,0.814]],["body/entities/Contribution.html",[7,0.03,14,0.329,15,0.295,16,0.262,19,0.525,34,0.976,43,1.247,44,1.607,47,1.932,65,1.043,78,2.561,79,0.976,84,0.329,85,0.17,87,0.017,88,0.017,94,0.365,99,1.729,107,1.266,110,0.961,142,1.923,143,1.923,147,1.642,159,0.961,160,2.281,161,1.12,162,4.587,163,4.587,164,2.264,165,4.587,166,2.865,167,3.364,168,2.477,169,3.901,170,4.212,171,4.212,172,4.212,173,4.212,174,2.718,175,1.71,176,3.681,177,2.322,178,2.314,179,2.718,180,2.884,181,1.341,182,2.884,183,2.654,184,2.884,185,2.884,186,2.477,187,2.718,188,1.341,189,2.718,190,1.993,191,2.718,192,2.718,193,1.464,194,2.718,195,2.108,196,2.718,197,2.871,198,2.718,199,1.341,200,2.718,201,2.718,202,2.734,203,2.871,204,1.993,205,2.108,206,2.108,207,1.932,208,1.932,209,1.932,210,1.993,211,1.607,212,1.993,213,2.281]],["title/controllers/HealthController.html",[89,1.391,214,2.171]],["body/controllers/HealthController.html",[7,0.03,14,0.368,15,0.329,16,0.293,19,0.708,20,0.937,24,4.091,25,2.548,29,2.227,75,1.987,82,1.177,84,0.368,85,0.19,87,0.019,88,0.019,89,1.273,92,1.987,94,0.407,95,2.09,99,1.211,102,3.451,107,0.887,112,2.09,118,2.882,119,3.19,120,1.987,121,1.499,131,3.485,134,2.77,146,1.775,214,2.77,215,2.548,216,4.821,217,3.498,218,5.744,219,3.036,220,4.234,221,4.068,222,3.118,223,3.451,224,4.234,225,3.036,226,3.105,227,3.036,228,4.234,229,3.036,230,4.234,231,4.234,232,4.234,233,4.875,234,4.234,235,4.234,236,3.036,237,3.036,238,1.499,239,3.759,240,3.036,241,3.036,242,3.036,243,1.499,244,3.036,245,3.553,246,4.234,247,3.036,248,3.036,249,3.036,250,3.036,251,3.036,252,3.036,253,4.234,254,3.036,255,3.553,256,3.036,257,3.036,258,3.036,259,3.036,260,3.036,261,3.036,262,3.036,263,3.036,264,3.036,265,3.036,266,3.036,267,3.036,268,3.036,269,3.036,270,3.036]],["title/modules/HealthModule.html",[0,1.286,8,1.961]],["body/modules/HealthModule.html",[0,2.19,2,2.152,7,0.029,8,3.34,14,0.574,15,0.514,16,0.457,18,2.802,19,0.81,20,1.463,28,4.741,29,3.475,82,2.19,84,0.574,85,0.297,87,0.025,88,0.025,214,3.949,271,4.739,272,4.739]],["title/classes/PageDto.html",[85,0.208,273,1.961]],["body/classes/PageDto.html",[7,0.03,14,0.45,15,0.404,16,0.359,19,0.769,62,4.075,65,1.007,84,0.45,85,0.339,87,0.021,88,0.021,94,0.499,99,1.389,107,1.132,109,1.689,110,0.913,111,1.335,121,1.836,161,1.389,238,1.836,243,3.01,273,2.87,274,2.198,275,3.121,276,4.99,277,4.555,278,4.855,279,5.945,280,3.724,281,4.855,282,3.719,283,3.719,284,3.719,285,3.719,286,3.719,287,3.719,288,4.537,289,5.406,290,5.406,291,3.121,292,2.727,293,3.121,294,3.121,295,3.719,296,3.121,297,3.719,298,3.719]],["title/classes/PageMetaDto.html",[85,0.208,280,1.961]],["body/classes/PageMetaDto.html",[7,0.03,14,0.403,15,0.361,16,0.321,19,0.605,65,0.98,84,0.403,85,0.209,87,0.02,88,0.02,94,0.447,99,1.691,107,1.266,109,1.512,110,0.817,111,1.195,121,1.643,161,1.291,175,1.897,238,2.226,243,3.252,274,1.968,277,2.441,280,2.666,288,5.41,292,4.021,299,4.022,300,2.794,301,5.115,302,5.115,303,4.809,304,5.115,305,3.752,306,3.329,307,4.602,308,4.51,309,4.021,310,3.329,311,3.329,312,3.329,313,3.329,314,3.329,315,3.329,316,1.793,317,4.293,318,3.329,319,3.308,320,3.785,321,3.329,322,2.441,323,3.329,324,3.329,325,3.329,326,3.329,327,3.329]],["title/classes/PageOptionsDto.html",[85,0.208,316,1.787]],["body/classes/PageOptionsDto.html",[7,0.03,14,0.393,15,0.352,16,0.313,19,0.728,65,0.951,84,0.393,85,0.316,87,0.02,88,0.02,94,0.436,99,1.445,107,1.137,111,2.105,121,1.602,146,1.36,161,1.268,175,1.852,177,2.598,243,3.059,274,1.919,291,2.724,292,3.703,294,2.724,299,3.717,305,3.703,316,2.388,317,2.724,319,4.545,320,2.724,322,3.979,328,2.724,329,4.597,330,4.433,331,5.049,332,3.304,333,5.049,334,3.245,335,4.433,336,3.245,337,3.245,338,4.433,339,3.245,340,3.245,341,4.433,342,4.433,343,3.245,344,3.245,345,3.245,346,3.245,347,5.426,348,3.245,349,5.049,350,5.426,351,3.245,352,3.245,353,3.245,354,3.245,355,3.245,356,4.433,357,4.433,358,3.245]],["title/entities/Repo.html",[43,0.695,159,0.814]],["body/entities/Repo.html",[7,0.03,14,0.207,15,0.185,16,0.165,19,0.651,34,0.613,43,0.575,45,1.488,46,0.919,47,2.276,48,1.432,49,2.017,51,2.567,53,2.567,55,2.567,65,1.051,78,2.578,79,0.613,84,0.207,85,0.107,87,0.012,88,0.012,94,0.229,99,1.772,107,1.297,110,1.132,142,1.442,143,1.442,147,1.332,159,0.673,161,0.785,164,1.698,167,2.523,168,2.743,169,4.076,170,4.48,171,4.48,172,4.48,173,3.87,175,1.715,176,3.915,177,2.479,178,2.98,180,2.635,181,0.842,182,2.635,183,2.425,184,2.635,185,2.635,186,2.276,188,0.842,190,1.252,193,0.919,195,1.478,197,2.012,199,0.842,202,2.826,203,2.012,204,1.252,205,1.478,206,1.478,207,1.354,208,1.354,209,1.354,210,2.523,211,1.009,212,1.252,309,2.012,359,1.432,360,2.251,361,3.44,362,3.44,363,3.44,364,3.44,365,3.44,366,2.034,367,3.44,368,3.307,369,3.44,370,2.325,371,3.44,372,3.624,373,2.743,374,1.707,375,1.707,376,1.707,377,1.707,378,1.707,379,1.707,380,1.707,381,1.432,382,1.707,383,1.707,384,3.941,385,1.707,386,2.743,387,1.707,388,1.707,389,1.707,390,1.707,391,2.743,392,1.707,393,2.743,394,1.707,395,2.743,396,1.707,397,2.743,398,1.707,399,1.707,400,1.707,401,1.707,402,1.707,403,1.707,404,1.707,405,1.707,406,1.707,407,3.87,408,1.707,409,1.707,410,1.707,411,1.707,412,1.117,413,1.707,414,1.432,415,1.432,416,1.707,417,1.707]],["title/controllers/RepoController.html",[89,1.391,418,2.171]],["body/controllers/RepoController.html",[7,0.03,14,0.347,15,0.311,16,0.276,19,0.778,20,0.884,43,1.336,65,0.961,82,1.11,84,0.347,85,0.179,86,2.403,87,0.018,88,0.018,89,1.2,92,1.873,94,0.384,95,2.005,99,1.351,102,3.688,107,0.989,109,2.145,110,1.159,111,1.696,112,2.331,114,2.403,115,2.403,118,3.038,119,3.362,120,1.873,121,1.413,131,1.692,134,3.09,136,3.963,146,1.979,147,1.457,168,2.782,175,1.457,217,3.246,243,1.413,273,1.692,316,3.036,412,2.658,418,2.658,419,2.403,420,4.554,421,4.554,422,4.722,423,2.403,424,2.863,425,4.731,426,2.863,427,4.062,428,3.98,429,2.863,430,3.688,431,2.403,432,2.863,433,3.769,434,2.863,435,2.863,436,2.863,437,2.863,438,3.409,439,4.062,440,2.863,441,2.863,442,2.403,443,4.062,444,2.145,445,2.403,446,2.1,447,3.963,448,2.403,449,2.403,450,2.403,451,2.1,452,2.863,453,2.1,454,2.863,455,2.403,456,2.403,457,2.863,458,2.403,459,2.403,460,2.863,461,2.403,462,2.403,463,2.403,464,2.863,465,2.863,466,2.863]],["title/modules/RepoModule.html",[0,1.286,9,1.961]],["body/modules/RepoModule.html",[0,2.038,2,1.913,3,2.832,7,0.03,9,3.777,11,3.108,12,2.269,13,1.913,14,0.51,15,0.457,16,0.406,18,2.49,19,0.829,20,1.3,21,3.089,22,2.49,43,0.882,82,2.038,83,3.44,84,0.51,85,0.264,87,0.023,88,0.023,154,3.856,418,3.75,444,3.01,445,3.535,446,3.089,467,3.535,468,3.535,469,3.535,470,4.213,471,4.213,472,4.213]],["title/injectables/RepoService.html",[444,1.507,473,1.391]],["body/injectables/RepoService.html",[7,0.03,14,0.297,15,0.266,16,0.237,19,0.742,20,0.758,22,1.452,34,0.882,43,1.07,45,0.703,47,1.212,49,0.952,51,1.212,53,1.212,55,1.212,65,0.776,79,0.882,84,0.297,85,0.154,87,0.016,88,0.016,94,0.33,95,1.794,107,1.07,109,2.173,110,1.312,111,1.718,112,2.361,137,3.539,146,2.14,147,1.476,159,0.603,168,2.804,175,1.336,210,1.801,213,2.061,217,3.125,238,1.794,239,1.607,273,1.452,280,2.828,293,2.061,303,3.051,316,2.98,368,3.051,420,3.051,421,3.051,423,3.051,428,3.174,430,3.498,431,3.051,433,1.801,438,3.632,444,1.651,446,1.801,448,3.051,449,2.061,450,2.061,473,1.524,474,1.452,475,2.061,476,4.014,477,2.456,478,2.828,479,2.456,480,3.635,481,2.456,482,2.456,483,2.456,484,2.456,485,2.456,486,2.061,487,2.456,488,2.456,489,2.456,490,2.456,491,2.061,492,3.635,493,2.456,494,3.635,495,2.456,496,2.456,497,2.456,498,2.456,499,2.456,500,2.456,501,3.051,502,2.456,503,2.456,504,2.456,505,2.456,506,2.456,507,2.456,508,2.456,509,4.783,510,4.783,511,2.456,512,2.456,513,2.456,514,2.456,515,2.456,516,2.061,517,2.456,518,2.061,519,2.456,520,2.061,521,2.456,522,2.061,523,4.487,524,3.632,525,2.456,526,4.487,527,3.508,528,3.051,529,3.051,530,2.576,531,2.456,532,2.456,533,2.456,534,2.456,535,2.456,536,2.456,537,2.456,538,2.456,539,2.456,540,2.456]],["title/entities/RepoToUserStargazers.html",[55,1.637,159,0.814]],["body/entities/RepoToUserStargazers.html",[7,0.03,14,0.353,15,0.316,16,0.281,19,0.64,34,1.045,43,1.267,45,1.731,46,1.568,55,2.029,65,1.006,79,1.045,84,0.353,85,0.182,87,0.018,88,0.018,94,0.391,99,1.702,107,1.246,110,1.17,142,1.998,143,1.998,147,1.798,159,1.009,161,1.176,164,2.352,166,2.941,175,1.749,177,2.17,180,2.797,181,1.437,182,2.797,183,2.574,184,2.797,185,2.797,186,2.555,188,1.437,193,2.214,195,2.789,199,1.437,202,2.695,205,2.567,206,2.567,207,2.029,208,2.029,209,2.029,370,2.941,520,2.443,541,2.443,542,3.78,543,2.911,544,2.911,545,3.118,546,2.911,547,2.911,548,2.911,549,2.911,550,2.911,551,2.911,552,2.911,553,2.911,554,1.905,555,2.911,556,2.911]],["title/entities/RepoToUserStars.html",[51,1.637,159,0.814]],["body/entities/RepoToUserStars.html",[7,0.03,14,0.353,15,0.316,16,0.281,19,0.64,34,1.045,43,1.267,45,1.731,46,1.568,51,2.029,65,1.006,79,1.045,84,0.353,85,0.182,87,0.018,88,0.018,94,0.391,99,1.702,107,1.246,110,1.17,142,1.998,143,1.998,147,1.798,159,1.009,161,1.176,164,2.352,166,2.941,175,1.749,177,2.17,180,2.797,181,1.437,182,2.797,183,2.574,184,2.797,185,2.797,186,2.555,188,1.437,193,2.214,195,2.789,199,1.437,202,2.695,205,2.567,206,2.567,207,2.029,208,2.029,209,2.029,370,2.941,522,2.443,542,3.78,545,3.118,554,1.905,557,2.443,558,2.911,559,2.911,560,2.911,561,2.911,562,2.911,563,2.911,564,2.911,565,2.911,566,2.911,567,2.911,568,2.911,569,2.911]],["title/entities/RepoToUserSubmissions.html",[53,1.637,159,0.814]],["body/entities/RepoToUserSubmissions.html",[7,0.03,14,0.353,15,0.316,16,0.281,19,0.64,34,1.045,43,1.267,45,1.731,46,1.568,53,2.029,65,1.006,79,1.045,84,0.353,85,0.182,87,0.018,88,0.018,94,0.391,99,1.702,107,1.246,110,1.17,142,1.998,143,1.998,147,1.798,159,1.009,161,1.176,164,2.352,166,2.941,175,1.749,177,2.17,180,2.797,181,1.437,182,2.797,183,2.574,184,2.797,185,2.797,186,2.555,188,1.437,193,2.214,195,2.789,199,1.437,202,2.695,205,2.567,206,2.567,207,2.029,208,2.029,209,2.029,370,2.941,518,2.443,542,3.78,545,3.118,554,1.905,570,2.443,571,2.911,572,2.911,573,2.911,574,2.911,575,2.911,576,2.911,577,2.911,578,2.911,579,2.911,580,2.911,581,2.911,582,2.911]],["title/entities/RepoToUserVotes.html",[49,1.286,159,0.814]],["body/entities/RepoToUserVotes.html",[7,0.03,14,0.349,15,0.312,16,0.278,19,0.636,34,1.034,43,1.264,45,1.727,46,1.551,49,1.581,65,1.004,79,1.034,84,0.349,85,0.18,87,0.018,88,0.018,94,0.386,99,1.697,107,1.243,110,1.163,111,2.028,142,1.985,143,1.985,147,1.792,159,1.001,161,1.167,164,2.338,166,2.929,175,1.743,177,2.16,180,2.787,181,1.421,182,2.787,183,2.565,184,2.787,185,2.787,186,2.543,188,1.421,193,2.197,195,2.775,199,1.421,202,2.684,205,2.551,206,2.551,207,2.013,208,2.013,209,2.013,370,2.929,516,2.416,542,3.774,545,3.099,554,1.884,583,2.416,584,2.879,585,2.879,586,2.879,587,2.879,588,2.879,589,2.879,590,2.879,591,2.879,592,2.879,593,2.879,594,2.879,595,2.879]],["title/controllers/RepoVoteController.html",[89,1.391,596,2.171]],["body/controllers/RepoVoteController.html",[7,0.03,14,0.238,15,0.214,16,0.19,19,0.711,20,0.607,43,1.384,44,1.163,49,1.464,50,1.163,65,0.935,82,0.763,84,0.238,85,0.123,87,0.014,88,0.014,89,0.825,92,1.288,94,0.264,95,1.516,99,1.221,102,3.468,107,0.894,109,1.938,110,1.048,111,1.533,112,2.846,116,1.652,117,3.885,118,2.736,119,3.028,120,1.288,121,0.971,122,0.971,131,1.816,133,3.582,134,2.793,137,2.523,146,1.789,147,1.636,168,2.846,175,1.89,217,3.105,238,0.971,239,2.01,243,1.516,360,3.772,425,4.448,430,3.468,433,3.887,442,1.652,444,1.716,447,3.885,455,1.652,456,1.652,458,2.578,459,2.578,461,2.578,462,2.578,463,2.578,526,3.582,527,3.13,596,2.01,597,3.885,598,1.652,599,4.629,600,4.629,601,4.629,602,4.629,603,1.968,604,4.079,605,1.968,606,4.268,607,4.268,608,4.268,609,5.324,610,3.071,611,4.268,612,4.448,613,3.582,614,1.968,615,1.968,616,1.968,617,3.071,618,1.968,619,1.968,620,1.968,621,4.268,622,3.582,623,1.968,624,1.968,625,1.968,626,1.968,627,1.652,628,1.968,629,4.629,630,1.652,631,2.034,632,1.652,633,1.968,634,1.968,635,1.968,636,1.968,637,4.268,638,3.071,639,1.968,640,1.968,641,3.071,642,1.968]],["title/classes/SupabaseAuthResponse.html",[85,0.208,113,2.171]],["body/classes/SupabaseAuthResponse.html",[7,0.028,14,0.431,15,0.386,16,0.343,65,1.012,84,0.431,85,0.223,87,0.021,88,0.021,93,3.733,94,0.477,107,1.307,111,2.349,113,3.085,138,4.439,139,4.439,140,4.439,141,4.439,142,2.217,143,2.217,147,1.632,161,1.349,168,3.255,243,3.317,274,2.103,643,5.299,644,2.985,645,5.289,646,3.557,647,3.557,648,3.557,649,3.557,650,3.557,651,3.557,652,3.557,653,3.557]],["title/injectables/SupabaseGuard.html",[122,1.637,473,1.391]],["body/injectables/SupabaseGuard.html",[7,0.029,14,0.592,15,0.53,16,0.471,19,0.772,20,1.509,84,0.592,85,0.306,87,0.025,88,0.025,122,2.84,156,3.585,211,2.89,473,2.412,474,2.89,654,4.102,655,4.888,656,4.888]],["title/injectables/SupabaseStrategy.html",[152,1.961,473,1.391]],["body/injectables/SupabaseStrategy.html",[7,0.03,14,0.452,15,0.405,16,0.36,19,0.771,20,1.153,45,1.394,65,0.879,84,0.59,85,0.234,87,0.021,88,0.021,93,2.209,94,0.501,95,2.404,98,4.997,107,1.135,109,2.212,110,1.196,111,1.749,112,2.404,124,2.74,125,2.879,146,1.566,152,2.879,156,2.74,211,2.209,217,2.918,226,2.74,238,2.674,473,2.042,474,2.209,542,2.879,657,2.74,658,4.87,659,4.87,660,3.737,661,4.87,662,5.418,663,3.737,664,3.737,665,3.737,666,4.87,667,3.737,668,4.87,669,3.737,670,3.737,671,3.737,672,4.87,673,3.136,674,3.737,675,3.737,676,3.737,677,3.737,678,3.737,679,3.737,680,3.737,681,3.737,682,3.737,683,3.737,684,3.737,685,3.737,686,3.737]],["title/entities/User.html",[45,0.949,159,0.814]],["body/entities/User.html",[7,0.03,14,0.3,15,0.269,16,0.239,19,0.72,34,0.89,43,1.124,44,1.466,45,1.047,49,2.255,50,1.466,51,2.871,52,2.081,53,2.871,54,2.081,55,2.871,56,2.081,65,1.024,78,3.51,79,0.89,84,0.3,85,0.155,87,0.016,88,0.016,94,0.333,99,1.755,107,1.285,110,0.609,142,1.824,143,1.824,147,1.343,159,0.899,161,1.047,164,2.148,169,1.818,175,1.483,176,2.685,177,2.438,178,2.164,180,2.648,181,1.224,182,2.648,183,2.437,184,2.648,185,2.648,186,2.372,188,1.224,190,1.818,199,1.224,202,2.53,203,2.685,204,1.818,207,1.807,208,1.807,209,1.807,211,1.466,212,1.818,309,3.934,372,4.302,381,3.652,407,4.502,412,2.847,687,2.081,688,4.352,689,4.352,690,4.352,691,4.352,692,2.479,693,2.479,694,2.479,695,2.479,696,2.479,697,2.479,698,2.479,699,3.661,700,2.479,701,3.661,702,2.479,703,3.661,704,2.479,705,3.661,706,2.479,707,3.661,708,2.479,709,2.479,710,2.479]],["title/modules/VoteModule.html",[0,1.286,10,1.961]],["body/modules/VoteModule.html",[0,1.965,2,1.806,3,2.73,7,0.03,10,3.812,11,2.997,12,2.141,13,1.806,14,0.481,15,0.431,16,0.383,18,2.35,19,0.847,20,1.227,21,2.916,22,2.35,43,1.169,44,2.35,49,1.965,50,2.35,82,1.965,83,3.317,84,0.481,85,0.249,87,0.022,88,0.022,154,3.717,444,2.819,596,3.651,630,3.337,631,3.542,632,3.337,711,3.337,712,3.337,713,3.337,714,3.976,715,3.976,716,3.976]],["title/injectables/VoteService.html",[473,1.391,631,1.787]],["body/injectables/VoteService.html",[7,0.03,14,0.362,15,0.324,16,0.288,19,0.703,20,0.923,22,1.767,34,1.073,43,0.877,49,1.159,50,1.767,65,0.784,84,0.362,85,0.187,87,0.018,88,0.018,94,0.401,95,2.067,107,1.097,109,2.196,110,1.187,111,1.736,112,2.386,137,3.26,146,2.196,166,1.61,175,1.941,217,3.079,238,2.067,239,1.956,370,1.61,428,2.192,430,3.428,473,1.756,474,1.767,476,4.396,478,3.097,486,2.509,501,3.515,523,4.396,524,3.515,527,3.842,528,3.515,529,4.057,530,2.604,604,4.078,609,2.509,612,3.515,613,2.509,622,3.515,631,2.256,717,2.509,718,4.188,719,4.188,720,2.99,721,2.99,722,4.188,723,2.99,724,4.188,725,2.99,726,5.869,727,4.188,728,2.99,729,2.99,730,2.99,731,2.99,732,2.99,733,4.188,734,4.188,735,5.716,736,4.188,737,4.188,738,4.188,739,2.99,740,2.99,741,2.99,742,2.99]],["title/changelog.html",[743,1.822,744,2.042,745,2.336]],["body/changelog.html",[3,1.769,7,0.029,13,0.576,16,0.269,34,1.002,43,0.266,45,0.363,60,1.802,75,0.83,79,1.002,87,0.009,88,0.009,93,0.75,104,1.064,110,0.902,125,1.65,131,1.269,147,0.663,167,0.93,178,0.75,197,0.93,216,1.064,221,0.93,222,0.75,245,1.064,305,0.93,319,0.93,322,2.047,332,0.83,412,0.83,478,1.65,491,2.343,530,1.156,627,1.802,743,0.83,745,1.802,746,1.268,747,2.147,748,1.802,749,1.802,750,2.147,751,3.084,752,1.802,753,5.407,754,5.081,755,4.251,756,5.885,757,5.922,758,3.285,759,2.757,760,3.285,761,1.268,762,3.908,763,1.268,764,2.147,765,2.792,766,2.343,767,1.064,768,4.251,769,1.268,770,1.268,771,1.268,772,1.268,773,2.147,774,4.656,775,4.656,776,5.287,777,1.268,778,2.147,779,1.268,780,1.268,781,1.268,782,1.268,783,1.268,784,1.268,785,1.268,786,2.147,787,3.675,788,2.404,789,1.268,790,1.268,791,1.268,792,4.251,793,1.268,794,5.19,795,5.801,796,1.268,797,1.064,798,1.268,799,1.268,800,2.147,801,2.147,802,2.792,803,3.675,804,2.147,805,2.147,806,1.268,807,1.268,808,1.268,809,2.792,810,1.268,811,2.147,812,1.268,813,1.268,814,1.268,815,1.268,816,3.99,817,3.285,818,3.285,819,2.147,820,2.792,821,2.147,822,4.656,823,2.147,824,2.147,825,2.147,826,2.792,827,3.675,828,2.147,829,2.147,830,1.802,831,2.147,832,3.99,833,2.147,834,2.147,835,2.147,836,2.792,837,2.147,838,4.656,839,4.656,840,2.147,841,4.817,842,3.675,843,6.172,844,3.675,845,1.268,846,2.147,847,1.268,848,1.268,849,3.285,850,3.285,851,4.958,852,1.268,853,1.268,854,1.268,855,1.268,856,1.268,857,1.268,858,4.251,859,1.268,860,1.268,861,1.268,862,1.268,863,4.251,864,2.792,865,1.574,866,1.268,867,1.268,868,1.268,869,2.147,870,1.802,871,2.147,872,1.268,873,1.268,874,1.268,875,3.285,876,1.802,877,1.268,878,1.268,879,1.064,880,1.802,881,1.268,882,1.268,883,2.147,884,1.064,885,1.268,886,1.268,887,4.656,888,1.268,889,1.268,890,1.268,891,1.268,892,2.147,893,1.268,894,1.268,895,1.268,896,1.268,897,1.802,898,1.268,899,1.268,900,1.064,901,1.268,902,1.268,903,1.268,904,1.268,905,1.268,906,1.268,907,2.147,908,1.268,909,1.268,910,3.751,911,1.268,912,1.268,913,1.268,914,2.147,915,1.268,916,2.147,917,2.792,918,1.268,919,1.268,920,1.268,921,1.268,922,0.93,923,1.268,924,1.268,925,1.268,926,1.268,927,1.268,928,1.268,929,3.675,930,2.147,931,1.064,932,1.268,933,1.268,934,1.268,935,1.268,936,1.268,937,1.268,938,1.268,939,1.268,940,1.268,941,1.268,942,1.268,943,1.268,944,1.268,945,1.268,946,1.268,947,1.268,948,1.268,949,1.268,950,1.268,951,1.268,952,4.656,953,1.268,954,1.268,955,1.268,956,1.268,957,2.792,958,1.268,959,1.268,960,1.268,961,1.268,962,1.268,963,1.268,964,1.268,965,1.268,966,1.268,967,1.268,968,1.268,969,1.268,970,1.268,971,1.268,972,1.268,973,1.268,974,2.792,975,1.268,976,1.268,977,1.268,978,1.268,979,1.268,980,1.268,981,1.268,982,1.268,983,1.268,984,1.268,985,1.064,986,1.268,987,1.268,988,1.268,989,1.268,990,1.268,991,1.268,992,2.147,993,1.268,994,1.268,995,1.268,996,1.268,997,1.268,998,1.268,999,3.285,1000,2.147,1001,1.268,1002,1.268,1003,1.268,1004,1.802,1005,1.268,1006,1.802,1007,1.268,1008,1.268,1009,1.268,1010,2.147,1011,2.147,1012,2.147,1013,1.802,1014,2.147,1015,1.268,1016,2.792,1017,1.268,1018,2.147,1019,1.268,1020,2.147,1021,2.147,1022,1.268,1023,1.268,1024,1.268,1025,1.268,1026,1.268,1027,1.268,1028,1.268,1029,1.268,1030,1.268,1031,1.268,1032,1.268,1033,1.268,1034,1.268,1035,1.268,1036,1.268,1037,1.268,1038,1.268,1039,2.147,1040,1.268,1041,1.268,1042,1.268,1043,1.268,1044,1.268,1045,1.268,1046,1.268,1047,1.268,1048,1.268,1049,1.268,1050,1.268,1051,1.268,1052,1.268,1053,1.268,1054,1.268,1055,1.268,1056,1.268,1057,1.268,1058,1.268,1059,1.064,1060,1.268,1061,1.268,1062,1.268,1063,1.268,1064,1.268,1065,1.268,1066,1.268,1067,1.268,1068,1.268,1069,1.268,1070,1.268,1071,1.064,1072,1.268,1073,1.268,1074,1.268,1075,1.268,1076,1.268,1077,1.268,1078,1.268,1079,1.268,1080,1.268,1081,1.064,1082,1.268,1083,1.268,1084,1.268,1085,1.268,1086,1.268,1087,1.268,1088,1.268,1089,1.268]],["title/coverage.html",[1090,3.776]],["body/coverage.html",[7,0.03,16,0.329,43,0.716,45,1.313,47,1.686,49,1.325,51,1.686,53,1.686,55,1.686,65,0.554,85,0.347,87,0.02,88,0.02,89,2.323,90,2.235,91,2.867,93,2.02,113,2.235,122,1.686,152,2.02,159,1.493,160,2.867,178,3.961,214,2.235,215,2.867,273,2.02,275,2.867,280,2.02,299,3.003,300,2.867,316,1.84,328,2.867,359,2.867,418,2.235,419,2.867,444,1.552,451,2.506,453,2.506,473,2.323,475,2.867,530,1.84,541,2.867,557,2.867,570,2.867,583,2.867,596,2.235,597,2.867,598,2.867,604,2.235,631,1.84,643,2.867,644,2.867,654,2.867,657,2.506,687,2.867,717,2.867,788,2.235,880,4.651,1090,2.867,1091,3.416,1092,3.416,1093,3.416,1094,3.416,1095,6.471,1096,5.542,1097,3.366,1098,2.867,1099,2.867,1100,3.416,1101,2.867,1102,2.867,1103,3.416,1104,2.867,1105,3.416,1106,2.867,1107,3.416,1108,4.59,1109,3.416,1110,2.867]],["title/miscellaneous/enumerations.html",[1111,1.264,1112,3.342]],["body/miscellaneous/enumerations.html",[7,0.028,87,0.026,88,0.026,94,0.673,329,4.283,332,3.821,414,4.901,415,4.901,1111,2.277,1112,4.208,1113,5.014,1114,5.014]],["title/miscellaneous/functions.html",[1111,1.264,1115,3.342]],["body/miscellaneous/functions.html",[7,0.026,87,0.026,88,0.026,94,0.688,1104,4.305,1106,5.235,1111,2.33,1115,4.305,1116,5.13]],["title/index.html",[94,0.374,743,1.822,744,2.042]],["body/index.html",[7,0.028,12,1.894,13,1.597,15,0.382,47,1.736,75,3.669,87,0.021,88,0.021,125,3.315,221,3.432,222,3.451,223,3.669,255,2.952,329,2.579,366,2.079,478,2.079,530,1.894,748,4.9,749,2.952,759,2.952,762,3.928,766,3.928,767,3.928,788,2.301,797,2.952,830,2.952,900,5.142,910,3.928,922,2.579,985,3.928,1004,2.952,1059,2.952,1071,4.9,1110,2.952,1117,3.517,1118,3.517,1119,3.517,1120,3.517,1121,3.517,1122,3.517,1123,3.517,1124,4.414,1125,2.952,1126,3.517,1127,3.517,1128,3.517,1129,3.517,1130,3.517,1131,3.517,1132,3.517,1133,3.517,1134,3.517,1135,5.26,1136,4.68,1137,3.517,1138,3.517,1139,4.68,1140,3.517,1141,3.517,1142,3.517,1143,3.517,1144,3.517,1145,4.68,1146,3.517,1147,4.68,1148,4.68,1149,3.517,1150,3.517,1151,3.517,1152,3.517,1153,3.517,1154,3.517,1155,3.517,1156,3.517,1157,3.517,1158,3.517,1159,3.517,1160,3.517,1161,2.952,1162,3.517,1163,4.68,1164,3.517,1165,3.517,1166,3.517,1167,3.517,1168,3.517,1169,3.517,1170,3.517,1171,3.517,1172,3.517,1173,3.517,1174,3.517,1175,3.517,1176,3.517,1177,3.517,1178,3.517,1179,3.517,1180,2.579]],["title/license.html",[366,1.646,743,1.822,744,2.042]],["body/license.html",[7,0.022,13,1.82,87,0.022,88,0.022,183,2.544,222,2.368,223,2.621,366,2.368,753,3.362,788,2.621,884,3.362,931,4.275,1124,3.362,1125,5.419,1180,2.938,1181,5.601,1182,4.006,1183,5.094,1184,4.006,1185,4.006,1186,4.006,1187,4.006,1188,4.006,1189,4.006,1190,4.006,1191,4.006,1192,4.006,1193,4.006,1194,5.094,1195,4.006,1196,4.006,1197,5.094,1198,4.006,1199,4.006,1200,4.006,1201,4.006,1202,4.006,1203,4.006,1204,4.006,1205,5.094,1206,4.006,1207,4.006,1208,4.006,1209,4.006,1210,4.006,1211,4.006,1212,5.094,1213,5.094,1214,4.006,1215,4.006,1216,4.006,1217,4.006,1218,4.006,1219,4.006,1220,4.006,1221,4.006,1222,4.006,1223,4.006,1224,4.006,1225,4.006,1226,4.006,1227,4.006,1228,4.006,1229,4.006,1230,4.006,1231,4.006,1232,4.006,1233,4.006,1234,4.006,1235,4.006,1236,4.006,1237,4.006,1238,4.006,1239,4.006,1240,4.006,1241,4.006,1242,4.006]],["title/modules.html",[2,2.044]],["body/modules.html",[1,3.178,2,2.206,6,2.872,7,0.025,8,2.872,9,2.872,10,2.872,87,0.025,88,0.025,1243,6.3,1244,6.3,1245,6.3,1246,6.427,1247,4.077,1248,4.857]],["title/overview.html",[1249,3.776]],["body/overview.html",[1,4.234,2,1.761,3,2.686,4,3.253,5,3.253,6,3.794,7,0.029,8,3.26,9,3.645,10,3.756,11,2.949,12,2.088,13,1.761,79,1.392,82,1.503,87,0.022,88,0.022,122,3.096,149,3.253,150,3.253,151,3.253,152,3.708,274,2.292,444,2.886,467,3.253,468,3.253,469,3.253,474,2.292,631,3.378,711,3.253,712,3.253,713,3.253,1013,3.253,1249,3.253,1250,3.876,1251,5.514]],["title/properties.html",[161,1.139,1252,2.784]],["body/properties.html",[7,0.029,87,0.024,88,0.024,124,3.333,125,2.687,161,1.301,222,3.257,223,3.605,360,2.974,366,2.687,478,2.687,751,3.814,752,3.814,879,3.814,922,3.333,1006,3.814,1081,3.814,1180,3.333,1247,3.814,1253,4.545,1254,4.545,1255,4.545,1256,4.545,1257,4.545,1258,4.545,1259,4.545,1260,4.545,1261,4.545,1262,4.545,1263,4.545,1264,5.509,1265,4.545,1266,4.545,1267,4.545,1268,4.545,1269,4.545,1270,4.545,1271,4.545,1272,4.545]],["title/miscellaneous/typealiases.html",[1111,1.264,1273,3.982]],["body/miscellaneous/typealiases.html",[7,0.025,65,0.935,87,0.025,88,0.025,94,0.658,277,4.227,299,3.208,307,4.838,657,3.596,673,5.303,1097,3.596,1111,2.227,1274,4.903,1275,4.903,1276,5.764,1277,4.903,1278,4.115,1279,4.903]],["title/miscellaneous/variables.html",[865,2.92,1111,1.264]],["body/miscellaneous/variables.html",[7,0.03,43,0.783,45,1.394,65,0.606,87,0.021,88,0.021,94,0.501,118,2.209,137,2.879,146,2.271,161,1.069,168,2.404,177,2.407,226,3.572,276,3.136,296,3.136,332,3.757,360,2.445,451,3.572,453,3.572,530,2.013,604,3.187,865,2.74,870,4.088,876,4.088,897,3.136,1097,2.74,1098,3.136,1099,4.088,1101,3.136,1102,4.088,1111,1.697,1161,3.136,1278,4.088,1280,3.737,1281,3.737,1282,4.87,1283,3.737,1284,3.737,1285,3.737,1286,3.737,1287,3.737,1288,3.737,1289,4.87,1290,3.737,1291,3.737,1292,3.737,1293,4.87,1294,3.737,1295,3.737,1296,3.737,1297,4.87,1298,4.87,1299,4.87,1300,4.87,1301,3.737,1302,3.737]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":178,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["0/1",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1093,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1094,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["0848443",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":319,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["1.0.0",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["1.6.10",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["1.6.11",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["1.6.12",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["1.6.13",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["1.6.14",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["1.6.15",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["1.6.16",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["1.6.17",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["1.6.3",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["1.6.4",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["1.6.5",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["1.6.6",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["1.6.7",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["1.6.8",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["1.6.9",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["1.7.1",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["1.7.10",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["1.7.11",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["1.7.12",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["1.7.3",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["1.7.5",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["1.7.6",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["1.7.7",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["1.7.8",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["1.7.9",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["1.8.1",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["1.8.2",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["1.9.0",{"_index":751,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["10",{"_index":322,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(50)@isoptional",{"_index":343,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["12",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["166050d",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["17c54b9",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":339,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["20",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":753,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["20880c7",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["20bc1e7",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["22d3cc1",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":173,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["27",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["272c09a",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["273f337",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["2c0b15f",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["2c0b3d1",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["2f966a3",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["31e4d60",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["33fea7e",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["34d521d",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["3918a78",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1251,"title":{},"body":{"overview.html":{}}}],["4552c66",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1250,"title":{},"body":{"overview.html":{}}}],["50",{"_index":342,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["58bf922",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["5e7c6c7",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["5eddeb1",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["5f79c49",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["607cf5d",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["61b67d5",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["62b3eea",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["630f3b5",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["63d6a92",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":384,"title":{},"body":{"entities/Repo.html":{}}}],["673dca9",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["6d23c24",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1013,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["7249714",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["73d1c74",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["77c734c",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["79bf61d",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["7adfb6b",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["7db9008",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["7e9b8a4",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["7fe63aa",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["81e8bbc",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["8837b2a",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["8aee8e5",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["911df68",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["94ba4e1",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["957b86e",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["_data",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a0db0aa",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["a229a3b",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["a9e1df6",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1211,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["ac31556",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["accessing",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["accessors",{"_index":330,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["action",{"_index":1236,"title":{},"body":{"license.html":{}}}],["add",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["add_table_nametest",{"_index":1151,"title":{},"body":{"index.html":{}}}],["adding",{"_index":1142,"title":{},"body":{"index.html":{}}}],["adds",{"_index":621,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["addselect((qb",{"_index":509,"title":{},"body":{"injectables/RepoService.html":{}}}],["adjust",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["adjustments",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["af531e4",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":490,"title":{},"body":{"injectables/RepoService.html":{}}}],["aliases",{"_index":1274,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliasname",{"_index":492,"title":{},"body":{"injectables/RepoService.html":{}}}],["aliastable",{"_index":494,"title":{},"body":{"injectables/RepoService.html":{}}}],["alias}count",{"_index":493,"title":{},"body":{"injectables/RepoService.html":{}}}],["alias}countselect",{"_index":495,"title":{},"body":{"injectables/RepoService.html":{}}}],["allof",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["along",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":612,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["and/or",{"_index":1203,"title":{},"body":{"license.html":{}}}],["andwhere(\"r2votes.user_id",{"_index":734,"title":{},"body":{"injectables/VoteService.html":{}}}],["api",{"_index":922,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["api.opensauced.pizza",{"_index":1120,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoVoteController.html":{}}}],["apiconfig",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["apiconflictresponse",{"_index":629,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["apidocs",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["apiextramodels(pagedto",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apinotfoundresponse",{"_index":447,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["apiokresponse",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{},"miscellaneous/variables.html":{}}}],["apioperation",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["apipaginatedresponse",{"_index":451,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse(repo",{"_index":465,"title":{},"body":{"controllers/RepoController.html":{}}}],["apiproperty",{"_index":288,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{}}}],["apiproperty({type",{"_index":286,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":347,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({enum",{"_index":334,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":338,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apitags",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["apitags(\"authentication",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"health",{"_index":237,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"repository",{"_index":456,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["apply",{"_index":1149,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1240,"title":{},"body":{"license.html":{}}}],["array",{"_index":296,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["artifact",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":415,"title":{},"body":{"entities/Repo.html":{},"miscellaneous/enumerations.html":{}}}],["assign",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1190,"title":{},"body":{"license.html":{}}}],["async",{"_index":217,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["attach",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["attempt",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"changelog.html":{},"coverage.html":{}}}],["auth.controller",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/supabase.guard",{"_index":633,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["auth/supabase.user.decorator",{"_index":634,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["authcontroller",{"_index":90,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":658,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticate(req",{"_index":661,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticated",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":655,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authguard(\"supabase",{"_index":656,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1270,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":1229,"title":{},"body":{"license.html":{}}}],["autoloadentities",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1248,"title":{},"body":{"modules.html":{}}}],["await",{"_index":527,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["b1a67da",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["b1eda28",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["b4c9879",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["b4d3785",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["b57f47b",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["b5b6ac5",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["b7c3395",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["b9f3798",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["ba8dfbb",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1256,"title":{},"body":{"properties.html":{}}}],["badges",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["baseentity",{"_index":203,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["baseline",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["basequerybuilder",{"_index":476,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["bash",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["bc3a37d",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["bd6d621",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":752,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["beta.api.opensauced.pizza",{"_index":1121,"title":{},"body":{"index.html":{}}}],["better",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["bigint",{"_index":176,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["binaries",{"_index":1126,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":309,"title":{},"body":{"classes/PageMetaDto.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["branch",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1246,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1243,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1266,"title":{},"body":{"properties.html":{}}}],["build",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":501,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["c",{"_index":1182,"title":{},"body":{"license.html":{}}}],["c013b70",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["c127cea",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["c24937f",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["cb83f9d",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["cb9206d",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["cc46460",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["cd306f8",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["cd8f21d",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":745,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":748,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["channel",{"_index":1178,"title":{},"body":{"index.html":{}}}],["character",{"_index":170,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["charge",{"_index":1187,"title":{},"body":{"license.html":{}}}],["check",{"_index":221,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["checkauthsession",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["checks",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1232,"title":{},"body":{"license.html":{}}}],["class",{"_index":85,"title":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/SupabaseAuthResponse.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["classes",{"_index":274,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/SupabaseAuthResponse.html":{},"overview.html":{}}}],["clean",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":1158,"title":{},"body":{"index.html":{}}}],["client",{"_index":1258,"title":{},"body":{"properties.html":{}}}],["closes",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_repomodule",{"_index":467,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_exports",{"_index":468,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_providers",{"_index":469,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_votemodule",{"_index":711,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["cluster_votemodule_exports",{"_index":712,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["cluster_votemodule_providers",{"_index":713,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["code",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["column",{"_index":202,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["column(\"text",{"_index":416,"title":{},"body":{"entities/Repo.html":{}}}],["column('text",{"_index":377,"title":{},"body":{"entities/Repo.html":{}}}],["column({default",{"_index":381,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["column({type",{"_index":169,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["command",{"_index":1145,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1133,"title":{},"body":{"index.html":{}}}],["comments",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["common/decorators/api",{"_index":452,"title":{},"body":{"controllers/RepoController.html":{}}}],["common/dtos/page",{"_index":448,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["common/dtos/page.dto",{"_index":450,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["community",{"_index":1170,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":1259,"title":{},"body":{"properties.html":{}}}],["component",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["concurrency",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1210,"title":{},"body":{"license.html":{}}}],["config/api.config",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["config/endpoint.config",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configservice.get(\"db.connection",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.database",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.host",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.password",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.port",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.username",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["confirmed_at",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["conflictexception",{"_index":729,"title":{},"body":{"injectables/VoteService.html":{}}}],["conflictexception(\"you",{"_index":738,"title":{},"body":{"injectables/VoteService.html":{}}}],["connection",{"_index":1241,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["console.log(querybuilder.getsql",{"_index":537,"title":{},"body":{"injectables/RepoService.html":{}}}],["const",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["constants/order.constant",{"_index":353,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["constructor",{"_index":238,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["constructor(data",{"_index":278,"title":{},"body":{"classes/PageDto.html":{}}}],["constructor(private",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoController.html":{}}}],["constructor(reporepository",{"_index":477,"title":{},"body":{"injectables/RepoService.html":{}}}],["constructor(repovoterepository",{"_index":720,"title":{},"body":{"injectables/VoteService.html":{}}}],["constructor(undefined",{"_index":306,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["container",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":876,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continuous",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1237,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1165,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":1163,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":47,"title":{"entities/Contribution.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"coverage.html":{},"index.html":{}}}],["contribution.repo",{"_index":373,"title":{},"body":{"entities/Repo.html":{}}}],["contribution/contribution.entity",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{}}}],["contributions",{"_index":210,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{}}}],["contributions.repo_id",{"_index":507,"title":{},"body":{"injectables/RepoService.html":{}}}],["contributor",{"_index":162,"title":{},"body":{"entities/Contribution.html":{}}}],["controller",{"_index":89,"title":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"health",{"_index":236,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"repo",{"_index":455,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["controllers",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"overview.html":{}}}],["conversation",{"_index":1173,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1205,"title":{},"body":{"license.html":{}}}],["copy",{"_index":931,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":1181,"title":{},"body":{"license.html":{}}}],["correct",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":163,"title":{},"body":{"entities/Contribution.html":{}}}],["counting",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":1090,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["created",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["created_at",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":208,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createdatecolumn({type",{"_index":181,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createparamdecorator",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["d0d5ca5",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["d77ea52",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1233,"title":{},"body":{"license.html":{}}}],["data",{"_index":276,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["datasource",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":180,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["db",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["db:changesif",{"_index":1146,"title":{},"body":{"index.html":{}}}],["db:commit",{"_index":1150,"title":{},"body":{"index.html":{}}}],["db:push",{"_index":1157,"title":{},"body":{"index.html":{}}}],["db:resetpush",{"_index":1155,"title":{},"body":{"index.html":{}}}],["db:startmake",{"_index":1141,"title":{},"body":{"index.html":{}}}],["dbconfig",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["dd5e668",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1192,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1242,"title":{},"body":{"license.html":{}}}],["debug",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["decorator",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"entities/User.html":{}}}],["default",{"_index":177,"title":{},"body":{"entities/Contribution.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"injectables/VoteService.html":{}}}],["delete",{"_index":627,"title":{},"body":{"controllers/RepoVoteController.html":{},"changelog.html":{}}}],["delete(\"/:id/vote",{"_index":640,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete(\"/:owner/:repo/vote",{"_index":642,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete('/:id/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":605,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete('/:owner/:repo/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":616,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["deleted_at",{"_index":164,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["deletedatecolumn",{"_index":207,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["deletedatecolumn({type",{"_index":188,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["demo",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":414,"title":{},"body":{"entities/Repo.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":360,"title":{},"body":{"entities/Repo.html":{},"controllers/RepoVoteController.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":1257,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":767,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["diagram",{"_index":1162,"title":{},"body":{"index.html":{}}}],["diagrams",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":1144,"title":{},"body":{"index.html":{}}}],["digital",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["discord.find",{"_index":1174,"title":{},"body":{"index.html":{}}}],["disk",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":235,"title":{},"body":{"controllers/HealthController.html":{}}}],["distribute",{"_index":1201,"title":{},"body":{"license.html":{}}}],["docker",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.12",{"_index":1131,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["docr",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":788,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":1253,"title":{},"body":{"properties.html":{}}}],["downvotebyrepoid",{"_index":718,"title":{},"body":{"injectables/VoteService.html":{}}}],["downvotebyrepoid(repoid",{"_index":724,"title":{},"body":{"injectables/VoteService.html":{}}}],["downvoteonebyid",{"_index":599,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyid(id",{"_index":603,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyownerandrepo",{"_index":600,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyownerandrepo(owner",{"_index":615,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["dry",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["dtos/supabase",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["e145e2d",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["e1fe498",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["e663170",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":295,"title":{},"body":{"classes/PageDto.html":{}}}],["eba258a",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["echo",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["ed9729a",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["email",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["encourage",{"_index":1164,"title":{},"body":{"index.html":{}}}],["endpointconfig",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{}}}],["engines",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["entities",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"overview.html":{}}}],["entities/repo.entity",{"_index":446,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{}}}],["entity",{"_index":159,"title":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":354,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["enumerations",{"_index":1112,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":335,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["env",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["environments",{"_index":1119,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":884,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["everything",{"_index":1147,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existing",{"_index":607,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["explain",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["exports",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{}}}],["exposing",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1220,"title":{},"body":{"license.html":{}}}],["extend",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":211,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["extractjwt",{"_index":669,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":684,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractor",{"_index":683,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["f0304d4",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["f5385b3",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["fad79b1",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["fdc11ea",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["fe4b9e9",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":1191,"title":{},"body":{"license.html":{}}}],["findall",{"_index":438,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findall(pageoptionsdto",{"_index":482,"title":{},"body":{"injectables/RepoService.html":{}}}],["findonebyid",{"_index":420,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyid(id",{"_index":423,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo",{"_index":421,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo(owner",{"_index":431,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["finds",{"_index":425,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["finduserlist",{"_index":422,"title":{},"body":{"controllers/RepoController.html":{}}}],["finduserlist(pageoptionsdto",{"_index":436,"title":{},"body":{"controllers/RepoController.html":{}}}],["fine",{"_index":1148,"title":{},"body":{"index.html":{}}}],["first",{"_index":1136,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1225,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["flight",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1124,"title":{},"body":{"index.html":{},"license.html":{}}}],["found",{"_index":637,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["found'})@apiconflictresponse({description",{"_index":611,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["free",{"_index":1186,"title":{},"body":{"license.html":{}}}],["from(entity",{"_index":498,"title":{},"body":{"injectables/RepoService.html":{}}}],["full",{"_index":830,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["full_name",{"_index":361,"title":{},"body":{"entities/Repo.html":{}}}],["function",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1115,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1208,"title":{},"body":{"license.html":{}}}],["generated",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["get(\"/:id",{"_index":457,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/:owner/:repo",{"_index":460,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/list",{"_index":464,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/service",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/session",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"/web",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":424,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/:owner/:repo')@apioperation({operationid",{"_index":432,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/list')@apioperation({operationid",{"_index":437,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":219,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/session')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdomain",{"_index":1102,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethello",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello(user",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["getschemapath(model",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(pagedto",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getskip",{"_index":345,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getting",{"_index":743,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1268,"title":{},"body":{"properties.html":{}}}],["github",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":1185,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1247,"title":{},"body":{"modules.html":{},"properties.html":{}}}],["guard",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["guarded",{"_index":635,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["guards",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1167,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1168,"title":{},"body":{"index.html":{}}}],["handler",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["has_stars_data",{"_index":688,"title":{},"body":{"entities/User.html":{}}}],["hasnextpage",{"_index":301,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":302,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["health",{"_index":216,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["health.controller",{"_index":272,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":233,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":230,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":214,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":8,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["healthstatusservice",{"_index":220,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{}}}],["hereby",{"_index":1184,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1230,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1263,"title":{},"body":{"properties.html":{}}}],["host",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":240,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["httpcode(httpstatus.ok",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["httphealthindicator",{"_index":231,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/open",{"_index":1264,"title":{},"body":{"properties.html":{}}}],["httpstatus",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["id",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"entities/User.html":{},"changelog.html":{}}}],["id'})@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":426,"title":{},"body":{"controllers/RepoController.html":{}}}],["identifier",{"_index":1091,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1159,"title":{},"body":{"index.html":{}}}],["immediate",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1221,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["imports",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{}}}],["improve",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1214,"title":{},"body":{"license.html":{}}}],["including",{"_index":1194,"title":{},"body":{"license.html":{}}}],["index",{"_index":94,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"injectables/VoteService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["information",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["information'})@apiokresponse({type",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["initial",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":473,"title":{"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}},"body":{"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["injectables",{"_index":474,"title":{},"body":{"injectables/RepoService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"overview.html":{}}}],["injectrepository",{"_index":486,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["injectrepository(repo",{"_index":487,"title":{},"body":{"injectables/RepoService.html":{}}}],["injectrepository(repotouservotes",{"_index":730,"title":{},"body":{"injectables/VoteService.html":{}}}],["inspection",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["installed",{"_index":1127,"title":{},"body":{"index.html":{}}}],["instead",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":1261,"title":{},"body":{"properties.html":{}}}],["is_fork",{"_index":362,"title":{},"body":{"entities/Repo.html":{}}}],["is_open_sauced_member",{"_index":689,"title":{},"body":{"entities/User.html":{}}}],["is_private",{"_index":690,"title":{},"body":{"entities/User.html":{}}}],["isarray",{"_index":289,"title":{},"body":{"classes/PageDto.html":{}}}],["isarray()@apiproperty({isarray",{"_index":282,"title":{},"body":{"classes/PageDto.html":{}}}],["isenum",{"_index":348,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(order",{"_index":355,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isglobal",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":349,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isoptional",{"_index":350,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["issues",{"_index":363,"title":{},"body":{"entities/Repo.html":{}}}],["item",{"_index":526,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{}}}],["itemcount",{"_index":303,"title":{},"body":{"classes/PageMetaDto.html":{},"injectables/RepoService.html":{}}}],["items",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["job",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["jobs",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":1172,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":206,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["jwt",{"_index":671,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["keywords",{"_index":1262,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1219,"title":{},"body":{"license.html":{}}}],["language",{"_index":364,"title":{},"body":{"entities/Repo.html":{}}}],["last_fetched_contributors_at",{"_index":365,"title":{},"body":{"entities/Repo.html":{}}}],["last_merged_at",{"_index":165,"title":{},"body":{"entities/Contribution.html":{}}}],["last_sign_in_at",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["leftjoinandmapmany(\"repo.contributions",{"_index":506,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(\"repo.user",{"_index":504,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(repotouserstars",{"_index":505,"title":{},"body":{"injectables/RepoService.html":{}}}],["length",{"_index":172,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["liability",{"_index":1234,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1231,"title":{},"body":{"license.html":{}}}],["license",{"_index":366,"title":{"license.html":{}},"body":{"entities/Repo.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["limit(pageoptionsdto.take",{"_index":536,"title":{},"body":{"injectables/RepoService.html":{}}}],["limitation",{"_index":1195,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1222,"title":{},"body":{"license.html":{}}}],["links",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":897,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":1279,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["live",{"_index":1118,"title":{},"body":{"index.html":{}}}],["load",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["loadrelationcountandmap(\"repo.contributionscount",{"_index":514,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.stargazerscount",{"_index":519,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.starscount",{"_index":521,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.submissionscount",{"_index":517,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.votescount",{"_index":515,"title":{},"body":{"injectables/RepoService.html":{}}}],["local",{"_index":766,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["localhost:54321",{"_index":1140,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1139,"title":{},"body":{"index.html":{}}}],["logging",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":1128,"title":{},"body":{"index.html":{}}}],["main",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["manytoone",{"_index":205,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["manytoone(undefined",{"_index":193,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["matching",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":325,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["max",{"_index":351,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(50",{"_index":358,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maximum",{"_index":341,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["memory",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":234,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1224,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1199,"title":{},"body":{"license.html":{}}}],["meta",{"_index":277,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["meta.dto",{"_index":293,"title":{},"body":{"classes/PageDto.html":{},"injectables/RepoService.html":{}}}],["meta.dto.ts",{"_index":300,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:12",{"_index":311,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:15",{"_index":313,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:18",{"_index":310,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":308,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:6",{"_index":312,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":314,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["metadata",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["migration",{"_index":1059,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["migrations",{"_index":1154,"title":{},"body":{"index.html":{}}}],["min",{"_index":352,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":357,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimal",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":356,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minor",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1111,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1180,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mkdocs",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":1198,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{},"modules.html":{},"overview.html":{}}}],["mount",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["mounted",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["need",{"_index":1123,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1004,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nestjs",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["nestjs/config",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["nestjs/passport",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/swagger",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["nestjs/terminus",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["nestjs/typeorm",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["nestjs/typeorm/dist/interfaces/typeorm",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["never",{"_index":662,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["new",{"_index":530,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1117,"title":{},"body":{"index.html":{}}}],["node",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["node>=16.7.0",{"_index":1129,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1228,"title":{},"body":{"license.html":{}}}],["notable",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["notfoundexception",{"_index":428,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["notfoundexception(\"you",{"_index":741,"title":{},"body":{"injectables/VoteService.html":{}}}],["notice",{"_index":1212,"title":{},"body":{"license.html":{}}}],["now",{"_index":186,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["npm",{"_index":1071,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm>=8.0.0",{"_index":1130,"title":{},"body":{"index.html":{}}}],["null",{"_index":737,"title":{},"body":{"injectables/VoteService.html":{}}}],["number",{"_index":175,"title":{},"body":{"entities/Contribution.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"entities/User.html":{},"injectables/VoteService.html":{}}}],["oas3",{"_index":1255,"title":{},"body":{"properties.html":{}}}],["obtaining",{"_index":1189,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["offset(pageoptionsdto.skip",{"_index":535,"title":{},"body":{"injectables/RepoService.html":{}}}],["onetomany",{"_index":407,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":372,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["open",{"_index":222,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["open_issues",{"_index":691,"title":{},"body":{"entities/User.html":{}}}],["opensauced.pizza\"}`).tostring",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operationid",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["optional",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["options.dto",{"_index":449,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["options.dto.ts",{"_index":328,"title":{},"body":{"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:10",{"_index":337,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:20",{"_index":340,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":344,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":346,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.interface",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":329,"title":{},"body":{"classes/PageOptionsDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["order.asc",{"_index":333,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["orderby",{"_index":413,"title":{},"body":{"entities/Repo.html":{}}}],["orderby(\"repo.pushed_at",{"_index":533,"title":{},"body":{"injectables/RepoService.html":{}}}],["otherwise",{"_index":1239,"title":{},"body":{"license.html":{}}}],["out",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["outputs",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1249,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":1176,"title":{},"body":{"index.html":{}}}],["owner",{"_index":433,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{}}}],["owner}/${repo",{"_index":532,"title":{},"body":{"injectables/RepoService.html":{}}}],["package",{"_index":1252,"title":{"properties.html":{}},"body":{}}],["page",{"_index":292,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["pagecount",{"_index":304,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":273,"title":{"classes/PageDto.html":{}},"body":{"classes/PageDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagedto(entities",{"_index":540,"title":{},"body":{"injectables/RepoService.html":{}}}],["pagemetadto",{"_index":280,"title":{"classes/PageMetaDto.html":{}},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagemetadto})@validatenested()@type(undefined",{"_index":287,"title":{},"body":{"classes/PageDto.html":{}}}],["pagemetaparameters",{"_index":307,"title":{},"body":{"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["pageoptionsdto",{"_index":316,"title":{"classes/PageOptionsDto.html":{}},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pageoptionsdto.order",{"_index":534,"title":{},"body":{"injectables/RepoService.html":{}}}],["pageoptionsdto.page",{"_index":318,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.take",{"_index":321,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pages",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["paginated",{"_index":453,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginates",{"_index":439,"title":{},"body":{"controllers/RepoController.html":{}}}],["pagination",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":442,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"id",{"_index":458,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"owner",{"_index":461,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"repo",{"_index":462,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["parameters",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["parameters.dto",{"_index":315,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["parameters.dto.ts",{"_index":1276,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["partial",{"_index":674,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["particular",{"_index":1226,"title":{},"body":{"license.html":{}}}],["passport",{"_index":670,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["passportmodule",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":668,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["password",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["performance",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1183,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1206,"title":{},"body":{"license.html":{}}}],["person",{"_index":1188,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1207,"title":{},"body":{"license.html":{}}}],["pipelines",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":1166,"title":{},"body":{"index.html":{}}}],["port",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":1216,"title":{},"body":{"license.html":{}}}],["powered",{"_index":1254,"title":{},"body":{"properties.html":{}}}],["prefix",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["prerequisites",{"_index":1122,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["primarycolumn",{"_index":204,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn(\"bigint",{"_index":212,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn('bigint",{"_index":190,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn",{"_index":545,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["print",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":239,"title":{},"body":{"controllers/HealthController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["proceed",{"_index":1169,"title":{},"body":{"index.html":{}}}],["process",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["process.env.domain",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.supabase_api_key",{"_index":679,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_jwt_secret",{"_index":682,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_url",{"_index":677,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["production",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":749,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":430,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["proper",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":161,"title":{"properties.html":{}},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"entities/User.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":879,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["provided",{"_index":1217,"title":{},"body":{"license.html":{}}}],["providers",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{}}}],["public",{"_index":542,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{}}}],["publish",{"_index":1200,"title":{},"body":{"license.html":{}}}],["pull",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1227,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["push",{"_index":759,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pushed_at",{"_index":367,"title":{},"body":{"entities/Repo.html":{}}}],["put",{"_index":628,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put(\"/:id/vote",{"_index":636,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put(\"/:owner/:repo/vote",{"_index":639,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put('/:id/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":620,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put('/:owner/:repo/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":625,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["query",{"_index":443,"title":{},"body":{"controllers/RepoController.html":{}}}],["querybuilder",{"_index":523,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["querybuilder.getcount",{"_index":538,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getmany",{"_index":539,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getone",{"_index":528,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["questions",{"_index":1171,"title":{},"body":{"index.html":{}}}],["re",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["readme",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["received",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refactoring",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["referencedcolumnname",{"_index":195,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["registry",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["relations",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["relationship",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":762,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remote",{"_index":1156,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1081,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["removed",{"_index":613,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["removes",{"_index":606,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["repo",{"_index":43,"title":{"entities/Repo.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo'})@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":434,"title":{},"body":{"controllers/RepoController.html":{}}}],["repo.contributions",{"_index":213,"title":{},"body":{"entities/Contribution.html":{},"injectables/RepoService.html":{}}}],["repo.contributions)@joincolumn({name",{"_index":194,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.controller",{"_index":471,"title":{},"body":{"modules/RepoModule.html":{}}}],["repo.entity",{"_index":554,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.id",{"_index":508,"title":{},"body":{"injectables/RepoService.html":{}}}],["repo.repotouserstargazers",{"_index":520,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{}}}],["repo.repotouserstargazers)@joincolumn({name",{"_index":547,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["repo.repotouserstars",{"_index":522,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{}}}],["repo.repotouserstars)@joincolumn({name",{"_index":561,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["repo.repotousersubmissions",{"_index":518,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserSubmissions.html":{}}}],["repo.repotousersubmissions)@joincolumn({name",{"_index":574,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["repo.repotouservotes",{"_index":516,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouservotes)@joincolumn({name",{"_index":587,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["repo.service",{"_index":445,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{}}}],["repo.to.user.stargazers.entity",{"_index":411,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.stars.entity",{"_index":409,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.submissions.entity",{"_index":410,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.votes.entity",{"_index":408,"title":{},"body":{"entities/Repo.html":{}}}],["repo.user",{"_index":699,"title":{},"body":{"entities/User.html":{}}}],["repo/entities/repo.entity",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"controllers/RepoVoteController.html":{},"entities/User.html":{},"modules/VoteModule.html":{}}}],["repo/entities/repo.to.user.stargazers.entity",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/entities/repo.to.user.stars.entity",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/entities/repo.to.user.submissions.entity",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/entities/repo.to.user.votes.entity",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoVoteController.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["repo/repo.module",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["repo/repo.service",{"_index":630,"title":{},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{}}}],["repo_id",{"_index":166,"title":{},"body":{"entities/Contribution.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/VoteService.html":{}}}],["repocontroller",{"_index":418,"title":{"controllers/RepoController.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"coverage.html":{}}}],["repoid",{"_index":726,"title":{},"body":{"injectables/VoteService.html":{}}}],["repomodule",{"_index":9,"title":{"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["reporepository",{"_index":480,"title":{},"body":{"injectables/RepoService.html":{}}}],["repos",{"_index":412,"title":{},"body":{"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/User.html":{},"changelog.html":{}}}],["reposervice",{"_index":444,"title":{"injectables/RepoService.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"coverage.html":{},"overview.html":{}}}],["repository",{"_index":478,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["repotouserstargazers",{"_index":55,"title":{"entities/RepoToUserStargazers.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstargazers.repo",{"_index":391,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstargazers.user",{"_index":701,"title":{},"body":{"entities/User.html":{}}}],["repotouserstars",{"_index":51,"title":{"entities/RepoToUserStars.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstars.repo",{"_index":393,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstars.user",{"_index":703,"title":{},"body":{"entities/User.html":{}}}],["repotousersubmissions",{"_index":53,"title":{"entities/RepoToUserSubmissions.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserSubmissions.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotousersubmissions.repo",{"_index":395,"title":{},"body":{"entities/Repo.html":{}}}],["repotousersubmissions.user",{"_index":705,"title":{},"body":{"entities/User.html":{}}}],["repotouservotes",{"_index":49,"title":{"entities/RepoToUserVotes.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["repotouservotes.repo",{"_index":397,"title":{},"body":{"entities/Repo.html":{}}}],["repotouservotes.user",{"_index":707,"title":{},"body":{"entities/User.html":{}}}],["repotouservotes})@apinotfoundresponse({description",{"_index":610,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["repovotecontroller",{"_index":596,"title":{"controllers/RepoVoteController.html":{}},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"coverage.html":{}}}],["repovoterepository",{"_index":722,"title":{},"body":{"injectables/VoteService.html":{}}}],["repo})@apinotfoundresponse({description",{"_index":617,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["repo})@apinotfoundresponse({type",{"_index":427,"title":{},"body":{"controllers/RepoController.html":{}}}],["req",{"_index":664,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["request",{"_index":870,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user?.user_metadata?.sub",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirements",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{},"index.html":{},"overview.html":{}}}],["response.decorator",{"_index":454,"title":{},"body":{"controllers/RepoController.html":{}}}],["response.decorator.ts",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.dto.ts",{"_index":644,"title":{},"body":{"classes/SupabaseAuthResponse.html":{},"coverage.html":{}}}],["response.dto.ts:2",{"_index":649,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:3",{"_index":653,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:4",{"_index":651,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:5",{"_index":648,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:6",{"_index":646,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:7",{"_index":650,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:8",{"_index":647,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:9",{"_index":652,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["restriction",{"_index":1193,"title":{},"body":{"license.html":{}}}],["results",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["revert",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1196,"title":{},"body":{"license.html":{}}}],["rogue",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["role",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["rules",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":900,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runner",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["sauced",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["sauced/api.opensauced.pizza",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["sauced/api.opensauced.pizza#readme",{"_index":1265,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza.git",{"_index":1269,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza/issues",{"_index":1267,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":1161,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scoping",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1160,"title":{},"body":{"index.html":{}}}],["select",{"_index":197,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"changelog.html":{}}}],["select(\"count(distinct",{"_index":497,"title":{},"body":{"injectables/RepoService.html":{}}}],["select(['repo.id",{"_index":503,"title":{},"body":{"injectables/RepoService.html":{}}}],["selectquerybuilder",{"_index":489,"title":{},"body":{"injectables/RepoService.html":{}}}],["sell",{"_index":1204,"title":{},"body":{"license.html":{}}}],["service",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{}}}],["session",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"changelog.html":{}}}],["shall",{"_index":1213,"title":{},"body":{"license.html":{}}}],["simple",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["simplest",{"_index":1152,"title":{},"body":{"index.html":{}}}],["skip",{"_index":331,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["soft",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1125,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"index.html":{}}}],["spec",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["src/.../api",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoint.config.ts",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.constant.ts",{"_index":1113,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../page",{"_index":1275,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../supabase.strategy.ts",{"_index":1277,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../supabase.user.decorator.ts",{"_index":1278,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":17,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dtos/supabase",{"_index":643,"title":{},"body":{"classes/SupabaseAuthResponse.html":{},"coverage.html":{}}}],["src/auth/supabase.guard.ts",{"_index":654,"title":{},"body":{"injectables/SupabaseGuard.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts",{"_index":657,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/supabase.strategy.ts:12",{"_index":660,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:23",{"_index":667,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:27",{"_index":663,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.user.decorator.ts",{"_index":1097,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/order.constant.ts",{"_index":1114,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/decorators/api",{"_index":1098,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/page",{"_index":299,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/dtos/page.dto.ts",{"_index":275,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts:11",{"_index":285,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dtos/page.dto.ts:16",{"_index":281,"title":{},"body":{"classes/PageDto.html":{}}}],["src/config/endpoint.config.ts",{"_index":1101,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contribution/contribution.entity.ts",{"_index":160,"title":{},"body":{"entities/Contribution.html":{},"coverage.html":{}}}],["src/contribution/contribution.entity.ts:19",{"_index":191,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:25",{"_index":198,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:31",{"_index":179,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:36",{"_index":192,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:42",{"_index":187,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:48",{"_index":200,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:53",{"_index":189,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:59",{"_index":174,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:65",{"_index":201,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:72",{"_index":196,"title":{},"body":{"entities/Contribution.html":{}}}],["src/health/health.controller.ts",{"_index":215,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":271,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1104,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/repo/entities/repo.entity.ts",{"_index":359,"title":{},"body":{"entities/Repo.html":{},"coverage.html":{}}}],["src/repo/entities/repo.entity.ts:104",{"_index":379,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:107",{"_index":378,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:113",{"_index":385,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:119",{"_index":388,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:125",{"_index":402,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:132",{"_index":404,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:135",{"_index":374,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:138",{"_index":398,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:141",{"_index":394,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:144",{"_index":396,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:147",{"_index":392,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:30",{"_index":380,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:36",{"_index":405,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:42",{"_index":383,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:48",{"_index":399,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:54",{"_index":406,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:60",{"_index":400,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:63",{"_index":382,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:69",{"_index":375,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:75",{"_index":401,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:81",{"_index":390,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:87",{"_index":387,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:92",{"_index":376,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.entity.ts:98",{"_index":389,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts",{"_index":541,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:18",{"_index":546,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:21",{"_index":553,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:24",{"_index":549,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:30",{"_index":543,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:36",{"_index":550,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:41",{"_index":544,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:48",{"_index":552,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:55",{"_index":548,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts",{"_index":557,"title":{},"body":{"entities/RepoToUserStars.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:18",{"_index":560,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:21",{"_index":567,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:24",{"_index":563,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:30",{"_index":558,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:36",{"_index":564,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:41",{"_index":559,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:48",{"_index":566,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:55",{"_index":562,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts",{"_index":570,"title":{},"body":{"entities/RepoToUserSubmissions.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:18",{"_index":573,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:21",{"_index":580,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:24",{"_index":576,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:30",{"_index":571,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:36",{"_index":577,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:41",{"_index":572,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:48",{"_index":579,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:55",{"_index":575,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts",{"_index":583,"title":{},"body":{"entities/RepoToUserVotes.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:18",{"_index":586,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:21",{"_index":593,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:24",{"_index":589,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:30",{"_index":584,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:36",{"_index":590,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:41",{"_index":585,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:48",{"_index":592,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:55",{"_index":588,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.controller.ts",{"_index":419,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{}}}],["src/repo/repo.controller.ts:22",{"_index":429,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:36",{"_index":435,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:51",{"_index":441,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.module.ts",{"_index":470,"title":{},"body":{"modules/RepoModule.html":{}}}],["src/repo/repo.service.ts",{"_index":475,"title":{},"body":{"injectables/RepoService.html":{},"coverage.html":{}}}],["src/repo/repo.service.ts:11",{"_index":479,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:27",{"_index":481,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:46",{"_index":484,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:61",{"_index":485,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:78",{"_index":483,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/user/user.entity.ts",{"_index":687,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:22",{"_index":695,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:28",{"_index":698,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:31",{"_index":694,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:34",{"_index":697,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:37",{"_index":696,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:43",{"_index":692,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:49",{"_index":709,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:54",{"_index":693,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:57",{"_index":700,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:60",{"_index":708,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:63",{"_index":704,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:66",{"_index":706,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:69",{"_index":702,"title":{},"body":{"entities/User.html":{}}}],["src/vote/repo",{"_index":597,"title":{},"body":{"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["src/vote/vote.module.ts",{"_index":714,"title":{},"body":{"modules/VoteModule.html":{}}}],["src/vote/vote.service.ts",{"_index":717,"title":{},"body":{"injectables/VoteService.html":{},"coverage.html":{}}}],["src/vote/vote.service.ts:13",{"_index":723,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:20",{"_index":728,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:45",{"_index":725,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:7",{"_index":721,"title":{},"body":{"injectables/VoteService.html":{}}}],["stable",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["stargazers",{"_index":513,"title":{},"body":{"injectables/RepoService.html":{}}}],["stars",{"_index":368,"title":{},"body":{"entities/Repo.html":{},"injectables/RepoService.html":{}}}],["starscount",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1138,"title":{},"body":{"index.html":{}}}],["started",{"_index":744,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":1134,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["stray",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":168,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"miscellaneous/variables.html":{}}}],["string(sub",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["structure",{"_index":985,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["structured",{"_index":1260,"title":{},"body":{"properties.html":{}}}],["studio",{"_index":1135,"title":{},"body":{"index.html":{}}}],["styles",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["subdomain",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":1209,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1202,"title":{},"body":{"license.html":{}}}],["submission",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["submissions",{"_index":512,"title":{},"body":{"injectables/RepoService.html":{}}}],["subquery",{"_index":496,"title":{},"body":{"injectables/RepoService.html":{}}}],["subquerycount(subquery",{"_index":488,"title":{},"body":{"injectables/RepoService.html":{}}}],["subscribers",{"_index":369,"title":{},"body":{"entities/Repo.html":{}}}],["substantial",{"_index":1215,"title":{},"body":{"license.html":{}}}],["successful",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summary",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["supabase",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["supabase.guard",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["supabase.strategy",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["supabase.user.decorator",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabase>=0.18.0",{"_index":1132,"title":{},"body":{"index.html":{}}}],["supabaseauthrequest",{"_index":673,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["supabaseauthresponse",{"_index":113,"title":{"classes/SupabaseAuthResponse.html":{}},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{},"coverage.html":{}}}],["supabaseauthresponse})@httpcode(httpstatus.ok",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabaseauthstrategy",{"_index":672,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseauthuser",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{}}}],["supabaseguard",{"_index":122,"title":{"injectables/SupabaseGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseGuard.html":{},"coverage.html":{},"overview.html":{}}}],["supabasejwtsecret",{"_index":681,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasekey",{"_index":678,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseoptions",{"_index":680,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasestrategy",{"_index":152,"title":{"injectables/SupabaseStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":676,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super",{"_index":675,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.authenticate(req",{"_index":686,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.validate(user",{"_index":685,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["support",{"_index":1244,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1245,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":279,"title":{},"body":{"classes/PageDto.html":{}}}],["table",{"_index":1110,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tables",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["tagging",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":305,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["target",{"_index":491,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{}}}],["target}.id",{"_index":500,"title":{},"body":{"injectables/RepoService.html":{}}}],["tech",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["ted",{"_index":1271,"title":{},"body":{"properties.html":{}}}],["temporary",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":910,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["them'})@httpcode(httpstatus.ok)@apipaginatedresponse(repo)@apiokresponse({type",{"_index":440,"title":{},"body":{"controllers/RepoController.html":{}}}],["thing",{"_index":1137,"title":{},"body":{"index.html":{}}}],["this.basequerybuilder",{"_index":524,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":270,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":266,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":268,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.data",{"_index":297,"title":{},"body":{"classes/PageDto.html":{}}}],["this.database.pingcheck(\"db",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hasnextpage",{"_index":327,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":326,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.health.check",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":269,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":267,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.itemcount",{"_index":323,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.meta",{"_index":298,"title":{},"body":{"classes/PageDto.html":{}}}],["this.page",{"_index":317,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":324,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.reporepository.createquerybuilder(\"repo",{"_index":502,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.reposervice.findall(pageoptionsdto",{"_index":466,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.reposervice.findonebyid(id",{"_index":459,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["this.reposervice.findonebyownerandrepo(owner",{"_index":463,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoVoteController.html":{}}}],["this.repovoterepository.createquerybuilder(\"r2votes",{"_index":731,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.restore(voteexists.id",{"_index":739,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.save",{"_index":740,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.softdelete(voteexists.id",{"_index":742,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.subquerycount(qb",{"_index":510,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.take",{"_index":320,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.voteservice.downvotebyrepoid(item.id",{"_index":641,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["this.voteservice.votebyrepoid(item.id",{"_index":638,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["thresholdpercent",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":529,"title":{},"body":{"injectables/RepoService.html":{},"injectables/VoteService.html":{}}}],["time",{"_index":184,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["timestamp",{"_index":182,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["tld",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["tmodel",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_timestamp(0",{"_index":386,"title":{},"body":{"entities/Repo.html":{}}}],["token",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1238,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":294,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["true",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"classes/PageDto.html":{}}}],["true})@type(undefined",{"_index":284,"title":{},"body":{"classes/PageDto.html":{}}}],["true})@validatenested({each",{"_index":283,"title":{},"body":{"classes/PageDto.html":{}}}],["type",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1273,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["typeormhealthindicator",{"_index":232,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{}}}],["typeormmodule.forfeature",{"_index":716,"title":{},"body":{"modules/VoteModule.html":{}}}],["typeormmodule.forfeature([repo",{"_index":472,"title":{},"body":{"modules/RepoModule.html":{}}}],["typeormmodule.forrootasync",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["undefined})@isenum(order)@isoptional",{"_index":336,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["unknown",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{},"injectables/SupabaseStrategy.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["updated_at",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"classes/SupabaseAuthResponse.html":{},"entities/User.html":{}}}],["updatedatecolumn",{"_index":209,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["updatedatecolumn({type",{"_index":199,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["url",{"_index":167,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"changelog.html":{}}}],["url(`https://${subdomain",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urls",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":1197,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoVoteController.html":{}}}],["useguards(supabaseguard",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoVoteController.html":{}}}],["user",{"_index":45,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.repos",{"_index":417,"title":{},"body":{"entities/Repo.html":{}}}],["user.repos)@joincolumn({name",{"_index":403,"title":{},"body":{"entities/Repo.html":{}}}],["user.repotouserstargazers",{"_index":556,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["user.repotouserstargazers)@joincolumn({name",{"_index":551,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["user.repotouserstars",{"_index":569,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotouserstars)@joincolumn({name",{"_index":565,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotousersubmissions",{"_index":582,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["user.repotousersubmissions)@joincolumn({name",{"_index":578,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["user.repotouservotes",{"_index":595,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user.repotouservotes)@joincolumn({name",{"_index":591,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user/user.entity",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["user_id",{"_index":370,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/VoteService.html":{}}}],["user_metadata",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["user_name",{"_index":645,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["userid",{"_index":604,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":710,"title":{},"body":{"entities/User.html":{}}}],["users_to_repos_stargazers",{"_index":555,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["users_to_repos_stars",{"_index":568,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["users_to_repos_submissions",{"_index":581,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["users_to_repos_votes",{"_index":594,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["validate",{"_index":659,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validate(user",{"_index":666,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validatenested",{"_index":290,"title":{},"body":{"classes/PageDto.html":{}}}],["validator",{"_index":291,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["value",{"_index":332,"title":{},"body":{"classes/PageOptionsDto.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":880,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":865,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":171,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["verify",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1006,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versiond",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":1175,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1179,"title":{},"body":{"index.html":{}}}],["visually",{"_index":1143,"title":{},"body":{"index.html":{}}}],["vite",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":665,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["volume",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["volumes",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["vortex",{"_index":1272,"title":{},"body":{"properties.html":{}}}],["vortex/api.opensauced.pizza",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["vote",{"_index":609,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["vote'})@apiokresponse({description",{"_index":608,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller",{"_index":715,"title":{},"body":{"modules/VoteModule.html":{}}}],["vote.controller.ts",{"_index":598,"title":{},"body":{"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["vote.controller.ts:121",{"_index":618,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:42",{"_index":623,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:68",{"_index":626,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:95",{"_index":614,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.service",{"_index":632,"title":{},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{}}}],["vote/vote.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["votebyrepoid",{"_index":719,"title":{},"body":{"injectables/VoteService.html":{}}}],["votebyrepoid(repoid",{"_index":727,"title":{},"body":{"injectables/VoteService.html":{}}}],["voted",{"_index":622,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["voteexists",{"_index":735,"title":{},"body":{"injectables/VoteService.html":{}}}],["voteexists.deleted_at",{"_index":736,"title":{},"body":{"injectables/VoteService.html":{}}}],["votemodule",{"_index":10,"title":{"modules/VoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VoteModule.html":{},"modules.html":{},"overview.html":{}}}],["voteonebyid",{"_index":601,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyid(id",{"_index":619,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyownerandrepo",{"_index":602,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyownerandrepo(owner",{"_index":624,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["votes",{"_index":511,"title":{},"body":{"injectables/RepoService.html":{}}}],["votescount",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["voteservice",{"_index":631,"title":{"injectables/VoteService.html":{}},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{},"overview.html":{}}}],["warranties",{"_index":1223,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1218,"title":{},"body":{"license.html":{}}}],["watchers",{"_index":371,"title":{},"body":{"entities/Repo.html":{}}}],["way",{"_index":1153,"title":{},"body":{"index.html":{}}}],["web",{"_index":218,"title":{},"body":{"controllers/HealthController.html":{}}}],["where(\"r2votes.repo_id",{"_index":733,"title":{},"body":{"injectables/VoteService.html":{}}}],["where(\"repo.full_name",{"_index":531,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(\"repo.id",{"_index":525,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(`${aliastable}.${target}_id",{"_index":499,"title":{},"body":{"injectables/RepoService.html":{}}}],["whether",{"_index":1235,"title":{},"body":{"license.html":{}}}],["withdeleted",{"_index":732,"title":{},"body":{"injectables/VoteService.html":{}}}],["without",{"_index":183,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"license.html":{}}}],["workflow",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":797,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["yaml",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":1177,"title":{},"body":{"index.html":{}}}],["zone",{"_index":185,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["zoom",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/VoteModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nVoteModule\n\nVoteModule\n\nAppModule -->\n\nVoteModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            RepoModule\n                        \n                        \n                            VoteModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm/dist/interfaces/typeorm-options.interface\";\nimport { DataSource } from \"typeorm\";\n\nimport { RepoModule } from \"./repo/repo.module\";\nimport apiConfig from \"./config/api.config\";\nimport dbConfig from \"./config/database.config\";\nimport endpointConfig from \"./config/endpoint.config\";\nimport { HealthModule } from \"./health/health.module\";\nimport { Repo } from \"./repo/entities/repo.entity\";\nimport { User } from \"./user/user.entity\";\nimport { Contribution } from \"./contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo/entities/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo/entities/repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"./repo/entities/repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"./repo/entities/repo.to.user.stargazers.entity\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { VoteModule } from \"./vote/vote.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        apiConfig,\n        dbConfig,\n        endpointConfig\n      ],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\"db.connection\"),\n        host: configService.get(\"db.host\"),\n        port: configService.get(\"db.port\"),\n        username: configService.get(\"db.username\"),\n        password: configService.get(\"db.password\"),\n        database: configService.get(\"db.database\"),\n        autoLoadEntities: false,\n        entities: [\n          User,\n          Repo,\n          Contribution,\n          RepoToUserVotes,\n          RepoToUserStars,\n          RepoToUserSubmissions,\n          RepoToUserStargazers,\n        ],\n        synchronize: false,\n      }),\n      inject: [ConfigService],\n    }),\n    TerminusModule,\n    HttpModule,\n    AuthModule,\n    HealthModule,\n    RepoModule,\n    VoteModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  constructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello(user: SupabaseAuthUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/session')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'checkAuthSession', summary: 'Get authenticated session information'})@ApiOkResponse({type: SupabaseAuthResponse})@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SupabaseAuthResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, UseGuards } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseAuthUser } from \"nestjs-supabase-auth\";\nimport { User } from \"./supabase.user.decorator\";\nimport { SupabaseAuthResponse } from \"./dtos/supabase-auth-response.dto\";\n\n@Controller(\"auth\")\n@ApiTags(\"Authentication service\")\nexport class AuthController {\n  @Get(\"/session\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"checkAuthSession\",\n    summary: \"Get authenticated session information\",\n  })\n  @ApiOkResponse({ type: SupabaseAuthResponse })\n  @HttpCode(HttpStatus.OK)\n  getHello(\n    @User() user: SupabaseAuthUser,\n  ): SupabaseAuthResponse {\n    const { role, email, confirmed_at, last_sign_in_at, created_at, updated_at, user_metadata: { sub } } = user;\n\n    return {\n      id: `${String(sub)}`,\n      role,\n      email,\n      confirmed_at,\n      last_sign_in_at,\n      created_at,\n      updated_at\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseStrategy } from \"./supabase.strategy\";\nimport { AuthController } from \"./auth.controller\";\n\n@Module({\n  imports: [PassportModule],\n  providers: [SupabaseStrategy, SupabaseGuard],\n  exports: [SupabaseStrategy, SupabaseGuard],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Contribution.html":{"url":"entities/Contribution.html","title":"entity - Contribution","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Contribution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributor\n                            \n                            \n                                count\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                id\n                            \n                            \n                                last_merged_at\n                            \n                            \n                                repo\n                            \n                            \n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_merged_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.contributions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:65\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  ManyToOne,\n  JoinColumn,\n  DeleteDateColumn,\n  CreateDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { Repo } from \"../repo/entities/repo.entity\";\n\n@Entity({\n  name: \"contributions\"\n})\nexport class Contribution extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  repo_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  count: number;\n\n  @Column({\n    type: \"timestamp without time zone\"\n  })\n  last_merged_at: Date;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  contributor: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => Repo, (repo) => repo.contributions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  repo: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service() {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\"),\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\"),\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web() {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, ValidateNested } from \"class-validator\";\nimport { PageMetaDto } from \"./page-meta.dto\";\nimport { Type } from \"class-transformer\";\n\nexport class PageDto {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  @ValidateNested({ each: true })\n  @Type(() => Array)\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PageMetaDto })\n  @ValidateNested()\n  @Type(() => PageMetaDto)\n  readonly meta: PageMetaDto;\n\n  constructor(data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { PageMetaParameters } from \"./page-meta-parameters.dto\";\n\nexport class PageMetaDto {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: PageMetaParameters) {\n    this.page = pageOptionsDto.page || 1;\n    this.take = pageOptionsDto.take || 10;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Order, enumName: 'Order', default: undefined})@IsEnum(Order)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dtos/page-options.dto.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEnum, IsInt, IsOptional, Max, Min } from \"class-validator\";\nimport { Order } from \"../constants/order.constant\";\n\nexport class PageOptionsDto {\n  @ApiPropertyOptional({ enum: Order, enumName: \"Order\", default: Order.ASC })\n  @IsEnum(Order)\n  @IsOptional()\n  readonly order?: Order = Order.ASC;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 50,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(50)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return ((this.page || 1) - 1) * (this.take || 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Repo.html":{"url":"entities/Repo.html","title":"entity - Repo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Repo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributions\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                description\n                            \n                            \n                                full_name\n                            \n                            \n                                id\n                            \n                            \n                                is_fork\n                            \n                            \n                                issues\n                            \n                            \n                                language\n                            \n                            \n                                last_fetched_contributors_at\n                            \n                            \n                                license\n                            \n                            \n                                name\n                            \n                            \n                                pushed_at\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                stars\n                            \n                            \n                                subscribers\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                            \n                                user_id\n                            \n                            \n                                watchers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contribution[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, contribution => contribution.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_fork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_fetched_contributors_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => to_timestamp(0)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        license\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repos)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  JoinColumn,\n  ManyToOne,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  DeleteDateColumn\n} from \"typeorm\";\n\nimport { User } from \"../../user/user.entity\";\nimport { Contribution } from \"../../contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"./repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"./repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"repos\",\n  orderBy: {\n    stars: \"DESC\",\n    name: \"ASC\"\n  }\n})\nexport class Repo extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  user_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  issues: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  stars: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  watchers: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  subscribers: number;\n\n  @Column({ default: false })\n  is_fork: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  pushed_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"to_timestamp(0)\",\n  })\n  last_fetched_contributors_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  name: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  full_name: string;\n\n  @Column(\"text\")\n  description: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  language: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  license: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => User, user => user.repos)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  user: User;\n\n  @OneToMany(() => Contribution, contribution => contribution.repo)\n  contributions: Contribution[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.repo)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.repo)\n  repoToUserStars: RepoToUserStars[];\n\n  @OneToMany(() => RepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.repo)\n  repoToUserSubmissions: RepoToUserSubmissions[];\n\n  @OneToMany(() => RepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.repo)\n  repoToUserStargazers: RepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoController.html":{"url":"controllers/RepoController.html","title":"controller - RepoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repo\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'findOneById', summary: 'Finds a repo by :id'})@HttpCode(HttpStatus.OK)@ApiOkResponse({type: Repo})@ApiNotFoundResponse({type: NotFoundException})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:owner/:repo')@ApiOperation({operationId: 'findOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo'})@HttpCode(HttpStatus.OK)@ApiOkResponse({type: Repo})@ApiNotFoundResponse({type: NotFoundException})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserList\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserList(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@ApiOperation({operationId: 'findAll', summary: 'Finds all repos and paginates them'})@HttpCode(HttpStatus.OK)@ApiPaginatedResponse(Repo)@ApiOkResponse({type: Repo})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, NotFoundException, Param, Query } from \"@nestjs/common\";\nimport { RepoService } from \"./repo.service\";\nimport { Repo } from \"./entities/repo.entity\";\nimport { ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\n\n@Controller(\"repo\")\n@ApiTags(\"Repository service\")\nexport class RepoController {\n  constructor(private readonly repoService: RepoService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"findOneById\",\n    summary: \"Finds a repo by :id\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: Repo })\n  @ApiNotFoundResponse({ type: NotFoundException })\n  async findOneById(\n    @Param(\"id\") id: number,\n  ): Promise {\n    return this.repoService.findOneById(id);\n  }\n\n  @Get(\"/:owner/:repo\")\n  @ApiOperation({\n    operationId: \"findOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: Repo })\n  @ApiNotFoundResponse({ type: NotFoundException })\n  async findOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n  ): Promise {\n    return this.repoService.findOneByOwnerAndRepo(owner, repo);\n  }\n\n  @Get(\"/list\")\n  @ApiOperation({\n    operationId: \"findAll\",\n    summary: \"Finds all repos and paginates them\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiPaginatedResponse(Repo)\n  @ApiOkResponse({ type: Repo })\n  async findUserList(\n    @Query() pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepoModule.html":{"url":"modules/RepoModule.html","title":"module - RepoModule","body":"\n                   \n\n\n\n\n    Modules\n    RepoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\n\nRepoService \n\nRepoService \n\n\n\nRepoModule\n\nRepoModule\n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/repo/repo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepoService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { Repo } from \"./entities/repo.entity\";\nimport { RepoService } from \"./repo.service\";\nimport { RepoController } from \"./repo.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Repo])],\n  controllers: [RepoController],\n  providers: [RepoService],\n  exports: [RepoService],\n})\nexport class RepoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepoService.html":{"url":"injectables/RepoService.html","title":"injectable - RepoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/repo/repo.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { Repo } from \"./entities/repo.entity\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Injectable()\nexport class RepoService {\n  constructor(\n    @InjectRepository(Repo)\n    private repoRepository: Repository,\n  ) {}\n\n  // subQueryCount(subQuery: SelectQueryBuilder, entity: string , alias: string, target = \"repo\") {\n  //   const aliasName = `${alias}Count`;\n  //   const aliasTable = `${alias}CountSelect`;\n  //\n  //   return subQuery\n  //     .select(\"COUNT(DISTINCT id)\", aliasName)\n  //     .from(entity, aliasTable)\n  //     .where(`${aliasTable}.${target}_id = ${target}.id`);\n  // }\n\n  baseQueryBuilder() {\n    const builder = this.repoRepository.createQueryBuilder(\"repo\")\n      // .select(['repo.id'])\n      // .leftJoinAndSelect(\"repo.user\", \"user\")\n      // .leftJoinAndSelect(RepoToUserStars, \"stars\")\n      // .leftJoinAndMapMany(\"repo.contributions\", Contribution, \"contributions\", \"contributions.repo_id = repo.id\")\n      // .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserVotes\", \"votes\"))\n      // .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserSubmissions\", \"submissions\"))\n      // .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserStargazers\", \"stargazers\"))\n      // .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserStars\", \"stars\"))\n      .loadRelationCountAndMap(\"repo.contributionsCount\", \"repo.contributions\")\n      .loadRelationCountAndMap(\"repo.votesCount\", \"repo.repoToUserVotes\")\n      .loadRelationCountAndMap(\"repo.submissionsCount\", \"repo.repoToUserSubmissions\")\n      .loadRelationCountAndMap(\"repo.stargazersCount\", \"repo.repoToUserStargazers\")\n      .loadRelationCountAndMap(\"repo.starsCount\", \"repo.repoToUserStars\");\n\n    return builder;\n  }\n\n  async findOneById(id: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.id = :id\", { id });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findOneByOwnerAndRepo(owner: string, repo: string): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.full_name = :name\", {\n        name: `${owner}/${repo}`\n      });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findAll(\n    pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .orderBy(\"repo.pushed_at\", pageOptionsDto.order)\n      .offset(pageOptionsDto.skip)\n      .limit(pageOptionsDto.take);\n\n    // console.log(queryBuilder.getSql());\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStargazers.html":{"url":"entities/RepoToUserStargazers.html","title":"entity - RepoToUserStargazers","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStargazers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.stargazers.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStargazers)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStargazers)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stargazers\",\n})\nexport class RepoToUserStargazers {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStargazers)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStargazers)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStars.html":{"url":"entities/RepoToUserStars.html","title":"entity - RepoToUserStars","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStars\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.stars.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStars)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStars)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stars\",\n})\nexport class RepoToUserStars {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStars)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStars)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserSubmissions.html":{"url":"entities/RepoToUserSubmissions.html","title":"entity - RepoToUserSubmissions","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserSubmissions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.submissions.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserSubmissions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserSubmissions)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_submissions\",\n})\nexport class RepoToUserSubmissions {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserVotes.html":{"url":"entities/RepoToUserVotes.html","title":"entity - RepoToUserVotes","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserVotes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.votes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserVotes)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserVotes)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_votes\",\n})\nexport class RepoToUserVotes {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at?: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at?: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at?: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserVotes)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserVotes)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoVoteController.html":{"url":"controllers/RepoVoteController.html","title":"controller - RepoVoteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoVoteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vote/repo-vote.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repo\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downVoteOneById\n                            \n                            \n                                    Async\n                                downVoteOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                voteOneById\n                            \n                            \n                                    Async\n                                voteOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downVoteOneById', summary: 'Finds a repo by :id and removes existing vote'})@ApiOkResponse({description: 'Returns the repo vote', type: RepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already removed your vote'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downVoteOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and removes existing vote'})@ApiOkResponse({description: 'Returns the repo vote', type: Repo})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already removed your vote'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'voteOneById', summary: 'Finds a repo by :id and adds a vote'})@ApiOkResponse({description: 'Returns the repo vote', type: RepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already voted for this repo'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'voteOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and adds a vote'})@ApiOkResponse({description: 'Returns the repo vote', type: Repo})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already voted for this repo'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param, Put, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags\n} from \"@nestjs/swagger\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { VoteService } from \"./vote.service\";\nimport { Repo } from \"../repo/entities/repo.entity\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { RepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\n\n@Controller(\"repo\")\n@ApiTags(\"Repository service guarded\", \"Vote service\")\nexport class RepoVoteController {\n  constructor(\n    private readonly repoService: RepoService,\n    private readonly voteService: VoteService,\n  ) {}\n\n  @Put(\"/:id/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"voteOneById\",\n    summary: \"Finds a repo by :id and adds a vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: RepoToUserVotes\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or vote not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already voted for this repo\",\n  })\n  async voteOneById(\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.voteService.voteByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"voteOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and adds a vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: Repo\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or vote not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already voted for this repo\",\n  })\n  async voteOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.voteService.voteByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downVoteOneById\",\n    summary: \"Finds a repo by :id and removes existing vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: RepoToUserVotes\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or vote not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already removed your vote\",\n  })\n  async downVoteOneById(\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.voteService.downVoteByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downVoteOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and removes existing vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: Repo\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or vote not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already removed your vote\",\n  })\n  async downVoteOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.voteService.downVoteByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SupabaseAuthResponse.html":{"url":"classes/SupabaseAuthResponse.html","title":"class - SupabaseAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SupabaseAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/supabase-auth-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                confirmed_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                created_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                    Optional\n                                last_sign_in_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        confirmed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        last_sign_in_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        user_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SupabaseAuthResponse {\n  readonly id: string;\n  readonly user_name?: string;\n  readonly role?: string;\n  readonly email?: string;\n  readonly confirmed_at?: string;\n  readonly last_sign_in_at?: string;\n  readonly created_at?: string;\n  readonly updated_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseGuard.html":{"url":"injectables/SupabaseGuard.html","title":"injectable - SupabaseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class SupabaseGuard extends AuthGuard(\"supabase\") {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseStrategy.html":{"url":"injectables/SupabaseStrategy.html","title":"injectable - SupabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/supabase.strategy.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(req: never)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(user: SupabaseAuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { SupabaseAuthStrategy, SupabaseAuthUser } from \"nestjs-supabase-auth\";\n\nexport type SupabaseAuthRequest = Partial & { user?: SupabaseAuthUser };\n\n@Injectable()\nexport class SupabaseStrategy extends PassportStrategy(\n  SupabaseAuthStrategy,\n  \"supabase\",\n) {\n  public constructor() {\n    super({\n      supabaseUrl: process.env.SUPABASE_URL,\n      supabaseKey: process.env.SUPABASE_API_KEY,\n      supabaseOptions: {},\n      supabaseJwtSecret: process.env.SUPABASE_JWT_SECRET,\n      extractor: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate(user: SupabaseAuthUser) {\n    return super.validate(user);\n  }\n\n  authenticate(req: never) {\n    super.authenticate(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                has_stars_data\n                            \n                            \n                                id\n                            \n                            \n                                is_open_sauced_member\n                            \n                            \n                                is_private\n                            \n                            \n                                open_issues\n                            \n                            \n                                repos\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has_stars_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_open_sauced_member\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open_issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repo => repo.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  OneToMany,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { Repo } from \"../repo/entities/repo.entity\";\nimport { RepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"../repo/entities/repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"users\"\n})\nexport class User extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  open_issues: number;\n\n  @Column({ default: false })\n  has_stars_data: boolean;\n\n  @Column({ default: false })\n  is_private: boolean;\n\n  @Column({ default: false })\n  is_open_sauced_member: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @OneToMany(() => Repo, repo => repo.user)\n  repos: Repo[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.user)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.user)\n  repoToUserStars: RepoToUserStars[];\n\n  @OneToMany(() => RepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.user)\n  repoToUserSubmissions: RepoToUserSubmissions[];\n\n  @OneToMany(() => RepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.user)\n  repoToUserStargazers: RepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VoteModule.html":{"url":"modules/VoteModule.html","title":"module - VoteModule","body":"\n                   \n\n\n\n\n    Modules\n    VoteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VoteModule\n\n\n\ncluster_VoteModule_exports\n\n\n\ncluster_VoteModule_providers\n\n\n\n\nVoteService \n\nVoteService \n\n\n\nVoteModule\n\nVoteModule\n\nVoteService  -->\n\nVoteModule->VoteService \n\n\n\n\n\nRepoService\n\nRepoService\n\nVoteModule -->\n\nRepoService->VoteModule\n\n\n\n\n\nVoteService\n\nVoteService\n\nVoteModule -->\n\nVoteService->VoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/vote/vote.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                        \n                            VoteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoVoteController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VoteService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { Repo } from \"../repo/entities/repo.entity\";\nimport { RepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { VoteService } from \"./vote.service\";\nimport { RepoVoteController } from \"./repo-vote.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([\n    Repo,\n    RepoToUserVotes\n  ])],\n  controllers: [RepoVoteController],\n  providers: [RepoService, VoteService],\n  exports: [VoteService],\n})\nexport class VoteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VoteService.html":{"url":"injectables/VoteService.html","title":"injectable - VoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vote/vote.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downVoteByRepoId\n                            \n                            \n                                    Async\n                                voteByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoVoteRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/vote/vote.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoVoteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { RepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\n\n@Injectable()\nexport class VoteService {\n  constructor(\n    @InjectRepository(RepoToUserVotes)\n    private repoVoteRepository: Repository,\n  ) {}\n\n  baseQueryBuilder() {\n    const builder = this.repoVoteRepository.createQueryBuilder(\"r2votes\")\n      .withDeleted();\n\n    return builder;\n  }\n\n  async voteByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2votes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2votes.user_id = :userId\", { userId });\n\n    const voteExists = await queryBuilder.getOne();\n\n    if (voteExists) {\n      if (voteExists.deleted_at === null) {\n        throw new ConflictException(\"You have already voted for this repo\");\n      }\n\n      await this.repoVoteRepository.restore(voteExists.id);\n\n      return voteExists;\n    }\n\n    return this.repoVoteRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downVoteByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2votes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2votes.user_id = :userId\", { userId });\n\n    const voteExists = await queryBuilder.getOne();\n\n    if (!voteExists) {\n      throw new NotFoundException(\"You have not voted for this repo\");\n    }\n\n    if (voteExists.deleted_at !== null) {\n      throw new ConflictException(\"You have already removed your vote\");\n    }\n\n    await this.repoVoteRepository.softDelete(voteExists.id);\n\n    return voteExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.9.0-beta.5 (2022-08-19)\n🔁 Continuous Integration\n\nattempt to push docr only on successful release (957b86e)\n\n1.9.0-beta.4 (2022-08-19)\n🔁 Continuous Integration\n\nimprove local development workflow along vite apps (b9f3798)\n\n1.9.0-beta.3 (2022-08-19)\n🐛 Bug Fixes\n\ncorrect counting of many to many tables (7249714)\n\n🧑‍💻 Code Refactoring\n\ncorrect stray console.log (b4c9879)\n\n1.9.0-beta.2 (2022-08-19)\n🔁 Continuous Integration\n\nonly deploy documentation on main branch (fad79b1), closes #14\n\n🍕 Features\n\nadd supabase auth session handler and working guards (ed9729a), closes #24\n\n1.9.0-beta.1 (2022-08-18)\n🍕 Features\n\nimplement simple supabase strategy guard (2f966a3)\n\n1.8.2 (2022-08-12)\n🐛 Bug Fixes\n\ncorrect ci release url docs (f0304d4)\n\n1.8.1 (2022-08-12)\n🔁 Continuous Integration\n\nimprove release urls (dd5e668)\n\n1.8.0 (2022-08-12)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\nupdate readme badges (17c54b9)\n\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\nadd get repository by id and full name (4552c66)\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.5 (2022-08-06)\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.4 (2022-08-06)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\n\n1.8.0-beta.3 (2022-08-05)\n🍕 Features\n\nadd get repository by id and full name (4552c66)\n\n1.8.0-beta.2 (2022-08-05)\n🍕 Features\n\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n1.8.0-beta.1 (2022-07-30)\n📝 Documentation\n\nupdate readme badges (17c54b9)\n\n1.7.12 (2022-07-30)\n🐛 Bug Fixes\n\npush all tags to docr (a9e1df6)\n\n1.7.11 (2022-07-30)\n🔁 Continuous Integration\n\npush to digital ocean container registry (cd8f21d)\n\n1.7.10 (2022-07-30)\n🔁 Continuous Integration\n\ncorrect the digital ocean tagging (673dca9)\n\n1.7.9 (2022-07-30)\n✅ Tests\n\ncheck release job outputs (31e4d60)\n\n1.7.8 (2022-07-29)\n🔁 Continuous Integration\n\ncorrect environment variables (6d23c24)\n\n1.7.7 (2022-07-29)\n✅ Tests\n\nprint out proper pull request target env variables (20880c7)\n\n1.7.6 (2022-07-29)\n🔁 Continuous Integration\n\necho github context (7adfb6b)\n\n1.7.5 (2022-07-29)\n🔁 Continuous Integration\n\nprovide variable as ENV (b57f47b)\n\n1.7.4 (2022-07-29)\n🔁 Continuous Integration\n\nchange pull request event target (20bc1e7)\n\n1.7.3 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect digital ocean docker tag based on target (b1a67da)\n\n1.7.2 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect static domain and release clean up workflow (a229a3b)\nupdate dependencies and list docr tags (79bf61d)\n\n🔁 Continuous Integration\n\nadd docr push dry run (5eddeb1)\nadd release workflow concurrency for demo purposes (63d6a92)\nextend digital ocean temporary token (d0d5ca5)\ntest bash variable environment (e1fe498)\n\n1.7.1 (2022-07-27)\n🔁 Continuous Integration\n\ndeploy developer mkdocs to github pages test (8837b2a)\n\n1.7.0 (2022-07-27)\n📝 Documentation\n\nchange github pages deploy to take tech mkdocs instead of api (bc3a37d)\n\n1.6.17 (2022-07-24)\n🔁 Continuous Integration\n\nadd temporary debug logging (ba8dfbb)\n\n1.6.16 (2022-07-23)\n🔁 Continuous Integration\n\nproperly copy contents from mounted container volume (c013b70)\n\n1.6.15 (2022-07-23)\n🔁 Continuous Integration\n\ncreate new container from release (b1eda28)\n\n1.6.14 (2022-07-23)\n🔁 Continuous Integration\n\ntest file is generated properly (c127cea)\n\n🤖 Build System\n\nattempt docker inspection again (2c0b3d1)\n\n1.6.13 (2022-07-23)\n🔁 Continuous Integration\n\ntest proper container name exposing (cc46460)\n\n1.6.12 (2022-07-23)\n🔁 Continuous Integration\n\ntest local swagger spec (7e9b8a4)\n\n1.6.11 (2022-07-21)\n🔁 Continuous Integration\n\ntest getting docker process list output (f5385b3)\n\n1.6.10 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to get value from running container (911df68)\ntest accessing running container by re-creating (77c734c)\n\n1.6.9 (2022-07-21)\n🔁 Continuous Integration\n\nget container name from runner context (94ba4e1)\n\n1.6.8 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to assign docker service name to running container (fe4b9e9)\n\n1.6.7 (2022-07-21)\n✅ Tests\n\nmount docker service and volumes (0848443)\n\n1.6.6 (2022-07-21)\n✅ Tests\n\nload docker container from artifact (b7c3395)\n\n1.6.5 (2022-07-21)\n🐛 Bug Fixes\n\ncorrect docker local creation (cd306f8)\n\n1.6.4 (2022-07-21)\n✅ Tests\n\nload docker container in flight environment (e145e2d)\n\n1.6.3 (2022-07-20)\n🤖 Build System\n\nupdate deployment and add simple repo submission structure (33fea7e)\n\n1.6.2 (2022-07-19)\n🤖 Build System\n\nrevert to production release container (8aee8e5)\n\n1.6.1 (2022-07-19)\n🤖 Build System\n\nimprove swagger generation (22d3cc1)\n\n🐛 Bug Fixes\n\ncorrect workflow yaml comments (7fe63aa)\n\n1.6.0 (2022-07-19)\n🎨 Styles\n\nimplement correct eslint rules for immediate scoping (bd6d621), closes #1\n\n🍕 Features\n\nupdate dependencies and nest to stable new version (c24937f)\n\n🔁 Continuous Integration\n\nadd docker build and static swagger docs jobs (81e8bbc)\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n🤖 Build System\n\nadd better eslint baseline configuration (3918a78)\nadd minimal eslint configuration (a0db0aa)\nadd minor deployment improvements and github pages adjustments (cb83f9d)\nimplement prettier rules in typescript eslint (166050d)\n\n🐛 Bug Fixes\n\ncorrect release workflow artifact strategy (b5b6ac5)\ncorrect rogue workflow artifact (61b67d5)\n\n1.5.1 (2022-07-13)\n🔁 Continuous Integration\n\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n📦 0-vortex/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.5.0 (2022-06-21)\n🍕 Features\n\nimplement proper starsCount (fdc11ea)\nimplement proper votesCount (607cf5d)\n\n1.4.0 (2022-06-17)\n🍕 Features\n\nadd minimal pagination decorator (ac31556)\n\n1.3.0 (2022-06-10)\n🍕 Features\n\nadd abstract pagination component (630f3b5)\nadd repository relations and limit select (b4d3785)\n\n1.2.0 (2022-06-09)\n🍕 Features\n\nattach user relationship to get repos (e663170)\n\n1.1.0 (2022-06-07)\n🍕 Features\n\nadd basic tld entities (273f337)\n\n1.0.2 (2022-06-05)\n🤖 Build System\n\nadd supabase migration system (34d521d)\n\n1.0.1 (2022-06-05)\n✅ Tests\n\nverify database diagrams generation (73d1c74)\n\n1.0.0 (2022-06-05)\n🍕 Features\n\nadjust health checks endpoints (cb9206d)\ninitial commit (5e7c6c7)\n\n🐛 Bug Fixes\n\ncorrect npm scripts, workflow node versiond and update deps (2c0b15f)\nupdate nest typeorm integration and correct db status (58bf922)\n\n🔥 Performance Improvements\n\nremove minor version engines requirements (7db9008)\n\n✅ Tests\n\nexplain current test configuration and unblock pipelines (272c09a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/supabase-auth-response.dto.ts\n            \n            class\n            SupabaseAuthResponse\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/supabase.guard.ts\n            \n            injectable\n            SupabaseGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.strategy.ts\n            \n            injectable\n            SupabaseStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/supabase.user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.user.decorator.ts\n            \n            variable\n            UserId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/dtos/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/endpoint.config.ts\n            \n            variable\n            getDomain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.entity.ts\n            \n            entity\n            Contribution\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.entity.ts\n            \n            entity\n            Repo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.stargazers.entity.ts\n            \n            entity\n            RepoToUserStargazers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.stars.entity.ts\n            \n            entity\n            RepoToUserStars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.submissions.entity.ts\n            \n            entity\n            RepoToUserSubmissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.votes.entity.ts\n            \n            entity\n            RepoToUserVotes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.controller.ts\n            \n            controller\n            RepoController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repo/repo.service.ts\n            \n            injectable\n            RepoService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/vote/repo-vote.controller.ts\n            \n            controller\n            RepoVoteController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/vote/vote.service.ts\n            \n            injectable\n            VoteService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../order.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/order.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        Order\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n  🍕 Open Sauced Nest Supabase API🍕\n  The path to your next Open Source contribution\n\n\n\n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n🚀 Live release environments\n\napi.opensauced.pizza\nbeta.api.opensauced.pizza\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=16.7.0\nnpm>=8.0.0\ndocker>=20.10.12\nsupabase>=0.18.0\n\n🔑 Database commands\nStarting the Supabase Studio\nFirst thing we have to do for local development is start the studio locally at localhost:54321:\nnpm run db:startMake changes\nIf we are adding a new table structure, first do it visually in the Supabase Studio and test locally.\nCheck the migration difference with the following command:\nnpm run db:changesIf everything is fine we can run the following command to apply the changes to the database:\nnpm run db:commit add_table_nameTest changes\nSimplest way to test the migrations are working is to reset the local database:\nnpm run db:resetPush changes\nIf everything is fine we can push the changes to the remote database:\nnpm run db:push🔑 Supabase structure\nClick the image to see the schema diagram full documentation.\n\n🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VoteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\ncluster_VoteModule\n\n\n\ncluster_VoteModule_exports\n\n\n\ncluster_VoteModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nVoteModule\n\nVoteModule\n\nAppModule -->\n\nVoteModule->AppModule\n\n\n\n\n\nVoteService \n\nVoteService \n\nVoteService  -->\n\nVoteModule->VoteService \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\nVoteModule -->\n\nRepoService->VoteModule\n\n\n\n\n\nVoteService\n\nVoteService\n\nVoteModule -->\n\nVoteService->VoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.9.0-beta.5\n        \n            Description : API dot Open Sauced is NestJS and SupaBase powered OAS3 backend designed to remove client complexity and provide a structured graph of all @open-sauced integrations\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/api.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/api.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/api.opensauced.pizza.git\n        \n            Author : TED Vortex \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageMetaParameters   (src/.../page-meta-parameters.dto.ts)\n                        \n                        \n                            SupabaseAuthRequest   (src/.../supabase.strategy.ts)\n                        \n                        \n                            SupabaseAuthRequest   (src/.../supabase.user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/dtos/page-meta-parameters.dto.ts\n    \n    \n        \n            \n                \n                    \n                    PageMetaParameters\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/auth/supabase.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    SupabaseAuthRequest\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/auth/supabase.user.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    SupabaseAuthRequest\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            getDomain   (src/.../endpoint.config.ts)\n                        \n                        \n                            User   (src/.../supabase.user.decorator.ts)\n                        \n                        \n                            UserId   (src/.../supabase.user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  model: TModel,\n) => {\n  return applyDecorators(\n    ApiExtraModels(PageDto, Repo),\n    ApiOkResponse({\n      description: \"Successfully received model list\",\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PageDto) },\n          {\n            properties: {\n              data: {\n                type: \"array\",\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/config/endpoint.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (subdomain?: string) =>\n  new URL(`https://${subdomain ? `${subdomain}.` : \"\" }${process.env.DOMAIN || \"opensauced.pizza\"}`).toString()\n                    \n                \n\n\n        \n    \n\n    src/auth/supabase.user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.user?.user_metadata?.sub as string;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
