var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.327,1,1.996]],["body/modules/AppModule.html",[0,1.668,1,3.58,2,1.311,3,2.244,4,2.35,5,2.35,6,3.057,7,0.036,8,3.057,9,2.509,10,1.604,11,1.311,12,0.457,13,0.407,14,0.36,15,2.833,16,2.894,17,0.994,18,1.193,19,2.35,20,2.032,21,3.963,22,4.105,23,2.35,24,3.963,25,2.833,26,3.287,27,2.032,28,2.833,29,2.833,30,2.833,31,4.57,32,0.993,33,2.833,34,3.963,35,2.833,36,3.963,37,2.833,38,3.963,39,2.833,40,2.833,41,0.873,42,2.032,43,1.158,44,1.446,45,2.023,46,2.35,47,2.023,48,2.35,49,2.023,50,2.35,51,2.023,52,2.35,53,2.023,54,2.35,55,2.833,56,2.35,57,2.833,58,2.35,59,2.833,60,2.833,61,0.51,62,2.833,63,2.833,64,2.833,65,2.833,66,2.833,67,2.833,68,2.833,69,2.833,70,2.833,71,1.794,72,2.833,73,2.833,74,2.509,75,0.907,76,2.833,77,2.833,78,1.446,79,2.032,80,0.457,81,0.272,82,2.35,83,0.022,84,0.022]],["title/modules/AuthModule.html",[0,1.327,85,1.996]],["body/modules/AuthModule.html",[0,2.1,2,1.857,3,2.825,7,0.035,9,3.159,10,2.273,11,1.857,12,0.648,13,0.577,14,0.51,16,2.542,17,0.876,18,1.69,79,3.578,80,0.648,81,0.385,83,0.028,84,0.028,85,3.823,86,3.329,87,3.329,88,3.329,89,3.543,90,4.013,91,4.138,92,4.013,93,4.989,94,3.329]],["title/entities/Contribution.html",[45,1.609,95,0.695]],["body/entities/Contribution.html",[7,0.036,12,0.384,13,0.343,14,0.303,17,0.565,32,0.835,41,1.214,42,1.708,45,1.786,61,1.08,74,2.216,75,0.762,80,0.384,81,0.229,83,0.02,84,0.02,95,0.771,96,1.976,97,0.343,98,0.933,99,4.148,100,4.148,101,1.919,102,1.919,103,2.253,104,4.148,105,2.758,106,1.919,107,3.44,108,3.278,109,1.637,110,3.492,111,3.792,112,3.792,113,3.792,114,3.792,115,1.359,116,2.382,117,1.954,118,3.278,119,1.954,120,1.982,121,2.382,122,2.498,123,1.102,124,2.498,125,2.273,126,2.498,127,2.498,128,2.115,129,2.382,130,1.102,131,2.382,132,1.708,133,2.382,134,2.382,135,1.216,136,2.382,137,1.786,138,2.382,139,2.509,140,2.382,141,1.102,142,2.382,143,2.382,144,2.356,145,2.509,146,1.708,147,1.786,148,1.786,149,1.619,150,1.619,151,1.619,152,0.933,153,1.708,154,1.508,155,1.708,156,2.382]],["title/controllers/HealthController.html",[157,1.785,158,1.996]],["body/controllers/HealthController.html",[7,0.036,12,0.474,13,0.422,14,0.373,17,0.811,18,1.237,22,3.865,23,2.437,27,2.107,71,1.86,78,1.5,80,0.474,81,0.282,83,0.023,84,0.023,97,0.422,109,1.188,115,0.986,157,1.664,158,2.574,159,2.437,160,2.437,161,3.371,162,2.574,163,3.889,164,4.17,165,5.028,166,2.938,167,2.938,168,2.574,169,3.371,170,2.938,171,2.938,172,4.064,173,4.064,174,4.064,175,4.659,176,4.064,177,4.064,178,3.342,179,2.437,180,1.664,181,2.938,182,2.938,183,1.664,184,4.528,185,2.938,186,2.938,187,2.938,188,1.664,189,2.938,190,2.075,191,4.064,192,2.938,193,2.938,194,2.938,195,2.938,196,2.938,197,2.938,198,4.064,199,2.938,200,3.371,201,2.938,202,2.938,203,2.938,204,2.938,205,2.938,206,2.938,207,2.938,208,2.938,209,2.938,210,2.938,211,2.938,212,2.938,213,2.938,214,2.938,215,2.938]],["title/modules/HealthModule.html",[0,1.327,6,1.785]],["body/modules/HealthModule.html",[0,2.218,2,2.03,6,2.983,7,0.035,12,0.708,13,0.631,14,0.558,16,2.778,17,0.911,18,1.847,26,4.37,27,3.146,78,2.689,80,0.708,81,0.421,83,0.03,84,0.03,158,3.575,216,4.387,217,4.387]],["title/classes/PageDto.html",[81,0.303,218,1.785]],["body/classes/PageDto.html",[7,0.036,12,0.54,13,0.481,14,0.426,17,0.856,58,3.683,61,1.042,80,0.54,81,0.478,83,0.025,84,0.025,97,0.481,98,1.183,109,1.298,115,1.209,152,0.892,180,1.896,183,1.896,188,3.213,218,2.514,219,2.12,220,2.777,221,4.58,222,4.152,223,4.44,224,5.521,225,3.329,226,4.44,227,1.896,228,1.709,229,3.348,230,3.348,231,3.348,232,3.348,233,3.348,234,3.348,235,4.132,236,4.982,237,4.982,238,2.777,239,2.401,240,2.777,241,2.777,242,3.348,243,2.777,244,3.348,245,3.348]],["title/classes/PageMetaDto.html",[81,0.303,225,1.785]],["body/classes/PageMetaDto.html",[7,0.036,12,0.478,13,0.426,14,0.377,17,0.66,61,1.009,80,0.478,81,0.285,83,0.023,84,0.023,97,0.426,98,1.09,109,1.6,115,1.362,117,2.194,152,0.79,180,1.679,183,2.316,188,3.495,219,1.878,222,2.126,225,2.316,227,1.679,228,1.514,235,4.997,239,3.62,246,3.62,247,2.46,248,4.682,249,4.682,250,4.393,251,4.682,252,3.358,253,2.965,254,4.187,255,4.09,256,3.62,257,2.965,258,2.965,259,2.965,260,2.965,261,2.965,262,2.965,263,1.514,264,3.884,265,2.965,266,2.933,267,3.393,268,2.965,269,2.126,270,2.965,271,2.965,272,2.965,273,2.965,274,2.965]],["title/classes/PageOptionsDto.html",[81,0.303,263,1.609]],["body/classes/PageOptionsDto.html",[7,0.036,12,0.465,13,0.415,14,0.367,17,0.805,61,0.977,80,0.465,81,0.443,83,0.023,84,0.023,97,0.415,98,1.07,109,1.348,115,1.211,117,2.137,119,2.214,180,1.633,188,3.266,190,1.473,219,1.827,228,2.771,238,2.393,239,3.309,241,2.393,246,3.32,252,3.309,263,2.049,264,2.393,266,4.136,267,2.393,269,3.577,275,2.393,276,4.188,277,4.013,278,4.614,279,2.922,280,4.614,281,2.884,282,4.013,283,2.884,284,2.884,285,4.013,286,2.884,287,2.884,288,4.013,289,4.013,290,2.884,291,2.884,292,2.884,293,2.884,294,4.988,295,2.884,296,4.614,297,4.988,298,2.884,299,2.884,300,2.884,301,2.884,302,2.884,303,4.013,304,4.013,305,2.884]],["title/entities/Repo.html",[41,0.695,95,0.695]],["body/entities/Repo.html",[7,0.036,12,0.235,13,0.209,14,0.185,17,0.707,32,0.51,41,0.526,43,1.384,44,0.744,45,2.12,46,1.208,47,2.418,49,2.418,51,2.418,53,2.418,61,1.088,74,2.219,75,0.466,80,0.235,81,0.14,83,0.013,84,0.013,95,0.526,97,0.209,98,0.636,101,1.402,102,1.402,103,1.789,106,1.402,107,2.514,108,3.654,109,1.679,110,3.654,111,4.042,112,4.042,113,4.042,114,3.444,115,1.395,117,1.955,118,3.495,119,2.095,120,2.591,122,2.255,123,0.674,124,2.255,125,2.051,126,2.255,127,2.255,128,1.921,130,0.674,132,1.045,135,0.744,137,1.218,139,1.711,141,0.674,144,2.436,145,1.711,146,1.045,147,1.218,148,1.218,149,1.104,150,1.104,151,1.104,152,1.107,153,2.173,154,0.923,155,1.045,256,1.711,306,1.208,307,2.173,308,3.031,309,3.031,310,3.031,311,3.031,312,3.031,313,1.716,314,3.031,315,3.504,316,3.031,317,2.189,318,3.031,319,3.207,320,2.386,321,1.457,322,1.457,323,1.457,324,1.457,325,1.457,326,1.457,327,1.457,328,1.208,329,1.457,330,1.457,331,3.504,332,1.457,333,2.386,334,1.457,335,1.457,336,1.457,337,1.457,338,2.386,339,1.457,340,2.386,341,1.457,342,2.386,343,1.457,344,2.386,345,1.457,346,1.457,347,1.457,348,1.457,349,1.457,350,1.457,351,1.457,352,1.457,353,1.457,354,3.444,355,1.457,356,1.457,357,1.457,358,1.457,359,0.923,360,0.825,361,0.744,362,1.208,363,1.457,364,1.457]],["title/controllers/RepoController.html",[157,1.785,365,1.996]],["body/controllers/RepoController.html",[7,0.036,12,0.567,13,0.505,14,0.447,17,0.945,18,1.479,41,1.125,61,0.825,78,1.794,80,0.567,81,0.337,82,2.915,83,0.026,84,0.026,97,0.505,109,1.027,115,0.853,152,0.937,157,1.99,160,2.915,162,2.903,163,3.231,168,2.225,178,3.288,179,2.915,180,1.99,188,1.99,190,1.794,218,1.99,227,1.99,228,1.794,263,2.936,359,2.225,365,2.903,366,2.915,367,5.102,368,3.514,369,3.514,370,3.514,371,3.802,372,3.514,373,3.514,374,4.584,375,2.605,376,2.915,377,1.626,378,2.915,379,2.915,380,2.915,381,2.52,382,3.514,383,2.52,384,3.514,385,3.514,386,3.514,387,3.514,388,3.514,389,3.514,390,3.514]],["title/modules/RepoModule.html",[0,1.327,8,1.785]],["body/modules/RepoModule.html",[0,2.044,2,1.779,3,2.75,7,0.035,8,3.386,9,3.075,10,2.177,11,1.779,12,0.62,13,0.553,14,0.489,16,2.434,17,0.931,18,1.618,19,3.188,20,2.756,41,0.847,78,2.479,79,3.482,80,0.62,81,0.369,83,0.027,84,0.027,91,4.028,365,3.371,375,3.176,376,3.188,377,1.779,391,3.188,392,3.188,393,3.188,394,3.844,395,3.844,396,3.844]],["title/injectables/RepoService.html",[375,1.609,397,1.785]],["body/injectables/RepoService.html",[7,0.036,12,0.513,13,0.457,14,0.404,17,0.922,18,1.339,20,2.281,32,1.114,41,0.701,43,0.929,61,0.772,75,1.018,80,0.513,81,0.305,83,0.024,84,0.024,97,0.457,115,1.041,152,1.144,153,2.281,162,2.717,163,3.075,168,2.014,183,2.43,184,2.638,190,1.624,218,1.801,225,2.943,227,2.43,228,2.19,240,2.638,250,3.559,263,2.918,371,3.559,375,2.19,377,1.472,378,3.559,379,2.638,380,2.638,397,2.43,398,2.281,399,2.638,400,4.855,401,3.18,402,3.291,403,3.18,404,4.29,405,3.18,406,3.18,407,3.18,408,3.18,409,5.197,410,3.18,411,3.18,412,3.18,413,3.18,414,3.18,415,3.18,416,2.638,417,3.18,418,2.638,419,3.18,420,2.638,421,3.18,422,2.638,423,3.18,424,3.18,425,3.18,426,3.18,427,3.18,428,4.29,429,3.18,430,3.18,431,2.43,432,3.18]],["title/entities/RepoToUserStargazers.html",[53,1.609,95,0.695]],["body/entities/RepoToUserStargazers.html",[7,0.036,12,0.41,13,0.365,14,0.323,17,0.694,32,0.89,41,1.234,43,1.636,44,1.296,53,1.871,61,1.036,75,0.813,80,0.41,81,0.244,83,0.021,84,0.021,95,0.808,97,0.365,98,0.977,101,2.18,102,1.991,103,2.663,105,2.436,106,1.991,109,1.606,115,1.333,117,1.998,119,1.808,122,2.409,123,1.175,124,2.409,125,2.192,126,2.409,127,2.409,128,2.18,130,1.175,135,1.871,137,2.405,141,1.175,144,2.312,147,2.196,148,2.196,149,1.696,150,1.696,151,1.696,152,1.147,317,2.436,360,1.438,361,1.296,377,1.175,422,2.106,433,2.106,434,3.373,435,2.539,436,2.539,437,2.724,438,2.539,439,2.539,440,2.539,441,2.539,442,2.539,443,2.539,444,2.539,445,2.539,446,2.539,447,2.539]],["title/entities/RepoToUserStars.html",[49,1.609,95,0.695]],["body/entities/RepoToUserStars.html",[7,0.036,12,0.41,13,0.365,14,0.323,17,0.694,32,0.89,41,1.234,43,1.636,44,1.296,49,1.871,61,1.036,75,0.813,80,0.41,81,0.244,83,0.021,84,0.021,95,0.808,97,0.365,98,0.977,101,2.18,102,1.991,103,2.663,105,2.436,106,1.991,109,1.606,115,1.333,117,1.998,119,1.808,122,2.409,123,1.175,124,2.409,125,2.192,126,2.409,127,2.409,128,2.18,130,1.175,135,1.871,137,2.405,141,1.175,144,2.312,147,2.196,148,2.196,149,1.696,150,1.696,151,1.696,152,1.147,317,2.436,360,1.438,361,1.296,377,1.175,418,2.106,434,3.373,437,2.724,448,2.106,449,2.539,450,2.539,451,2.539,452,2.539,453,2.539,454,2.539,455,2.539,456,2.539,457,2.539,458,2.539,459,2.539,460,2.539]],["title/entities/RepoToUserSubmissions.html",[51,1.609,95,0.695]],["body/entities/RepoToUserSubmissions.html",[7,0.036,12,0.41,13,0.365,14,0.323,17,0.694,32,0.89,41,1.234,43,1.636,44,1.296,51,1.871,61,1.036,75,0.813,80,0.41,81,0.244,83,0.021,84,0.021,95,0.808,97,0.365,98,0.977,101,2.18,102,1.991,103,2.663,105,2.436,106,1.991,109,1.606,115,1.333,117,1.998,119,1.808,122,2.409,123,1.175,124,2.409,125,2.192,126,2.409,127,2.409,128,2.18,130,1.175,135,1.871,137,2.405,141,1.175,144,2.312,147,2.196,148,2.196,149,1.696,150,1.696,151,1.696,152,1.147,317,2.436,360,1.438,361,1.296,377,1.175,420,2.106,434,3.373,437,2.724,461,2.106,462,2.539,463,2.539,464,2.539,465,2.539,466,2.539,467,2.539,468,2.539,469,2.539,470,2.539,471,2.539,472,2.539,473,2.539]],["title/entities/RepoToUserVotes.html",[47,1.609,95,0.695]],["body/entities/RepoToUserVotes.html",[7,0.036,12,0.41,13,0.365,14,0.323,17,0.694,32,0.89,41,1.234,43,1.636,44,1.296,47,1.871,61,1.036,75,0.813,80,0.41,81,0.244,83,0.021,84,0.021,95,0.808,97,0.365,98,0.977,101,2.18,102,1.991,103,2.663,105,2.436,106,1.991,109,1.606,115,1.333,117,1.998,119,1.808,122,2.409,123,1.175,124,2.409,125,2.192,126,2.409,127,2.409,128,2.18,130,1.175,135,1.871,137,2.405,141,1.175,144,2.312,147,2.196,148,2.196,149,1.696,150,1.696,151,1.696,152,1.147,317,2.436,360,1.438,361,1.296,377,1.175,416,2.106,434,3.373,437,2.724,474,2.106,475,2.539,476,2.539,477,2.539,478,2.539,479,2.539,480,2.539,481,2.539,482,2.539,483,2.539,484,2.539,485,2.539,486,2.539]],["title/injectables/SupabaseStrategy.html",[89,1.785,397,1.785]],["body/injectables/SupabaseStrategy.html",[7,0.036,12,0.57,13,0.508,14,0.449,17,0.907,18,1.488,43,1.033,61,0.636,80,0.57,81,0.339,83,0.026,84,0.026,89,2.605,94,2.931,97,0.508,115,1.117,152,0.942,154,2.238,162,2.914,163,3.24,168,2.238,169,2.931,183,2.897,190,1.804,227,2.001,228,1.804,397,2.605,398,2.534,434,2.605,487,2.931,488,4.601,489,3.534,490,4.601,491,5.419,492,3.534,493,4.601,494,3.534,495,3.534,496,3.534,497,4.601,498,2.931,499,2.914,500,3.534,501,3.534,502,3.534,503,3.534,504,3.534,505,3.534,506,3.534,507,3.534,508,3.534,509,3.534,510,3.534,511,3.534,512,3.534,513,3.534,514,3.534,515,2.931,516,3.534]],["title/entities/User.html",[43,0.921,95,0.695]],["body/entities/User.html",[7,0.036,12,0.348,13,0.311,14,0.274,17,0.792,32,0.757,41,1.083,42,1.549,43,0.951,47,2.74,48,1.791,49,2.74,50,1.791,51,2.74,52,1.791,53,2.74,54,1.791,61,1.058,74,3.11,75,0.691,80,0.348,81,0.207,83,0.018,84,0.018,95,0.717,97,0.311,98,0.867,101,1.811,102,1.811,103,1.811,106,1.811,109,1.663,110,1.549,115,1.381,117,1.672,118,2.333,119,2.06,120,1.842,122,2.273,123,0.999,124,2.273,125,2.067,126,2.273,127,2.273,128,2.016,130,0.999,132,1.549,141,0.999,144,2.162,145,2.333,146,1.549,149,1.505,150,1.505,151,1.505,152,0.576,154,1.367,155,1.549,256,3.522,319,3.876,328,3.246,354,4.074,359,2.478,517,1.791,518,3.914,519,3.914,520,3.914,521,3.914,522,2.159,523,2.159,524,2.159,525,2.159,526,2.159,527,2.159,528,2.159,529,3.253,530,2.159,531,3.253,532,2.159,533,3.253,534,2.159,535,3.253,536,2.159,537,3.253,538,2.159,539,2.159,540,2.159]],["title/changelog.html",[541,1.679,542,1.901,543,2.199]],["body/changelog.html",[3,1.252,7,0.034,11,0.615,14,0.361,32,0.466,41,0.293,43,0.388,56,1.835,71,0.842,75,0.425,83,0.012,84,0.012,120,0.753,139,0.953,152,0.757,161,1.102,164,1.835,252,0.953,266,0.953,269,0.953,279,0.842,359,0.842,402,0.842,431,1.252,499,0.842,515,1.835,541,0.842,543,1.835,544,0.842,545,1.329,546,2.212,547,1.835,548,1.835,549,2.212,550,1.102,551,1.102,552,4.985,553,5.903,554,3.678,555,1.401,556,3.97,557,1.329,558,1.329,559,1.329,560,1.329,561,4.209,562,4.209,563,2.356,564,2.212,565,2.841,566,1.329,567,1.329,568,5.501,569,5.545,570,3.312,571,3.312,572,4.846,573,1.329,574,1.329,575,1.329,576,4.846,577,1.329,578,1.329,579,1.329,580,4.209,581,1.102,582,3.293,583,1.329,584,1.329,585,1.329,586,1.329,587,4.209,588,2.841,589,1.586,590,1.329,591,1.329,592,1.329,593,3.312,594,2.212,595,2.841,596,2.212,597,1.329,598,1.329,599,1.329,600,3.312,601,2.212,602,1.329,603,1.329,604,1.102,605,1.835,606,1.329,607,1.329,608,2.212,609,1.102,610,1.329,611,1.329,612,4.577,613,1.329,614,1.329,615,1.329,616,1.329,617,2.212,618,1.329,619,1.329,620,1.329,621,3.97,622,1.329,623,1.835,624,1.329,625,5.052,626,1.329,627,1.102,628,1.329,629,1.329,630,1.329,631,1.329,632,1.329,633,1.329,634,2.212,635,1.329,636,1.329,637,3.657,638,1.329,639,1.329,640,1.329,641,2.212,642,3.312,643,1.329,644,2.212,645,2.841,646,1.329,647,1.329,648,1.329,649,1.329,650,0.953,651,1.329,652,1.329,653,1.329,654,1.329,655,1.329,656,1.329,657,1.329,658,3.678,659,2.212,660,1.102,661,1.329,662,1.329,663,1.329,664,1.329,665,1.329,666,1.329,667,1.329,668,1.329,669,1.329,670,1.329,671,4.209,672,4.209,673,2.841,674,1.329,675,1.329,676,1.329,677,1.329,678,1.329,679,1.329,680,1.329,681,1.835,682,2.841,683,1.329,684,1.329,685,1.329,686,4.577,687,1.329,688,1.329,689,1.329,690,1.329,691,2.841,692,1.329,693,1.329,694,1.329,695,1.329,696,1.329,697,1.329,698,1.329,699,1.329,700,1.329,701,1.329,702,1.329,703,1.329,704,1.329,705,1.329,706,1.329,707,1.329,708,2.841,709,1.329,710,1.329,711,1.329,712,1.329,713,1.329,714,1.329,715,1.329,716,1.329,717,1.329,718,2.212,719,1.329,720,1.329,721,1.102,722,1.329,723,1.329,724,2.841,725,1.329,726,1.329,727,1.329,728,1.329,729,1.329,730,2.212,731,1.329,732,1.329,733,1.329,734,1.329,735,1.329,736,1.329,737,3.312,738,3.312,739,2.212,740,1.329,741,1.329,742,1.329,743,1.329,744,4.209,745,1.835,746,1.329,747,1.835,748,1.329,749,1.329,750,1.329,751,1.329,752,2.212,753,2.212,754,2.212,755,1.835,756,2.212,757,1.329,758,1.329,759,2.841,760,1.329,761,2.212,762,1.329,763,2.212,764,2.212,765,1.329,766,1.329,767,1.329,768,1.329,769,1.329,770,1.329,771,1.329,772,1.329,773,1.329,774,1.329,775,1.329,776,1.329,777,1.329,778,4.409,779,1.329,780,1.329,781,1.329,782,1.329,783,1.329,784,1.329,785,2.212,786,1.329,787,1.329,788,1.329,789,1.329,790,1.329,791,1.329,792,1.329,793,1.329,794,1.329,795,1.329,796,1.329,797,1.329,798,1.329,799,1.329,800,1.329,801,1.329,802,1.329,803,1.329,804,1.329,805,2.841,806,1.102,807,1.329,808,1.329,809,1.329,810,1.329,811,1.329,812,1.329,813,1.329,814,1.329,815,1.329,816,1.329,817,1.329,818,1.329,819,1.329,820,1.102,821,1.329,822,1.329,823,1.329,824,1.329,825,1.329,826,1.329,827,1.329,828,1.329,829,1.329,830,1.102,831,1.329,832,1.329,833,1.329,834,1.329,835,1.329,836,1.329,837,1.329,838,1.329]],["title/coverage.html",[839,3.537]],["body/coverage.html",[7,0.035,14,0.435,41,0.754,43,0.999,45,1.746,47,1.746,49,1.746,51,1.746,53,1.746,61,0.615,81,0.483,83,0.025,84,0.025,89,1.937,95,1.283,96,2.837,120,3.539,157,2.55,158,2.166,159,2.837,218,1.937,220,2.837,225,1.937,246,2.852,247,2.837,263,1.746,275,2.837,306,2.837,365,2.166,366,2.837,375,1.746,381,2.453,383,2.453,397,2.55,399,2.837,431,1.937,433,2.837,448,2.837,461,2.837,474,2.837,487,2.837,517,2.837,555,2.166,605,3.735,839,2.837,840,3.42,841,3.42,842,5.035,843,2.837,844,2.837,845,6.031,846,3.42,847,4.503,848,2.837,849,2.837,850,2.837,851,3.42,852,2.837,853,3.42,854,3.42,855,2.837]],["title/miscellaneous/enumerations.html",[856,1.116,857,3.136]],["body/miscellaneous/enumerations.html",[7,0.034,83,0.031,84,0.031,97,0.673,276,3.924,279,3.465,361,2.794,362,4.539,856,1.969,857,3.88,858,4.678,859,4.678]],["title/miscellaneous/functions.html",[856,1.116,860,3.136]],["body/miscellaneous/functions.html",[7,0.031,83,0.031,84,0.031,97,0.69,850,3.983,852,4.863,856,2.021,860,3.983,861,4.802]],["title/index.html",[97,0.381,541,1.679,542,1.901]],["body/index.html",[7,0.033,10,1.81,11,1.479,13,0.46,45,1.632,71,3.298,83,0.024,84,0.024,200,2.651,276,2.292,313,1.81,402,2.024,431,1.81,499,3.298,544,3.442,547,4.509,548,2.651,555,2.024,563,2.651,581,3.571,582,2.651,627,4.747,637,3.571,650,2.292,681,3.571,721,3.571,745,2.651,806,2.651,820,4.509,855,2.651,862,3.735,863,3.196,864,3.196,865,3.196,866,4.038,867,2.651,868,3.196,869,3.196,870,4.305,871,3.196,872,3.196,873,3.196,874,3.196,875,3.196,876,3.196,877,3.196,878,4.868,879,4.305,880,3.196,881,3.196,882,4.305,883,3.196,884,3.196,885,3.196,886,3.196,887,3.196,888,4.305,889,3.196,890,4.305,891,4.305,892,3.196,893,3.196,894,3.196,895,3.196,896,3.196,897,3.196,898,3.196,899,3.196,900,3.196,901,3.196,902,3.196,903,3.196,904,3.196,905,2.651,906,3.196,907,3.196,908,4.305,909,3.196,910,3.196,911,3.196,912,3.196,913,3.196,914,3.196,915,3.196,916,3.196,917,3.196,918,3.196,919,3.196,920,3.196,921,3.196,922,3.196,923,3.196,924,3.196,925,2.292]],["title/license.html",[313,1.501,541,1.679,542,1.901]],["body/license.html",[7,0.026,11,1.682,83,0.026,84,0.026,125,2.183,313,2.058,544,2.302,552,3.015,555,2.302,609,3.015,660,3.887,862,2.607,866,3.015,867,5.014,925,2.607,926,5.185,927,3.635,928,4.686,929,3.635,930,3.635,931,3.635,932,3.635,933,3.635,934,3.635,935,3.635,936,3.635,937,3.635,938,3.635,939,4.686,940,3.635,941,3.635,942,4.686,943,3.635,944,3.635,945,3.635,946,3.635,947,3.635,948,3.635,949,3.635,950,4.686,951,3.635,952,3.635,953,3.635,954,3.635,955,3.635,956,3.635,957,4.686,958,4.686,959,3.635,960,3.635,961,3.635,962,3.635,963,3.635,964,3.635,965,3.635,966,3.635,967,3.635,968,3.635,969,3.635,970,3.635,971,3.635,972,3.635,973,3.635,974,3.635,975,3.635,976,3.635,977,3.635,978,3.635,979,3.635,980,3.635,981,3.635,982,3.635,983,3.635,984,3.635,985,3.635,986,3.635,987,3.635]],["title/modules.html",[2,1.973]],["body/modules.html",[1,2.909,2,2.126,6,2.601,7,0.03,8,2.601,83,0.03,84,0.03,85,2.909,988,5.756,989,5.756,990,5.756,991,5.944,992,3.81,993,4.593]],["title/overview.html",[994,3.537]],["body/overview.html",[1,3.756,2,1.828,3,2.798,4,3.277,5,3.277,6,3.052,7,0.034,8,3.358,9,3.129,10,2.237,11,1.828,75,1.265,78,2.017,83,0.028,84,0.028,85,3.682,86,3.277,87,3.277,88,3.277,89,3.407,219,2.502,375,3.072,391,3.277,392,3.277,393,3.277,398,2.834,755,3.277,994,3.277,995,3.951,996,4.94,997,3.951]],["title/properties.html",[98,1.008,998,2.651]],["body/properties.html",[7,0.035,83,0.029,84,0.029,98,1.116,307,3.001,313,2.37,402,2.65,498,3.472,499,2.65,544,3.242,550,3.472,551,3.472,604,3.472,650,3.001,747,3.472,830,3.472,862,3.671,925,3.001,992,3.472,999,4.185,1000,4.185,1001,4.185,1002,4.185,1003,4.185,1004,4.185,1005,4.185,1006,4.185,1007,4.185,1008,4.185,1009,4.185,1010,5.119,1011,4.185,1012,4.185,1013,4.185,1014,4.185,1015,4.185,1016,4.185,1017,4.185,1018,4.185]],["title/miscellaneous/typealiases.html",[856,1.116,1019,3.781]],["body/miscellaneous/typealiases.html",[7,0.031,61,0.987,83,0.031,84,0.031,97,0.675,222,3.933,246,2.973,254,4.549,856,1.977,1020,4.695,1021,4.695,1022,5.484,1023,4.695]],["title/miscellaneous/variables.html",[589,2.711,856,1.116]],["body/miscellaneous/variables.html",[7,0.036,41,0.84,61,0.685,83,0.027,84,0.027,97,0.548,98,1.015,108,2.732,119,1.853,178,2.732,190,1.945,221,3.16,243,3.16,279,3.057,307,2.732,381,3.462,383,3.462,431,2.157,589,2.732,623,3.16,843,3.16,844,4.005,848,3.16,849,4.005,856,1.604,905,3.16,1024,3.809,1025,3.809,1026,4.828,1027,3.809,1028,3.809,1029,3.809,1030,3.809,1031,3.809,1032,3.809,1033,4.828,1034,3.809,1035,3.809,1036,3.809,1037,4.828,1038,3.809,1039,3.809,1040,3.809]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":120,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["0/1",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["0848443",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":266,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["1.0.0",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["1.6.10",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["1.6.11",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["1.6.12",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["1.6.13",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["1.6.14",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["1.6.15",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["1.6.16",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["1.6.17",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["1.6.3",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["1.6.4",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["1.6.5",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["1.6.6",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["1.6.7",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["1.6.8",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["1.6.9",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["1.7.1",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["1.7.10",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["1.7.11",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["1.7.12",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["1.7.3",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["1.7.5",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["1.7.6",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["1.7.7",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["1.7.8",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["1.7.9",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":550,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["10",{"_index":269,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(50)@isoptional",{"_index":290,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["13",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["166050d",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["17c54b9",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":286,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["2",{"_index":996,"title":{},"body":{"overview.html":{}}}],["20",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":552,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["20880c7",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["20bc1e7",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["22d3cc1",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":114,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["27",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["272c09a",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["273f337",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["2c0b15f",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["2c0b3d1",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":997,"title":{},"body":{"overview.html":{}}}],["30",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["31e4d60",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["33fea7e",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["34d521d",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["3918a78",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":995,"title":{},"body":{"overview.html":{}}}],["50",{"_index":289,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["58bf922",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["5e7c6c7",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["5eddeb1",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["5f79c49",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["607cf5d",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["61b67d5",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["630f3b5",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["63d6a92",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":331,"title":{},"body":{"entities/Repo.html":{}}}],["673dca9",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["6d23c24",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":755,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["73d1c74",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["77c734c",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["79bf61d",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["7adfb6b",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["7db9008",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["7e9b8a4",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["7fe63aa",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["81e8bbc",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["8837b2a",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["8aee8e5",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["911df68",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["94ba4e1",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["a0db0aa",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["a229a3b",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["a9e1df6",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":956,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["ac31556",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["accessing",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["accessors",{"_index":277,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["action",{"_index":981,"title":{},"body":{"license.html":{}}}],["add",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["add_table_nametest",{"_index":894,"title":{},"body":{"index.html":{}}}],["adding",{"_index":885,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["adjustments",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1020,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allof",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":948,"title":{},"body":{"license.html":{}}}],["api",{"_index":650,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["apiconfig",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["apiextramodels(pagedto",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":178,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse",{"_index":381,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse(repo",{"_index":389,"title":{},"body":{"controllers/RepoController.html":{}}}],["apiproperty",{"_index":235,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{}}}],["apiproperty({type",{"_index":233,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":294,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({enum",{"_index":281,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":285,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apitags",{"_index":179,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["apitags(\"health",{"_index":181,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"repositories",{"_index":386,"title":{},"body":{"controllers/RepoController.html":{}}}],["apply",{"_index":892,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":985,"title":{},"body":{"license.html":{}}}],["array",{"_index":243,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["artifact",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":362,"title":{},"body":{"entities/Repo.html":{},"miscellaneous/enumerations.html":{}}}],["assign",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":935,"title":{},"body":{"license.html":{}}}],["async",{"_index":163,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["attach",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["attempt",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":500,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticate(req",{"_index":514,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authmodule",{"_index":85,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1016,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":974,"title":{},"body":{"license.html":{}}}],["authuser",{"_index":491,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["autoloadentities",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":993,"title":{},"body":{"modules.html":{}}}],["await",{"_index":428,"title":{},"body":{"injectables/RepoService.html":{}}}],["b1a67da",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["b1eda28",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["b4d3785",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["b57f47b",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["b5b6ac5",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["b7c3395",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["ba8dfbb",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1002,"title":{},"body":{"properties.html":{}}}],["badges",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["baseentity",{"_index":145,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["baseline",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["bash",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["bc3a37d",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["bd6d621",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":551,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["better",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["bigint",{"_index":118,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["binaries",{"_index":868,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":256,"title":{},"body":{"classes/PageMetaDto.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":852,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":991,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":988,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1012,"title":{},"body":{"properties.html":{}}}],["build",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":410,"title":{},"body":{"injectables/RepoService.html":{}}}],["builder.getcount",{"_index":429,"title":{},"body":{"injectables/RepoService.html":{}}}],["builder.getmany",{"_index":430,"title":{},"body":{"injectables/RepoService.html":{}}}],["c",{"_index":927,"title":{},"body":{"license.html":{}}}],["c013b70",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["c127cea",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["c24937f",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["cb83f9d",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["cb9206d",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["cc46460",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["cd306f8",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["cd8f21d",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":543,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":547,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["channel",{"_index":923,"title":{},"body":{"index.html":{}}}],["character",{"_index":111,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["charge",{"_index":932,"title":{},"body":{"license.html":{}}}],["check",{"_index":581,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["checks",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":977,"title":{},"body":{"license.html":{}}}],["class",{"_index":81,"title":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"coverage.html":{}}}],["classes",{"_index":219,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"overview.html":{}}}],["clean",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":902,"title":{},"body":{"index.html":{}}}],["client",{"_index":1004,"title":{},"body":{"properties.html":{}}}],["closes",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_repomodule",{"_index":391,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_exports",{"_index":393,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_providers",{"_index":392,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["column",{"_index":144,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["column(\"text",{"_index":363,"title":{},"body":{"entities/Repo.html":{}}}],["column('text",{"_index":324,"title":{},"body":{"entities/Repo.html":{}}}],["column({default",{"_index":328,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["column({type",{"_index":110,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["command",{"_index":888,"title":{},"body":{"index.html":{}}}],["commands",{"_index":876,"title":{},"body":{"index.html":{}}}],["comments",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["common/decorators/api",{"_index":382,"title":{},"body":{"controllers/RepoController.html":{}}}],["common/dtos/page",{"_index":378,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["common/dtos/page.dto",{"_index":380,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["community",{"_index":915,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":1005,"title":{},"body":{"properties.html":{}}}],["component",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["concurrency",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":955,"title":{},"body":{"license.html":{}}}],["config/api.config",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["config/endpoint.config",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configservice.get(\"db.connection",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.database",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.host",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.password",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.port",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.username",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":986,"title":{},"body":{"license.html":{}}}],["console.log(builder.getsql",{"_index":427,"title":{},"body":{"injectables/RepoService.html":{}}}],["const",{"_index":409,"title":{},"body":{"injectables/RepoService.html":{}}}],["constants/order.constant",{"_index":300,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["constructor",{"_index":183,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["constructor(data",{"_index":223,"title":{},"body":{"classes/PageDto.html":{}}}],["constructor(private",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoController.html":{}}}],["constructor(reporepository",{"_index":401,"title":{},"body":{"injectables/RepoService.html":{}}}],["constructor(undefined",{"_index":253,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["container",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["continuous",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":982,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":910,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":908,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":45,"title":{"entities/Contribution.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"coverage.html":{},"index.html":{}}}],["contribution.repo",{"_index":320,"title":{},"body":{"entities/Repo.html":{}}}],["contribution/contribution.entity",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{}}}],["contributions",{"_index":153,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{}}}],["contributor",{"_index":99,"title":{},"body":{"entities/Contribution.html":{}}}],["controller",{"_index":157,"title":{"controllers/HealthController.html":{},"controllers/RepoController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":182,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"repos",{"_index":385,"title":{},"body":{"controllers/RepoController.html":{}}}],["controllers",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"overview.html":{}}}],["conversation",{"_index":918,"title":{},"body":{"index.html":{}}}],["copies",{"_index":950,"title":{},"body":{"license.html":{}}}],["copy",{"_index":660,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":926,"title":{},"body":{"license.html":{}}}],["correct",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":100,"title":{},"body":{"entities/Contribution.html":{}}}],["coverage",{"_index":839,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["created",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["created_at",{"_index":101,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":150,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createdatecolumn({type",{"_index":123,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["creating",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["d0d5ca5",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":978,"title":{},"body":{"license.html":{}}}],["data",{"_index":221,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["datasource",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":122,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["db",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["db:changesif",{"_index":889,"title":{},"body":{"index.html":{}}}],["db:commit",{"_index":893,"title":{},"body":{"index.html":{}}}],["db:push",{"_index":901,"title":{},"body":{"index.html":{}}}],["db:resetpush",{"_index":899,"title":{},"body":{"index.html":{}}}],["db:startmake",{"_index":884,"title":{},"body":{"index.html":{}}}],["dbconfig",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["deal",{"_index":937,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":987,"title":{},"body":{"license.html":{}}}],["debug",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["decorator",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":109,"title":{},"body":{"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["default",{"_index":119,"title":{},"body":{"entities/Contribution.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":115,"title":{},"body":{"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["deleted_at",{"_index":102,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["deletedatecolumn",{"_index":149,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["deletedatecolumn({type",{"_index":130,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["demo",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":361,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":307,"title":{},"body":{"entities/Repo.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":1003,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":870,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":906,"title":{},"body":{"index.html":{}}}],["diagrams",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":887,"title":{},"body":{"index.html":{}}}],["digital",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["discord.find",{"_index":919,"title":{},"body":{"index.html":{}}}],["disk",{"_index":187,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":177,"title":{},"body":{"controllers/HealthController.html":{}}}],["distribute",{"_index":946,"title":{},"body":{"license.html":{}}}],["docker",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.12",{"_index":874,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["docr",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":555,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":999,"title":{},"body":{"properties.html":{}}}],["dry",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["e145e2d",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["e1fe498",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["e663170",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":242,"title":{},"body":{"classes/PageDto.html":{}}}],["echo",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":909,"title":{},"body":{"index.html":{}}}],["endpointconfig",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["engines",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["entities",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"overview.html":{}}}],["entity",{"_index":95,"title":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":301,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["enumerations",{"_index":857,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":282,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["env",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["eslint",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":609,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["everything",{"_index":890,"title":{},"body":{"index.html":{}}}],["explain",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"modules/RepoModule.html":{}}}],["exposing",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":965,"title":{},"body":{"license.html":{}}}],["extend",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":154,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["extractjwt",{"_index":494,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":512,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractor",{"_index":511,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["f5385b3",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["fdc11ea",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["fe4b9e9",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":936,"title":{},"body":{"license.html":{}}}],["findall",{"_index":400,"title":{},"body":{"injectables/RepoService.html":{}}}],["findall(pageoptionsdto",{"_index":405,"title":{},"body":{"injectables/RepoService.html":{}}}],["finduserlist",{"_index":367,"title":{},"body":{"controllers/RepoController.html":{}}}],["finduserlist(pageoptionsdto",{"_index":368,"title":{},"body":{"controllers/RepoController.html":{}}}],["fine",{"_index":891,"title":{},"body":{"index.html":{}}}],["first",{"_index":879,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":970,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["flight",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":866,"title":{},"body":{"index.html":{},"license.html":{}}}],["free",{"_index":931,"title":{},"body":{"license.html":{}}}],["full",{"_index":907,"title":{},"body":{"index.html":{}}}],["full_name",{"_index":308,"title":{},"body":{"entities/Repo.html":{}}}],["function",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":860,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":953,"title":{},"body":{"license.html":{}}}],["generated",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["get(\"/list",{"_index":387,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/service",{"_index":189,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":203,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/list')@httpcode(httpstatus.ok)@apipaginatedresponse(repo)@apiokresponse({type",{"_index":369,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/service')@healthcheck()@apiokresponse",{"_index":166,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@healthcheck()@apiokresponse",{"_index":170,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdomain",{"_index":849,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getschemapath(model",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(pagedto",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getskip",{"_index":292,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getting",{"_index":541,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1014,"title":{},"body":{"properties.html":{}}}],["github",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":930,"title":{},"body":{"license.html":{}}}],["graph",{"_index":992,"title":{},"body":{"modules.html":{},"properties.html":{}}}],["guide",{"_index":912,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":913,"title":{},"body":{"index.html":{}}}],["has_stars_data",{"_index":518,"title":{},"body":{"entities/User.html":{}}}],["hasnextpage",{"_index":248,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":249,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["health",{"_index":161,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["health.controller",{"_index":217,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":175,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":172,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":158,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":6,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hereby",{"_index":929,"title":{},"body":{"license.html":{}}}],["holders",{"_index":975,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1009,"title":{},"body":{"properties.html":{}}}],["host",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":185,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode",{"_index":372,"title":{},"body":{"controllers/RepoController.html":{}}}],["httpcode(httpstatus.ok",{"_index":388,"title":{},"body":{"controllers/RepoController.html":{}}}],["httphealthindicator",{"_index":173,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/open",{"_index":1010,"title":{},"body":{"properties.html":{}}}],["httpstatus",{"_index":373,"title":{},"body":{"controllers/RepoController.html":{}}}],["id",{"_index":103,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["identifier",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":903,"title":{},"body":{"index.html":{}}}],["immediate",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":966,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["imports",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}}}],["improve",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":959,"title":{},"body":{"license.html":{}}}],["including",{"_index":939,"title":{},"body":{"license.html":{}}}],["index",{"_index":97,"title":{"index.html":{}},"body":{"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["initial",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":397,"title":{"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}},"body":{"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":398,"title":{},"body":{"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":407,"title":{},"body":{"injectables/RepoService.html":{}}}],["injectrepository(repo",{"_index":408,"title":{},"body":{"injectables/RepoService.html":{}}}],["inspection",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["installed",{"_index":869,"title":{},"body":{"index.html":{}}}],["instead",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":1007,"title":{},"body":{"properties.html":{}}}],["is_fork",{"_index":309,"title":{},"body":{"entities/Repo.html":{}}}],["is_open_sauced_member",{"_index":519,"title":{},"body":{"entities/User.html":{}}}],["is_private",{"_index":520,"title":{},"body":{"entities/User.html":{}}}],["isarray",{"_index":236,"title":{},"body":{"classes/PageDto.html":{}}}],["isarray()@apiproperty({isarray",{"_index":229,"title":{},"body":{"classes/PageDto.html":{}}}],["isenum",{"_index":295,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(order",{"_index":302,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isglobal",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":296,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isoptional",{"_index":297,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["issues",{"_index":310,"title":{},"body":{"entities/Repo.html":{}}}],["itemcount",{"_index":250,"title":{},"body":{"classes/PageMetaDto.html":{},"injectables/RepoService.html":{}}}],["items",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["job",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["jobs",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":917,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":148,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["js",{"_index":502,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["jwt",{"_index":496,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["keywords",{"_index":1008,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":964,"title":{},"body":{"license.html":{}}}],["language",{"_index":311,"title":{},"body":{"entities/Repo.html":{}}}],["last_fetched_contributors_at",{"_index":312,"title":{},"body":{"entities/Repo.html":{}}}],["last_merged_at",{"_index":104,"title":{},"body":{"entities/Contribution.html":{}}}],["leftjoinandselect(\"repo.contributions",{"_index":414,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(\"repo.user",{"_index":413,"title":{},"body":{"injectables/RepoService.html":{}}}],["length",{"_index":113,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["liability",{"_index":979,"title":{},"body":{"license.html":{}}}],["liable",{"_index":976,"title":{},"body":{"license.html":{}}}],["license",{"_index":313,"title":{"license.html":{}},"body":{"entities/Repo.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":940,"title":{},"body":{"license.html":{}}}],["limited",{"_index":967,"title":{},"body":{"license.html":{}}}],["list",{"_index":623,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":1023,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["loadrelationcountandmap(\"repo.stargazerscount",{"_index":421,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.starscount",{"_index":417,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.submissionscount",{"_index":419,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.votescount",{"_index":415,"title":{},"body":{"injectables/RepoService.html":{}}}],["local",{"_index":681,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["localhost:54321",{"_index":883,"title":{},"body":{"index.html":{}}}],["locally",{"_index":882,"title":{},"body":{"index.html":{}}}],["logging",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":871,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":147,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["manytoone(undefined",{"_index":135,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["matching",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":272,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["max",{"_index":298,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(50",{"_index":305,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maximum",{"_index":288,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["memory",{"_index":186,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":176,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":969,"title":{},"body":{"license.html":{}}}],["merge",{"_index":944,"title":{},"body":{"license.html":{}}}],["meta",{"_index":222,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["meta.dto",{"_index":240,"title":{},"body":{"classes/PageDto.html":{},"injectables/RepoService.html":{}}}],["meta.dto.ts",{"_index":247,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:12",{"_index":258,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:15",{"_index":260,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:18",{"_index":257,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":255,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:6",{"_index":259,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":261,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["methods",{"_index":162,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["migration",{"_index":806,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["migrations",{"_index":897,"title":{},"body":{"index.html":{}}}],["min",{"_index":299,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":304,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimal",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":303,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minor",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":856,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":925,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mkdocs",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":943,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["mount",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["mounted",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":152,"title":{},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{}}}],["need",{"_index":865,"title":{},"body":{"index.html":{}}}],["nest",{"_index":745,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nestjs",{"_index":498,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/config",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["nestjs/passport",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/swagger",{"_index":180,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{}}}],["nestjs/terminus",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["nestjs/typeorm",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{}}}],["nestjs/typeorm/dist/interfaces/typeorm",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":431,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":863,"title":{},"body":{"index.html":{}}}],["node",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["node>=16.7.0",{"_index":872,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":973,"title":{},"body":{"license.html":{}}}],["notable",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":957,"title":{},"body":{"license.html":{}}}],["now",{"_index":128,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["npm",{"_index":820,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm>=8.0.0",{"_index":873,"title":{},"body":{"index.html":{}}}],["number",{"_index":117,"title":{},"body":{"entities/Contribution.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["oas3",{"_index":1001,"title":{},"body":{"properties.html":{}}}],["obtaining",{"_index":934,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["onetomany",{"_index":354,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":319,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["open",{"_index":544,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["open_issues",{"_index":521,"title":{},"body":{"entities/User.html":{}}}],["opensauced.pizza\"}`).tostring",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":228,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["options.dto",{"_index":379,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["options.dto.ts",{"_index":275,"title":{},"body":{"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:10",{"_index":284,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:20",{"_index":287,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":291,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":293,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.interface",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":276,"title":{},"body":{"classes/PageOptionsDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["order.asc",{"_index":280,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["orderby",{"_index":360,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["orderby(\"repo.pushed_at",{"_index":423,"title":{},"body":{"injectables/RepoService.html":{}}}],["otherwise",{"_index":984,"title":{},"body":{"license.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["outputs",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":994,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":921,"title":{},"body":{"index.html":{}}}],["package",{"_index":998,"title":{"properties.html":{}},"body":{}}],["page",{"_index":239,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["pagecount",{"_index":251,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":218,"title":{"classes/PageDto.html":{}},"body":{"classes/PageDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagedto(entities",{"_index":432,"title":{},"body":{"injectables/RepoService.html":{}}}],["pagemetadto",{"_index":225,"title":{"classes/PageMetaDto.html":{}},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagemetadto})@validatenested()@type(undefined",{"_index":234,"title":{},"body":{"classes/PageDto.html":{}}}],["pagemetaparameters",{"_index":254,"title":{},"body":{"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["pageoptionsdto",{"_index":263,"title":{"classes/PageOptionsDto.html":{}},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pageoptionsdto.order",{"_index":424,"title":{},"body":{"injectables/RepoService.html":{}}}],["pageoptionsdto.page",{"_index":265,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.take",{"_index":268,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pages",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["paginated",{"_index":383,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":227,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["parameters.dto",{"_index":262,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["parameters.dto.ts",{"_index":1022,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["particular",{"_index":971,"title":{},"body":{"license.html":{}}}],["passport",{"_index":495,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["passportmodule",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":493,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["password",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":200,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["performance",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":928,"title":{},"body":{"license.html":{}}}],["permit",{"_index":951,"title":{},"body":{"license.html":{}}}],["person",{"_index":933,"title":{},"body":{"license.html":{}}}],["persons",{"_index":952,"title":{},"body":{"license.html":{}}}],["pipelines",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":911,"title":{},"body":{"index.html":{}}}],["port",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":961,"title":{},"body":{"license.html":{}}}],["powered",{"_index":1000,"title":{},"body":{"properties.html":{}}}],["prefix",{"_index":160,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["prerequisites",{"_index":864,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["primarycolumn",{"_index":146,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn(\"bigint",{"_index":155,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn('bigint",{"_index":132,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn",{"_index":437,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["print",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":184,"title":{},"body":{"controllers/HealthController.html":{},"injectables/RepoService.html":{}}}],["proceed",{"_index":914,"title":{},"body":{"index.html":{}}}],["process",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["process.env.domain",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.supabase_jwt_secret",{"_index":510,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_key",{"_index":507,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_url",{"_index":505,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["production",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":548,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":371,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["proper",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":98,"title":{"properties.html":{}},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":604,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["provided",{"_index":962,"title":{},"body":{"license.html":{}}}],["providers",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{}}}],["public",{"_index":434,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{}}}],["publish",{"_index":945,"title":{},"body":{"license.html":{}}}],["pull",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":972,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["push",{"_index":563,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pushed_at",{"_index":314,"title":{},"body":{"entities/Repo.html":{}}}],["query",{"_index":374,"title":{},"body":{"controllers/RepoController.html":{}}}],["questions",{"_index":916,"title":{},"body":{"index.html":{}}}],["re",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["readme",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":188,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{}}}],["received",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["referencedcolumnname",{"_index":137,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["registry",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["relations",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["relationship",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":582,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remote",{"_index":900,"title":{},"body":{"index.html":{}}}],["remove",{"_index":830,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["repo",{"_index":41,"title":{"entities/Repo.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo.contributions",{"_index":156,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.contributions)@joincolumn({name",{"_index":136,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.controller",{"_index":395,"title":{},"body":{"modules/RepoModule.html":{}}}],["repo.entity",{"_index":377,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouserstargazers",{"_index":422,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{}}}],["repo.repotouserstargazers)@joincolumn({name",{"_index":439,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["repo.repotouserstars",{"_index":418,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{}}}],["repo.repotouserstars)@joincolumn({name",{"_index":452,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["repo.repotousersubmissions",{"_index":420,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserSubmissions.html":{}}}],["repo.repotousersubmissions)@joincolumn({name",{"_index":465,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["repo.repotouservotes",{"_index":416,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouservotes)@joincolumn({name",{"_index":478,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["repo.service",{"_index":376,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{}}}],["repo.to.user.stargazers.entity",{"_index":358,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.stars.entity",{"_index":356,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.submissions.entity",{"_index":357,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.votes.entity",{"_index":355,"title":{},"body":{"entities/Repo.html":{}}}],["repo.user",{"_index":529,"title":{},"body":{"entities/User.html":{}}}],["repo/repo.entity",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/User.html":{}}}],["repo/repo.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["repo/repo.to.user.stargazers.entity",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.stars.entity",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.submissions.entity",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.votes.entity",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo_id",{"_index":105,"title":{},"body":{"entities/Contribution.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["repocontroller",{"_index":365,"title":{"controllers/RepoController.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"coverage.html":{}}}],["repomodule",{"_index":8,"title":{"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["reporepository",{"_index":404,"title":{},"body":{"injectables/RepoService.html":{}}}],["repos",{"_index":359,"title":{},"body":{"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/User.html":{},"changelog.html":{}}}],["reposervice",{"_index":375,"title":{"injectables/RepoService.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"coverage.html":{},"overview.html":{}}}],["repository",{"_index":402,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["repotouserstargazers",{"_index":53,"title":{"entities/RepoToUserStargazers.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstargazers.repo",{"_index":338,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstargazers.user",{"_index":531,"title":{},"body":{"entities/User.html":{}}}],["repotouserstars",{"_index":49,"title":{"entities/RepoToUserStars.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstars.repo",{"_index":340,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstars.user",{"_index":533,"title":{},"body":{"entities/User.html":{}}}],["repotousersubmissions",{"_index":51,"title":{"entities/RepoToUserSubmissions.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserSubmissions.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotousersubmissions.repo",{"_index":342,"title":{},"body":{"entities/Repo.html":{}}}],["repotousersubmissions.user",{"_index":535,"title":{},"body":{"entities/User.html":{}}}],["repotouservotes",{"_index":47,"title":{"entities/RepoToUserVotes.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouservotes.repo",{"_index":344,"title":{},"body":{"entities/Repo.html":{}}}],["repotouservotes.user",{"_index":537,"title":{},"body":{"entities/User.html":{}}}],["request",{"_index":515,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"changelog.html":{}}}],["requirements",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"index.html":{},"overview.html":{}}}],["response.decorator",{"_index":384,"title":{},"body":{"controllers/RepoController.html":{}}}],["response.decorator.ts",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["restriction",{"_index":938,"title":{},"body":{"license.html":{}}}],["results",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":190,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":168,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["revert",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":941,"title":{},"body":{"license.html":{}}}],["rogue",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":627,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runner",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["sauced",{"_index":862,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["sauced/api.opensauced.pizza",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["sauced/api.opensauced.pizza#readme",{"_index":1011,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza.git",{"_index":1015,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza/issues",{"_index":1013,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":905,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scoping",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":904,"title":{},"body":{"index.html":{}}}],["select",{"_index":139,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"changelog.html":{}}}],["select(['repo.id",{"_index":412,"title":{},"body":{"injectables/RepoService.html":{}}}],["sell",{"_index":949,"title":{},"body":{"license.html":{}}}],["service",{"_index":164,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["shall",{"_index":958,"title":{},"body":{"license.html":{}}}],["simple",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["simplest",{"_index":895,"title":{},"body":{"index.html":{}}}],["skip",{"_index":278,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["skip(pageoptionsdto.skip",{"_index":425,"title":{},"body":{"injectables/RepoService.html":{}}}],["software",{"_index":867,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"index.html":{}}}],["spec",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["src/.../api",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoint.config.ts",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":861,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.constant.ts",{"_index":858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../page",{"_index":1021,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.module.ts",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/supabase.strategy.ts",{"_index":487,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts:11",{"_index":489,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:22",{"_index":492,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/common/constants/order.constant.ts",{"_index":859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/decorators/api",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/page",{"_index":246,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/dtos/page.dto.ts",{"_index":220,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts:11",{"_index":232,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dtos/page.dto.ts:16",{"_index":226,"title":{},"body":{"classes/PageDto.html":{}}}],["src/config/endpoint.config.ts",{"_index":848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contribution/contribution.entity.ts",{"_index":96,"title":{},"body":{"entities/Contribution.html":{},"coverage.html":{}}}],["src/contribution/contribution.entity.ts:19",{"_index":133,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:25",{"_index":140,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:31",{"_index":121,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:36",{"_index":134,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:42",{"_index":129,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:48",{"_index":142,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:53",{"_index":131,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:59",{"_index":116,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:65",{"_index":143,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:72",{"_index":138,"title":{},"body":{"entities/Contribution.html":{}}}],["src/health/health.controller.ts",{"_index":159,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:28",{"_index":167,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:47",{"_index":171,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":216,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":850,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/repo/repo.controller.ts",{"_index":366,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{}}}],["src/repo/repo.controller.ts:18",{"_index":370,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.entity.ts",{"_index":306,"title":{},"body":{"entities/Repo.html":{},"coverage.html":{}}}],["src/repo/repo.entity.ts:104",{"_index":326,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:107",{"_index":325,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:113",{"_index":332,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:119",{"_index":335,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:125",{"_index":349,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:132",{"_index":351,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:135",{"_index":321,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:138",{"_index":345,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:141",{"_index":341,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:144",{"_index":343,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:147",{"_index":339,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:30",{"_index":327,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:36",{"_index":352,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:42",{"_index":330,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:48",{"_index":346,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:54",{"_index":353,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:60",{"_index":347,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:63",{"_index":329,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:69",{"_index":322,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:75",{"_index":348,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:81",{"_index":337,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:87",{"_index":334,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:92",{"_index":323,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:98",{"_index":336,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.module.ts",{"_index":394,"title":{},"body":{"modules/RepoModule.html":{}}}],["src/repo/repo.service.ts",{"_index":399,"title":{},"body":{"injectables/RepoService.html":{},"coverage.html":{}}}],["src/repo/repo.service.ts:11",{"_index":403,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:17",{"_index":406,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts",{"_index":433,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:21",{"_index":438,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:24",{"_index":445,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:27",{"_index":441,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:33",{"_index":435,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:39",{"_index":442,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:44",{"_index":436,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:51",{"_index":444,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:58",{"_index":440,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stars.entity.ts",{"_index":448,"title":{},"body":{"entities/RepoToUserStars.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:21",{"_index":451,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:24",{"_index":458,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:27",{"_index":454,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:33",{"_index":449,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:39",{"_index":455,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:44",{"_index":450,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:51",{"_index":457,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:58",{"_index":453,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts",{"_index":461,"title":{},"body":{"entities/RepoToUserSubmissions.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:21",{"_index":464,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:24",{"_index":471,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:27",{"_index":467,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:33",{"_index":462,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:39",{"_index":468,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:44",{"_index":463,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:51",{"_index":470,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:58",{"_index":466,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.votes.entity.ts",{"_index":474,"title":{},"body":{"entities/RepoToUserVotes.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:21",{"_index":477,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:24",{"_index":484,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:27",{"_index":480,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:33",{"_index":475,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:39",{"_index":481,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:44",{"_index":476,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:51",{"_index":483,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:58",{"_index":479,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/user/user.entity.ts",{"_index":517,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:22",{"_index":525,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:28",{"_index":528,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:31",{"_index":524,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:34",{"_index":527,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:37",{"_index":526,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:43",{"_index":522,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:49",{"_index":539,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:54",{"_index":523,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:57",{"_index":530,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:60",{"_index":538,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:63",{"_index":534,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:66",{"_index":536,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:69",{"_index":532,"title":{},"body":{"entities/User.html":{}}}],["stable",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["stars",{"_index":315,"title":{},"body":{"entities/Repo.html":{}}}],["starscount",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":881,"title":{},"body":{"index.html":{}}}],["started",{"_index":542,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":877,"title":{},"body":{"index.html":{}}}],["statements",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":108,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":721,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["structured",{"_index":1006,"title":{},"body":{"properties.html":{}}}],["studio",{"_index":878,"title":{},"body":{"index.html":{}}}],["styles",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["subdomain",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":954,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":947,"title":{},"body":{"license.html":{}}}],["submission",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["subscribers",{"_index":316,"title":{},"body":{"entities/Repo.html":{}}}],["substantial",{"_index":960,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supabase",{"_index":499,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["supabase.strategy",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{}}}],["supabase/supabase",{"_index":501,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabase>=0.18.0",{"_index":875,"title":{},"body":{"index.html":{}}}],["supabaseauthstrategy",{"_index":497,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasejwtsecret",{"_index":509,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasekey",{"_index":506,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseoptions",{"_index":508,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasestrategy",{"_index":89,"title":{"injectables/SupabaseStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":504,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super",{"_index":503,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.authenticate(req",{"_index":516,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.validate(user",{"_index":513,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["support",{"_index":989,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":990,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":224,"title":{},"body":{"classes/PageDto.html":{}}}],["table",{"_index":855,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["tagging",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":252,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["take(pageoptionsdto.take",{"_index":426,"title":{},"body":{"injectables/RepoService.html":{}}}],["target",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["tech",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["ted",{"_index":1017,"title":{},"body":{"properties.html":{}}}],["temporary",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":637,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["thing",{"_index":880,"title":{},"body":{"index.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":199,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":202,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":215,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":207,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":211,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":213,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":209,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":205,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":194,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":196,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.data",{"_index":244,"title":{},"body":{"classes/PageDto.html":{}}}],["this.database.pingcheck(\"db",{"_index":192,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":201,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":197,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hasnextpage",{"_index":274,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":273,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.health.check",{"_index":191,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":214,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":206,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":210,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":212,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":208,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":204,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.itemcount",{"_index":270,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":193,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":195,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.meta",{"_index":245,"title":{},"body":{"classes/PageDto.html":{}}}],["this.page",{"_index":264,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":271,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.reporepository.createquerybuilder(\"repo",{"_index":411,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.reposervice.findall(pageoptionsdto",{"_index":390,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.take",{"_index":267,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["thresholdpercent",{"_index":198,"title":{},"body":{"controllers/HealthController.html":{}}}],["time",{"_index":126,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["timestamp",{"_index":124,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["tld",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["tmodel",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_timestamp(0",{"_index":333,"title":{},"body":{"entities/Repo.html":{}}}],["token",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":983,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":241,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["true",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"classes/PageDto.html":{}}}],["true})@type(undefined",{"_index":231,"title":{},"body":{"classes/PageDto.html":{}}}],["true})@validatenested({each",{"_index":230,"title":{},"body":{"classes/PageDto.html":{}}}],["type",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1019,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{}}}],["typeormhealthindicator",{"_index":174,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{}}}],["typeormmodule.forfeature([repo",{"_index":396,"title":{},"body":{"modules/RepoModule.html":{}}}],["typeormmodule.forrootasync",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["undefined})@isenum(order)@isoptional",{"_index":283,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["unknown",{"_index":169,"title":{},"body":{"controllers/HealthController.html":{},"injectables/SupabaseStrategy.html":{}}}],["up",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["updated_at",{"_index":106,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["updatedatecolumn",{"_index":151,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["updatedatecolumn({type",{"_index":141,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["url",{"_index":107,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["url(`https://${subdomain",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":942,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":43,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["user.repos",{"_index":364,"title":{},"body":{"entities/Repo.html":{}}}],["user.repos)@joincolumn({name",{"_index":350,"title":{},"body":{"entities/Repo.html":{}}}],["user.repotouserstargazers",{"_index":447,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["user.repotouserstargazers)@joincolumn({name",{"_index":443,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["user.repotouserstars",{"_index":460,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotouserstars)@joincolumn({name",{"_index":456,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotousersubmissions",{"_index":473,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["user.repotousersubmissions)@joincolumn({name",{"_index":469,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["user.repotouservotes",{"_index":486,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user.repotouservotes)@joincolumn({name",{"_index":482,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user/user.entity",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["user_id",{"_index":317,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["username",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":540,"title":{},"body":{"entities/User.html":{}}}],["users_to_repos_stargazers",{"_index":446,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["users_to_repos_stars",{"_index":459,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["users_to_repos_submissions",{"_index":472,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["users_to_repos_votes",{"_index":485,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["validate",{"_index":488,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validate(user",{"_index":490,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validatenested",{"_index":237,"title":{},"body":{"classes/PageDto.html":{}}}],["validator",{"_index":238,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["value",{"_index":279,"title":{},"body":{"classes/PageOptionsDto.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":605,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":589,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":112,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["verify",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":747,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versiond",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":920,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":924,"title":{},"body":{"index.html":{}}}],["visually",{"_index":886,"title":{},"body":{"index.html":{}}}],["volume",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["volumes",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["vortex",{"_index":1018,"title":{},"body":{"properties.html":{}}}],["vortex/api.opensauced.pizza",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["votescount",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":968,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":963,"title":{},"body":{"license.html":{}}}],["watchers",{"_index":318,"title":{},"body":{"entities/Repo.html":{}}}],["way",{"_index":896,"title":{},"body":{"index.html":{}}}],["web",{"_index":165,"title":{},"body":{"controllers/HealthController.html":{}}}],["whether",{"_index":980,"title":{},"body":{"license.html":{}}}],["without",{"_index":125,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"license.html":{}}}],["workflow",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":898,"title":{},"body":{"index.html":{}}}],["yaml",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":922,"title":{},"body":{"index.html":{}}}],["zone",{"_index":127,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            RepoModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm/dist/interfaces/typeorm-options.interface\";\nimport { DataSource } from \"typeorm\";\n\nimport { RepoModule } from \"./repo/repo.module\";\nimport apiConfig from \"./config/api.config\";\nimport dbConfig from \"./config/database.config\";\nimport endpointConfig from \"./config/endpoint.config\";\nimport { HealthModule } from \"./health/health.module\";\nimport { Repo } from \"./repo/repo.entity\";\nimport { User } from \"./user/user.entity\";\nimport { Contribution } from \"./contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo/repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"./repo/repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"./repo/repo.to.user.stargazers.entity\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        apiConfig,\n        dbConfig,\n        endpointConfig\n      ],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\"db.connection\"),\n        host: configService.get(\"db.host\"),\n        port: configService.get(\"db.port\"),\n        username: configService.get(\"db.username\"),\n        password: configService.get(\"db.password\"),\n        database: configService.get(\"db.database\"),\n        autoLoadEntities: false,\n        entities: [\n          User,\n          Repo,\n          Contribution,\n          RepoToUserVotes,\n          RepoToUserStars,\n          RepoToUserSubmissions,\n          RepoToUserStargazers,\n        ],\n        synchronize: false,\n      }),\n      inject: [ConfigService],\n    }),\n    TerminusModule,\n    HttpModule,\n    HealthModule,\n    RepoModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  constructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SupabaseStrategy } from \"./supabase.strategy\";\nimport { PassportModule } from \"@nestjs/passport\";\n\n@Module({\n  imports: [PassportModule],\n  providers: [SupabaseStrategy],\n  exports: [SupabaseStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Contribution.html":{"url":"entities/Contribution.html","title":"entity - Contribution","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Contribution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributor\n                            \n                            \n                                count\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                id\n                            \n                            \n                                last_merged_at\n                            \n                            \n                                repo\n                            \n                            \n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_merged_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.contributions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:65\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  ManyToOne,\n  JoinColumn,\n  DeleteDateColumn,\n  CreateDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { Repo } from \"../repo/repo.entity\";\n\n@Entity({\n  name: \"contributions\"\n})\nexport class Contribution extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  repo_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  count: number;\n\n  @Column({\n    type: \"timestamp without time zone\"\n  })\n  last_merged_at: Date;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  contributor: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => Repo, (repo) => repo.contributions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  repo: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiTags } from \"@nestjs/swagger\";\n\n@ApiTags(\"health\")\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @HealthCheck()\n  @ApiOkResponse()\n  async service() {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\"),\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\"),\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @HealthCheck()\n  @ApiOkResponse()\n  async web() {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, ValidateNested } from \"class-validator\";\nimport { PageMetaDto } from \"./page-meta.dto\";\nimport { Type } from \"class-transformer\";\n\nexport class PageDto {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  @ValidateNested({ each: true })\n  @Type(() => Array)\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PageMetaDto })\n  @ValidateNested()\n  @Type(() => PageMetaDto)\n  readonly meta: PageMetaDto;\n\n  constructor(data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { PageMetaParameters } from \"./page-meta-parameters.dto\";\n\nexport class PageMetaDto {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: PageMetaParameters) {\n    this.page = pageOptionsDto.page || 1;\n    this.take = pageOptionsDto.take || 10;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Order, enumName: 'Order', default: undefined})@IsEnum(Order)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dtos/page-options.dto.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEnum, IsInt, IsOptional, Max, Min } from \"class-validator\";\nimport { Order } from \"../constants/order.constant\";\n\nexport class PageOptionsDto {\n  @ApiPropertyOptional({ enum: Order, enumName: \"Order\", default: Order.ASC })\n  @IsEnum(Order)\n  @IsOptional()\n  readonly order?: Order = Order.ASC;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 50,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(50)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return ((this.page || 1) - 1) * (this.take || 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Repo.html":{"url":"entities/Repo.html","title":"entity - Repo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Repo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributions\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                description\n                            \n                            \n                                full_name\n                            \n                            \n                                id\n                            \n                            \n                                is_fork\n                            \n                            \n                                issues\n                            \n                            \n                                language\n                            \n                            \n                                last_fetched_contributors_at\n                            \n                            \n                                license\n                            \n                            \n                                name\n                            \n                            \n                                pushed_at\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                stars\n                            \n                            \n                                subscribers\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                            \n                                user_id\n                            \n                            \n                                watchers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contribution[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, contribution => contribution.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_fork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_fetched_contributors_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => to_timestamp(0)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        license\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repos)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  JoinColumn,\n  ManyToOne,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  DeleteDateColumn\n} from \"typeorm\";\n\nimport { User } from \"../user/user.entity\";\nimport { Contribution } from \"../contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"./repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"./repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"repos\",\n  orderBy: {\n    stars: \"DESC\",\n    name: \"ASC\"\n  }\n})\nexport class Repo extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  user_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  issues: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  stars: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  watchers: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  subscribers: number;\n\n  @Column({ default: false })\n  is_fork: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  pushed_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"to_timestamp(0)\",\n  })\n  last_fetched_contributors_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  name: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  full_name: string;\n\n  @Column(\"text\")\n  description: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  language: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  license: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => User, user => user.repos)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  user: User;\n\n  @OneToMany(() => Contribution, contribution => contribution.repo)\n  contributions: Contribution[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.repo)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.repo)\n  repoToUserStars: RepoToUserStars[];\n\n  @OneToMany(() => RepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.repo)\n  repoToUserSubmissions: RepoToUserSubmissions[];\n\n  @OneToMany(() => RepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.repo)\n  repoToUserStargazers: RepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoController.html":{"url":"controllers/RepoController.html","title":"controller - RepoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserList\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserList(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@HttpCode(HttpStatus.OK)@ApiPaginatedResponse(Repo)@ApiOkResponse({type: Repo})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, Query } from \"@nestjs/common\";\nimport { RepoService } from \"./repo.service\";\nimport { Repo } from \"./repo.entity\";\nimport { ApiOkResponse, ApiTags } from \"@nestjs/swagger\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repositories\")\nexport class RepoController {\n  constructor(private readonly repoService: RepoService) {}\n\n  @Get(\"/list\")\n  @HttpCode(HttpStatus.OK)\n  @ApiPaginatedResponse(Repo)\n  @ApiOkResponse({ type: Repo })\n  async findUserList(\n    @Query() pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepoModule.html":{"url":"modules/RepoModule.html","title":"module - RepoModule","body":"\n                   \n\n\n\n\n    Modules\n    RepoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_providers\n\n\n\ncluster_RepoModule_exports\n\n\n\n\nRepoService \n\nRepoService \n\n\n\nRepoModule\n\nRepoModule\n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/repo/repo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepoService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { RepoService } from \"./repo.service\";\nimport { RepoController } from \"./repo.controller\";\nimport { Repo } from \"./repo.entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Repo])],\n  controllers: [RepoController],\n  providers: [RepoService],\n  exports: [RepoService],\n})\nexport class RepoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepoService.html":{"url":"injectables/RepoService.html","title":"injectable - RepoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/repo/repo.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { Repo } from \"./repo.entity\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Injectable()\nexport class RepoService {\n  constructor(\n    @InjectRepository(Repo)\n    private repoRepository: Repository,\n  ) {}\n\n  async findAll(\n    pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    const builder = this.repoRepository.createQueryBuilder(\"repo\")\n      // .select(['repo.id'])\n      .leftJoinAndSelect(\"repo.user\", \"user\")\n      .leftJoinAndSelect(\"repo.contributions\", \"contributions\")\n      .loadRelationCountAndMap(\"repo.votesCount\", \"repo.repoToUserVotes\")\n      .loadRelationCountAndMap(\"repo.starsCount\", \"repo.repoToUserStars\")\n      .loadRelationCountAndMap(\"repo.submissionsCount\", \"repo.repoToUserSubmissions\")\n      .loadRelationCountAndMap(\"repo.stargazersCount\", \"repo.repoToUserStargazers\")\n      .orderBy(\"repo.pushed_at\", pageOptionsDto.order)\n      .skip(pageOptionsDto.skip)\n      .take(pageOptionsDto.take);\n\n    // console.log(builder.getSql());\n\n    const itemCount = await builder.getCount();\n    const entities = await builder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStargazers.html":{"url":"entities/RepoToUserStargazers.html","title":"entity - RepoToUserStargazers","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStargazers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.stargazers.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStargazers)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStargazers)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stargazers\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserStargazers {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStargazers)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStargazers)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStars.html":{"url":"entities/RepoToUserStars.html","title":"entity - RepoToUserStars","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStars\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.stars.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStars)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStars)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stars\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserStars {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStars)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStars)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserSubmissions.html":{"url":"entities/RepoToUserSubmissions.html","title":"entity - RepoToUserSubmissions","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserSubmissions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.submissions.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserSubmissions)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserSubmissions)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_submissions\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserSubmissions {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserVotes.html":{"url":"entities/RepoToUserVotes.html","title":"entity - RepoToUserVotes","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserVotes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.votes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserVotes)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserVotes)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_votes\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserVotes {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserVotes)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserVotes)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseStrategy.html":{"url":"injectables/SupabaseStrategy.html","title":"injectable - SupabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/supabase.strategy.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(user: AuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { SupabaseAuthStrategy } from \"nestjs-supabase-auth\";\nimport { AuthUser } from \"@supabase/supabase-js\";\n\n@Injectable()\nexport class SupabaseStrategy extends PassportStrategy(\n  SupabaseAuthStrategy,\n  \"supabase\",\n) {\n  public constructor() {\n    super({\n      supabaseUrl: process.env.SUPABASE_URL,\n      supabaseKey: process.env.SUPABASE_KEY,\n      supabaseOptions: {},\n      supabaseJwtSecret: process.env.SUPABASE_JWT_SECRET,\n      extractor: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate(user: AuthUser) {\n    return super.validate(user);\n  }\n\n  // authenticate(req: Request) {\n  //   super.authenticate(req);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                has_stars_data\n                            \n                            \n                                id\n                            \n                            \n                                is_open_sauced_member\n                            \n                            \n                                is_private\n                            \n                            \n                                open_issues\n                            \n                            \n                                repos\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has_stars_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_open_sauced_member\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open_issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repo => repo.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  OneToMany,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { Repo } from \"../repo/repo.entity\";\nimport { RepoToUserVotes } from \"../repo/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"../repo/repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"../repo/repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"../repo/repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"users\"\n})\nexport class User extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  open_issues: number;\n\n  @Column({ default: false })\n  has_stars_data: boolean;\n\n  @Column({ default: false })\n  is_private: boolean;\n\n  @Column({ default: false })\n  is_open_sauced_member: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @OneToMany(() => Repo, repo => repo.user)\n  repos: Repo[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.user)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.user)\n  repoToUserStars: RepoToUserStars[];\n\n  @OneToMany(() => RepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.user)\n  repoToUserSubmissions: RepoToUserSubmissions[];\n\n  @OneToMany(() => RepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.user)\n  repoToUserStargazers: RepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.8.0-beta.1 (2022-07-30)\n📝 Documentation\n\nupdate readme badges (17c54b9)\n\n1.7.12 (2022-07-30)\n🐛 Bug Fixes\n\npush all tags to docr (a9e1df6)\n\n1.7.11 (2022-07-30)\n🔁 Continuous Integration\n\npush to digital ocean container registry (cd8f21d)\n\n1.7.10 (2022-07-30)\n🔁 Continuous Integration\n\ncorrect the digital ocean tagging (673dca9)\n\n1.7.9 (2022-07-30)\n✅ Tests\n\ncheck release job outputs (31e4d60)\n\n1.7.8 (2022-07-29)\n🔁 Continuous Integration\n\ncorrect environment variables (6d23c24)\n\n1.7.7 (2022-07-29)\n✅ Tests\n\nprint out proper pull request target env variables (20880c7)\n\n1.7.6 (2022-07-29)\n🔁 Continuous Integration\n\necho github context (7adfb6b)\n\n1.7.5 (2022-07-29)\n🔁 Continuous Integration\n\nprovide variable as ENV (b57f47b)\n\n1.7.4 (2022-07-29)\n🔁 Continuous Integration\n\nchange pull request event target (20bc1e7)\n\n1.7.3 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect digital ocean docker tag based on target (b1a67da)\n\n1.7.2 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect static domain and release clean up workflow (a229a3b)\nupdate dependencies and list docr tags (79bf61d)\n\n🔁 Continuous Integration\n\nadd docr push dry run (5eddeb1)\nadd release workflow concurrency for demo purposes (63d6a92)\nextend digital ocean temporary token (d0d5ca5)\ntest bash variable environment (e1fe498)\n\n1.7.1 (2022-07-27)\n🔁 Continuous Integration\n\ndeploy developer mkdocs to github pages test (8837b2a)\n\n1.7.0 (2022-07-27)\n📝 Documentation\n\nchange github pages deploy to take tech mkdocs instead of api (bc3a37d)\n\n1.6.17 (2022-07-24)\n🔁 Continuous Integration\n\nadd temporary debug logging (ba8dfbb)\n\n1.6.16 (2022-07-23)\n🔁 Continuous Integration\n\nproperly copy contents from mounted container volume (c013b70)\n\n1.6.15 (2022-07-23)\n🔁 Continuous Integration\n\ncreate new container from release (b1eda28)\n\n1.6.14 (2022-07-23)\n🔁 Continuous Integration\n\ntest file is generated properly (c127cea)\n\n🤖 Build System\n\nattempt docker inspection again (2c0b3d1)\n\n1.6.13 (2022-07-23)\n🔁 Continuous Integration\n\ntest proper container name exposing (cc46460)\n\n1.6.12 (2022-07-23)\n🔁 Continuous Integration\n\ntest local swagger spec (7e9b8a4)\n\n1.6.11 (2022-07-21)\n🔁 Continuous Integration\n\ntest getting docker process list output (f5385b3)\n\n1.6.10 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to get value from running container (911df68)\ntest accessing running container by re-creating (77c734c)\n\n1.6.9 (2022-07-21)\n🔁 Continuous Integration\n\nget container name from runner context (94ba4e1)\n\n1.6.8 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to assign docker service name to running container (fe4b9e9)\n\n1.6.7 (2022-07-21)\n✅ Tests\n\nmount docker service and volumes (0848443)\n\n1.6.6 (2022-07-21)\n✅ Tests\n\nload docker container from artifact (b7c3395)\n\n1.6.5 (2022-07-21)\n🐛 Bug Fixes\n\ncorrect docker local creation (cd306f8)\n\n1.6.4 (2022-07-21)\n✅ Tests\n\nload docker container in flight environment (e145e2d)\n\n1.6.3 (2022-07-20)\n🤖 Build System\n\nupdate deployment and add simple repo submission structure (33fea7e)\n\n1.6.2 (2022-07-19)\n🤖 Build System\n\nrevert to production release container (8aee8e5)\n\n1.6.1 (2022-07-19)\n🤖 Build System\n\nimprove swagger generation (22d3cc1)\n\n🐛 Bug Fixes\n\ncorrect workflow yaml comments (7fe63aa)\n\n1.6.0 (2022-07-19)\n🎨 Styles\n\nimplement correct eslint rules for immediate scoping (bd6d621), closes #1\n\n🍕 Features\n\nupdate dependencies and nest to stable new version (c24937f)\n\n🔁 Continuous Integration\n\nadd docker build and static swagger docs jobs (81e8bbc)\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n🤖 Build System\n\nadd better eslint baseline configuration (3918a78)\nadd minimal eslint configuration (a0db0aa)\nadd minor deployment improvements and github pages adjustments (cb83f9d)\nimplement prettier rules in typescript eslint (166050d)\n\n🐛 Bug Fixes\n\ncorrect release workflow artifact strategy (b5b6ac5)\ncorrect rogue workflow artifact (61b67d5)\n\n1.5.1 (2022-07-13)\n🔁 Continuous Integration\n\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n📦 0-vortex/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.5.0 (2022-06-21)\n🍕 Features\n\nimplement proper starsCount (fdc11ea)\nimplement proper votesCount (607cf5d)\n\n1.4.0 (2022-06-17)\n🍕 Features\n\nadd minimal pagination decorator (ac31556)\n\n1.3.0 (2022-06-10)\n🍕 Features\n\nadd abstract pagination component (630f3b5)\nadd repository relations and limit select (b4d3785)\n\n1.2.0 (2022-06-09)\n🍕 Features\n\nattach user relationship to get repos (e663170)\n\n1.1.0 (2022-06-07)\n🍕 Features\n\nadd basic tld entities (273f337)\n\n1.0.2 (2022-06-05)\n🤖 Build System\n\nadd supabase migration system (34d521d)\n\n1.0.1 (2022-06-05)\n✅ Tests\n\nverify database diagrams generation (73d1c74)\n\n1.0.0 (2022-06-05)\n🍕 Features\n\nadjust health checks endpoints (cb9206d)\ninitial commit (5e7c6c7)\n\n🐛 Bug Fixes\n\ncorrect npm scripts, workflow node versiond and update deps (2c0b15f)\nupdate nest typeorm integration and correct db status (58bf922)\n\n🔥 Performance Improvements\n\nremove minor version engines requirements (7db9008)\n\n✅ Tests\n\nexplain current test configuration and unblock pipelines (272c09a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/supabase.strategy.ts\n            \n            injectable\n            SupabaseStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/dtos/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/endpoint.config.ts\n            \n            variable\n            getDomain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.entity.ts\n            \n            entity\n            Contribution\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.controller.ts\n            \n            controller\n            RepoController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/repo/repo.entity.ts\n            \n            entity\n            Repo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.service.ts\n            \n            injectable\n            RepoService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.stargazers.entity.ts\n            \n            entity\n            RepoToUserStargazers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.stars.entity.ts\n            \n            entity\n            RepoToUserStars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.submissions.entity.ts\n            \n            entity\n            RepoToUserSubmissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.votes.entity.ts\n            \n            entity\n            RepoToUserVotes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../order.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/order.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        Order\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n  🍕 Open Sauced Nest Supabase API🍕\n  The path to your next Open Source contribution\n\n\n\n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=16.7.0\nnpm>=8.0.0\ndocker>=20.10.12\nsupabase>=0.18.0\n\n🔑 Database commands\nStarting the Supabase Studio\nFirst thing we have to do for local development is start the studio locally at localhost:54321:\nnpm run db:startMake changes\nIf we are adding a new table structure, first do it visually in the Supabase Studio and test locally.\nCheck the migration difference with the following command:\nnpm run db:changesIf everything is fine we can run the following command to apply the changes to the database:\nnpm run db:commit add_table_nameTest changes\nSimplest way to test the migrations are working is to reset the local database:\nnpm run db:resetPush changes\nIf everything is fine we can push the changes to the remote database:\nnpm run db:push🔑 Supabase structure\nClick the image to see the schema diagram full documentation.\n\n🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.8.0-beta.1\n        \n            Description : API dot Open Sauced is NestJS and SupaBase powered OAS3 backend designed to remove client complexity and provide a structured graph of all @open-sauced integrations\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/api.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/api.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/api.opensauced.pizza.git\n        \n            Author : TED Vortex \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageMetaParameters   (src/.../page-meta-parameters.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/dtos/page-meta-parameters.dto.ts\n    \n    \n        \n            \n                \n                    \n                    PageMetaParameters\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            getDomain   (src/.../endpoint.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  model: TModel,\n) => {\n  return applyDecorators(\n    ApiExtraModels(PageDto, Repo),\n    ApiOkResponse({\n      description: \"Successfully received model list\",\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PageDto) },\n          {\n            properties: {\n              data: {\n                type: \"array\",\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/config/endpoint.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (subdomain?: string) =>\n  new URL(`https://${subdomain ? `${subdomain}.` : \"\" }${process.env.DOMAIN || \"opensauced.pizza\"}`).toString()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
