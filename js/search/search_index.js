var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.259,1,1.93]],["body/modules/AppModule.html",[0,1.529,1,3.412,2,1.193,3,2.088,4,2.187,5,2.187,6,2.891,7,0.039,8,2.891,9,2.345,10,1.473,11,1.193,12,0.479,13,0.426,14,0.375,15,2.65,16,2.724,17,1.073,18,1.079,19,2.187,20,1.883,21,3.754,22,3.915,23,2.187,24,3.754,25,2.65,26,3.099,27,1.883,28,2.65,29,2.65,30,2.65,31,4.36,32,1.079,33,2.65,34,3.754,35,2.65,36,3.754,37,2.65,38,3.754,39,2.65,40,2.65,41,0.936,42,1.883,43,1.258,44,1.655,45,1.873,46,2.187,47,1.873,48,2.187,49,1.873,50,2.187,51,2.65,52,2.187,53,2.65,54,2.187,55,2.65,56,2.65,57,0.535,58,2.65,59,2.65,60,2.65,61,2.65,62,2.65,63,2.65,64,2.65,65,2.65,66,2.65,67,1.655,68,2.65,69,2.65,70,2.345,71,0.979,72,2.65,73,2.65,74,1.322,75,1.883,76,0.479,77,0.282,78,2.187,79,0.023,80,0.023]],["title/modules/AuthModule.html",[0,1.259,81,1.93]],["body/modules/AuthModule.html",[0,1.942,2,1.704,3,2.651,7,0.037,9,2.978,10,2.105,11,1.704,12,0.684,13,0.608,14,0.536,16,2.364,17,0.943,18,1.542,75,3.388,76,0.684,77,0.403,79,0.029,80,0.029,81,3.656,82,3.125,83,3.125,84,3.125,85,3.383,86,3.785,87,3.936,88,3.785,89,4.768,90,3.125]],["title/entities/Contribution.html",[45,1.542,91,0.939]],["body/entities/Contribution.html",[7,0.038,12,0.468,13,0.416,14,0.367,17,0.668,32,1.056,41,1.378,42,1.841,45,1.844,57,1.158,70,2.308,71,0.957,76,0.468,77,0.276,79,0.023,80,0.023,91,1.124,92,2.139,93,0.416,94,1.124,95,4.307,96,4.307,97,2.761,98,4.307,99,3.527,100,3.555,101,3.336,102,1.78,103,3.527,104,3.876,105,3.876,106,3.876,107,3.876,108,1.464,109,2.591,110,2.323,111,3.336,112,2.055,113,2.055,114,2.591,115,1.841,116,2.591,117,2.626,118,2.626,119,2.308,120,2.626,121,2.626,122,2.591,123,1.619,124,2.591,125,2.308,126,2.591,127,2.626,128,2.591,129,2.591,130,2.87,131,2.626,132,1.841,133,2.308,134,2.308,135,1.124,136,1.841,137,1.619,138,1.841,139,2.591]],["title/controllers/HealthController.html",[140,1.718,141,1.93]],["body/controllers/HealthController.html",[7,0.039,12,0.484,13,0.43,14,0.379,17,0.861,18,1.09,22,3.619,23,2.209,27,1.902,67,1.672,74,1.336,76,0.484,77,0.285,79,0.023,80,0.023,93,0.43,102,1.267,108,1.042,140,1.488,141,2.362,142,2.209,143,2.209,144,3.121,145,2.362,146,3.715,147,3.933,148,4.765,149,2.677,150,2.677,151,2.362,152,3.121,153,2.677,154,2.677,155,3.781,156,3.781,157,3.781,158,4.384,159,3.781,160,3.781,161,3.115,162,2.209,163,1.488,164,2.677,165,2.677,166,1.488,167,4.306,168,2.677,169,2.677,170,2.677,171,1.488,172,2.677,173,1.887,174,3.781,175,2.677,176,2.677,177,2.677,178,2.677,179,2.677,180,2.677,181,3.781,182,2.677,183,3.121,184,2.677,185,2.677,186,2.677,187,2.677,188,2.677,189,2.677,190,2.677,191,2.677,192,2.677,193,2.677,194,2.677,195,2.677,196,2.677,197,2.677,198,2.677]],["title/modules/HealthModule.html",[0,1.259,6,1.718]],["body/modules/HealthModule.html",[0,2.068,2,1.886,6,2.823,7,0.038,12,0.757,13,0.673,14,0.593,16,2.617,17,0.987,18,1.706,26,4.19,27,2.977,74,2.533,76,0.757,77,0.446,79,0.031,80,0.031,141,3.411,199,4.189,200,4.189]],["title/classes/PageDto.html",[77,0.329,201,1.718]],["body/classes/PageDto.html",[7,0.038,12,0.558,13,0.496,14,0.438,17,0.915,54,3.447,57,1.127,76,0.558,77,0.504,79,0.026,80,0.026,93,0.496,94,1.27,102,1.4,108,1.303,135,0.94,163,1.718,166,1.718,171,3.033,201,2.322,202,1.93,203,2.551,204,4.368,205,3.961,206,4.176,207,5.292,208,3.153,209,4.176,210,1.718,211,1.542,212,3.09,213,3.09,214,3.09,215,3.09,216,3.09,217,3.09,218,3.905,219,4.73,220,4.73,221,2.551,222,2.196,223,2.551,224,2.551,225,3.09,226,2.551,227,3.09,228,3.09]],["title/classes/PageMetaDto.html",[77,0.329,208,1.718]],["body/classes/PageMetaDto.html",[7,0.038,12,0.489,13,0.434,14,0.383,17,0.688,57,1.087,76,0.489,77,0.288,79,0.023,80,0.023,93,0.434,94,1.158,102,1.754,108,1.482,110,2.471,135,0.822,163,1.504,166,2.118,171,3.325,202,1.689,205,1.921,208,2.118,210,1.504,211,1.349,218,4.804,222,3.4,229,3.43,230,2.232,231,4.409,232,4.409,233,4.164,234,4.409,235,3.132,236,2.704,237,3.951,238,3.808,239,3.4,240,2.704,241,2.704,242,2.704,243,2.704,244,2.704,245,2.704,246,1.349,247,3.639,248,2.704,249,2.706,250,3.144,251,2.704,252,1.921,253,2.704,254,2.704,255,2.704,256,2.704,257,2.704]],["title/classes/PageOptionsDto.html",[77,0.329,246,1.542]],["body/classes/PageOptionsDto.html",[7,0.038,12,0.474,13,0.421,14,0.372,17,0.853,57,1.047,76,0.474,77,0.462,79,0.023,80,0.023,93,0.421,94,1.133,102,1.453,108,1.301,110,2.4,112,3.082,163,1.459,171,3.082,173,1.309,202,1.639,211,2.586,221,2.166,222,3.081,224,2.166,229,3.116,235,3.081,246,1.86,247,2.166,249,3.938,250,2.166,252,3.355,258,2.166,259,3.994,260,3.728,261,4.337,262,2.709,263,4.337,264,2.624,265,3.728,266,2.624,267,2.624,268,3.728,269,2.624,270,2.624,271,3.728,272,3.728,273,2.624,274,2.624,275,2.624,276,2.624,277,4.722,278,2.624,279,4.337,280,4.722,281,2.624,282,2.624,283,2.624,284,2.624,285,2.624,286,3.728,287,3.728,288,2.624]],["title/entities/Repo.html",[41,0.77,91,0.939]],["body/entities/Repo.html",[7,0.038,12,0.252,13,0.224,14,0.197,17,0.675,32,0.568,41,0.571,43,1.539,44,0.871,45,2.005,46,1.151,47,2.292,49,2.292,57,1.179,70,2.112,71,0.515,76,0.252,77,0.149,79,0.014,80,0.014,91,0.697,93,0.224,94,0.697,97,2.078,100,2.41,101,3.515,102,1.841,103,3.515,104,3.903,105,3.903,106,3.903,107,3.316,108,1.514,110,2.227,111,3.36,112,2.952,113,2.466,115,0.991,117,3.15,118,3.15,119,2.77,120,3.15,121,3.15,123,0.871,125,1.432,127,1.629,130,2.845,131,1.629,132,0.991,133,1.432,134,1.432,135,1.221,136,2.074,137,0.871,138,0.991,239,1.629,289,1.151,290,1.823,291,2.074,292,2.919,293,2.919,294,2.919,295,2.919,296,2.919,297,1.623,298,2.919,299,3.381,300,2.919,301,2.919,302,2.655,303,2.919,304,2.41,305,2.293,306,1.395,307,1.151,308,3.316,309,1.395,310,1.395,311,1.395,312,1.395,313,1.395,314,1.151,315,1.395,316,1.395,317,3.381,318,1.395,319,2.293,320,1.395,321,1.395,322,1.395,323,1.395,324,2.293,325,1.395,326,2.293,327,1.395,328,1.395,329,1.395,330,1.395,331,1.395,332,1.395,333,1.395,334,1.395,335,1.395,336,1.395,337,1.892,338,2.293,339,2.791,340,1.395,341,1.395,342,0.871,343,0.991,344,0.871,345,1.151,346,1.395,347,1.395]],["title/controllers/RepoController.html",[140,1.718,348,1.93]],["body/controllers/RepoController.html",[7,0.038,12,0.589,13,0.524,14,0.462,17,1.021,18,1.328,41,1.211,57,0.875,74,1.627,76,0.589,77,0.347,78,2.692,79,0.027,80,0.027,93,0.524,102,1.093,108,0.899,135,0.992,140,1.813,143,2.692,145,2.704,146,3.036,151,2.037,161,3.076,162,2.692,163,1.813,171,1.813,173,1.627,201,1.813,210,1.813,211,1.627,246,2.764,342,2.037,348,2.704,349,2.692,350,4.86,351,3.261,352,3.261,353,3.261,354,3.574,355,3.261,356,3.261,357,4.33,358,2.425,359,2.692,360,1.813,361,2.692,362,2.692,363,2.692,364,2.317,365,3.261,366,2.317,367,3.261,368,3.261,369,3.261,370,3.261,371,3.261,372,3.261,373,3.261]],["title/modules/RepoModule.html",[0,1.259,8,1.718]],["body/modules/RepoModule.html",[0,1.883,2,1.623,3,2.57,7,0.038,8,3.219,9,2.887,10,2.005,11,1.623,12,0.651,13,0.579,14,0.511,16,2.252,17,1.005,18,1.468,19,2.976,20,2.561,41,0.899,74,2.306,75,3.284,76,0.651,77,0.384,79,0.028,80,0.028,87,3.816,348,3.187,358,3.015,359,2.976,360,2.005,374,2.976,375,2.976,376,2.976,377,3.605,378,3.605,379,3.605]],["title/injectables/RepoService.html",[358,1.542,380,1.718]],["body/injectables/RepoService.html",[7,0.038,12,0.533,13,0.474,14,0.418,17,0.996,18,1.203,20,2.098,32,1.203,41,0.736,43,0.989,57,0.818,71,1.09,76,0.533,77,0.315,79,0.025,80,0.025,93,0.474,108,1.116,135,1.231,136,2.098,145,2.529,146,2.886,151,1.844,166,2.251,167,2.437,173,1.473,201,1.642,208,2.764,210,2.251,211,2.02,223,2.437,233,3.342,246,2.749,354,3.342,358,2.02,360,1.642,361,3.342,362,2.437,363,2.437,380,2.251,381,2.098,382,2.437,383,4.62,384,2.952,385,3.105,386,2.952,387,4.048,388,2.952,389,2.952,390,2.952,391,2.952,392,4.971,393,2.952,394,2.952,395,2.952,396,2.952,397,2.952,398,2.952,399,2.437,400,2.952,401,2.437,402,2.952,403,2.952,404,2.952,405,2.952,406,2.952,407,4.048,408,2.952,409,2.952,410,2.251,411,2.952]],["title/entities/RepoToUserStars.html",[49,1.542,91,0.939]],["body/entities/RepoToUserStars.html",[7,0.038,12,0.509,13,0.453,14,0.399,17,0.815,32,1.148,41,1.405,43,1.888,44,1.761,49,1.957,57,1.035,71,1.041,76,0.509,77,0.3,79,0.024,80,0.024,91,1.192,93,0.453,94,1.192,97,3.206,99,3.204,102,1.717,108,1.412,110,2.387,123,2.449,125,3.044,130,2.849,133,2.816,134,2.816,135,1.371,290,1.761,302,3.204,343,2.003,344,1.761,360,1.567,401,2.327,412,2.327,413,4.214,414,3.722,415,2.819,416,2.819,417,2.819,418,2.819,419,2.819,420,2.819,421,2.819,422,2.819,423,2.819]],["title/entities/RepoToUserVotes.html",[47,1.542,91,0.939]],["body/entities/RepoToUserVotes.html",[7,0.038,12,0.509,13,0.453,14,0.399,17,0.815,32,1.148,41,1.405,43,1.888,44,1.761,47,1.957,57,1.035,71,1.041,76,0.509,77,0.3,79,0.024,80,0.024,91,1.192,93,0.453,94,1.192,97,3.206,99,3.204,102,1.717,108,1.412,110,2.387,123,2.449,125,3.044,130,2.849,133,2.816,134,2.816,135,1.371,290,1.761,302,3.204,343,2.003,344,1.761,360,1.567,399,2.327,413,4.214,414,3.722,424,2.327,425,2.819,426,2.819,427,2.819,428,2.819,429,2.819,430,2.819,431,2.819,432,2.819,433,2.819]],["title/injectables/SupabaseStrategy.html",[85,1.718,380,1.718]],["body/injectables/SupabaseStrategy.html",[7,0.038,12,0.593,13,0.527,14,0.465,17,0.976,18,1.337,43,1.1,57,0.663,76,0.593,77,0.35,79,0.027,80,0.027,85,2.417,90,2.709,93,0.527,108,1.198,135,0.998,137,2.05,145,2.715,146,3.045,151,2.05,152,2.709,166,2.711,173,1.637,210,1.825,211,1.637,380,2.417,381,2.331,413,3.089,434,2.709,435,4.347,436,3.281,437,4.347,438,5.19,439,3.281,440,4.347,441,3.281,442,3.281,443,3.281,444,4.347,445,2.709,446,2.715,447,3.281,448,3.281,449,3.281,450,3.281,451,3.281,452,3.281,453,3.281,454,3.281,455,3.281,456,3.281,457,3.281,458,3.281,459,3.281,460,3.281,461,3.281,462,2.709,463,3.281]],["title/entities/User.html",[43,1.035,91,0.939]],["body/entities/User.html",[7,0.038,12,0.431,13,0.383,14,0.338,17,0.817,32,0.972,41,1.251,42,1.696,43,1.167,47,2.783,48,1.971,49,2.586,50,1.971,57,1.127,70,3.135,71,0.882,76,0.431,77,0.254,79,0.021,80,0.021,91,1.059,93,0.383,94,1.059,97,2.287,102,1.815,103,1.696,108,1.493,110,2.035,111,2.475,112,2.882,113,1.937,115,1.696,117,2.475,118,2.475,119,2.176,120,2.475,121,2.475,130,2.673,131,2.475,132,1.696,135,0.726,137,1.491,138,1.696,239,3.566,290,2.569,304,3.395,307,1.971,308,2.875,314,3.395,337,2.875,339,3.732,342,2.569,464,1.971,465,4.112,466,4.112,467,4.112,468,4.112,469,2.387,470,2.387,471,2.387,472,2.387,473,2.387,474,2.387,475,3.483,476,2.387,477,3.483,478,2.387,479,3.483,480,2.387,481,2.387]],["title/changelog.html",[482,1.624,483,1.848,484,2.147]],["body/changelog.html",[3,1.148,7,0.037,11,0.553,14,0.378,32,0.501,41,0.306,43,0.412,52,1.704,67,0.768,71,0.454,79,0.013,80,0.013,113,0.684,127,0.874,135,0.812,144,1.015,147,1.704,235,0.874,249,0.874,252,0.874,262,0.768,342,0.768,385,0.768,410,1.148,446,0.768,462,1.704,482,0.768,484,1.704,485,0.768,486,1.23,487,2.065,488,1.704,489,1.704,490,2.065,491,1.015,492,4.755,493,5.618,494,4.011,495,5.212,496,5.265,497,4.523,498,2.669,499,1.467,500,1.23,501,1.23,502,3.774,503,1.23,504,3.127,505,2.065,506,2.669,507,2.065,508,1.23,509,1.23,510,1.23,511,3.127,512,2.065,513,1.23,514,1.23,515,1.015,516,1.704,517,1.23,518,1.23,519,2.065,520,1.015,521,1.23,522,1.23,523,3.774,524,3.774,525,2.065,526,2.065,527,4.378,528,1.23,529,1.23,530,1.23,531,1.23,532,2.065,533,1.23,534,2.877,535,1.23,536,1.23,537,3.774,538,1.23,539,3.485,540,1.704,541,2.065,542,1.23,543,1.23,544,4.856,545,1.015,546,1.23,547,1.015,548,1.23,549,1.23,550,1.23,551,1.23,552,1.23,553,1.23,554,2.065,555,1.23,556,1.23,557,3.475,558,1.23,559,1.23,560,1.23,561,2.065,562,3.127,563,1.23,564,2.065,565,2.669,566,1.23,567,1.23,568,0.768,569,1.23,570,1.23,571,0.874,572,1.23,573,1.23,574,1.23,575,1.23,576,1.23,577,1.23,578,1.23,579,3.485,580,2.065,581,1.015,582,1.23,583,1.23,584,4.523,585,1.23,586,1.23,587,1.23,588,1.23,589,1.23,590,1.23,591,1.23,592,1.23,593,4.011,594,4.011,595,2.669,596,1.23,597,1.23,598,1.23,599,1.23,600,1.23,601,1.23,602,1.23,603,1.704,604,2.669,605,1.23,606,1.23,607,1.23,608,4.378,609,1.23,610,1.23,611,1.23,612,1.23,613,2.669,614,1.23,615,1.23,616,1.23,617,1.23,618,1.23,619,1.23,620,1.23,621,1.23,622,1.23,623,1.23,624,1.23,625,1.23,626,1.23,627,1.23,628,1.23,629,1.23,630,2.669,631,1.23,632,1.23,633,1.23,634,1.23,635,1.23,636,1.23,637,1.23,638,1.23,639,1.23,640,2.065,641,1.23,642,1.23,643,1.015,644,1.23,645,1.23,646,2.669,647,1.23,648,1.23,649,1.23,650,1.23,651,1.23,652,2.065,653,1.23,654,1.23,655,1.23,656,1.23,657,1.23,658,1.23,659,3.127,660,3.127,661,2.065,662,1.23,663,1.23,664,1.23,665,1.23,666,4.011,667,1.704,668,1.23,669,1.704,670,1.23,671,1.23,672,1.23,673,1.23,674,2.065,675,2.065,676,2.065,677,2.065,678,2.065,679,1.23,680,1.23,681,2.669,682,1.23,683,2.065,684,1.23,685,2.065,686,2.065,687,1.23,688,1.23,689,1.23,690,1.23,691,1.23,692,1.23,693,1.23,694,1.23,695,1.23,696,1.23,697,1.23,698,1.23,699,1.23,700,4.21,701,1.23,702,1.23,703,1.23,704,1.23,705,1.23,706,1.23,707,2.065,708,1.23,709,1.23,710,1.23,711,1.23,712,1.23,713,1.23,714,1.23,715,1.23,716,1.23,717,1.23,718,1.23,719,1.23,720,1.23,721,1.23,722,1.23,723,1.23,724,1.23,725,1.23,726,1.23,727,2.669,728,1.015,729,1.23,730,1.23,731,1.23,732,1.23,733,1.23,734,1.23,735,1.23,736,1.23,737,1.23,738,1.23,739,1.23,740,1.23,741,1.23,742,1.015,743,1.23,744,1.23,745,1.23,746,1.23,747,1.23,748,1.23,749,1.23,750,1.23,751,1.23,752,1.015,753,1.23,754,1.23,755,1.23,756,1.23,757,1.23,758,1.23,759,1.23,760,1.23]],["title/coverage.html",[761,3.447]],["body/coverage.html",[7,0.038,14,0.465,41,0.818,43,1.1,45,1.637,47,1.637,49,1.637,57,0.663,77,0.519,79,0.027,80,0.027,85,1.825,91,1.642,92,2.709,113,3.365,140,2.417,141,2.05,142,2.709,201,1.825,203,2.709,208,1.825,229,2.715,230,2.709,246,1.637,258,2.709,289,2.709,348,2.05,349,2.709,358,1.637,364,2.331,366,2.331,380,2.417,382,2.709,410,1.825,412,2.709,424,2.709,434,2.709,464,2.709,516,3.589,568,2.05,761,2.709,762,3.281,763,3.281,764,4.875,765,2.709,766,2.709,767,5.748,768,3.281,769,4.347,770,2.709,771,2.709,772,2.709,773,3.281,774,2.709,775,3.281,776,3.281,777,2.709]],["title/miscellaneous/enumerations.html",[778,1.059,779,3.058]],["body/miscellaneous/enumerations.html",[7,0.036,79,0.033,80,0.033,93,0.724,259,3.769,262,3.313,344,3.313,345,4.379,778,1.837,779,3.723,780,4.51,781,4.51]],["title/miscellaneous/functions.html",[778,1.059,782,3.058]],["body/miscellaneous/functions.html",[7,0.033,79,0.033,80,0.033,93,0.747,772,3.837,774,4.71,778,1.894,782,3.837,783,4.649]],["title/index.html",[93,0.418,482,1.624,483,1.848]],["body/index.html",[7,0.035,10,1.633,11,1.321,13,0.471,45,1.465,67,3.098,79,0.025,80,0.025,183,2.424,259,2.086,297,1.633,385,1.834,410,1.633,446,3.098,485,3.247,488,4.291,489,2.424,534,2.424,545,2.424,547,4.541,557,3.329,568,1.834,571,2.086,603,3.329,643,3.329,667,2.424,728,2.424,742,4.291,777,2.424,784,3.524,785,2.936,786,2.936,787,2.936,788,3.803,789,2.424,790,2.936,791,2.936,792,4.033,793,2.936,794,2.936,795,2.936,796,2.936,797,2.936,798,2.936,799,2.936,800,4.607,801,4.033,802,2.936,803,2.936,804,4.033,805,2.936,806,2.936,807,2.936,808,2.936,809,4.033,810,2.936,811,4.033,812,2.936,813,4.033,814,4.033,815,2.936,816,2.936,817,2.936,818,2.936,819,2.936,820,2.936,821,2.936,822,2.936,823,2.936,824,2.936,825,2.936,826,2.936,827,2.936,828,2.424,829,2.936,830,2.936,831,4.033,832,2.936,833,2.936,834,2.936,835,2.936,836,2.936,837,2.936,838,2.936,839,2.936,840,2.936,841,2.936,842,2.936,843,2.936,844,2.936,845,2.936,846,2.936,847,2.936,848,2.086]],["title/license.html",[297,1.446,482,1.624,483,1.848]],["body/license.html",[7,0.027,11,1.524,79,0.027,80,0.027,119,3.093,297,1.883,485,2.115,492,2.795,520,2.795,568,2.115,581,3.664,784,2.406,788,2.795,789,4.831,848,2.406,849,4.951,850,3.386,851,4.438,852,3.386,853,3.386,854,3.386,855,3.386,856,3.386,857,3.386,858,3.386,859,3.386,860,3.386,861,3.386,862,4.438,863,3.386,864,3.386,865,4.438,866,3.386,867,3.386,868,3.386,869,3.386,870,3.386,871,3.386,872,3.386,873,4.438,874,3.386,875,3.386,876,3.386,877,3.386,878,3.386,879,3.386,880,4.438,881,4.438,882,3.386,883,3.386,884,3.386,885,3.386,886,3.386,887,3.386,888,3.386,889,3.386,890,3.386,891,3.386,892,3.386,893,3.386,894,3.386,895,3.386,896,3.386,897,3.386,898,3.386,899,3.386,900,3.386,901,3.386,902,3.386,903,3.386,904,3.386,905,3.386,906,3.386,907,3.386,908,3.386,909,3.386,910,3.386]],["title/modules.html",[2,1.879]],["body/modules.html",[1,2.759,2,1.988,6,2.456,7,0.032,8,2.456,79,0.032,80,0.032,81,2.759,911,5.586,912,5.586,913,5.586,914,5.777,915,3.646,916,4.416]],["title/overview.html",[917,3.447]],["body/overview.html",[1,3.585,2,1.674,3,2.622,4,3.07,5,3.07,6,2.879,7,0.036,8,3.191,9,2.945,10,2.068,11,1.674,71,1.374,74,1.856,79,0.029,80,0.029,81,3.509,82,3.07,83,3.07,84,3.07,85,3.242,202,2.323,358,2.909,374,3.07,375,3.07,376,3.07,381,2.642,917,3.07,918,3.719,919,4.715,920,3.719,921,3.719]],["title/properties.html",[94,1.126,922,2.601]],["body/properties.html",[7,0.037,79,0.03,80,0.03,94,1.212,291,2.831,297,2.216,385,2.489,445,3.289,446,2.489,485,3.075,491,3.289,515,3.289,571,2.831,669,3.289,752,3.289,784,3.498,848,2.831,915,3.289,923,3.985,924,3.985,925,3.985,926,3.985,927,3.985,928,3.985,929,3.985,930,3.985,931,3.985,932,3.985,933,3.985,934,4.923,935,3.985,936,3.985,937,3.985,938,3.985,939,3.985,940,3.985,941,3.985,942,3.985]],["title/miscellaneous/typealiases.html",[778,1.059,943,3.705]],["body/miscellaneous/typealiases.html",[7,0.033,57,1.075,79,0.033,80,0.033,93,0.727,205,3.778,229,2.829,237,4.39,778,1.845,944,4.53,945,4.53,946,5.318,947,4.53]],["title/miscellaneous/variables.html",[499,2.632,778,1.059]],["body/miscellaneous/variables.html",[7,0.039,41,0.89,57,0.721,79,0.028,80,0.028,93,0.573,94,1.085,101,2.536,112,2.554,161,2.536,173,1.781,204,2.946,226,2.946,262,2.868,291,2.536,364,3.263,366,3.263,410,1.984,499,2.536,540,2.946,765,2.946,766,3.791,770,2.946,771,3.791,778,1.454,828,2.946,948,3.569,949,3.569,950,4.592,951,3.569,952,3.569,953,3.569,954,3.569,955,3.569,956,3.569,957,4.592,958,3.569,959,3.569,960,3.569,961,4.592,962,3.569,963,3.569,964,3.569]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":113,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["0/1",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["0848443",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":249,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["1.0.0",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["1.6.10",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["1.6.11",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["1.6.12",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["1.6.13",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["1.6.14",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["1.6.15",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["1.6.16",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["1.6.17",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["1.6.3",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["1.6.4",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["1.6.5",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["1.6.6",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["1.6.7",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["1.6.8",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["1.6.9",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["1.7.1",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["1.7.3",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["1.7.5",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["1.7.6",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["1.7.7",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["1.7.8",{"_index":491,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["10",{"_index":252,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(50)@isoptional",{"_index":273,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["13",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["166050d",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":269,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["2",{"_index":919,"title":{},"body":{"overview.html":{}}}],["20",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":492,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["20880c7",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["20bc1e7",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["22d3cc1",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":107,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["27",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["272c09a",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["273f337",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["2c0b15f",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["2c0b3d1",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":921,"title":{},"body":{"overview.html":{}}}],["33fea7e",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["34d521d",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["3918a78",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":918,"title":{},"body":{"overview.html":{}}}],["5",{"_index":920,"title":{},"body":{"overview.html":{}}}],["50",{"_index":272,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["58bf922",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["5e7c6c7",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["5eddeb1",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["5f79c49",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["607cf5d",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["61b67d5",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["630f3b5",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["63d6a92",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":317,"title":{},"body":{"entities/Repo.html":{}}}],["6d23c24",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["73d1c74",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["77c734c",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["79bf61d",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["7adfb6b",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["7db9008",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["7e9b8a4",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["7fe63aa",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["81e8bbc",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["8837b2a",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["8aee8e5",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["911df68",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["94ba4e1",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["a0db0aa",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["a229a3b",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":879,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["ac31556",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["accessing",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["accessors",{"_index":260,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["action",{"_index":904,"title":{},"body":{"license.html":{}}}],["add",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["add_table_nametest",{"_index":817,"title":{},"body":{"index.html":{}}}],["adding",{"_index":807,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["adjustments",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":944,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allof",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":871,"title":{},"body":{"license.html":{}}}],["api",{"_index":571,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["apiconfig",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["apiextramodels(pagedto",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":161,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse",{"_index":364,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse(repo",{"_index":372,"title":{},"body":{"controllers/RepoController.html":{}}}],["apiproperty",{"_index":218,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{}}}],["apiproperty({type",{"_index":216,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":277,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({enum",{"_index":264,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":268,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apitags",{"_index":162,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["apitags(\"health",{"_index":164,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"repositories",{"_index":369,"title":{},"body":{"controllers/RepoController.html":{}}}],["apply",{"_index":815,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":908,"title":{},"body":{"license.html":{}}}],["array",{"_index":226,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["artifact",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":345,"title":{},"body":{"entities/Repo.html":{},"miscellaneous/enumerations.html":{}}}],["assign",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":858,"title":{},"body":{"license.html":{}}}],["async",{"_index":146,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["attach",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["attempt",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":447,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticate(req",{"_index":461,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authmodule",{"_index":81,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":940,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":897,"title":{},"body":{"license.html":{}}}],["authuser",{"_index":438,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["autoloadentities",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":916,"title":{},"body":{"modules.html":{}}}],["await",{"_index":407,"title":{},"body":{"injectables/RepoService.html":{}}}],["b1a67da",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["b1eda28",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["b4d3785",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["b57f47b",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["b5b6ac5",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["b7c3395",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["ba8dfbb",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":926,"title":{},"body":{"properties.html":{}}}],["based",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["baseentity",{"_index":131,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["baseline",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["bash",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["bc3a37d",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["bd6d621",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["better",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["bigint",{"_index":111,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["binaries",{"_index":790,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":239,"title":{},"body":{"classes/PageMetaDto.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":914,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":911,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":936,"title":{},"body":{"properties.html":{}}}],["build",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":393,"title":{},"body":{"injectables/RepoService.html":{}}}],["builder.getcount",{"_index":408,"title":{},"body":{"injectables/RepoService.html":{}}}],["builder.getmany",{"_index":409,"title":{},"body":{"injectables/RepoService.html":{}}}],["c",{"_index":850,"title":{},"body":{"license.html":{}}}],["c013b70",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["c127cea",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["c24937f",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["cb83f9d",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["cb9206d",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["cc46460",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["cd306f8",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":484,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":488,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["channel",{"_index":846,"title":{},"body":{"index.html":{}}}],["character",{"_index":104,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["charge",{"_index":855,"title":{},"body":{"license.html":{}}}],["check",{"_index":809,"title":{},"body":{"index.html":{}}}],["checks",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":900,"title":{},"body":{"license.html":{}}}],["class",{"_index":77,"title":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"coverage.html":{}}}],["classes",{"_index":202,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"overview.html":{}}}],["clean",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":825,"title":{},"body":{"index.html":{}}}],["client",{"_index":928,"title":{},"body":{"properties.html":{}}}],["closes",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":82,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":84,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":83,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_repomodule",{"_index":374,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_exports",{"_index":376,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_providers",{"_index":375,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["column",{"_index":130,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["column(\"text",{"_index":346,"title":{},"body":{"entities/Repo.html":{}}}],["column('text",{"_index":310,"title":{},"body":{"entities/Repo.html":{}}}],["column({default",{"_index":314,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["column({type",{"_index":103,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["command",{"_index":811,"title":{},"body":{"index.html":{}}}],["commands",{"_index":798,"title":{},"body":{"index.html":{}}}],["comments",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["common/decorators/api",{"_index":365,"title":{},"body":{"controllers/RepoController.html":{}}}],["common/dtos/page",{"_index":361,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["common/dtos/page.dto",{"_index":363,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["community",{"_index":838,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":929,"title":{},"body":{"properties.html":{}}}],["component",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["concurrency",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":878,"title":{},"body":{"license.html":{}}}],["config/api.config",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["config/endpoint.config",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configservice.get(\"db.connection",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.database",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.host",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.password",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.port",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.username",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":909,"title":{},"body":{"license.html":{}}}],["console.log(builder.getsql",{"_index":406,"title":{},"body":{"injectables/RepoService.html":{}}}],["const",{"_index":392,"title":{},"body":{"injectables/RepoService.html":{}}}],["constants/order.constant",{"_index":283,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["constructor",{"_index":166,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["constructor(data",{"_index":206,"title":{},"body":{"classes/PageDto.html":{}}}],["constructor(private",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoController.html":{}}}],["constructor(reporepository",{"_index":384,"title":{},"body":{"injectables/RepoService.html":{}}}],["constructor(undefined",{"_index":236,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["container",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["continuous",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":905,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":833,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":831,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":45,"title":{"entities/Contribution.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"coverage.html":{},"index.html":{}}}],["contribution.repo",{"_index":305,"title":{},"body":{"entities/Repo.html":{}}}],["contribution/contribution.entity",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{}}}],["contributions",{"_index":136,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{}}}],["contributor",{"_index":95,"title":{},"body":{"entities/Contribution.html":{}}}],["controller",{"_index":140,"title":{"controllers/HealthController.html":{},"controllers/RepoController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":165,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"repos",{"_index":368,"title":{},"body":{"controllers/RepoController.html":{}}}],["controllers",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"overview.html":{}}}],["conversation",{"_index":841,"title":{},"body":{"index.html":{}}}],["copies",{"_index":873,"title":{},"body":{"license.html":{}}}],["copy",{"_index":581,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":849,"title":{},"body":{"license.html":{}}}],["correct",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":96,"title":{},"body":{"entities/Contribution.html":{}}}],["coverage",{"_index":761,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["created",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["created_at",{"_index":290,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":337,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["createdatecolumn({type",{"_index":307,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["creating",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["d0d5ca5",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":901,"title":{},"body":{"license.html":{}}}],["data",{"_index":204,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["datasource",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":117,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["db",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["db:changesif",{"_index":812,"title":{},"body":{"index.html":{}}}],["db:commit",{"_index":816,"title":{},"body":{"index.html":{}}}],["db:push",{"_index":824,"title":{},"body":{"index.html":{}}}],["db:resetpush",{"_index":822,"title":{},"body":{"index.html":{}}}],["db:startmake",{"_index":806,"title":{},"body":{"index.html":{}}}],["dbconfig",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["deal",{"_index":860,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":910,"title":{},"body":{"license.html":{}}}],["debug",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["decorator",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":102,"title":{},"body":{"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["default",{"_index":112,"title":{},"body":{"entities/Contribution.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":108,"title":{},"body":{"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["demo",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":344,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":291,"title":{},"body":{"entities/Repo.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":927,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":792,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":829,"title":{},"body":{"index.html":{}}}],["diagrams",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":810,"title":{},"body":{"index.html":{}}}],["digital",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["discord.find",{"_index":842,"title":{},"body":{"index.html":{}}}],["disk",{"_index":170,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":160,"title":{},"body":{"controllers/HealthController.html":{}}}],["distribute",{"_index":869,"title":{},"body":{"license.html":{}}}],["docker",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.12",{"_index":796,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["docr",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":568,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":923,"title":{},"body":{"properties.html":{}}}],["dry",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["e145e2d",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["e1fe498",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["e663170",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":225,"title":{},"body":{"classes/PageDto.html":{}}}],["echo",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":832,"title":{},"body":{"index.html":{}}}],["endpointconfig",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["engines",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["entities",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"overview.html":{}}}],["entity",{"_index":91,"title":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":284,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["enumerations",{"_index":779,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":265,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["env",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["eslint",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":520,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["everything",{"_index":813,"title":{},"body":{"index.html":{}}}],["explain",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["exports",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{},"modules/RepoModule.html":{}}}],["exposing",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":888,"title":{},"body":{"license.html":{}}}],["extend",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":137,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["extractjwt",{"_index":441,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":459,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractor",{"_index":458,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["f5385b3",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["fdc11ea",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["fe4b9e9",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":859,"title":{},"body":{"license.html":{}}}],["findall",{"_index":383,"title":{},"body":{"injectables/RepoService.html":{}}}],["findall(pageoptionsdto",{"_index":388,"title":{},"body":{"injectables/RepoService.html":{}}}],["finduserlist",{"_index":350,"title":{},"body":{"controllers/RepoController.html":{}}}],["finduserlist(pageoptionsdto",{"_index":351,"title":{},"body":{"controllers/RepoController.html":{}}}],["fine",{"_index":814,"title":{},"body":{"index.html":{}}}],["first",{"_index":801,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":893,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["flight",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":788,"title":{},"body":{"index.html":{},"license.html":{}}}],["free",{"_index":854,"title":{},"body":{"license.html":{}}}],["full",{"_index":830,"title":{},"body":{"index.html":{}}}],["full_name",{"_index":292,"title":{},"body":{"entities/Repo.html":{}}}],["function",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":782,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":876,"title":{},"body":{"license.html":{}}}],["generated",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["get(\"/list",{"_index":370,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/service",{"_index":172,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":186,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/list')@httpcode(httpstatus.ok)@apipaginatedresponse(repo)@apiokresponse({type",{"_index":352,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/service')@healthcheck()@apiokresponse",{"_index":149,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@healthcheck()@apiokresponse",{"_index":153,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdomain",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getschemapath(model",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(pagedto",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getskip",{"_index":275,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getting",{"_index":482,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":938,"title":{},"body":{"properties.html":{}}}],["github",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":853,"title":{},"body":{"license.html":{}}}],["graph",{"_index":915,"title":{},"body":{"modules.html":{},"properties.html":{}}}],["guide",{"_index":835,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":836,"title":{},"body":{"index.html":{}}}],["has_stars_data",{"_index":465,"title":{},"body":{"entities/User.html":{}}}],["hasnextpage",{"_index":231,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":232,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["health",{"_index":144,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["health.controller",{"_index":200,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":158,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":155,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":141,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":6,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hereby",{"_index":852,"title":{},"body":{"license.html":{}}}],["holders",{"_index":898,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":933,"title":{},"body":{"properties.html":{}}}],["host",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":168,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode",{"_index":355,"title":{},"body":{"controllers/RepoController.html":{}}}],["httpcode(httpstatus.ok",{"_index":371,"title":{},"body":{"controllers/RepoController.html":{}}}],["httphealthindicator",{"_index":156,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/open",{"_index":934,"title":{},"body":{"properties.html":{}}}],["httpstatus",{"_index":356,"title":{},"body":{"controllers/RepoController.html":{}}}],["id",{"_index":97,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["identifier",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":826,"title":{},"body":{"index.html":{}}}],["immediate",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":889,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["imports",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}}}],["improve",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":882,"title":{},"body":{"license.html":{}}}],["including",{"_index":862,"title":{},"body":{"license.html":{}}}],["index",{"_index":93,"title":{"index.html":{}},"body":{"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["initial",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":380,"title":{"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}},"body":{"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":381,"title":{},"body":{"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":390,"title":{},"body":{"injectables/RepoService.html":{}}}],["injectrepository(repo",{"_index":391,"title":{},"body":{"injectables/RepoService.html":{}}}],["inspection",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["installed",{"_index":791,"title":{},"body":{"index.html":{}}}],["instead",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":931,"title":{},"body":{"properties.html":{}}}],["is_fork",{"_index":293,"title":{},"body":{"entities/Repo.html":{}}}],["is_open_sauced_member",{"_index":466,"title":{},"body":{"entities/User.html":{}}}],["is_private",{"_index":467,"title":{},"body":{"entities/User.html":{}}}],["isarray",{"_index":219,"title":{},"body":{"classes/PageDto.html":{}}}],["isarray()@apiproperty({isarray",{"_index":212,"title":{},"body":{"classes/PageDto.html":{}}}],["isenum",{"_index":278,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(order",{"_index":285,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isglobal",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":279,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isoptional",{"_index":280,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["issues",{"_index":294,"title":{},"body":{"entities/Repo.html":{}}}],["itemcount",{"_index":233,"title":{},"body":{"classes/PageMetaDto.html":{},"injectables/RepoService.html":{}}}],["items",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jobs",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":840,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":134,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["js",{"_index":449,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["jwt",{"_index":443,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["keywords",{"_index":932,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":887,"title":{},"body":{"license.html":{}}}],["language",{"_index":295,"title":{},"body":{"entities/Repo.html":{}}}],["last_fetched_contributors_at",{"_index":296,"title":{},"body":{"entities/Repo.html":{}}}],["last_merged_at",{"_index":98,"title":{},"body":{"entities/Contribution.html":{}}}],["leftjoinandselect(\"repo.contributions",{"_index":397,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(\"repo.user",{"_index":396,"title":{},"body":{"injectables/RepoService.html":{}}}],["length",{"_index":106,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["liability",{"_index":902,"title":{},"body":{"license.html":{}}}],["liable",{"_index":899,"title":{},"body":{"license.html":{}}}],["license",{"_index":297,"title":{"license.html":{}},"body":{"entities/Repo.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":863,"title":{},"body":{"license.html":{}}}],["limited",{"_index":890,"title":{},"body":{"license.html":{}}}],["list",{"_index":540,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":947,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["loadrelationcountandmap(\"repo.starscount",{"_index":400,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.votescount",{"_index":398,"title":{},"body":{"injectables/RepoService.html":{}}}],["local",{"_index":603,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["localhost:54321",{"_index":805,"title":{},"body":{"index.html":{}}}],["locally",{"_index":804,"title":{},"body":{"index.html":{}}}],["logging",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":793,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":133,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["manytoone(undefined",{"_index":123,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["matching",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":255,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["max",{"_index":281,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(50",{"_index":288,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maximum",{"_index":271,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["memory",{"_index":169,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":159,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":892,"title":{},"body":{"license.html":{}}}],["merge",{"_index":867,"title":{},"body":{"license.html":{}}}],["meta",{"_index":205,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["meta.dto",{"_index":223,"title":{},"body":{"classes/PageDto.html":{},"injectables/RepoService.html":{}}}],["meta.dto.ts",{"_index":230,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:12",{"_index":241,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:15",{"_index":243,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:18",{"_index":240,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":238,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:6",{"_index":242,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":244,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["methods",{"_index":145,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["migration",{"_index":728,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["migrations",{"_index":820,"title":{},"body":{"index.html":{}}}],["min",{"_index":282,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":287,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimal",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":286,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minor",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":778,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":848,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mkdocs",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":866,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["mount",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["mounted",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":135,"title":{},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{}}}],["need",{"_index":787,"title":{},"body":{"index.html":{}}}],["nest",{"_index":667,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nestjs",{"_index":445,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/config",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["nestjs/passport",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/swagger",{"_index":163,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{}}}],["nestjs/terminus",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["nestjs/typeorm",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{}}}],["nestjs/typeorm/dist/interfaces/typeorm",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":410,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":785,"title":{},"body":{"index.html":{}}}],["node",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["node>=16.7.0",{"_index":794,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":896,"title":{},"body":{"license.html":{}}}],["notable",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":880,"title":{},"body":{"license.html":{}}}],["now",{"_index":308,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["npm",{"_index":742,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm>=8.0.0",{"_index":795,"title":{},"body":{"index.html":{}}}],["number",{"_index":110,"title":{},"body":{"entities/Contribution.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["oas3",{"_index":925,"title":{},"body":{"properties.html":{}}}],["obtaining",{"_index":857,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["onetomany",{"_index":339,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":304,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["open",{"_index":485,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["open_issues",{"_index":468,"title":{},"body":{"entities/User.html":{}}}],["opensauced.pizza\"}`).tostring",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":211,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["options.dto",{"_index":362,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["options.dto.ts",{"_index":258,"title":{},"body":{"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:10",{"_index":267,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:20",{"_index":270,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":274,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":276,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.interface",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":259,"title":{},"body":{"classes/PageOptionsDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["order.asc",{"_index":263,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["orderby",{"_index":343,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["orderby(\"repo.pushed_at",{"_index":402,"title":{},"body":{"injectables/RepoService.html":{}}}],["otherwise",{"_index":907,"title":{},"body":{"license.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":917,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":844,"title":{},"body":{"index.html":{}}}],["package",{"_index":922,"title":{"properties.html":{}},"body":{}}],["page",{"_index":222,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["pagecount",{"_index":234,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":201,"title":{"classes/PageDto.html":{}},"body":{"classes/PageDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagedto(entities",{"_index":411,"title":{},"body":{"injectables/RepoService.html":{}}}],["pagemetadto",{"_index":208,"title":{"classes/PageMetaDto.html":{}},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagemetadto})@validatenested()@type(undefined",{"_index":217,"title":{},"body":{"classes/PageDto.html":{}}}],["pagemetaparameters",{"_index":237,"title":{},"body":{"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["pageoptionsdto",{"_index":246,"title":{"classes/PageOptionsDto.html":{}},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pageoptionsdto.order",{"_index":403,"title":{},"body":{"injectables/RepoService.html":{}}}],["pageoptionsdto.page",{"_index":248,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.take",{"_index":251,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pages",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["paginated",{"_index":366,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":210,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["parameters.dto",{"_index":245,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["parameters.dto.ts",{"_index":946,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["particular",{"_index":894,"title":{},"body":{"license.html":{}}}],["passport",{"_index":442,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["passportmodule",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":440,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["password",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":183,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["performance",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":851,"title":{},"body":{"license.html":{}}}],["permit",{"_index":874,"title":{},"body":{"license.html":{}}}],["person",{"_index":856,"title":{},"body":{"license.html":{}}}],["persons",{"_index":875,"title":{},"body":{"license.html":{}}}],["pipelines",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":834,"title":{},"body":{"index.html":{}}}],["port",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":884,"title":{},"body":{"license.html":{}}}],["powered",{"_index":924,"title":{},"body":{"properties.html":{}}}],["prefix",{"_index":143,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["prerequisites",{"_index":786,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["primarycolumn",{"_index":132,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn(\"bigint",{"_index":138,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn('bigint",{"_index":115,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn",{"_index":414,"title":{},"body":{"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["print",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":167,"title":{},"body":{"controllers/HealthController.html":{},"injectables/RepoService.html":{}}}],["proceed",{"_index":837,"title":{},"body":{"index.html":{}}}],["process",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["process.env.domain",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.supabase_jwt_secret",{"_index":457,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_key",{"_index":454,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_url",{"_index":452,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["production",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":489,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":354,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["proper",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":94,"title":{"properties.html":{}},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":515,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["provided",{"_index":885,"title":{},"body":{"license.html":{}}}],["providers",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{}}}],["public",{"_index":413,"title":{},"body":{"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{}}}],["publish",{"_index":868,"title":{},"body":{"license.html":{}}}],["pull",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":895,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["push",{"_index":545,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pushed_at",{"_index":298,"title":{},"body":{"entities/Repo.html":{}}}],["query",{"_index":357,"title":{},"body":{"controllers/RepoController.html":{}}}],["questions",{"_index":839,"title":{},"body":{"index.html":{}}}],["re",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":171,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{}}}],["received",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["referencedcolumnname",{"_index":125,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["relations",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["relationship",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":534,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remote",{"_index":823,"title":{},"body":{"index.html":{}}}],["remove",{"_index":752,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["repo",{"_index":41,"title":{"entities/Repo.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo.contributions",{"_index":139,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.contributions)@joincolumn({name",{"_index":124,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.controller",{"_index":378,"title":{},"body":{"modules/RepoModule.html":{}}}],["repo.entity",{"_index":360,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouserstars",{"_index":401,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{}}}],["repo.repotouserstars)@joincolumn({name",{"_index":416,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["repo.repotouservotes",{"_index":399,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouservotes)@joincolumn({name",{"_index":426,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["repo.service",{"_index":359,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{}}}],["repo.to.user.stars.entity",{"_index":341,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.votes.entity",{"_index":340,"title":{},"body":{"entities/Repo.html":{}}}],["repo.user",{"_index":475,"title":{},"body":{"entities/User.html":{}}}],["repo/repo.entity",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/User.html":{}}}],["repo/repo.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["repo/repo.to.user.stars.entity",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.votes.entity",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo_id",{"_index":99,"title":{},"body":{"entities/Contribution.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["repocontroller",{"_index":348,"title":{"controllers/RepoController.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"coverage.html":{}}}],["repomodule",{"_index":8,"title":{"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["reporepository",{"_index":387,"title":{},"body":{"injectables/RepoService.html":{}}}],["repos",{"_index":342,"title":{},"body":{"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/User.html":{},"changelog.html":{}}}],["reposervice",{"_index":358,"title":{"injectables/RepoService.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"coverage.html":{},"overview.html":{}}}],["repository",{"_index":385,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["repotouserstars",{"_index":49,"title":{"entities/RepoToUserStars.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstars.repo",{"_index":324,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstars.user",{"_index":477,"title":{},"body":{"entities/User.html":{}}}],["repotouservotes",{"_index":47,"title":{"entities/RepoToUserVotes.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouservotes.repo",{"_index":326,"title":{},"body":{"entities/Repo.html":{}}}],["repotouservotes.user",{"_index":479,"title":{},"body":{"entities/User.html":{}}}],["request",{"_index":462,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"changelog.html":{}}}],["requirements",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"index.html":{},"overview.html":{}}}],["response.decorator",{"_index":367,"title":{},"body":{"controllers/RepoController.html":{}}}],["response.decorator.ts",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["restriction",{"_index":861,"title":{},"body":{"license.html":{}}}],["results",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":173,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":151,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["revert",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":864,"title":{},"body":{"license.html":{}}}],["rogue",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":547,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runner",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["sauced",{"_index":784,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["sauced/api.opensauced.pizza",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["sauced/api.opensauced.pizza#readme",{"_index":935,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza.git",{"_index":939,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza/issues",{"_index":937,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":828,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scoping",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":827,"title":{},"body":{"index.html":{}}}],["select",{"_index":127,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"changelog.html":{}}}],["select(['repo.id",{"_index":395,"title":{},"body":{"injectables/RepoService.html":{}}}],["sell",{"_index":872,"title":{},"body":{"license.html":{}}}],["service",{"_index":147,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["shall",{"_index":881,"title":{},"body":{"license.html":{}}}],["simple",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["simplest",{"_index":818,"title":{},"body":{"index.html":{}}}],["skip",{"_index":261,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["skip(pageoptionsdto.skip",{"_index":404,"title":{},"body":{"injectables/RepoService.html":{}}}],["software",{"_index":789,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"index.html":{}}}],["spec",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["src/.../api",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoint.config.ts",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":783,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.constant.ts",{"_index":780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../page",{"_index":945,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.module.ts",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/supabase.strategy.ts",{"_index":434,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts:11",{"_index":436,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:22",{"_index":439,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/common/constants/order.constant.ts",{"_index":781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/decorators/api",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/page",{"_index":229,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/dtos/page.dto.ts",{"_index":203,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts:11",{"_index":215,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dtos/page.dto.ts:16",{"_index":209,"title":{},"body":{"classes/PageDto.html":{}}}],["src/config/endpoint.config.ts",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contribution/contribution.entity.ts",{"_index":92,"title":{},"body":{"entities/Contribution.html":{},"coverage.html":{}}}],["src/contribution/contribution.entity.ts:15",{"_index":128,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:21",{"_index":114,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:26",{"_index":122,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:32",{"_index":109,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:38",{"_index":129,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:45",{"_index":126,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:9",{"_index":116,"title":{},"body":{"entities/Contribution.html":{}}}],["src/health/health.controller.ts",{"_index":142,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:28",{"_index":150,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:47",{"_index":154,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":199,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":772,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/repo/repo.controller.ts",{"_index":349,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{}}}],["src/repo/repo.controller.ts:18",{"_index":353,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.entity.ts",{"_index":289,"title":{},"body":{"entities/Repo.html":{},"coverage.html":{}}}],["src/repo/repo.entity.ts:104",{"_index":318,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:110",{"_index":321,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:116",{"_index":332,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:123",{"_index":334,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:126",{"_index":306,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:129",{"_index":327,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:132",{"_index":325,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:26",{"_index":313,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:32",{"_index":335,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:38",{"_index":316,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:44",{"_index":328,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:50",{"_index":336,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:56",{"_index":329,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:59",{"_index":315,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:65",{"_index":309,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:71",{"_index":331,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:77",{"_index":323,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:83",{"_index":320,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:89",{"_index":322,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:95",{"_index":312,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:98",{"_index":311,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.module.ts",{"_index":377,"title":{},"body":{"modules/RepoModule.html":{}}}],["src/repo/repo.service.ts",{"_index":382,"title":{},"body":{"injectables/RepoService.html":{},"coverage.html":{}}}],["src/repo/repo.service.ts:11",{"_index":386,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:17",{"_index":389,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.to.user.stars.entity.ts",{"_index":412,"title":{},"body":{"entities/RepoToUserStars.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:13",{"_index":415,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:16",{"_index":421,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:19",{"_index":418,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:26",{"_index":420,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:33",{"_index":417,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.votes.entity.ts",{"_index":424,"title":{},"body":{"entities/RepoToUserVotes.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:13",{"_index":425,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:16",{"_index":431,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:19",{"_index":428,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:26",{"_index":430,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:33",{"_index":427,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/user/user.entity.ts",{"_index":464,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:11",{"_index":471,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:17",{"_index":474,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:20",{"_index":470,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:23",{"_index":473,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:26",{"_index":472,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:32",{"_index":469,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:35",{"_index":476,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:38",{"_index":480,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:41",{"_index":478,"title":{},"body":{"entities/User.html":{}}}],["stable",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["stars",{"_index":299,"title":{},"body":{"entities/Repo.html":{}}}],["starscount",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":803,"title":{},"body":{"index.html":{}}}],["started",{"_index":483,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":799,"title":{},"body":{"index.html":{}}}],["statements",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":101,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":643,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["structured",{"_index":930,"title":{},"body":{"properties.html":{}}}],["studio",{"_index":800,"title":{},"body":{"index.html":{}}}],["styles",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["subdomain",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":877,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":870,"title":{},"body":{"license.html":{}}}],["submission",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["subscribers",{"_index":300,"title":{},"body":{"entities/Repo.html":{}}}],["substantial",{"_index":883,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supabase",{"_index":446,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["supabase.strategy",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{}}}],["supabase/supabase",{"_index":448,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabase>=0.18.0",{"_index":797,"title":{},"body":{"index.html":{}}}],["supabaseauthstrategy",{"_index":444,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasejwtsecret",{"_index":456,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasekey",{"_index":453,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseoptions",{"_index":455,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasestrategy",{"_index":85,"title":{"injectables/SupabaseStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":451,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super",{"_index":450,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.authenticate(req",{"_index":463,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.validate(user",{"_index":460,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["support",{"_index":912,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":913,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":207,"title":{},"body":{"classes/PageDto.html":{}}}],["table",{"_index":777,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":235,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["take(pageoptionsdto.take",{"_index":405,"title":{},"body":{"injectables/RepoService.html":{}}}],["target",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["tech",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["ted",{"_index":941,"title":{},"body":{"properties.html":{}}}],["temporary",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":557,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["thing",{"_index":802,"title":{},"body":{"index.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":182,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":185,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":198,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":190,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":194,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":196,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":192,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":188,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":177,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":179,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.data",{"_index":227,"title":{},"body":{"classes/PageDto.html":{}}}],["this.database.pingcheck(\"db",{"_index":175,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":184,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":180,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hasnextpage",{"_index":257,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":256,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.health.check",{"_index":174,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":197,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":189,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":193,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":195,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":191,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":187,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.itemcount",{"_index":253,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":176,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":178,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.meta",{"_index":228,"title":{},"body":{"classes/PageDto.html":{}}}],["this.page",{"_index":247,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":254,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.reporepository.createquerybuilder(\"repo",{"_index":394,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.reposervice.findall(pageoptionsdto",{"_index":373,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.take",{"_index":250,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["thresholdpercent",{"_index":181,"title":{},"body":{"controllers/HealthController.html":{}}}],["time",{"_index":120,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["timestamp",{"_index":118,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["tld",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["tmodel",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_timestamp(0",{"_index":319,"title":{},"body":{"entities/Repo.html":{}}}],["token",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":906,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":224,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["true",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"classes/PageDto.html":{}}}],["true})@type(undefined",{"_index":214,"title":{},"body":{"classes/PageDto.html":{}}}],["true})@validatenested({each",{"_index":213,"title":{},"body":{"classes/PageDto.html":{}}}],["type",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":943,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{}}}],["typeormhealthindicator",{"_index":157,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{}}}],["typeormmodule.forfeature([repo",{"_index":379,"title":{},"body":{"modules/RepoModule.html":{}}}],["typeormmodule.forrootasync",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["undefined})@isenum(order)@isoptional",{"_index":266,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["unknown",{"_index":152,"title":{},"body":{"controllers/HealthController.html":{},"injectables/SupabaseStrategy.html":{}}}],["up",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["updated_at",{"_index":301,"title":{},"body":{"entities/Repo.html":{}}}],["updatedatecolumn",{"_index":338,"title":{},"body":{"entities/Repo.html":{}}}],["updatedatecolumn({type",{"_index":330,"title":{},"body":{"entities/Repo.html":{}}}],["url",{"_index":100,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["url(`https://${subdomain",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":865,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":43,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["user.repos",{"_index":347,"title":{},"body":{"entities/Repo.html":{}}}],["user.repos)@joincolumn({name",{"_index":333,"title":{},"body":{"entities/Repo.html":{}}}],["user.repotouserstars",{"_index":423,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotouserstars)@joincolumn({name",{"_index":419,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotouservotes",{"_index":433,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user.repotouservotes)@joincolumn({name",{"_index":429,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user/user.entity",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["user_id",{"_index":302,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserVotes.html":{}}}],["username",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":481,"title":{},"body":{"entities/User.html":{}}}],["users_to_repos_stars",{"_index":422,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["users_to_repos_votes",{"_index":432,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["validate",{"_index":435,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validate(user",{"_index":437,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validatenested",{"_index":220,"title":{},"body":{"classes/PageDto.html":{}}}],["validator",{"_index":221,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["value",{"_index":262,"title":{},"body":{"classes/PageOptionsDto.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":516,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":499,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":105,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["verify",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":669,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versiond",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":843,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":847,"title":{},"body":{"index.html":{}}}],["visually",{"_index":808,"title":{},"body":{"index.html":{}}}],["volume",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["volumes",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["vortex",{"_index":942,"title":{},"body":{"properties.html":{}}}],["vortex/api.opensauced.pizza",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["votescount",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":891,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":886,"title":{},"body":{"license.html":{}}}],["watchers",{"_index":303,"title":{},"body":{"entities/Repo.html":{}}}],["way",{"_index":819,"title":{},"body":{"index.html":{}}}],["web",{"_index":148,"title":{},"body":{"controllers/HealthController.html":{}}}],["whether",{"_index":903,"title":{},"body":{"license.html":{}}}],["without",{"_index":119,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{},"license.html":{}}}],["workflow",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":821,"title":{},"body":{"index.html":{}}}],["yaml",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":845,"title":{},"body":{"index.html":{}}}],["zone",{"_index":121,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            RepoModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm/dist/interfaces/typeorm-options.interface\";\nimport { DataSource } from \"typeorm\";\n\nimport { RepoModule } from \"./repo/repo.module\";\nimport apiConfig from \"./config/api.config\";\nimport dbConfig from \"./config/database.config\";\nimport endpointConfig from \"./config/endpoint.config\";\nimport { HealthModule } from \"./health/health.module\";\nimport { Repo } from \"./repo/repo.entity\";\nimport { User } from \"./user/user.entity\";\nimport { Contribution } from \"./contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo/repo.to.user.stars.entity\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        apiConfig,\n        dbConfig,\n        endpointConfig\n      ],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\"db.connection\"),\n        host: configService.get(\"db.host\"),\n        port: configService.get(\"db.port\"),\n        username: configService.get(\"db.username\"),\n        password: configService.get(\"db.password\"),\n        database: configService.get(\"db.database\"),\n        autoLoadEntities: false,\n        entities: [\n          User,\n          Repo,\n          Contribution,\n          RepoToUserVotes,\n          RepoToUserStars,\n        ],\n        synchronize: false,\n      }),\n      inject: [ConfigService],\n    }),\n    TerminusModule,\n    HttpModule,\n    HealthModule,\n    RepoModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  constructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SupabaseStrategy } from \"./supabase.strategy\";\nimport { PassportModule } from \"@nestjs/passport\";\n\n@Module({\n  imports: [PassportModule],\n  providers: [SupabaseStrategy],\n  exports: [SupabaseStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Contribution.html":{"url":"entities/Contribution.html","title":"entity - Contribution","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Contribution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributor\n                            \n                            \n                                count\n                            \n                            \n                                id\n                            \n                            \n                                last_merged_at\n                            \n                            \n                                repo\n                            \n                            \n                                repo_id\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_merged_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.contributions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, BaseEntity, PrimaryColumn, ManyToOne, JoinColumn } from \"typeorm\";\nimport { Repo } from \"../repo/repo.entity\";\n\n@Entity({\n  name: \"contributions\"\n})\nexport class Contribution extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  repo_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  count: number;\n\n  @Column({\n    type: \"timestamp without time zone\"\n  })\n  last_merged_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  contributor: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => Repo, (repo) => repo.contributions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  repo: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiTags } from \"@nestjs/swagger\";\n\n@ApiTags(\"health\")\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @HealthCheck()\n  @ApiOkResponse()\n  async service() {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\"),\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\"),\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @HealthCheck()\n  @ApiOkResponse()\n  async web() {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, ValidateNested } from \"class-validator\";\nimport { PageMetaDto } from \"./page-meta.dto\";\nimport { Type } from \"class-transformer\";\n\nexport class PageDto {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  @ValidateNested({ each: true })\n  @Type(() => Array)\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PageMetaDto })\n  @ValidateNested()\n  @Type(() => PageMetaDto)\n  readonly meta: PageMetaDto;\n\n  constructor(data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { PageMetaParameters } from \"./page-meta-parameters.dto\";\n\nexport class PageMetaDto {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: PageMetaParameters) {\n    this.page = pageOptionsDto.page || 1;\n    this.take = pageOptionsDto.take || 10;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Order, enumName: 'Order', default: undefined})@IsEnum(Order)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dtos/page-options.dto.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEnum, IsInt, IsOptional, Max, Min } from \"class-validator\";\nimport { Order } from \"../constants/order.constant\";\n\nexport class PageOptionsDto {\n  @ApiPropertyOptional({ enum: Order, enumName: \"Order\", default: Order.ASC })\n  @IsEnum(Order)\n  @IsOptional()\n  readonly order?: Order = Order.ASC;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 50,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(50)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return ((this.page || 1) - 1) * (this.take || 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Repo.html":{"url":"entities/Repo.html","title":"entity - Repo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Repo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributions\n                            \n                            \n                                created_at\n                            \n                            \n                                description\n                            \n                            \n                                full_name\n                            \n                            \n                                id\n                            \n                            \n                                is_fork\n                            \n                            \n                                issues\n                            \n                            \n                                language\n                            \n                            \n                                last_fetched_contributors_at\n                            \n                            \n                                license\n                            \n                            \n                                name\n                            \n                            \n                                pushed_at\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                stars\n                            \n                            \n                                subscribers\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                            \n                                user_id\n                            \n                            \n                                watchers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contribution[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, contribution => contribution.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_fork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_fetched_contributors_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => to_timestamp(0)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        license\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repos)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  JoinColumn,\n  ManyToOne,\n  CreateDateColumn,\n  UpdateDateColumn, OneToMany\n} from \"typeorm\";\n\nimport { User } from \"../user/user.entity\";\nimport { Contribution } from \"../contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo.to.user.stars.entity\";\n\n@Entity({\n  name: \"repos\",\n  orderBy: {\n    stars: \"DESC\",\n    name: \"ASC\"\n  }\n})\nexport class Repo extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  user_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  issues: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  stars: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  watchers: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  subscribers: number;\n\n  @Column({ default: false })\n  is_fork: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  pushed_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"to_timestamp(0)\",\n  })\n  last_fetched_contributors_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  name: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  full_name: string;\n\n  @Column(\"text\")\n  description: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  language: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  license: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => User, user => user.repos)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  user: User;\n\n  @OneToMany(() => Contribution, contribution => contribution.repo)\n  contributions: Contribution[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.repo)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.repo)\n  repoToUserStars: RepoToUserStars[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoController.html":{"url":"controllers/RepoController.html","title":"controller - RepoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserList\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserList(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@HttpCode(HttpStatus.OK)@ApiPaginatedResponse(Repo)@ApiOkResponse({type: Repo})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, Query } from \"@nestjs/common\";\nimport { RepoService } from \"./repo.service\";\nimport { Repo } from \"./repo.entity\";\nimport { ApiOkResponse, ApiTags } from \"@nestjs/swagger\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repositories\")\nexport class RepoController {\n  constructor(private readonly repoService: RepoService) {}\n\n  @Get(\"/list\")\n  @HttpCode(HttpStatus.OK)\n  @ApiPaginatedResponse(Repo)\n  @ApiOkResponse({ type: Repo })\n  async findUserList(\n    @Query() pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepoModule.html":{"url":"modules/RepoModule.html","title":"module - RepoModule","body":"\n                   \n\n\n\n\n    Modules\n    RepoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_providers\n\n\n\ncluster_RepoModule_exports\n\n\n\n\nRepoService \n\nRepoService \n\n\n\nRepoModule\n\nRepoModule\n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/repo/repo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepoService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { RepoService } from \"./repo.service\";\nimport { RepoController } from \"./repo.controller\";\nimport { Repo } from \"./repo.entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Repo])],\n  controllers: [RepoController],\n  providers: [RepoService],\n  exports: [RepoService],\n})\nexport class RepoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepoService.html":{"url":"injectables/RepoService.html","title":"injectable - RepoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/repo/repo.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { Repo } from \"./repo.entity\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Injectable()\nexport class RepoService {\n  constructor(\n    @InjectRepository(Repo)\n    private repoRepository: Repository,\n  ) {}\n\n  async findAll(\n    pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    const builder = this.repoRepository.createQueryBuilder(\"repo\")\n      // .select(['repo.id'])\n      .leftJoinAndSelect(\"repo.user\", \"user\")\n      .leftJoinAndSelect(\"repo.contributions\", \"contributions\")\n      .loadRelationCountAndMap(\"repo.votesCount\", \"repo.repoToUserVotes\")\n      .loadRelationCountAndMap(\"repo.starsCount\", \"repo.repoToUserStars\")\n      .orderBy(\"repo.pushed_at\", pageOptionsDto.order)\n      .skip(pageOptionsDto.skip)\n      .take(pageOptionsDto.take);\n\n    // console.log(builder.getSql());\n\n    const itemCount = await builder.getCount();\n    const entities = await builder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStars.html":{"url":"entities/RepoToUserStars.html","title":"entity - RepoToUserStars","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStars\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.stars.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStars)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStars)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stars\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserStars {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStars)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStars)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserVotes.html":{"url":"entities/RepoToUserVotes.html","title":"entity - RepoToUserVotes","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserVotes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.votes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserVotes)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserVotes)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_votes\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserVotes {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @ManyToOne(() => User, (user) => user.repoToUserVotes)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserVotes)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseStrategy.html":{"url":"injectables/SupabaseStrategy.html","title":"injectable - SupabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/supabase.strategy.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(user: AuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { SupabaseAuthStrategy } from \"nestjs-supabase-auth\";\nimport { AuthUser } from \"@supabase/supabase-js\";\n\n@Injectable()\nexport class SupabaseStrategy extends PassportStrategy(\n  SupabaseAuthStrategy,\n  \"supabase\",\n) {\n  public constructor() {\n    super({\n      supabaseUrl: process.env.SUPABASE_URL,\n      supabaseKey: process.env.SUPABASE_KEY,\n      supabaseOptions: {},\n      supabaseJwtSecret: process.env.SUPABASE_JWT_SECRET,\n      extractor: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate(user: AuthUser) {\n    return super.validate(user);\n  }\n\n  // authenticate(req: Request) {\n  //   super.authenticate(req);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                has_stars_data\n                            \n                            \n                                id\n                            \n                            \n                                is_open_sauced_member\n                            \n                            \n                                is_private\n                            \n                            \n                                open_issues\n                            \n                            \n                                repos\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserVotes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has_stars_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_open_sauced_member\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open_issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repo => repo.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, BaseEntity, PrimaryColumn, OneToMany, CreateDateColumn } from \"typeorm\";\nimport { Repo } from \"../repo/repo.entity\";\nimport { RepoToUserVotes } from \"../repo/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"../repo/repo.to.user.stars.entity\";\n\n@Entity({\n  name: \"users\"\n})\nexport class User extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  open_issues: number;\n\n  @Column({ default: false })\n  has_stars_data: boolean;\n\n  @Column({ default: false })\n  is_private: boolean;\n\n  @Column({ default: false })\n  is_open_sauced_member: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @OneToMany(() => Repo, repo => repo.user)\n  repos: Repo[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.user)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.user)\n  repoToUserStars: RepoToUserVotes[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.7.8 (2022-07-29)\n🔁 Continuous Integration\n\ncorrect environment variables (6d23c24)\n\n1.7.7 (2022-07-29)\n✅ Tests\n\nprint out proper pull request target env variables (20880c7)\n\n1.7.6 (2022-07-29)\n🔁 Continuous Integration\n\necho github context (7adfb6b)\n\n1.7.5 (2022-07-29)\n🔁 Continuous Integration\n\nprovide variable as ENV (b57f47b)\n\n1.7.4 (2022-07-29)\n🔁 Continuous Integration\n\nchange pull request event target (20bc1e7)\n\n1.7.3 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect digital ocean docker tag based on target (b1a67da)\n\n1.7.2 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect static domain and release clean up workflow (a229a3b)\nupdate dependencies and list docr tags (79bf61d)\n\n🔁 Continuous Integration\n\nadd docr push dry run (5eddeb1)\nadd release workflow concurrency for demo purposes (63d6a92)\nextend digital ocean temporary token (d0d5ca5)\ntest bash variable environment (e1fe498)\n\n1.7.1 (2022-07-27)\n🔁 Continuous Integration\n\ndeploy developer mkdocs to github pages test (8837b2a)\n\n1.7.0 (2022-07-27)\n📝 Documentation\n\nchange github pages deploy to take tech mkdocs instead of api (bc3a37d)\n\n1.6.17 (2022-07-24)\n🔁 Continuous Integration\n\nadd temporary debug logging (ba8dfbb)\n\n1.6.16 (2022-07-23)\n🔁 Continuous Integration\n\nproperly copy contents from mounted container volume (c013b70)\n\n1.6.15 (2022-07-23)\n🔁 Continuous Integration\n\ncreate new container from release (b1eda28)\n\n1.6.14 (2022-07-23)\n🔁 Continuous Integration\n\ntest file is generated properly (c127cea)\n\n🤖 Build System\n\nattempt docker inspection again (2c0b3d1)\n\n1.6.13 (2022-07-23)\n🔁 Continuous Integration\n\ntest proper container name exposing (cc46460)\n\n1.6.12 (2022-07-23)\n🔁 Continuous Integration\n\ntest local swagger spec (7e9b8a4)\n\n1.6.11 (2022-07-21)\n🔁 Continuous Integration\n\ntest getting docker process list output (f5385b3)\n\n1.6.10 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to get value from running container (911df68)\ntest accessing running container by re-creating (77c734c)\n\n1.6.9 (2022-07-21)\n🔁 Continuous Integration\n\nget container name from runner context (94ba4e1)\n\n1.6.8 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to assign docker service name to running container (fe4b9e9)\n\n1.6.7 (2022-07-21)\n✅ Tests\n\nmount docker service and volumes (0848443)\n\n1.6.6 (2022-07-21)\n✅ Tests\n\nload docker container from artifact (b7c3395)\n\n1.6.5 (2022-07-21)\n🐛 Bug Fixes\n\ncorrect docker local creation (cd306f8)\n\n1.6.4 (2022-07-21)\n✅ Tests\n\nload docker container in flight environment (e145e2d)\n\n1.6.3 (2022-07-20)\n🤖 Build System\n\nupdate deployment and add simple repo submission structure (33fea7e)\n\n1.6.2 (2022-07-19)\n🤖 Build System\n\nrevert to production release container (8aee8e5)\n\n1.6.1 (2022-07-19)\n🤖 Build System\n\nimprove swagger generation (22d3cc1)\n\n🐛 Bug Fixes\n\ncorrect workflow yaml comments (7fe63aa)\n\n1.6.0 (2022-07-19)\n🎨 Styles\n\nimplement correct eslint rules for immediate scoping (bd6d621), closes #1\n\n🍕 Features\n\nupdate dependencies and nest to stable new version (c24937f)\n\n🔁 Continuous Integration\n\nadd docker build and static swagger docs jobs (81e8bbc)\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n🤖 Build System\n\nadd better eslint baseline configuration (3918a78)\nadd minimal eslint configuration (a0db0aa)\nadd minor deployment improvements and github pages adjustments (cb83f9d)\nimplement prettier rules in typescript eslint (166050d)\n\n🐛 Bug Fixes\n\ncorrect release workflow artifact strategy (b5b6ac5)\ncorrect rogue workflow artifact (61b67d5)\n\n1.5.1 (2022-07-13)\n🔁 Continuous Integration\n\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n📦 0-vortex/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.5.0 (2022-06-21)\n🍕 Features\n\nimplement proper starsCount (fdc11ea)\nimplement proper votesCount (607cf5d)\n\n1.4.0 (2022-06-17)\n🍕 Features\n\nadd minimal pagination decorator (ac31556)\n\n1.3.0 (2022-06-10)\n🍕 Features\n\nadd abstract pagination component (630f3b5)\nadd repository relations and limit select (b4d3785)\n\n1.2.0 (2022-06-09)\n🍕 Features\n\nattach user relationship to get repos (e663170)\n\n1.1.0 (2022-06-07)\n🍕 Features\n\nadd basic tld entities (273f337)\n\n1.0.2 (2022-06-05)\n🤖 Build System\n\nadd supabase migration system (34d521d)\n\n1.0.1 (2022-06-05)\n✅ Tests\n\nverify database diagrams generation (73d1c74)\n\n1.0.0 (2022-06-05)\n🍕 Features\n\nadjust health checks endpoints (cb9206d)\ninitial commit (5e7c6c7)\n\n🐛 Bug Fixes\n\ncorrect npm scripts, workflow node versiond and update deps (2c0b15f)\nupdate nest typeorm integration and correct db status (58bf922)\n\n🔥 Performance Improvements\n\nremove minor version engines requirements (7db9008)\n\n✅ Tests\n\nexplain current test configuration and unblock pipelines (272c09a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/supabase.strategy.ts\n            \n            injectable\n            SupabaseStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/dtos/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/endpoint.config.ts\n            \n            variable\n            getDomain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.entity.ts\n            \n            entity\n            Contribution\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.controller.ts\n            \n            controller\n            RepoController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/repo/repo.entity.ts\n            \n            entity\n            Repo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.service.ts\n            \n            injectable\n            RepoService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.stars.entity.ts\n            \n            entity\n            RepoToUserStars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.votes.entity.ts\n            \n            entity\n            RepoToUserVotes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../order.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/order.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        Order\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n  🍕 Open Sauced Nest Supabase API🍕\n  The path to your next Open Source contribution\n\n\n\n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=16.7.0\nnpm>=8.0.0\ndocker>=20.10.12\nsupabase>=0.18.0\n\n🔑 Database commands\nStarting the Supabase Studio\nFirst thing we have to do for local development is start the studio locally at localhost:54321:\nnpm run db:startMake changes\nIf we are adding a new table structure, first do it visually in the Supabase Studio and test locally.\nCheck the migration difference with the following command:\nnpm run db:changesIf everything is fine we can run the following command to apply the changes to the database:\nnpm run db:commit add_table_nameTest changes\nSimplest way to test the migrations are working is to reset the local database:\nnpm run db:resetPush changes\nIf everything is fine we can push the changes to the remote database:\nnpm run db:push🔑 Supabase structure\nClick the image to see the schema diagram full documentation.\n\n🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.7.8\n        \n            Description : API dot Open Sauced is NestJS and SupaBase powered OAS3 backend designed to remove client complexity and provide a structured graph of all @open-sauced integrations\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/api.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/api.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/api.opensauced.pizza.git\n        \n            Author : TED Vortex \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageMetaParameters   (src/.../page-meta-parameters.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/dtos/page-meta-parameters.dto.ts\n    \n    \n        \n            \n                \n                    \n                    PageMetaParameters\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            getDomain   (src/.../endpoint.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  model: TModel,\n) => {\n  return applyDecorators(\n    ApiExtraModels(PageDto, Repo),\n    ApiOkResponse({\n      description: \"Successfully received model list\",\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PageDto) },\n          {\n            properties: {\n              data: {\n                type: \"array\",\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/config/endpoint.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (subdomain?: string) =>\n  new URL(`https://${subdomain ? `${subdomain}.` : \"\" }${process.env.DOMAIN || \"opensauced.pizza\"}`).toString()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
