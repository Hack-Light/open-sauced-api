var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.127,1,2.34]],["body/modules/AppModule.html",[0,1.441,1,4.588,2,1.338,3,2.15,4,2.7,5,2.7,6,3.709,7,0.025,8,3.709,9,3.709,10,3.709,11,3.709,12,3.709,13,2.315,14,1.538,15,1.338,16,0.295,17,0.266,18,0.237,19,3.184,20,2.669,21,0.715,22,0.75,23,1.951,24,1.433,25,4.449,26,4.707,27,2.7,28,4.449,29,3.184,30,3.772,31,2.38,32,3.184,33,3.184,34,3.184,35,5.129,36,1.099,37,3.184,38,4.449,39,3.184,40,4.449,41,3.184,42,4.449,43,3.184,44,3.184,45,1.049,46,1.433,47,2.002,48,1.793,49,2.505,50,2.7,51,2.002,52,1.951,53,2.002,54,1.951,55,2.505,56,2.7,57,2.002,58,1.951,59,3.184,60,3.184,61,3.184,62,3.184,63,3.184,64,2.7,65,3.184,66,2.7,67,3.184,68,3.184,69,0.459,70,3.184,71,3.184,72,3.184,73,3.184,74,3.184,75,3.184,76,3.184,77,3.184,78,3.184,79,2.142,80,3.184,81,3.184,82,2.993,83,1.251,84,3.184,85,3.184,86,1.032,87,1.793,88,0.295,89,0.13,90,2.7,91,0.016,92,0.016]],["title/controllers/AuthController.html",[93,1.127,94,2.34]],["body/controllers/AuthController.html",[7,0.025,16,0.366,17,0.329,18,0.294,21,0.66,22,0.93,69,0.742,86,1.279,88,0.366,89,0.161,91,0.018,92,0.018,93,1.279,94,3.46,95,3.346,96,2.222,97,3.507,98,0.484,99,2.022,100,5.722,101,3.947,102,5.14,103,1.057,104,3.947,105,5.144,106,2.896,107,5.144,108,4.361,109,3.947,110,3.947,111,0.711,112,3.947,113,1.453,114,0.762,115,0.762,116,2.471,117,1.551,118,4.078,119,3.346,120,3.346,121,2.655,122,3.46,123,2.677,124,2.896,125,2.222,126,1.057,127,1.776,128,3.346,129,2.951,130,2.419,131,3.947,132,3.947,133,3.947,134,3.947,135,3.947,136,2.054,137,3.947,138,2.655,139,2.222,140,3.947,141,3.346,142,1.776,143,4.361,144,4.361,145,4.361,146,4.361,147,2.022,148,2.022,149,3.947,150,3.947,151,1.363,152,1.2,153,3.947]],["title/modules/AuthModule.html",[0,1.127,6,2.132]],["body/modules/AuthModule.html",[0,1.777,2,1.834,3,2.651,6,4.232,7,0.025,13,2.855,14,2.109,15,1.834,16,0.405,17,0.364,18,0.325,20,2.272,21,0.664,22,1.029,86,1.777,87,3.089,88,0.405,89,0.178,91,0.019,92,0.019,94,4.036,127,3.141,128,3.701,154,3.701,155,3.701,156,3.701,157,4.278,158,4.366,159,3.362,160,5.487,161,3.263,162,4.366,163,4.366]],["title/entities/DbContribution.html",[49,1.959,164,0.993]],["body/entities/DbContribution.html",[7,0.025,16,0.274,17,0.246,18,0.22,21,0.504,36,1.019,45,1.265,46,1.328,49,2.374,69,0.983,82,2.836,83,1.16,88,0.274,89,0.12,91,0.015,92,0.015,98,0.362,103,1.72,111,1.156,114,0.814,115,1.14,126,0.791,147,1.934,148,1.934,152,1.726,164,1.204,165,2.502,166,1.282,167,4.92,168,4.171,169,2.56,170,4.92,171,1.427,172,2.743,173,3.678,174,2.415,175,4.244,176,4.55,177,4.55,178,4.55,179,4.55,180,2.951,181,1.484,182,4.012,183,2.321,184,2.584,185,2.951,186,3.235,187,1.536,188,3.235,189,3.003,190,3.235,191,3.235,192,2.793,193,2.951,194,1.536,195,2.951,196,2.206,197,2.951,198,2.951,199,1.662,200,2.951,201,2.374,202,2.951,203,3.152,204,2.951,205,1.536,206,2.951,207,2.951,208,3.073,209,3.152,210,2.206,211,2.374,212,2.374,213,2.194,214,2.194,215,2.194,216,2.194,217,1.985,218,1.662,219,2.206,220,2.502]],["title/entities/DbRepo.html",[45,0.82,164,0.993]],["body/entities/DbRepo.html",[7,0.025,16,0.175,17,0.157,18,0.14,21,0.554,36,0.65,45,0.707,47,1.92,48,1.061,49,2.403,50,1.597,51,1.92,53,1.92,55,2.403,57,1.92,69,0.991,82,2.871,83,0.74,88,0.175,89,0.077,91,0.01,92,0.01,98,0.231,103,1.763,111,1.185,114,0.959,115,1.103,116,1.832,126,0.505,147,1.47,148,1.47,152,1.417,164,0.857,166,0.913,169,1.947,173,2.797,174,2.672,175,4.439,176,4.844,177,4.844,178,4.844,179,4.21,181,1.492,182,4.272,183,2.476,184,3.315,186,2.974,187,0.98,188,2.974,189,2.761,190,2.974,191,2.974,192,2.584,194,0.98,196,1.408,199,1.061,201,1.69,203,2.244,205,0.98,208,3.179,209,2.244,210,1.408,211,1.69,212,1.69,213,1.562,214,1.562,215,1.562,216,2.711,217,2.517,218,1.061,219,1.408,221,1.597,222,1.947,223,3.742,224,3.172,225,2.797,226,3.742,227,3.742,228,2.293,229,3.742,230,3.484,231,3.484,232,3.484,233,3.484,234,2.871,235,2.797,236,2.252,237,2.797,238,3.952,239,2.244,240,3.001,241,1.884,242,1.884,243,1.884,244,1.884,245,1.884,246,1.884,247,1.884,248,2.244,249,1.597,250,1.884,251,1.884,252,4.268,253,1.884,254,3.001,255,1.884,256,1.884,257,1.884,258,1.884,259,3.001,260,1.884,261,3.001,262,1.884,263,3.001,264,1.884,265,3.001,266,1.884,267,1.884,268,1.884,269,1.884,270,1.884,271,1.884,272,1.884,273,1.884,274,1.884,275,4.21,276,1.884,277,1.884,278,1.884,279,1.884,280,0.98,281,1.597,282,1.597,283,1.597,284,1.884,285,1.884]],["title/entities/DbRepoToUserStargazers.html",[57,1.566,164,0.993]],["body/entities/DbRepoToUserStargazers.html",[7,0.025,16,0.291,17,0.262,18,0.234,21,0.565,36,1.084,45,1.3,47,2.483,48,1.768,57,1.983,69,0.948,83,1.234,88,0.291,89,0.128,91,0.015,92,0.015,98,0.385,103,1.692,111,1.137,114,0.982,115,1.163,116,2.284,126,0.841,147,2.001,148,2.001,152,1.882,164,1.258,166,1.34,169,2.649,171,1.461,172,2.808,181,1.515,183,2.169,186,3.136,187,1.634,188,3.136,189,2.911,190,3.136,191,3.136,192,2.872,194,1.634,199,2.481,201,3.107,205,1.634,208,3.025,211,2.866,212,2.866,213,2.293,214,2.293,215,2.293,216,2.649,236,2.808,286,2.662,287,4.15,288,3.14,289,3.14,290,3.424,291,3.14,292,3.14,293,3.14,294,3.14,295,3.14,296,3.14,297,3.14,298,3.14,299,2.112,300,3.14,301,3.14,302,2.662]],["title/entities/DbRepoToUserStars.html",[53,1.566,164,0.993]],["body/entities/DbRepoToUserStars.html",[7,0.025,16,0.291,17,0.262,18,0.234,21,0.565,36,1.084,45,1.3,47,2.483,48,1.768,53,1.983,69,0.948,83,1.234,88,0.291,89,0.128,91,0.015,92,0.015,98,0.385,103,1.692,111,1.137,114,0.982,115,1.163,116,2.284,126,0.841,147,2.001,148,2.001,152,1.882,164,1.258,166,1.34,169,2.649,171,1.461,172,2.808,181,1.515,183,2.169,186,3.136,187,1.634,188,3.136,189,2.911,190,3.136,191,3.136,192,2.872,194,1.634,199,2.481,201,3.107,205,1.634,208,3.025,211,2.866,212,2.866,213,2.293,214,2.293,215,2.293,216,2.649,236,2.808,287,4.15,290,3.424,299,2.112,303,2.662,304,3.14,305,3.14,306,3.14,307,3.14,308,3.14,309,3.14,310,3.14,311,3.14,312,3.14,313,3.14,314,3.14,315,3.14,316,2.662]],["title/entities/DbRepoToUserSubmissions.html",[55,1.959,164,0.993]],["body/entities/DbRepoToUserSubmissions.html",[7,0.025,16,0.291,17,0.262,18,0.234,21,0.565,36,1.084,45,1.3,47,2.483,48,1.768,55,2.481,69,0.948,83,1.234,88,0.291,89,0.128,91,0.015,92,0.015,98,0.385,103,1.692,111,1.137,114,0.982,115,1.163,116,2.284,126,0.841,147,2.001,148,2.001,152,1.882,164,1.258,166,1.34,169,2.649,171,1.461,172,2.808,181,1.515,183,2.169,186,3.136,187,1.634,188,3.136,189,2.911,190,3.136,191,3.136,192,2.872,194,1.634,199,2.481,201,3.107,205,1.634,208,3.025,211,2.866,212,2.866,213,2.293,214,2.293,215,2.293,216,2.649,236,2.808,287,4.15,290,3.424,299,2.112,317,2.662,318,3.14,319,3.14,320,3.14,321,3.14,322,3.14,323,3.14,324,3.14,325,3.14,326,3.14,327,3.14,328,3.14,329,3.14,330,2.662]],["title/entities/DbRepoToUserVotes.html",[51,1.566,164,0.993]],["body/entities/DbRepoToUserVotes.html",[7,0.025,16,0.291,17,0.262,18,0.234,21,0.565,36,1.084,45,1.3,47,2.483,48,1.768,51,1.983,69,0.948,83,1.234,88,0.291,89,0.128,91,0.015,92,0.015,98,0.385,103,1.692,111,1.137,114,0.982,115,1.163,116,2.284,126,0.841,147,2.001,148,2.001,152,1.882,164,1.258,166,1.34,169,2.649,171,1.461,172,2.808,181,1.515,183,2.169,186,3.136,187,1.634,188,3.136,189,2.911,190,3.136,191,3.136,192,2.872,194,1.634,199,2.481,201,3.107,205,1.634,208,3.025,211,2.866,212,2.866,213,2.293,214,2.293,215,2.293,216,2.649,236,2.808,287,4.15,290,3.424,299,2.112,331,2.662,332,3.14,333,3.14,334,3.14,335,3.14,336,3.14,337,3.14,338,3.14,339,3.14,340,3.14,341,3.14,342,3.14,343,3.14,344,2.662]],["title/entities/DbUser.html",[47,1.566,164,0.993]],["body/entities/DbUser.html",[7,0.025,16,0.25,17,0.225,18,0.2,21,0.605,36,0.929,45,1.212,46,1.211,47,1.775,51,2.314,52,1.65,53,2.314,54,1.65,55,2.896,56,2.282,57,2.314,58,1.65,69,0.966,82,3.848,83,1.058,88,0.25,89,0.11,91,0.014,92,0.014,98,0.33,103,1.744,111,1.172,114,0.52,115,1.104,126,0.721,147,1.836,148,1.836,152,1.42,164,1.126,166,1.2,169,2.43,171,0.992,175,2.013,181,1.293,182,2.949,183,2.431,184,2.418,186,2.977,187,1.401,188,2.977,189,2.764,190,2.977,191,2.977,192,2.676,194,1.401,196,2.013,205,1.401,208,2.849,209,2.949,210,2.013,213,2.053,214,2.053,215,2.053,216,2.977,218,1.516,219,2.013,230,4.093,231,4.093,232,4.093,233,4.093,238,4.642,248,4.277,249,3.96,275,4.85,280,2.43,345,2.282,346,4.67,347,4.67,348,4.67,349,4.67,350,2.692,351,2.692,352,2.692,353,2.692,354,2.692,355,2.692,356,2.692,357,3.946,358,2.692,359,3.946,360,2.692,361,3.946,362,2.692,363,3.946,364,2.692,365,3.946,366,2.692,367,2.692,368,2.692]],["title/controllers/HealthController.html",[93,1.127,369,2.34]],["body/controllers/HealthController.html",[7,0.025,16,0.31,17,0.279,18,0.249,21,0.58,22,0.788,26,4.462,27,2.834,31,2.499,79,2.248,86,1.083,88,0.31,89,0.136,91,0.016,92,0.016,93,1.083,96,1.882,98,0.41,99,1.809,103,1.233,106,3.192,111,0.829,117,1.809,123,2.739,124,2.963,125,1.882,126,0.896,136,3.276,139,2.591,151,1.589,369,3.095,370,2.834,371,5.21,372,2.896,373,6.145,374,3.343,375,4.602,376,4.444,377,3.475,378,3.814,379,4.602,380,3.343,381,3.44,382,3.343,383,4.602,384,3.343,385,4.602,386,4.602,387,4.602,388,5.263,389,4.602,390,4.602,391,3.343,392,3.343,393,1.314,394,2.969,395,3.343,396,3.343,397,3.343,398,1.404,399,3.343,400,3.901,401,4.602,402,3.343,403,3.343,404,3.343,405,3.343,406,3.343,407,3.343,408,4.602,409,3.343,410,3.901,411,3.343,412,3.343,413,3.343,414,3.343,415,3.343,416,3.343,417,3.343,418,3.343,419,3.343,420,3.343,421,3.343,422,3.343,423,3.343,424,3.343,425,3.343]],["title/modules/HealthModule.html",[0,1.127,8,2.132]],["body/modules/HealthModule.html",[0,1.945,2,2.126,7,0.025,8,3.68,16,0.469,17,0.422,18,0.376,20,2.633,21,0.655,22,1.193,30,5.091,31,3.783,86,1.945,88,0.469,89,0.206,91,0.021,92,0.021,369,4.307,426,5.06,427,5.06]],["title/classes/PageDto.html",[89,0.142,428,2.132]],["body/classes/PageDto.html",[7,0.025,16,0.375,17,0.337,18,0.301,21,0.626,66,4.43,69,0.953,88,0.375,89,0.236,91,0.018,92,0.018,98,0.496,103,1.4,111,1.042,113,1.489,114,0.781,115,0.781,126,1.083,166,1.589,393,1.589,398,2.726,428,3.202,429,2.277,430,3.429,431,5.372,432,4.936,433,5.226,434,5.372,435,4.101,436,5.226,437,4.044,438,4.044,439,4.044,440,4.044,441,4.044,442,4.044,443,4.908,444,5.79,445,5.79,446,3.023,447,1.954,448,3.429,449,3.429,450,4.044,451,3.429,452,4.044,453,4.044]],["title/classes/PageMetaDto.html",[89,0.142,435,2.132]],["body/classes/PageMetaDto.html",[7,0.025,16,0.338,17,0.304,18,0.271,21,0.5,69,0.929,88,0.338,89,0.149,91,0.017,92,0.017,98,0.447,103,1.689,111,1.159,113,1.342,114,0.704,115,0.704,126,0.977,166,1.484,181,1.645,248,4.393,393,1.918,398,2.934,429,2.053,432,2.725,435,2.991,443,5.801,447,2.839,454,4.402,455,3.091,456,5.502,457,5.502,458,5.194,459,3.701,460,5.502,461,3.646,462,4.982,463,4.881,464,3.646,465,3.646,466,3.646,467,3.646,468,3.646,469,3.646,470,1.897,471,4.665,472,3.646,473,3.283,474,4.138,475,3.646,476,2.452,477,3.646,478,3.646,479,3.646,480,3.646,481,3.646]],["title/classes/PageOptionsDto.html",[89,0.142,470,1.811]],["body/classes/PageOptionsDto.html",[7,0.025,16,0.329,17,0.296,18,0.264,21,0.595,69,0.903,88,0.329,89,0.221,91,0.017,92,0.017,98,0.435,103,1.455,111,1.047,115,1.208,126,0.952,151,1.226,166,1.459,181,1.608,183,2.591,398,2.77,429,2,446,2.656,447,2.624,449,3.012,454,4.085,459,3.653,470,2.496,471,3.012,473,4.434,474,3.012,476,3.911,482,2.39,483,4.604,484,4.797,485,5.431,486,3.058,487,4.067,488,4.067,489,4.067,490,3.012,491,3.553,492,4.303,493,4.06,494,3.012,495,4.067,496,3.012,497,3.553,498,3.012,499,3.553,500,3.553,501,3.553,502,4.93,503,3.012,504,5.431,505,4.93,506,3.553,507,3.553,508,3.553,509,3.012,510,4.797,511,4.797,512,3.553,513,3.012,514,3.553]],["title/controllers/RepoController.html",[93,1.127,515,2.34]],["body/controllers/RepoController.html",[7,0.025,16,0.291,17,0.262,18,0.234,21,0.633,22,0.74,45,1.37,69,0.869,86,1.017,88,0.291,89,0.128,90,2.662,91,0.015,92,0.015,93,1.017,96,1.768,98,0.385,99,1.732,103,1.364,106,3.393,111,0.917,113,1.874,114,0.982,115,0.982,117,2.001,119,2.662,120,2.662,123,2.872,124,3.107,125,1.768,126,0.841,136,1.634,139,2.866,141,4.315,151,1.757,152,1.548,171,1.613,174,2.711,181,1.279,222,2.293,280,2.649,372,2.697,398,1.319,428,1.924,447,1.517,470,2.293,515,2.964,516,2.662,517,4.927,518,4.927,519,5.09,520,2.662,521,3.14,522,4.053,523,3.14,524,2.964,525,2.666,526,3.712,527,3.14,528,2.911,529,2.662,530,3.14,531,3.382,532,3.14,533,3.14,534,3.14,535,3.382,536,3.14,537,3.735,538,4.406,539,3.14,540,3.14,541,2.112,542,4.406,543,1.874,544,2.662,545,2.347,546,3.424,547,2.662,548,2.347,549,3.14,550,2.347,551,3.14,552,2.662,553,2.347,554,2.112,555,2.112,556,3.14,557,2.112,558,2.112,559,3.14,560,2.112,561,2.112,562,2.112,563,3.14,564,3.14,565,3.14]],["title/modules/RepoModule.html",[0,1.127,9,2.132]],["body/modules/RepoModule.html",[0,1.821,2,1.908,3,2.716,7,0.025,9,4.153,13,2.926,14,2.194,15,1.908,16,0.421,17,0.379,18,0.338,20,2.363,21,0.672,22,1.07,23,2.783,24,2.043,45,1.07,86,1.821,87,3.166,88,0.421,89,0.185,91,0.02,92,0.02,159,3.446,515,4.109,543,2.583,544,3.849,545,3.394,566,3.849,567,3.849,568,3.849,569,4.541,570,4.541,571,4.541]],["title/classes/RepoPageOptionsDto.html",[89,0.142,535,2.132]],["body/classes/RepoPageOptionsDto.html",[7,0.025,16,0.325,17,0.292,18,0.261,21,0.552,69,0.834,88,0.441,89,0.194,91,0.017,92,0.017,98,0.43,103,1.549,111,1.041,114,0.917,115,1.252,126,0.939,147,1.868,148,1.868,166,1.445,181,1.195,183,2.584,218,2.676,225,3.553,234,3.197,235,3.553,237,3.553,281,4.572,398,2.762,429,1.973,446,2.62,447,2.794,459,3.197,470,3.244,473,3.628,476,2.357,482,2.357,483,4.029,486,3.256,487,4.029,488,2.971,489,2.971,490,2.971,492,3.628,493,2.62,494,4.029,495,4.572,496,2.971,498,2.971,502,4.029,503,2.971,505,4.029,513,4.029,535,2.913,553,2.62,572,3.553,573,5.404,574,5.393,575,3.505,576,3.505,577,5.393,578,3.505,579,3.505,580,3.505,581,2.971,582,3.553,583,3.197,584,3.553,585,3.553,586,3.197,587,3.505]],["title/injectables/RepoService.html",[543,1.281,588,1.201]],["body/injectables/RepoService.html",[7,0.025,16,0.235,17,0.212,18,0.189,21,0.61,22,0.598,24,1.142,36,0.876,45,0.598,49,1.429,69,0.808,83,0.997,88,0.235,89,0.103,91,0.013,92,0.013,98,0.311,99,1.484,111,1.008,113,2.062,114,1.12,115,1.031,116,0.997,117,2.1,142,2.866,151,1.844,152,1.52,164,1.288,171,1.343,174,2.923,181,1.134,183,0.997,217,2.541,220,2.151,224,2.151,230,1.897,231,1.897,232,1.897,233,1.897,234,2.541,239,1.897,302,2.151,316,2.151,330,2.151,344,2.151,372,2.559,393,1.484,394,1.226,428,1.555,434,2.151,435,3.063,447,1.226,448,2.151,458,3.202,470,2.348,486,1.429,492,1.707,493,2.823,509,2.151,517,3.202,518,3.202,520,3.202,525,2.414,528,2.706,529,3.202,531,1.555,535,3.063,537,3.825,543,1.391,545,1.897,547,2.151,552,2.151,553,1.897,581,2.151,582,1.897,583,1.707,584,1.897,585,1.897,586,1.707,588,1.304,589,1.321,590,2.151,591,3.361,592,3.777,593,2.538,594,2.538,595,3.777,596,2.538,597,2.538,598,2.538,599,2.538,600,2.538,601,3.777,602,4.997,603,4.512,604,3.825,605,2.538,606,3.777,607,3.035,608,1.707,609,2.538,610,2.538,611,3.777,612,2.538,613,3.777,614,2.538,615,2.538,616,2.538,617,2.538,618,2.538,619,2.541,620,2.538,621,2.538,622,2.538,623,2.538,624,2.538,625,2.538,626,2.538,627,5.343,628,5.343,629,2.538,630,2.538,631,2.538,632,2.538,633,2.538,634,2.538,635,2.538,636,2.538,637,3.767,638,3.035,639,2.538,640,3.767,641,2.601,642,2.541,643,2.541,644,2.414,645,2.538,646,2.538,647,2.538,648,2.538,649,2.538,650,2.538,651,2.538,652,2.538,653,2.538,654,2.538,655,2.538,656,2.538,657,2.538,658,2.538,659,2.538,660,2.538]],["title/controllers/RepoStarController.html",[93,1.127,661,2.34]],["body/controllers/RepoStarController.html",[7,0.025,16,0.205,17,0.184,18,0.164,21,0.585,22,0.521,45,0.977,46,0.994,53,1.866,54,1.354,69,0.891,86,0.716,88,0.205,89,0.09,91,0.012,92,0.012,93,0.716,96,1.244,98,0.271,99,1.337,103,1.248,106,3.216,111,0.839,113,1.715,114,0.899,115,0.899,117,2.428,121,1.486,122,3.382,123,2.617,124,2.831,125,1.244,126,0.592,127,0.994,136,1.77,138,3.132,139,2.622,142,2.095,151,1.608,152,1.737,171,1.753,174,2.78,181,1.642,222,3.215,280,1.15,372,2.595,393,0.868,394,1.643,398,1.429,522,3.842,524,2.288,526,3.132,528,2.759,531,3.5,541,1.486,543,1.527,546,3.382,554,1.486,555,1.486,557,2.288,558,2.288,560,2.288,561,2.288,562,2.288,640,3.132,641,2.424,661,2.288,662,4.263,663,1.873,664,5.028,665,5.028,666,5.028,667,5.028,668,2.21,669,3.209,670,2.21,671,3.948,672,3.948,673,4.657,674,5.723,675,3.401,676,3.481,677,3.216,678,3.132,679,2.21,680,2.21,681,2.21,682,2.21,683,2.21,684,2.21,685,3.948,686,3.948,687,2.21,688,2.21,689,2.21,690,2.21,691,1.486,692,1.652,693,3.759,694,1.244,695,2.335,696,1.873,697,1.652,698,1.652,699,1.652,700,2.21,701,3.401,702,2.21,703,2.21,704,3.401,705,2.21]],["title/controllers/RepoStargazeController.html",[93,1.127,706,2.34]],["body/controllers/RepoStargazeController.html",[7,0.025,16,0.208,17,0.187,18,0.167,21,0.587,22,0.528,45,0.811,46,1.009,57,2.112,58,1.374,69,0.894,86,0.726,88,0.208,89,0.091,91,0.012,92,0.012,93,0.726,96,1.263,98,0.275,99,1.352,103,1.257,106,3.231,111,0.845,113,1.728,114,0.906,115,0.906,117,2.436,121,1.508,122,3.405,123,2.634,124,2.85,125,1.263,126,0.601,127,1.009,136,1.79,138,3.157,139,2.642,142,2.112,151,1.62,152,1.745,171,1.764,174,2.789,181,1.646,222,3.226,280,1.167,372,2.604,393,0.881,394,1.662,398,1.445,522,3.86,524,1.508,526,3.157,528,2.772,531,3.517,541,1.508,543,1.541,546,3.405,554,1.508,555,1.508,557,2.314,558,2.314,560,2.314,561,2.314,562,2.314,640,3.157,641,2.442,669,3.216,676,3.508,677,3.231,691,1.508,692,1.676,693,3.784,694,1.263,697,1.676,698,1.676,699,1.676,706,2.314,707,4.292,708,1.901,709,5.062,710,5.062,711,5.062,712,5.062,713,2.243,714,2.243,715,3.44,716,6.344,717,4.185,718,3.979,719,2.243,720,2.243,721,2.243,722,4.185,723,2.243,724,2.243,725,2.243,726,3.44,727,3.979,728,2.243,729,2.243,730,2.243,731,2.243,732,2.356,733,1.901,734,2.243,735,3.44,736,3.44,737,2.243,738,2.243,739,3.44,740,3.44,741,2.243]],["title/controllers/RepoVoteController.html",[93,1.127,742,2.34]],["body/controllers/RepoVoteController.html",[7,0.025,16,0.205,17,0.184,18,0.164,21,0.585,22,0.521,45,0.977,46,0.994,51,1.866,52,1.354,69,0.891,86,0.716,88,0.205,89,0.09,91,0.012,92,0.012,93,0.716,96,1.244,98,0.271,99,1.337,103,1.248,106,3.216,111,0.839,113,1.715,114,0.899,115,0.899,117,2.428,121,1.486,122,3.382,123,2.617,124,2.831,125,1.244,126,0.592,127,0.994,136,1.77,138,3.132,139,2.622,142,2.095,151,1.608,152,1.737,171,1.753,174,2.78,181,1.642,222,3.215,280,1.15,372,2.595,393,0.868,394,1.643,398,1.429,522,3.842,524,2.288,526,3.132,528,2.759,531,3.5,541,1.486,543,1.527,546,3.382,554,1.486,555,1.486,557,2.288,558,2.288,560,2.288,561,2.288,562,2.288,640,3.132,641,2.424,669,3.209,671,3.948,672,3.948,676,3.481,677,3.216,678,3.132,685,3.948,691,1.486,692,1.652,693,3.759,694,1.244,697,1.652,698,1.652,699,1.652,742,2.288,743,4.263,744,1.873,745,5.028,746,5.028,747,5.028,748,5.028,749,2.21,750,2.21,751,4.657,752,5.046,753,3.401,754,2.21,755,2.21,756,2.21,757,2.21,758,2.21,759,2.21,760,3.948,761,2.21,762,2.21,763,2.21,764,2.21,765,2.335,766,1.873,767,2.21,768,3.401,769,2.21,770,2.21,771,3.401,772,2.21]],["title/modules/StarModule.html",[0,1.127,10,2.132]],["body/modules/StarModule.html",[0,1.761,2,1.808,3,2.627,7,0.025,10,4.191,13,2.83,14,2.079,15,1.808,16,0.399,17,0.359,18,0.32,20,2.239,21,0.686,22,1.014,23,2.637,24,1.936,45,1.281,46,1.936,53,2.447,54,2.637,86,1.761,87,3.061,88,0.399,89,0.176,91,0.019,92,0.019,159,3.332,171,1.082,543,2.428,661,4.009,694,2.423,695,3.923,696,3.648,773,3.648,774,3.648,775,3.648,776,4.303,777,4.303,778,3.217]],["title/injectables/StarService.html",[588,1.201,695,1.959]],["body/injectables/StarService.html",[7,0.025,16,0.306,17,0.275,18,0.245,21,0.577,22,0.776,24,1.482,36,1.137,53,1.482,54,2.019,69,0.753,88,0.306,89,0.134,91,0.016,92,0.016,98,0.404,99,1.79,111,1.014,113,1.923,114,1.008,115,1.008,117,2.052,142,2.661,151,1.945,171,1.145,172,1.591,181,1.682,236,1.591,372,2.57,393,1.79,394,1.591,525,2.722,528,2.722,588,1.573,589,1.714,591,3.79,607,2.216,608,2.216,619,3.064,637,3.79,638,3.064,641,2.932,642,3.064,643,3.513,644,2.523,669,3.205,674,2.793,677,2.565,678,2.216,686,3.862,695,2.565,779,2.793,780,4.556,781,4.556,782,3.294,783,3.294,784,4.556,785,3.294,786,4.556,787,3.294,788,4.688,789,4.556,790,3.294,791,2.463,792,3.294,793,3.294,794,2.463,795,4.556,796,4.556,797,6.117,798,4.556,799,3.405,800,3.405,801,3.294,802,3.294,803,2.463,804,3.294]],["title/modules/StargazeModule.html",[0,1.127,11,2.132]],["body/modules/StargazeModule.html",[0,1.761,2,1.808,3,2.627,7,0.025,11,4.191,13,2.83,14,2.079,15,1.808,16,0.399,17,0.359,18,0.32,20,2.239,21,0.686,22,1.014,23,2.637,24,1.936,45,1.281,46,1.936,57,2.447,58,2.637,86,1.761,87,3.061,88,0.399,89,0.176,91,0.019,92,0.019,159,3.332,171,1.082,543,2.428,694,2.423,706,4.009,732,3.923,733,3.648,778,3.217,805,3.648,806,3.648,807,3.648,808,4.303,809,4.303]],["title/injectables/StargazeService.html",[588,1.201,732,1.959]],["body/injectables/StargazeService.html",[7,0.025,16,0.306,17,0.275,18,0.245,21,0.577,22,0.776,24,1.482,36,1.137,57,1.482,58,2.019,69,0.753,88,0.306,89,0.134,91,0.016,92,0.016,98,0.404,99,1.79,111,1.014,113,1.923,114,1.008,115,1.008,117,2.052,142,2.661,151,1.945,171,1.313,172,1.591,181,1.682,236,1.591,372,2.57,393,1.79,394,1.591,525,2.722,528,2.722,588,1.573,589,1.714,591,3.79,607,2.216,608,2.216,619,3.064,637,3.79,638,3.064,641,2.932,642,3.064,643,3.513,644,2.523,669,3.205,677,2.565,718,3.862,727,2.793,732,2.565,788,4.688,791,2.463,794,2.463,799,3.405,800,3.405,803,2.463,810,2.793,811,4.556,812,4.556,813,3.294,814,3.294,815,4.556,816,3.294,817,4.556,818,3.294,819,4.556,820,3.294,821,3.294,822,3.294,823,4.556,824,4.556,825,6.117,826,4.556,827,3.294,828,3.294,829,3.294]],["title/classes/SupabaseAuthResponse.html",[89,0.142,118,2.34]],["body/classes/SupabaseAuthResponse.html",[7,0.024,16,0.36,17,0.324,18,0.289,69,0.957,88,0.36,89,0.158,91,0.018,92,0.018,97,4.112,98,0.476,111,1.194,115,1.339,118,3.421,143,4.811,144,4.811,145,4.811,146,4.811,147,2.23,148,2.23,152,1.725,166,1.547,174,3.144,398,2.989,429,2.184,830,5.688,831,3.289,832,5.675,833,3.88,834,3.88,835,3.88,836,3.88,837,3.88,838,3.88,839,3.88,840,3.88]],["title/injectables/SupabaseGuard.html",[127,1.566,588,1.201]],["body/injectables/SupabaseGuard.html",[7,0.024,16,0.483,17,0.434,18,0.387,21,0.625,22,1.227,88,0.483,89,0.212,91,0.021,92,0.021,127,2.747,161,3.891,218,2.931,588,2.108,589,2.709,841,4.413,842,5.206,843,5.206]],["title/injectables/SupabaseStrategy.html",[157,2.132,588,1.201]],["body/injectables/SupabaseStrategy.html",[7,0.025,16,0.377,17,0.339,18,0.302,21,0.627,22,0.957,69,0.837,88,0.486,89,0.166,91,0.018,92,0.018,97,2.489,98,0.498,99,2.06,102,5.379,111,1.045,113,1.929,114,1.012,115,1.012,116,2.06,117,2.06,129,3.037,130,3.212,151,1.402,157,3.212,161,3.037,218,2.287,287,3.212,372,2.438,381,3.037,393,2.28,588,1.809,589,2.114,844,3.037,845,5.241,846,5.241,847,4.062,848,5.241,849,5.802,850,4.062,851,4.062,852,4.062,853,5.241,854,4.062,855,5.241,856,4.062,857,4.062,858,4.062,859,5.241,860,3.444,861,4.062,862,4.062,863,4.062,864,4.062,865,4.062,866,4.062,867,4.062,868,4.062,869,4.062,870,4.062,871,4.062,872,4.062,873,4.062]],["title/modules/VoteModule.html",[0,1.127,12,2.132]],["body/modules/VoteModule.html",[0,1.761,2,1.808,3,2.627,7,0.025,12,4.191,13,2.83,14,2.079,15,1.808,16,0.399,17,0.359,18,0.32,20,2.239,21,0.686,22,1.014,23,2.637,24,1.936,45,1.281,46,1.936,51,2.447,52,2.637,86,1.761,87,3.061,88,0.399,89,0.176,91,0.019,92,0.019,159,3.332,171,1.082,543,2.428,694,2.423,742,4.009,765,3.923,766,3.648,778,3.217,874,3.648,875,3.648,876,3.648,877,4.303,878,4.303]],["title/injectables/VoteService.html",[588,1.201,765,1.959]],["body/injectables/VoteService.html",[7,0.025,16,0.306,17,0.275,18,0.245,21,0.577,22,0.776,24,1.482,36,1.137,51,1.482,52,2.019,69,0.753,88,0.306,89,0.134,91,0.016,92,0.016,98,0.404,99,1.79,111,1.014,113,1.923,114,1.008,115,1.008,117,2.052,142,2.661,151,1.945,171,1.145,172,1.591,181,1.682,236,1.591,372,2.57,393,1.79,394,1.591,525,2.722,528,2.722,588,1.573,589,1.714,591,3.79,607,2.216,608,2.216,619,3.064,637,3.79,638,3.064,641,2.932,642,3.064,643,3.513,644,2.523,669,3.205,677,2.565,678,2.216,752,2.463,760,3.862,765,2.565,788,4.688,791,2.463,794,2.463,799,3.405,800,3.405,803,2.463,879,2.793,880,4.556,881,4.556,882,3.294,883,3.294,884,4.556,885,3.294,886,4.556,887,3.294,888,4.556,889,3.294,890,3.294,891,3.294,892,4.556,893,4.556,894,6.117,895,4.556,896,3.294,897,3.294,898,3.294]],["title/changelog.html",[899,1.961,900,2.179,901,2.471]],["body/changelog.html",[3,1.681,7,0.024,15,0.565,18,0.22,36,1.021,64,1.929,79,0.905,83,1.367,91,0.008,92,0.008,93,0.436,97,0.824,108,1.14,114,0.815,116,0.529,130,1.813,136,1.184,152,0.692,168,1.14,171,0.874,173,1.006,184,0.824,203,1.006,217,0.905,280,0.7,371,1.14,376,1.006,377,0.824,400,1.14,459,0.905,473,0.905,476,1.99,486,0.757,525,1.681,583,0.905,586,0.905,604,2.508,644,1.099,691,1.531,752,1.701,899,0.905,901,1.929,902,1.345,903,2.276,904,1.929,905,1.929,906,2.276,907,4.32,908,1.14,909,5.809,910,5.841,911,1.345,912,5.373,913,5.373,914,1.345,915,2.276,916,1.345,917,2.958,918,1.345,919,1.345,920,3.479,921,5.765,922,1.345,923,1.345,924,1.345,925,1.14,926,1.345,927,1.345,928,1.345,929,2.276,930,1.345,931,1.345,932,1.345,933,3.298,934,1.345,935,1.345,936,2.841,937,6.22,938,1.14,939,3.891,940,3.891,941,2.958,942,1.345,943,1.345,944,1.345,945,1.345,946,1.345,947,2.958,948,2.276,949,1.345,950,1.345,951,5.591,952,2.276,953,1.345,954,1.345,955,1.345,956,4.729,957,4.729,958,2.276,959,6.22,960,6.259,961,3.479,962,3.479,963,1.345,964,4.176,965,1.345,966,2.276,967,2.958,968,2.508,969,1.14,970,4.499,971,1.345,972,1.345,973,1.345,974,1.345,975,2.276,976,1.345,977,2.276,978,1.345,979,1.345,980,1.345,981,1.345,982,1.345,983,2.276,984,3.891,985,1.345,986,1.345,987,1.345,988,1.345,989,1.345,990,1.14,991,1.345,992,1.345,993,2.276,994,2.276,995,2.958,996,3.891,997,2.276,998,2.276,999,1.345,1000,1.345,1001,1.345,1002,2.958,1003,1.345,1004,2.276,1005,1.345,1006,1.345,1007,1.345,1008,1.345,1009,4.224,1010,3.479,1011,3.479,1012,2.276,1013,2.958,1014,2.276,1015,4.926,1016,2.276,1017,2.276,1018,2.958,1019,3.891,1020,2.276,1021,2.276,1022,1.929,1023,2.276,1024,4.224,1025,2.276,1026,2.276,1027,2.276,1028,2.958,1029,2.276,1030,4.926,1031,4.926,1032,2.276,1033,5.096,1034,3.891,1035,6.522,1036,3.891,1037,1.345,1038,2.276,1039,1.345,1040,1.345,1041,5.243,1042,1.345,1043,1.345,1044,1.345,1045,1.345,1046,1.345,1047,1.345,1048,4.499,1049,1.345,1050,1.345,1051,1.345,1052,1.345,1053,4.499,1054,2.958,1055,1.701,1056,1.345,1057,1.345,1058,1.345,1059,2.276,1060,1.929,1061,2.276,1062,1.345,1063,1.345,1064,1.345,1065,3.479,1066,1.929,1067,1.345,1068,1.345,1069,1.14,1070,1.929,1071,1.345,1072,1.345,1073,1.14,1074,1.345,1075,1.345,1076,4.926,1077,1.345,1078,1.345,1079,1.345,1080,1.345,1081,2.276,1082,1.345,1083,1.345,1084,1.345,1085,1.929,1086,1.345,1087,1.345,1088,1.14,1089,1.345,1090,1.345,1091,1.345,1092,1.345,1093,1.345,1094,1.345,1095,2.276,1096,1.345,1097,1.345,1098,4.01,1099,1.345,1100,1.345,1101,1.345,1102,2.276,1103,1.345,1104,2.276,1105,2.958,1106,1.345,1107,1.345,1108,1.345,1109,1.345,1110,1.345,1111,1.006,1112,1.345,1113,1.345,1114,1.345,1115,1.345,1116,1.345,1117,1.345,1118,3.891,1119,2.276,1120,1.14,1121,1.345,1122,1.345,1123,1.345,1124,1.345,1125,1.345,1126,1.345,1127,1.345,1128,1.345,1129,1.345,1130,1.345,1131,1.345,1132,1.345,1133,1.345,1134,1.345,1135,1.345,1136,1.345,1137,1.345,1138,1.345,1139,1.345,1140,1.345,1141,4.926,1142,1.345,1143,1.345,1144,1.345,1145,1.345,1146,2.958,1147,1.345,1148,1.345,1149,1.345,1150,1.345,1151,1.345,1152,1.345,1153,1.345,1154,1.345,1155,1.345,1156,1.345,1157,1.345,1158,1.345,1159,1.345,1160,1.345,1161,1.345,1162,1.345,1163,2.958,1164,1.345,1165,1.345,1166,1.345,1167,1.345,1168,1.345,1169,1.345,1170,1.345,1171,1.345,1172,1.345,1173,1.345,1174,1.14,1175,1.345,1176,1.345,1177,1.345,1178,1.345,1179,1.345,1180,1.345,1181,2.276,1182,1.345,1183,1.345,1184,1.345,1185,1.345,1186,1.345,1187,3.479,1188,2.276,1189,1.345,1190,1.345,1191,1.345,1192,1.929,1193,1.345,1194,1.929,1195,1.345,1196,1.345,1197,1.345,1198,2.276,1199,2.276,1200,2.276,1201,1.929,1202,2.276,1203,1.345,1204,2.958,1205,1.345,1206,2.276,1207,1.345,1208,2.276,1209,2.276,1210,1.345,1211,1.345,1212,1.345,1213,1.345,1214,1.345,1215,1.345,1216,1.345,1217,1.345,1218,1.345,1219,1.345,1220,1.345,1221,1.345,1222,1.345,1223,1.345,1224,2.276,1225,1.345,1226,1.345,1227,1.345,1228,1.345,1229,1.345,1230,1.345,1231,1.345,1232,1.345,1233,1.345,1234,1.345,1235,1.345,1236,1.345,1237,1.345,1238,1.345,1239,1.345,1240,1.345,1241,1.345,1242,1.345,1243,1.14,1244,1.345,1245,1.345,1246,1.345,1247,1.345,1248,1.345,1249,1.345,1250,1.345,1251,1.345,1252,1.345,1253,1.345,1254,1.345,1255,1.14,1256,1.345,1257,1.345,1258,1.345,1259,1.345,1260,1.345,1261,1.345,1262,1.345,1263,1.345,1264,1.345,1265,1.14,1266,1.345,1267,1.345,1268,1.345,1269,1.345,1270,1.345,1271,1.345,1272,1.345,1273,1.345]],["title/coverage.html",[1274,4.01]],["body/coverage.html",[7,0.025,18,0.26,45,0.823,47,1.571,49,1.966,51,1.571,53,1.571,55,1.966,57,1.571,69,0.504,89,0.246,91,0.017,92,0.017,93,2.017,94,2.348,95,2.96,97,2.139,116,1.372,118,2.348,127,1.571,157,2.139,164,1.818,165,2.96,184,4.357,221,2.96,286,2.96,303,2.96,317,2.96,331,2.96,345,2.96,369,2.348,370,2.96,428,2.139,430,2.96,435,2.139,447,1.686,454,3.188,455,2.96,470,1.817,482,3.188,515,2.348,516,2.96,535,2.139,543,1.285,548,2.61,550,2.61,572,2.61,588,2.149,590,2.96,644,1.686,661,2.348,662,2.96,663,2.96,669,1.686,695,1.966,706,2.348,707,2.96,708,2.96,732,1.966,742,2.348,743,2.96,744,2.96,765,1.966,779,2.96,810,2.96,830,2.96,831,2.96,841,2.96,844,2.61,879,2.96,936,2.348,1070,4.895,1274,2.96,1275,3.491,1276,3.491,1277,3.491,1278,3.491,1279,6.8,1280,5.774,1281,3.544,1282,2.96,1283,2.96,1284,3.491,1285,2.96,1286,2.96,1287,3.491,1288,2.96,1289,3.491,1290,2.96,1291,6.368,1292,3.491,1293,3.491,1294,2.96]],["title/miscellaneous/enumerations.html",[1295,1.408,1296,3.543]],["body/miscellaneous/enumerations.html",[7,0.025,91,0.02,92,0.02,98,0.558,114,1.087,147,2.213,148,2.213,225,4.21,234,3.788,235,4.21,237,4.21,282,4.774,283,4.774,447,2.721,482,3.788,486,3.98,492,3.788,572,3.403,573,4.774,582,4.21,583,3.788,584,4.21,585,4.21,586,3.788,1295,2.199,1296,3.859,1297,4.552,1298,5.632,1299,4.552,1300,4.552]],["title/miscellaneous/functions.html",[1295,1.408,1301,3.543]],["body/miscellaneous/functions.html",[7,0.022,91,0.022,92,0.022,98,0.667,1288,4.612,1290,5.593,1295,2.628,1301,4.612,1302,5.44]],["title/index.html",[98,0.357,899,1.961,900,2.179]],["body/index.html",[7,0.024,14,1.854,15,1.613,17,0.32,79,4.034,91,0.018,92,0.018,130,3.676,228,2.352,239,2.869,376,3.776,377,3.819,378,4.034,410,3.254,525,1.854,644,1.854,904,5.283,905,3.254,925,3.254,933,3.254,936,2.582,964,4.282,968,4.282,969,4.282,990,3.254,1022,3.254,1088,5.529,1098,4.282,1111,2.869,1174,4.282,1192,3.254,1243,3.254,1255,5.283,1294,3.254,1303,3.839,1304,3.839,1305,3.839,1306,3.839,1307,3.839,1308,3.839,1309,3.839,1310,4.786,1311,3.254,1312,3.839,1313,3.839,1314,3.839,1315,3.839,1316,3.839,1317,3.839,1318,3.839,1319,3.839,1320,3.839,1321,5.645,1322,5.051,1323,3.839,1324,3.839,1325,5.051,1326,3.839,1327,3.839,1328,3.839,1329,3.839,1330,3.839,1331,5.051,1332,3.839,1333,5.051,1334,5.051,1335,3.839,1336,3.839,1337,3.839,1338,3.839,1339,3.839,1340,3.839,1341,3.839,1342,3.839,1343,3.839,1344,3.839,1345,3.839,1346,3.839,1347,3.254,1348,3.839,1349,5.051,1350,3.839,1351,3.839,1352,3.839,1353,3.839,1354,3.839,1355,3.839,1356,3.839,1357,3.839,1358,3.839,1359,3.839,1360,3.839,1361,3.839,1362,3.839,1363,3.839,1364,3.839,1365,3.839,1366,2.869]],["title/license.html",[228,1.786,899,1.961,900,2.179]],["body/license.html",[7,0.019,15,1.821,91,0.019,92,0.019,189,2.889,228,2.656,377,2.656,378,2.915,909,3.675,936,2.915,1073,3.675,1120,4.63,1310,3.675,1311,5.805,1366,3.24,1367,5.981,1368,4.334,1369,5.462,1370,4.334,1371,4.334,1372,4.334,1373,4.334,1374,4.334,1375,4.334,1376,4.334,1377,4.334,1378,4.334,1379,4.334,1380,5.462,1381,4.334,1382,4.334,1383,5.462,1384,4.334,1385,4.334,1386,4.334,1387,4.334,1388,4.334,1389,4.334,1390,4.334,1391,5.462,1392,4.334,1393,4.334,1394,4.334,1395,4.334,1396,4.334,1397,4.334,1398,5.462,1399,5.462,1400,4.334,1401,4.334,1402,4.334,1403,4.334,1404,4.334,1405,4.334,1406,4.334,1407,4.334,1408,4.334,1409,4.334,1410,4.334,1411,4.334,1412,4.334,1413,4.334,1414,4.334,1415,4.334,1416,4.334,1417,4.334,1418,4.334,1419,4.334,1420,4.334,1421,4.334,1422,4.334,1423,4.334,1424,4.334,1425,4.334,1426,4.334,1427,4.334,1428,4.334]],["title/modules.html",[2,1.987]],["body/modules.html",[1,3.385,2,2.114,6,3.084,7,0.021,8,3.084,9,3.084,10,3.084,11,3.084,12,3.084,91,0.021,92,0.021,1429,6.849,1430,6.849,1431,6.849,1432,6.921,1433,4.266,1434,5.032]],["title/overview.html",[1435,4.01]],["body/overview.html",[1,4.647,2,1.583,3,2.41,4,3.193,5,3.193,6,4.088,7,0.025,8,3.427,9,3.9,10,4.039,11,4.039,12,4.039,13,2.596,14,1.82,15,1.583,83,1.48,86,1.22,91,0.017,92,0.017,127,2.921,154,3.193,155,3.193,156,3.193,157,3.979,429,2.121,543,2.48,566,3.193,567,3.193,568,3.193,589,1.96,695,3.655,732,3.655,765,3.655,773,3.193,774,3.193,775,3.193,805,3.193,806,3.193,807,3.193,874,3.193,875,3.193,876,3.193,1201,4.229,1435,3.193,1436,4.988,1437,3.767]],["title/properties.html",[166,1.271,1438,2.915]],["body/properties.html",[7,0.024,91,0.02,92,0.02,129,3.64,130,2.984,166,1.481,222,2.534,228,2.984,377,3.596,378,3.947,525,2.353,907,4.129,908,4.129,938,4.129,1069,4.129,1111,3.64,1194,4.129,1265,4.129,1366,3.64,1433,4.129,1439,4.87,1440,4.87,1441,4.87,1442,4.87,1443,4.87,1444,4.87,1445,4.87,1446,4.87,1447,4.87,1448,4.87,1449,5.869,1450,4.87,1451,4.87,1452,4.87,1453,4.87,1454,4.87,1455,4.87,1456,4.87,1457,4.87]],["title/miscellaneous/typealiases.html",[1295,1.408,1458,4.18]],["body/miscellaneous/typealiases.html",[7,0.021,69,0.882,91,0.021,92,0.021,98,0.64,432,4.572,454,3.512,462,5.185,844,3.903,860,5.672,1281,3.903,1295,2.522,1459,5.221,1460,5.221,1461,6.116,1462,5.221,1463,4.426,1464,5.221]],["title/miscellaneous/variables.html",[1055,3.124,1295,1.408]],["body/miscellaneous/variables.html",[7,0.025,69,0.586,91,0.018,92,0.018,98,0.498,116,2.06,123,2.114,142,2.358,151,2.003,166,1.235,174,2.358,183,2.409,222,2.114,381,3.918,431,3.444,451,3.444,486,3.451,548,3.918,550,3.918,644,1.962,669,2.532,1055,3.037,1060,4.443,1066,4.443,1085,3.444,1281,3.037,1282,3.444,1283,4.443,1285,3.444,1286,4.443,1295,1.962,1347,3.444,1463,4.443,1465,4.062,1466,4.062,1467,5.802,1468,4.062,1469,4.062,1470,4.062,1471,4.062,1472,4.062,1473,4.062,1474,5.241,1475,4.062,1476,4.062,1477,4.062,1478,5.241,1479,4.062,1480,4.062,1481,4.062,1482,5.241,1483,5.241,1484,5.241,1485,5.241,1486,4.062,1487,4.062]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":184,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{},"changelog.html":{},"coverage.html":{}}}],["0/1",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["0848443",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1234,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":473,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"changelog.html":{}}}],["1.0.0",{"_index":1248,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":1245,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":1242,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":1238,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1233,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":1227,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":1222,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":1219,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":1217,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":1186,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["1.6.10",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["1.6.11",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["1.6.12",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["1.6.13",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["1.6.14",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["1.6.15",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["1.6.16",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["1.6.17",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":1176,"title":{},"body":{"changelog.html":{}}}],["1.6.3",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["1.6.4",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["1.6.5",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["1.6.6",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["1.6.7",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["1.6.8",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["1.6.9",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["1.7.1",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["1.7.10",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["1.7.11",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["1.7.12",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["1.7.3",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["1.7.5",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["1.7.6",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["1.7.7",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["1.7.8",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["1.7.9",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["1.8.1",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["1.8.2",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["1.9.0",{"_index":907,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["10",{"_index":476,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"changelog.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(50)@isoptional",{"_index":490,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["12",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["166050d",{"_index":1214,"title":{},"body":{"changelog.html":{}}}],["16678a7",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1223,"title":{},"body":{"changelog.html":{}}}],["17c54b9",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":498,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["20",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":909,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["20880c7",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["20bc1e7",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["22d3cc1",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":179,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{}}}],["26",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["272c09a",{"_index":1273,"title":{},"body":{"changelog.html":{}}}],["273f337",{"_index":1241,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["2c0b15f",{"_index":1260,"title":{},"body":{"changelog.html":{}}}],["2c0b3d1",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["2f966a3",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["31e4d60",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["33fea7e",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["34d521d",{"_index":1244,"title":{},"body":{"changelog.html":{}}}],["3918a78",{"_index":1205,"title":{},"body":{"changelog.html":{}}}],["4552c66",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1437,"title":{},"body":{"overview.html":{}}}],["50",{"_index":489,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["58bf922",{"_index":1263,"title":{},"body":{"changelog.html":{}}}],["5925b74",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["5e7c6c7",{"_index":1254,"title":{},"body":{"changelog.html":{}}}],["5eddeb1",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["5f79c49",{"_index":1202,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":1436,"title":{},"body":{"overview.html":{}}}],["607cf5d",{"_index":1221,"title":{},"body":{"changelog.html":{}}}],["61b67d5",{"_index":1216,"title":{},"body":{"changelog.html":{}}}],["62b3eea",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["630f3b5",{"_index":1230,"title":{},"body":{"changelog.html":{}}}],["63d6a92",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":252,"title":{},"body":{"entities/DbRepo.html":{}}}],["673dca9",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["69b2067",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["6a4810f",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["6d23c24",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1201,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["7249714",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["73d1c74",{"_index":1247,"title":{},"body":{"changelog.html":{}}}],["77c734c",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["79bf61d",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["7adfb6b",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["7db9008",{"_index":1268,"title":{},"body":{"changelog.html":{}}}],["7e9b8a4",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["7fe63aa",{"_index":1185,"title":{},"body":{"changelog.html":{}}}],["81e8bbc",{"_index":1197,"title":{},"body":{"changelog.html":{}}}],["8837b2a",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["8952f19",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["8aee8e5",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["911df68",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["94ba4e1",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["957b86e",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["_data",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a0db0aa",{"_index":1207,"title":{},"body":{"changelog.html":{}}}],["a229a3b",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["a9e1df6",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1397,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":1228,"title":{},"body":{"changelog.html":{}}}],["ac31556",{"_index":1226,"title":{},"body":{"changelog.html":{}}}],["accessing",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["accessors",{"_index":484,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["action",{"_index":1422,"title":{},"body":{"license.html":{}}}],["add",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["add_table_nametest",{"_index":1337,"title":{},"body":{"index.html":{}}}],["adding",{"_index":1328,"title":{},"body":{"index.html":{}}}],["addorderby(`\"${orderfield",{"_index":651,"title":{},"body":{"injectables/RepoService.html":{}}}],["addorderby(`\"repo\".\"created_at",{"_index":654,"title":{},"body":{"injectables/RepoService.html":{}}}],["addorderby(`\"repo\".\"stars",{"_index":653,"title":{},"body":{"injectables/RepoService.html":{}}}],["adds",{"_index":685,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoVoteController.html":{}}}],["addselect((qb",{"_index":627,"title":{},"body":{"injectables/RepoService.html":{}}}],["adjust",{"_index":1249,"title":{},"body":{"changelog.html":{}}}],["adjustments",{"_index":1210,"title":{},"body":{"changelog.html":{}}}],["ae43450",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["af531e4",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":603,"title":{},"body":{"injectables/RepoService.html":{}}}],["aliases",{"_index":1459,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliasname",{"_index":611,"title":{},"body":{"injectables/RepoService.html":{}}}],["aliastable",{"_index":613,"title":{},"body":{"injectables/RepoService.html":{}}}],["alias}count",{"_index":612,"title":{},"body":{"injectables/RepoService.html":{}}}],["alias}countselect",{"_index":614,"title":{},"body":{"injectables/RepoService.html":{}}}],["allof",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["along",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":677,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["and/or",{"_index":1389,"title":{},"body":{"license.html":{}}}],["andwhere(\"r2stargazes.user_id",{"_index":824,"title":{},"body":{"injectables/StargazeService.html":{}}}],["andwhere(\"r2stars.user_id",{"_index":796,"title":{},"body":{"injectables/StarService.html":{}}}],["andwhere(\"r2votes.user_id",{"_index":893,"title":{},"body":{"injectables/VoteService.html":{}}}],["api",{"_index":1111,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["api.opensauced.pizza",{"_index":1306,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["apiconfig",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["apiconflictresponse",{"_index":693,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["apidocs",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["apiextramodels(pagedto",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apihideproperty",{"_index":216,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["apihideproperty()@manytoone(undefined",{"_index":199,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["apihideproperty()@onetomany(undefined",{"_index":238,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["apinotfoundresponse",{"_index":546,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["apiokresponse",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"miscellaneous/variables.html":{}}}],["apioperation",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["apipaginatedresponse",{"_index":548,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse(dbrepo",{"_index":564,"title":{},"body":{"controllers/RepoController.html":{}}}],["apiproperty",{"_index":443,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{}}}],["apiproperty({type",{"_index":441,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":502,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["apipropertyoptional({enum",{"_index":494,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":487,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["apitags",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["apitags(\"authentication",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"health",{"_index":392,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"repository",{"_index":555,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["apply",{"_index":1335,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1426,"title":{},"body":{"license.html":{}}}],["array",{"_index":451,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["artifact",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":283,"title":{},"body":{"entities/DbRepo.html":{},"miscellaneous/enumerations.html":{}}}],["assign",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1376,"title":{},"body":{"license.html":{}}}],["async",{"_index":372,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["attach",{"_index":1235,"title":{},"body":{"changelog.html":{}}}],["attempt",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"changelog.html":{},"coverage.html":{}}}],["auth.controller",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/supabase.guard",{"_index":697,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["auth/supabase.user.decorator",{"_index":698,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["authcontroller",{"_index":94,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":845,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticate(req",{"_index":848,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticated",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":842,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authguard(\"supabase",{"_index":843,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1455,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":1415,"title":{},"body":{"license.html":{}}}],["autoloadentities",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1434,"title":{},"body":{"modules.html":{}}}],["await",{"_index":641,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["b1a67da",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["b1eda28",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["b4c9879",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["b4d3785",{"_index":1232,"title":{},"body":{"changelog.html":{}}}],["b57f47b",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["b5b6ac5",{"_index":1215,"title":{},"body":{"changelog.html":{}}}],["b7c3395",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["b9f3798",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["ba8dfbb",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1441,"title":{},"body":{"properties.html":{}}}],["badge",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["badges",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["baseentity",{"_index":209,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["baseline",{"_index":1203,"title":{},"body":{"changelog.html":{}}}],["basequerybuilder",{"_index":591,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["bash",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":1239,"title":{},"body":{"changelog.html":{}}}],["bc3a37d",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["bd6d621",{"_index":1191,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["beta.10",{"_index":908,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["beta.2",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["beta.6",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["beta.7",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["beta.8",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["beta.9",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["beta.api.opensauced.pizza",{"_index":1307,"title":{},"body":{"index.html":{}}}],["better",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["bigint",{"_index":182,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["binaries",{"_index":1312,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":248,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"classes/PageMetaDto.html":{}}}],["bootstrap",{"_index":1290,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["branch",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1432,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1429,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1451,"title":{},"body":{"properties.html":{}}}],["build",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":619,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["c",{"_index":1368,"title":{},"body":{"license.html":{}}}],["c013b70",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["c127cea",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["c24937f",{"_index":1195,"title":{},"body":{"changelog.html":{}}}],["cb83f9d",{"_index":1211,"title":{},"body":{"changelog.html":{}}}],["cb9206d",{"_index":1251,"title":{},"body":{"changelog.html":{}}}],["cc46460",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["cd306f8",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["cd8f21d",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":901,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":904,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["channel",{"_index":1364,"title":{},"body":{"index.html":{}}}],["character",{"_index":176,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{}}}],["charge",{"_index":1373,"title":{},"body":{"license.html":{}}}],["check",{"_index":376,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["checkauthsession",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["checks",{"_index":1250,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1418,"title":{},"body":{"license.html":{}}}],["class",{"_index":89,"title":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthResponse.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["classes",{"_index":429,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthResponse.html":{},"overview.html":{}}}],["clean",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":1344,"title":{},"body":{"index.html":{}}}],["client",{"_index":1443,"title":{},"body":{"properties.html":{}}}],["closes",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_repomodule",{"_index":566,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_exports",{"_index":567,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_providers",{"_index":568,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_stargazemodule",{"_index":805,"title":{},"body":{"modules/StargazeModule.html":{},"overview.html":{}}}],["cluster_stargazemodule_exports",{"_index":807,"title":{},"body":{"modules/StargazeModule.html":{},"overview.html":{}}}],["cluster_stargazemodule_providers",{"_index":806,"title":{},"body":{"modules/StargazeModule.html":{},"overview.html":{}}}],["cluster_starmodule",{"_index":773,"title":{},"body":{"modules/StarModule.html":{},"overview.html":{}}}],["cluster_starmodule_exports",{"_index":774,"title":{},"body":{"modules/StarModule.html":{},"overview.html":{}}}],["cluster_starmodule_providers",{"_index":775,"title":{},"body":{"modules/StarModule.html":{},"overview.html":{}}}],["cluster_votemodule",{"_index":874,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["cluster_votemodule_exports",{"_index":876,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["cluster_votemodule_providers",{"_index":875,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["code",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["column",{"_index":208,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["column(\"text",{"_index":284,"title":{},"body":{"entities/DbRepo.html":{}}}],["column('text",{"_index":244,"title":{},"body":{"entities/DbRepo.html":{}}}],["column({default",{"_index":249,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["column({type",{"_index":175,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["command",{"_index":1331,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1319,"title":{},"body":{"index.html":{}}}],["comments",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":1253,"title":{},"body":{"changelog.html":{}}}],["common/constants/order",{"_index":609,"title":{},"body":{"injectables/RepoService.html":{}}}],["common/decorators/api",{"_index":549,"title":{},"body":{"controllers/RepoController.html":{}}}],["common/dtos/page",{"_index":581,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{}}}],["common/dtos/page.dto",{"_index":547,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["community",{"_index":1356,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":1444,"title":{},"body":{"properties.html":{}}}],["component",{"_index":1229,"title":{},"body":{"changelog.html":{}}}],["concurrency",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1396,"title":{},"body":{"license.html":{}}}],["config/api.config",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["config/endpoint.config",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configservice.get(\"db.connection",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.database",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.host",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.password",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.port",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.username",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1204,"title":{},"body":{"changelog.html":{}}}],["confirmed_at",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["conflictexception",{"_index":791,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["conflictexception(\"you",{"_index":800,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["connection",{"_index":1427,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["console.log(querybuilder.getsql",{"_index":657,"title":{},"body":{"injectables/RepoService.html":{}}}],["const",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["constants/order",{"_index":508,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["constructor",{"_index":393,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["constructor(data",{"_index":433,"title":{},"body":{"classes/PageDto.html":{}}}],["constructor(private",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoController.html":{}}}],["constructor(reporepository",{"_index":593,"title":{},"body":{"injectables/RepoService.html":{}}}],["constructor(repostargazerepository",{"_index":813,"title":{},"body":{"injectables/StargazeService.html":{}}}],["constructor(repostarrepository",{"_index":782,"title":{},"body":{"injectables/StarService.html":{}}}],["constructor(repovoterepository",{"_index":882,"title":{},"body":{"injectables/VoteService.html":{}}}],["constructor(undefined",{"_index":461,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["container",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":1066,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continuous",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1423,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1351,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":1349,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":239,"title":{},"body":{"entities/DbRepo.html":{},"injectables/RepoService.html":{},"index.html":{}}}],["contribution.repo",{"_index":240,"title":{},"body":{"entities/DbRepo.html":{}}}],["contribution/contribution.entity",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{}}}],["contributions",{"_index":217,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"injectables/RepoService.html":{},"changelog.html":{}}}],["contributions.repo_id",{"_index":625,"title":{},"body":{"injectables/RepoService.html":{}}}],["contributionscount",{"_index":582,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["contributor",{"_index":167,"title":{},"body":{"entities/DbContribution.html":{}}}],["controller",{"_index":93,"title":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"health",{"_index":391,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"repos",{"_index":554,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["controllers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{},"overview.html":{}}}],["conversation",{"_index":1359,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1391,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1120,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":1367,"title":{},"body":{"license.html":{}}}],["correct",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":168,"title":{},"body":{"entities/DbContribution.html":{},"changelog.html":{}}}],["counting",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":1274,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["created",{"_index":1199,"title":{},"body":{"changelog.html":{}}}],["created_at",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthResponse.html":{},"miscellaneous/enumerations.html":{}}}],["createdatecolumn",{"_index":214,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["createdatecolumn({type",{"_index":187,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["createparamdecorator",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":1270,"title":{},"body":{"changelog.html":{}}}],["d0d5ca5",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["d77ea52",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1419,"title":{},"body":{"license.html":{}}}],["data",{"_index":431,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["datasource",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":186,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["db",{"_index":1261,"title":{},"body":{"changelog.html":{}}}],["db:changesif",{"_index":1332,"title":{},"body":{"index.html":{}}}],["db:commit",{"_index":1336,"title":{},"body":{"index.html":{}}}],["db:push",{"_index":1343,"title":{},"body":{"index.html":{}}}],["db:resetpush",{"_index":1341,"title":{},"body":{"index.html":{}}}],["db:startmake",{"_index":1327,"title":{},"body":{"index.html":{}}}],["dbconfig",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["dbcontribution",{"_index":49,"title":{"entities/DbContribution.html":{}},"body":{"modules/AppModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["dbrepo",{"_index":45,"title":{"entities/DbRepo.html":{}},"body":{"modules/AppModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{},"coverage.html":{}}}],["dbrepotouserstargazers",{"_index":57,"title":{"entities/DbRepoToUserStargazers.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbUser.html":{},"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"coverage.html":{}}}],["dbrepotouserstargazers})@apinotfoundresponse({description",{"_index":717,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["dbrepotouserstars",{"_index":53,"title":{"entities/DbRepoToUserStars.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbUser.html":{},"controllers/RepoStarController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"coverage.html":{}}}],["dbrepotouserstars})@apinotfoundresponse({description",{"_index":675,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["dbrepotousersubmissions",{"_index":55,"title":{"entities/DbRepoToUserSubmissions.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbUser.html":{},"coverage.html":{}}}],["dbrepotouservotes",{"_index":51,"title":{"entities/DbRepoToUserVotes.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["dbrepotouservotes})@apinotfoundresponse({description",{"_index":753,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["dbrepo})@apinotfoundresponse({description",{"_index":524,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["dbuser",{"_index":47,"title":{"entities/DbUser.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"coverage.html":{}}}],["dd5e668",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1378,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1428,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["decorator",{"_index":1225,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["default",{"_index":183,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["delete",{"_index":691,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{}}}],["delete(\"/:id/star",{"_index":703,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["delete(\"/:id/stargaze",{"_index":738,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["delete(\"/:id/vote",{"_index":770,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete(\"/:owner/:repo/star",{"_index":705,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["delete(\"/:owner/:repo/stargaze",{"_index":741,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["delete(\"/:owner/:repo/vote",{"_index":772,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete('/:id/star')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":670,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["delete('/:id/stargaze')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":714,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["delete('/:id/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":750,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete('/:owner/:repo/star')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":681,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["delete('/:owner/:repo/stargaze')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":721,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["delete('/:owner/:repo/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":756,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["deleted_at",{"_index":169,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["deletedatecolumn",{"_index":213,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["deletedatecolumn({type",{"_index":194,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["demo",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":1259,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":282,"title":{},"body":{"entities/DbRepo.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":222,"title":{},"body":{"entities/DbRepo.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":1442,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":969,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["diagram",{"_index":1348,"title":{},"body":{"index.html":{}}}],["diagrams",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":1330,"title":{},"body":{"index.html":{}}}],["digital",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["direction.constant",{"_index":509,"title":{},"body":{"classes/PageOptionsDto.html":{},"injectables/RepoService.html":{}}}],["direction.constant.ts",{"_index":1298,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["discord.find",{"_index":1360,"title":{},"body":{"index.html":{}}}],["disk",{"_index":397,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":390,"title":{},"body":{"controllers/HealthController.html":{}}}],["distribute",{"_index":1387,"title":{},"body":{"license.html":{}}}],["docker",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.12",{"_index":1317,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":1198,"title":{},"body":{"changelog.html":{}}}],["docr",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":936,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":1439,"title":{},"body":{"properties.html":{}}}],["down",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["downstarbyrepoid",{"_index":780,"title":{},"body":{"injectables/StarService.html":{}}}],["downstarbyrepoid(repoid",{"_index":786,"title":{},"body":{"injectables/StarService.html":{}}}],["downstargazebyrepoid",{"_index":811,"title":{},"body":{"injectables/StargazeService.html":{}}}],["downstargazebyrepoid(repoid",{"_index":817,"title":{},"body":{"injectables/StargazeService.html":{}}}],["downstargazeonebyid",{"_index":709,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["downstargazeonebyid(id",{"_index":713,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["downstargazeonebyownerandrepo",{"_index":710,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["downstargazeonebyownerandrepo(owner",{"_index":720,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["downstaronebyid",{"_index":664,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downstaronebyid(id",{"_index":668,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downstaronebyownerandrepo",{"_index":665,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downstaronebyownerandrepo(owner",{"_index":680,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downvotebyrepoid",{"_index":880,"title":{},"body":{"injectables/VoteService.html":{}}}],["downvotebyrepoid(repoid",{"_index":886,"title":{},"body":{"injectables/VoteService.html":{}}}],["downvoteonebyid",{"_index":745,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyid(id",{"_index":749,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyownerandrepo",{"_index":746,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyownerandrepo(owner",{"_index":755,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["dry",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["dtos/repo",{"_index":552,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["dtos/supabase",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["e145e2d",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["e1fe498",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["e663170",{"_index":1237,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":450,"title":{},"body":{"classes/PageDto.html":{}}}],["eba258a",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["echo",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["ed9729a",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["email",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["encourage",{"_index":1350,"title":{},"body":{"index.html":{}}}],["endpointconfig",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints",{"_index":400,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":379,"title":{},"body":{"controllers/HealthController.html":{}}}],["engines",{"_index":1266,"title":{},"body":{"changelog.html":{}}}],["entities",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{},"changelog.html":{},"overview.html":{}}}],["entities/repo.entity",{"_index":545,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{}}}],["entity",{"_index":164,"title":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["enum",{"_index":513,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["enumerations",{"_index":1296,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":495,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["env",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["environments",{"_index":1305,"title":{},"body":{"index.html":{}}}],["errors",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["eslint",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1073,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["everything",{"_index":1333,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existing",{"_index":672,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoVoteController.html":{}}}],["explain",{"_index":1269,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["exports",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{}}}],["exposing",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1406,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":218,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}}}],["extractjwt",{"_index":856,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":871,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractor",{"_index":870,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["f0304d4",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["f5385b3",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["fad79b1",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["fdc11ea",{"_index":1220,"title":{},"body":{"changelog.html":{}}}],["fe20c2d",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["fe4b9e9",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":1377,"title":{},"body":{"license.html":{}}}],["findall",{"_index":537,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findall(pageoptionsdto",{"_index":597,"title":{},"body":{"injectables/RepoService.html":{}}}],["findonebyid",{"_index":517,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyid(id",{"_index":520,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo",{"_index":518,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo(owner",{"_index":529,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["finds",{"_index":522,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["finduserlist",{"_index":519,"title":{},"body":{"controllers/RepoController.html":{}}}],["finduserlist(pageoptionsdto",{"_index":534,"title":{},"body":{"controllers/RepoController.html":{}}}],["fine",{"_index":1334,"title":{},"body":{"index.html":{}}}],["first",{"_index":1322,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1411,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["flight",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":716,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["followed",{"_index":727,"title":{},"body":{"controllers/RepoStargazeController.html":{},"injectables/StargazeService.html":{}}}],["following",{"_index":1310,"title":{},"body":{"index.html":{},"license.html":{}}}],["follows",{"_index":735,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["follows'})@apiokresponse({description",{"_index":726,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["found",{"_index":526,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["found'})@apiconflictresponse({description",{"_index":676,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["free",{"_index":1372,"title":{},"body":{"license.html":{}}}],["from(entity",{"_index":616,"title":{},"body":{"injectables/RepoService.html":{}}}],["full",{"_index":1022,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["full_name",{"_index":223,"title":{},"body":{"entities/DbRepo.html":{}}}],["function",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":1301,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1394,"title":{},"body":{"license.html":{}}}],["generated",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["get(\"/:id",{"_index":556,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/:owner/:repo",{"_index":559,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/list",{"_index":563,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/service",{"_index":399,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/session",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"/web",{"_index":413,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":521,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/:owner/:repo')@apioperation({operationid",{"_index":530,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/list')@apioperation({operationid",{"_index":536,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":374,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/session')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":382,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdomain",{"_index":1286,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethello",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello(user",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["getschemapath(model",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(pagedto",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getskip",{"_index":500,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getting",{"_index":899,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1453,"title":{},"body":{"properties.html":{}}}],["github",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":1371,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1433,"title":{},"body":{"modules.html":{},"properties.html":{}}}],["guard",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["guarded",{"_index":699,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["guards",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1353,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1354,"title":{},"body":{"index.html":{}}}],["handler",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["has_stars_data",{"_index":346,"title":{},"body":{"entities/DbUser.html":{}}}],["hasnextpage",{"_index":456,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":457,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["hasty",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["health",{"_index":371,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["health.controller",{"_index":427,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":388,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":385,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":369,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":8,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["healthstatusservice",{"_index":375,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":383,"title":{},"body":{"controllers/HealthController.html":{}}}],["hereby",{"_index":1370,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1416,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1448,"title":{},"body":{"properties.html":{}}}],["host",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":395,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["httpcode(httpstatus.ok",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["httphealthindicator",{"_index":386,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/open",{"_index":1449,"title":{},"body":{"properties.html":{}}}],["httpstatus",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoController.html":{}}}],["id",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"changelog.html":{}}}],["id'})@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":523,"title":{},"body":{"controllers/RepoController.html":{}}}],["identifier",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1345,"title":{},"body":{"index.html":{}}}],["immediate",{"_index":1189,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1407,"title":{},"body":{"license.html":{}}}],["import",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{}}}],["improve",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":1209,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1400,"title":{},"body":{"license.html":{}}}],["including",{"_index":1380,"title":{},"body":{"license.html":{}}}],["index",{"_index":98,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["information",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["information'})@apiokresponse({type",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["inherited",{"_index":577,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["initial",{"_index":1252,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":588,"title":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["injectables",{"_index":589,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"overview.html":{}}}],["injectrepository",{"_index":608,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["injectrepository(dbrepo",{"_index":610,"title":{},"body":{"injectables/RepoService.html":{}}}],["injectrepository(dbrepotouserstargazers",{"_index":821,"title":{},"body":{"injectables/StargazeService.html":{}}}],["injectrepository(dbrepotouserstars",{"_index":792,"title":{},"body":{"injectables/StarService.html":{}}}],["injectrepository(dbrepotouservotes",{"_index":890,"title":{},"body":{"injectables/VoteService.html":{}}}],["inspection",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["installed",{"_index":1313,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":1446,"title":{},"body":{"properties.html":{}}}],["is_fork",{"_index":224,"title":{},"body":{"entities/DbRepo.html":{},"injectables/RepoService.html":{}}}],["is_open_sauced_member",{"_index":347,"title":{},"body":{"entities/DbUser.html":{}}}],["is_private",{"_index":348,"title":{},"body":{"entities/DbUser.html":{}}}],["isarray",{"_index":444,"title":{},"body":{"classes/PageDto.html":{}}}],["isarray()@apiproperty({isarray",{"_index":437,"title":{},"body":{"classes/PageDto.html":{}}}],["isenum",{"_index":503,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["isenum(orderdirectionenum",{"_index":514,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(repoorderfieldsenum",{"_index":587,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["isglobal",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":504,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isoptional",{"_index":505,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["issues",{"_index":225,"title":{},"body":{"entities/DbRepo.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["item",{"_index":640,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["itemcount",{"_index":458,"title":{},"body":{"classes/PageMetaDto.html":{},"injectables/RepoService.html":{}}}],["items",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["job",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["jobs",{"_index":1196,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":1358,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":212,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["jwt",{"_index":858,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["keywords",{"_index":1447,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1405,"title":{},"body":{"license.html":{}}}],["language",{"_index":226,"title":{},"body":{"entities/DbRepo.html":{}}}],["last_fetched_contributors_at",{"_index":227,"title":{},"body":{"entities/DbRepo.html":{}}}],["last_merged_at",{"_index":170,"title":{},"body":{"entities/DbContribution.html":{}}}],["last_sign_in_at",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["leftjoinandmapmany(\"repo.contributions",{"_index":624,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(\"repo.user",{"_index":622,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(dbrepotouserstars",{"_index":623,"title":{},"body":{"injectables/RepoService.html":{}}}],["length",{"_index":178,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{}}}],["liability",{"_index":1420,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1417,"title":{},"body":{"license.html":{}}}],["license",{"_index":228,"title":{"license.html":{}},"body":{"entities/DbRepo.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":459,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"changelog.html":{}}}],["limit(pageoptionsdto.limit",{"_index":656,"title":{},"body":{"injectables/RepoService.html":{}}}],["limitation",{"_index":1381,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1408,"title":{},"body":{"license.html":{}}}],["link",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["lint",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":1085,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["listing",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":1464,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["live",{"_index":1304,"title":{},"body":{"index.html":{}}}],["load",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["loadrelationcountandmap(\"repo.contributionscount",{"_index":632,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.stargazerscount",{"_index":635,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.starscount",{"_index":636,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.submissionscount",{"_index":634,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.votescount",{"_index":633,"title":{},"body":{"injectables/RepoService.html":{}}}],["local",{"_index":968,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["localhost:54321",{"_index":1326,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1325,"title":{},"body":{"index.html":{}}}],["logging",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":1314,"title":{},"body":{"index.html":{}}}],["main",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["manytoone",{"_index":211,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["matching",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":479,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["max",{"_index":506,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(50",{"_index":512,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maximum",{"_index":488,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["memory",{"_index":396,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":389,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1410,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1385,"title":{},"body":{"license.html":{}}}],["meta",{"_index":432,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["meta.dto",{"_index":448,"title":{},"body":{"classes/PageDto.html":{},"injectables/RepoService.html":{}}}],["meta.dto.ts",{"_index":455,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:12",{"_index":465,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:15",{"_index":468,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:18",{"_index":464,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":463,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:6",{"_index":467,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":466,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["metadata",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["migration",{"_index":1243,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["migrations",{"_index":1340,"title":{},"body":{"index.html":{}}}],["min",{"_index":507,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":511,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimal",{"_index":1206,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":510,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minor",{"_index":1208,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1295,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1366,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mkdocs",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":1384,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{},"modules.html":{},"overview.html":{}}}],["mount",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["mounted",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["need",{"_index":1309,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1192,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nestjs",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["nestjs/config",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["nestjs/passport",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/swagger",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["nestjs/terminus",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["nestjs/typeorm",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["nestjs/typeorm/dist/interfaces/typeorm",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["never",{"_index":849,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["new",{"_index":644,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1303,"title":{},"body":{"index.html":{}}}],["node",{"_index":1257,"title":{},"body":{"changelog.html":{}}}],["node>=16.7.0",{"_index":1315,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1414,"title":{},"body":{"license.html":{}}}],["notable",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["notfoundexception",{"_index":607,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["notfoundexception(\"you",{"_index":803,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["notice",{"_index":1398,"title":{},"body":{"license.html":{}}}],["now",{"_index":192,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["npm",{"_index":1255,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm>=8.0.0",{"_index":1316,"title":{},"body":{"index.html":{}}}],["null",{"_index":799,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["number",{"_index":181,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["oas3",{"_index":1440,"title":{},"body":{"properties.html":{}}}],["obtaining",{"_index":1375,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["offset(pageoptionsdto.skip",{"_index":655,"title":{},"body":{"injectables/RepoService.html":{}}}],["onetomany",{"_index":275,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["open",{"_index":377,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["open_issues",{"_index":349,"title":{},"body":{"entities/DbUser.html":{}}}],["opensauced.pizza\"}`).tostring",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operationid",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["optional",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["options.dto",{"_index":553,"title":{},"body":{"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{}}}],["options.dto.ts",{"_index":482,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["options.dto.ts:15",{"_index":499,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:27",{"_index":491,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:28",{"_index":576,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":497,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":501,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.interface",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":925,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["orderby",{"_index":281,"title":{},"body":{"entities/DbRepo.html":{},"classes/RepoPageOptionsDto.html":{}}}],["orderby(`\"repo\".\"is_fork",{"_index":649,"title":{},"body":{"injectables/RepoService.html":{}}}],["orderdirection",{"_index":483,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["orderdirectionenum",{"_index":492,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["orderdirectionenum.asc",{"_index":650,"title":{},"body":{"injectables/RepoService.html":{}}}],["orderdirectionenum.desc",{"_index":493,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{}}}],["orderfield",{"_index":647,"title":{},"body":{"injectables/RepoService.html":{}}}],["otherwise",{"_index":1425,"title":{},"body":{"license.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["outputs",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1435,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":1362,"title":{},"body":{"index.html":{}}}],["owner",{"_index":531,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["owner}/${repo",{"_index":646,"title":{},"body":{"injectables/RepoService.html":{}}}],["package",{"_index":1438,"title":{"properties.html":{}},"body":{}}],["page",{"_index":447,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["pagecount",{"_index":460,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":428,"title":{"classes/PageDto.html":{}},"body":{"classes/PageDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagedto(entities",{"_index":660,"title":{},"body":{"injectables/RepoService.html":{}}}],["pagemetadto",{"_index":435,"title":{"classes/PageMetaDto.html":{}},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagemetadto})@validatenested()@type(undefined",{"_index":442,"title":{},"body":{"classes/PageDto.html":{}}}],["pagemetaparameters",{"_index":462,"title":{},"body":{"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["pageoptionsdto",{"_index":470,"title":{"classes/PageOptionsDto.html":{}},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pageoptionsdto.limit",{"_index":475,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.orderby",{"_index":648,"title":{},"body":{"injectables/RepoService.html":{}}}],["pageoptionsdto.orderdirection",{"_index":652,"title":{},"body":{"injectables/RepoService.html":{}}}],["pageoptionsdto.page",{"_index":472,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto:15",{"_index":580,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["pageoptionsdto:27",{"_index":578,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["pageoptionsdto:32",{"_index":579,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["pages",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["paginated",{"_index":550,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginates",{"_index":538,"title":{},"body":{"controllers/RepoController.html":{}}}],["pagination",{"_index":1224,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":541,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"id",{"_index":557,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"owner",{"_index":560,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"repo",{"_index":561,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["parameters",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["parameters.dto",{"_index":469,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["parameters.dto.ts",{"_index":1461,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["partial",{"_index":861,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["particular",{"_index":1412,"title":{},"body":{"license.html":{}}}],["passport",{"_index":857,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["passportmodule",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":855,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["password",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":410,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["performance",{"_index":1264,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1369,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1392,"title":{},"body":{"license.html":{}}}],["person",{"_index":1374,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1393,"title":{},"body":{"license.html":{}}}],["pipelines",{"_index":1272,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":1352,"title":{},"body":{"index.html":{}}}],["port",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":1402,"title":{},"body":{"license.html":{}}}],["powered",{"_index":938,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["prefix",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["prerequisites",{"_index":1308,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":1212,"title":{},"body":{"changelog.html":{}}}],["primarycolumn",{"_index":210,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["primarycolumn(\"bigint",{"_index":219,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["primarycolumn('bigint",{"_index":196,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["primarygeneratedcolumn",{"_index":290,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["print",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":394,"title":{},"body":{"controllers/HealthController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["proceed",{"_index":1355,"title":{},"body":{"index.html":{}}}],["process",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["process.env.domain",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.supabase_api_key",{"_index":866,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_jwt_secret",{"_index":869,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_url",{"_index":864,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["production",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":905,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":528,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["proper",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":166,"title":{"properties.html":{}},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthResponse.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":1069,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["provided",{"_index":1403,"title":{},"body":{"license.html":{}}}],["providers",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{}}}],["public",{"_index":287,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{}}}],["publish",{"_index":1386,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1413,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["push",{"_index":933,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pushed_at",{"_index":229,"title":{},"body":{"entities/DbRepo.html":{}}}],["put",{"_index":692,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["put(\"/:id/star",{"_index":700,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["put(\"/:id/stargaze",{"_index":734,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["put(\"/:id/vote",{"_index":767,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put(\"/:owner/:repo/star",{"_index":702,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["put(\"/:owner/:repo/stargaze",{"_index":737,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["put(\"/:owner/:repo/vote",{"_index":769,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put('/:id/star')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":684,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["put('/:id/stargaze')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":725,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["put('/:id/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":759,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put('/:owner/:repo/star')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":689,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["put('/:owner/:repo/stargaze')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":730,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["put('/:owner/:repo/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":763,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["query",{"_index":542,"title":{},"body":{"controllers/RepoController.html":{}}}],["querybuilder",{"_index":637,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["querybuilder.getcount",{"_index":658,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getmany",{"_index":659,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getone",{"_index":642,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["questions",{"_index":1357,"title":{},"body":{"index.html":{}}}],["re",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["readme",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":398,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["received",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refactoring",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["referal",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["referencedcolumnname",{"_index":201,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["registry",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["relations",{"_index":1231,"title":{},"body":{"changelog.html":{}}}],["relationship",{"_index":1236,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":964,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remote",{"_index":1342,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1265,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["removed",{"_index":678,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/VoteService.html":{}}}],["removes",{"_index":671,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoVoteController.html":{}}}],["repo",{"_index":171,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["repo'})@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":532,"title":{},"body":{"controllers/RepoController.html":{}}}],["repo.contributions",{"_index":220,"title":{},"body":{"entities/DbContribution.html":{},"injectables/RepoService.html":{}}}],["repo.contributions)@joincolumn({name",{"_index":200,"title":{},"body":{"entities/DbContribution.html":{}}}],["repo.controller",{"_index":570,"title":{},"body":{"modules/RepoModule.html":{}}}],["repo.entity",{"_index":299,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["repo.id",{"_index":626,"title":{},"body":{"injectables/RepoService.html":{}}}],["repo.repotouserstargazers",{"_index":302,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"injectables/RepoService.html":{}}}],["repo.repotouserstargazers)@joincolumn({name",{"_index":292,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["repo.repotouserstars",{"_index":316,"title":{},"body":{"entities/DbRepoToUserStars.html":{},"injectables/RepoService.html":{}}}],["repo.repotouserstars)@joincolumn({name",{"_index":307,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["repo.repotousersubmissions",{"_index":330,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{},"injectables/RepoService.html":{}}}],["repo.repotousersubmissions)@joincolumn({name",{"_index":321,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["repo.repotouservotes",{"_index":344,"title":{},"body":{"entities/DbRepoToUserVotes.html":{},"injectables/RepoService.html":{}}}],["repo.repotouservotes)@joincolumn({name",{"_index":335,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["repo.service",{"_index":544,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{}}}],["repo.to.user.stargazers.entity",{"_index":279,"title":{},"body":{"entities/DbRepo.html":{}}}],["repo.to.user.stars.entity",{"_index":277,"title":{},"body":{"entities/DbRepo.html":{}}}],["repo.to.user.submissions.entity",{"_index":278,"title":{},"body":{"entities/DbRepo.html":{}}}],["repo.to.user.votes.entity",{"_index":276,"title":{},"body":{"entities/DbRepo.html":{}}}],["repo.user",{"_index":357,"title":{},"body":{"entities/DbUser.html":{}}}],["repo/entities/repo.entity",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"entities/DbContribution.html":{},"entities/DbUser.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{}}}],["repo/entities/repo.to.user.stargazers.entity",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"entities/DbUser.html":{},"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{}}}],["repo/entities/repo.to.user.stars.entity",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"entities/DbUser.html":{},"controllers/RepoStarController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{}}}],["repo/entities/repo.to.user.submissions.entity",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"entities/DbUser.html":{}}}],["repo/entities/repo.to.user.votes.entity",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"entities/DbUser.html":{},"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["repo/repo.module",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["repo/repo.service",{"_index":694,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{}}}],["repo_id",{"_index":172,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["repocontroller",{"_index":515,"title":{"controllers/RepoController.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"coverage.html":{}}}],["repoid",{"_index":788,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["repomodule",{"_index":9,"title":{"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["repoorderfieldsenum",{"_index":573,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["repoorderfieldsenum.stars",{"_index":574,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["repopageoptionsdto",{"_index":535,"title":{"classes/RepoPageOptionsDto.html":{}},"body":{"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["reporepository",{"_index":595,"title":{},"body":{"injectables/RepoService.html":{}}}],["repos",{"_index":280,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{}}}],["reposervice",{"_index":543,"title":{"injectables/RepoService.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{},"coverage.html":{},"overview.html":{}}}],["repository",{"_index":525,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["repostarcontroller",{"_index":661,"title":{"controllers/RepoStarController.html":{}},"body":{"controllers/RepoStarController.html":{},"modules/StarModule.html":{},"coverage.html":{}}}],["repostargazecontroller",{"_index":706,"title":{"controllers/RepoStargazeController.html":{}},"body":{"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{},"coverage.html":{}}}],["repostargazerepository",{"_index":815,"title":{},"body":{"injectables/StargazeService.html":{}}}],["repostarrepository",{"_index":784,"title":{},"body":{"injectables/StarService.html":{}}}],["repotouserstargazers",{"_index":230,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{}}}],["repotouserstargazers.repo",{"_index":259,"title":{},"body":{"entities/DbRepo.html":{}}}],["repotouserstargazers.user",{"_index":359,"title":{},"body":{"entities/DbUser.html":{}}}],["repotouserstars",{"_index":231,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{}}}],["repotouserstars.repo",{"_index":261,"title":{},"body":{"entities/DbRepo.html":{}}}],["repotouserstars.user",{"_index":361,"title":{},"body":{"entities/DbUser.html":{}}}],["repotousersubmissions",{"_index":232,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{}}}],["repotousersubmissions.repo",{"_index":263,"title":{},"body":{"entities/DbRepo.html":{}}}],["repotousersubmissions.user",{"_index":363,"title":{},"body":{"entities/DbUser.html":{}}}],["repotouservotes",{"_index":233,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{}}}],["repotouservotes.repo",{"_index":265,"title":{},"body":{"entities/DbRepo.html":{}}}],["repotouservotes.user",{"_index":365,"title":{},"body":{"entities/DbUser.html":{}}}],["repovotecontroller",{"_index":742,"title":{"controllers/RepoVoteController.html":{}},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"coverage.html":{}}}],["repovoterepository",{"_index":884,"title":{},"body":{"injectables/VoteService.html":{}}}],["req",{"_index":851,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["request",{"_index":1060,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user?.user_metadata?.sub",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirements",{"_index":1267,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{},"index.html":{},"overview.html":{}}}],["response.decorator",{"_index":551,"title":{},"body":{"controllers/RepoController.html":{}}}],["response.decorator.ts",{"_index":1283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.dto.ts",{"_index":831,"title":{},"body":{"classes/SupabaseAuthResponse.html":{},"coverage.html":{}}}],["response.dto.ts:2",{"_index":836,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:3",{"_index":840,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:4",{"_index":838,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:5",{"_index":835,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:6",{"_index":833,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:7",{"_index":837,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:8",{"_index":834,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["response.dto.ts:9",{"_index":839,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["restriction",{"_index":1379,"title":{},"body":{"license.html":{}}}],["results",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["revert",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1382,"title":{},"body":{"license.html":{}}}],["rogue",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["role",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{}}}],["route",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":1088,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runner",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["sauced",{"_index":378,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["sauced/api.opensauced.pizza",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["sauced/api.opensauced.pizza#readme",{"_index":1450,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza.git",{"_index":1454,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza/issues",{"_index":1452,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":1347,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scoping",{"_index":1190,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":1200,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":1256,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1346,"title":{},"body":{"index.html":{}}}],["select",{"_index":203,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"changelog.html":{}}}],["select(\"count(distinct",{"_index":615,"title":{},"body":{"injectables/RepoService.html":{}}}],["select(['repo.id",{"_index":621,"title":{},"body":{"injectables/RepoService.html":{}}}],["selectquerybuilder",{"_index":602,"title":{},"body":{"injectables/RepoService.html":{}}}],["sell",{"_index":1390,"title":{},"body":{"license.html":{}}}],["service",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{}}}],["session",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"changelog.html":{}}}],["shall",{"_index":1399,"title":{},"body":{"license.html":{}}}],["simple",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["simplest",{"_index":1338,"title":{},"body":{"index.html":{}}}],["skip",{"_index":485,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["soft",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1311,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"index.html":{}}}],["spec",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["split",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["src/.../api",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoint.config.ts",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1302,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order",{"_index":1297,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../page",{"_index":1460,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../repo",{"_index":1299,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../supabase.strategy.ts",{"_index":1462,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../supabase.user.decorator.ts",{"_index":1463,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dtos/supabase",{"_index":830,"title":{},"body":{"classes/SupabaseAuthResponse.html":{},"coverage.html":{}}}],["src/auth/supabase.guard.ts",{"_index":841,"title":{},"body":{"injectables/SupabaseGuard.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts",{"_index":844,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/supabase.strategy.ts:12",{"_index":847,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:23",{"_index":854,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:27",{"_index":850,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.user.decorator.ts",{"_index":1281,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/order",{"_index":1300,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/decorators/api",{"_index":1282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/page",{"_index":454,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/dtos/page.dto.ts",{"_index":430,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts:11",{"_index":440,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dtos/page.dto.ts:16",{"_index":436,"title":{},"body":{"classes/PageDto.html":{}}}],["src/config/endpoint.config.ts",{"_index":1285,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contribution/contribution.entity.ts",{"_index":165,"title":{},"body":{"entities/DbContribution.html":{},"coverage.html":{}}}],["src/contribution/contribution.entity.ts:21",{"_index":197,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:27",{"_index":204,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:33",{"_index":185,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:38",{"_index":198,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:44",{"_index":193,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:50",{"_index":206,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:55",{"_index":195,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:61",{"_index":180,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:67",{"_index":207,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:75",{"_index":202,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/health/health.controller.ts",{"_index":370,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":380,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":384,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":426,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1288,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/repo/dtos/repo",{"_index":572,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/repo/entities/repo.entity.ts",{"_index":221,"title":{},"body":{"entities/DbRepo.html":{},"coverage.html":{}}}],["src/repo/entities/repo.entity.ts:105",{"_index":246,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:108",{"_index":245,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:114",{"_index":253,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:120",{"_index":256,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:126",{"_index":270,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:134",{"_index":272,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:138",{"_index":241,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:142",{"_index":266,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:146",{"_index":262,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:150",{"_index":264,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:154",{"_index":260,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:31",{"_index":247,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:37",{"_index":273,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:43",{"_index":251,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:49",{"_index":267,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:55",{"_index":274,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:61",{"_index":268,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:64",{"_index":250,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:70",{"_index":242,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:76",{"_index":269,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:82",{"_index":258,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:88",{"_index":255,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:93",{"_index":243,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:99",{"_index":257,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts",{"_index":286,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:19",{"_index":291,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:22",{"_index":298,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:25",{"_index":294,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:31",{"_index":288,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:37",{"_index":295,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:42",{"_index":289,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:50",{"_index":297,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:58",{"_index":293,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts",{"_index":303,"title":{},"body":{"entities/DbRepoToUserStars.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:19",{"_index":306,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:22",{"_index":313,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:25",{"_index":309,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:31",{"_index":304,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:37",{"_index":310,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:42",{"_index":305,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:50",{"_index":312,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:58",{"_index":308,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts",{"_index":317,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:19",{"_index":320,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:22",{"_index":327,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:25",{"_index":323,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:31",{"_index":318,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:37",{"_index":324,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:42",{"_index":319,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:50",{"_index":326,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:58",{"_index":322,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts",{"_index":331,"title":{},"body":{"entities/DbRepoToUserVotes.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:19",{"_index":334,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:22",{"_index":341,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:25",{"_index":337,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:31",{"_index":332,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:37",{"_index":338,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:42",{"_index":333,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:50",{"_index":340,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:58",{"_index":336,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/repo.controller.ts",{"_index":516,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{}}}],["src/repo/repo.controller.ts:24",{"_index":527,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:40",{"_index":533,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:55",{"_index":540,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.module.ts",{"_index":569,"title":{},"body":{"modules/RepoModule.html":{}}}],["src/repo/repo.service.ts",{"_index":590,"title":{},"body":{"injectables/RepoService.html":{},"coverage.html":{}}}],["src/repo/repo.service.ts:12",{"_index":594,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:18",{"_index":605,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:28",{"_index":596,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:48",{"_index":599,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:63",{"_index":600,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:80",{"_index":598,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/star/repo",{"_index":662,"title":{},"body":{"controllers/RepoStarController.html":{},"coverage.html":{}}}],["src/star/star.module.ts",{"_index":776,"title":{},"body":{"modules/StarModule.html":{}}}],["src/star/star.service.ts",{"_index":779,"title":{},"body":{"injectables/StarService.html":{},"coverage.html":{}}}],["src/star/star.service.ts:13",{"_index":785,"title":{},"body":{"injectables/StarService.html":{}}}],["src/star/star.service.ts:20",{"_index":790,"title":{},"body":{"injectables/StarService.html":{}}}],["src/star/star.service.ts:45",{"_index":787,"title":{},"body":{"injectables/StarService.html":{}}}],["src/star/star.service.ts:7",{"_index":783,"title":{},"body":{"injectables/StarService.html":{}}}],["src/stargaze/repo",{"_index":707,"title":{},"body":{"controllers/RepoStargazeController.html":{},"coverage.html":{}}}],["src/stargaze/stargaze.module.ts",{"_index":808,"title":{},"body":{"modules/StargazeModule.html":{}}}],["src/stargaze/stargaze.service.ts",{"_index":810,"title":{},"body":{"injectables/StargazeService.html":{},"coverage.html":{}}}],["src/stargaze/stargaze.service.ts:13",{"_index":816,"title":{},"body":{"injectables/StargazeService.html":{}}}],["src/stargaze/stargaze.service.ts:20",{"_index":820,"title":{},"body":{"injectables/StargazeService.html":{}}}],["src/stargaze/stargaze.service.ts:45",{"_index":818,"title":{},"body":{"injectables/StargazeService.html":{}}}],["src/stargaze/stargaze.service.ts:7",{"_index":814,"title":{},"body":{"injectables/StargazeService.html":{}}}],["src/user/user.entity.ts",{"_index":345,"title":{},"body":{"entities/DbUser.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:24",{"_index":353,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:30",{"_index":356,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:33",{"_index":352,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:36",{"_index":355,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:39",{"_index":354,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:45",{"_index":350,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:51",{"_index":367,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:56",{"_index":351,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:60",{"_index":358,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:64",{"_index":366,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:68",{"_index":362,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:72",{"_index":364,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:76",{"_index":360,"title":{},"body":{"entities/DbUser.html":{}}}],["src/vote/repo",{"_index":743,"title":{},"body":{"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["src/vote/vote.module.ts",{"_index":877,"title":{},"body":{"modules/VoteModule.html":{}}}],["src/vote/vote.service.ts",{"_index":879,"title":{},"body":{"injectables/VoteService.html":{},"coverage.html":{}}}],["src/vote/vote.service.ts:13",{"_index":885,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:20",{"_index":889,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:45",{"_index":887,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:7",{"_index":883,"title":{},"body":{"injectables/VoteService.html":{}}}],["stable",{"_index":1193,"title":{},"body":{"changelog.html":{}}}],["star",{"_index":674,"title":{},"body":{"controllers/RepoStarController.html":{},"injectables/StarService.html":{}}}],["star'})@apiokresponse({description",{"_index":673,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller",{"_index":777,"title":{},"body":{"modules/StarModule.html":{}}}],["star.controller.ts",{"_index":663,"title":{},"body":{"controllers/RepoStarController.html":{},"coverage.html":{}}}],["star.controller.ts:121",{"_index":682,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller.ts:42",{"_index":687,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller.ts:68",{"_index":690,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller.ts:95",{"_index":679,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.service",{"_index":696,"title":{},"body":{"controllers/RepoStarController.html":{},"modules/StarModule.html":{}}}],["star/star.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["starbyrepoid",{"_index":781,"title":{},"body":{"injectables/StarService.html":{}}}],["starbyrepoid(repoid",{"_index":789,"title":{},"body":{"injectables/StarService.html":{}}}],["starexists",{"_index":797,"title":{},"body":{"injectables/StarService.html":{}}}],["starexists.deleted_at",{"_index":798,"title":{},"body":{"injectables/StarService.html":{}}}],["stargaze",{"_index":722,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.controller",{"_index":809,"title":{},"body":{"modules/StargazeModule.html":{}}}],["stargaze.controller.ts",{"_index":708,"title":{},"body":{"controllers/RepoStargazeController.html":{},"coverage.html":{}}}],["stargaze.controller.ts:121",{"_index":723,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.controller.ts:42",{"_index":728,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.controller.ts:68",{"_index":731,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.controller.ts:95",{"_index":719,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.service",{"_index":733,"title":{},"body":{"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{}}}],["stargaze/stargaze.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["stargazebyrepoid",{"_index":812,"title":{},"body":{"injectables/StargazeService.html":{}}}],["stargazebyrepoid(repoid",{"_index":819,"title":{},"body":{"injectables/StargazeService.html":{}}}],["stargazeexists",{"_index":825,"title":{},"body":{"injectables/StargazeService.html":{}}}],["stargazeexists.deleted_at",{"_index":826,"title":{},"body":{"injectables/StargazeService.html":{}}}],["stargazemodule",{"_index":11,"title":{"modules/StargazeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StargazeModule.html":{},"modules.html":{},"overview.html":{}}}],["stargazeonebyid",{"_index":711,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargazeonebyid(id",{"_index":724,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargazeonebyownerandrepo",{"_index":712,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargazeonebyownerandrepo(owner",{"_index":729,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargazers",{"_index":631,"title":{},"body":{"injectables/RepoService.html":{}}}],["stargazerscount",{"_index":585,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["stargazeservice",{"_index":732,"title":{"injectables/StargazeService.html":{}},"body":{"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"coverage.html":{},"overview.html":{}}}],["starmodule",{"_index":10,"title":{"modules/StarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StarModule.html":{},"modules.html":{},"overview.html":{}}}],["staronebyid",{"_index":666,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["staronebyid(id",{"_index":683,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["staronebyownerandrepo",{"_index":667,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["staronebyownerandrepo(owner",{"_index":688,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["starred",{"_index":686,"title":{},"body":{"controllers/RepoStarController.html":{},"injectables/StarService.html":{}}}],["stars",{"_index":234,"title":{},"body":{"entities/DbRepo.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["starscount",{"_index":586,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["starservice",{"_index":695,"title":{"injectables/StarService.html":{}},"body":{"controllers/RepoStarController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"coverage.html":{},"overview.html":{}}}],["start",{"_index":1324,"title":{},"body":{"index.html":{}}}],["started",{"_index":900,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":1320,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1262,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["stray",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":174,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthResponse.html":{},"miscellaneous/variables.html":{}}}],["string(sub",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["structure",{"_index":1174,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["structured",{"_index":1445,"title":{},"body":{"properties.html":{}}}],["studio",{"_index":1321,"title":{},"body":{"index.html":{}}}],["styles",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["subdomain",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":1395,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1388,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["submissions",{"_index":630,"title":{},"body":{"injectables/RepoService.html":{}}}],["submissionscount",{"_index":584,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["subquery",{"_index":606,"title":{},"body":{"injectables/RepoService.html":{}}}],["subquerycount",{"_index":592,"title":{},"body":{"injectables/RepoService.html":{}}}],["subquerycount(subquery",{"_index":601,"title":{},"body":{"injectables/RepoService.html":{}}}],["subscribers",{"_index":235,"title":{},"body":{"entities/DbRepo.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["substantial",{"_index":1401,"title":{},"body":{"license.html":{}}}],["successful",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summary",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["supabase",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["supabase.guard",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["supabase.strategy",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["supabase.user.decorator",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabase>=0.18.0",{"_index":1318,"title":{},"body":{"index.html":{}}}],["supabaseauthrequest",{"_index":860,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["supabaseauthresponse",{"_index":118,"title":{"classes/SupabaseAuthResponse.html":{}},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthResponse.html":{},"coverage.html":{}}}],["supabaseauthresponse})@httpcode(httpstatus.ok",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabaseauthstrategy",{"_index":859,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseauthuser",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{}}}],["supabaseguard",{"_index":127,"title":{"injectables/SupabaseGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseGuard.html":{},"coverage.html":{},"overview.html":{}}}],["supabasejwtsecret",{"_index":868,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasekey",{"_index":865,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseoptions",{"_index":867,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasestrategy",{"_index":157,"title":{"injectables/SupabaseStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":863,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super",{"_index":862,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.authenticate(req",{"_index":873,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.validate(user",{"_index":872,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["support",{"_index":1430,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1431,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":434,"title":{},"body":{"classes/PageDto.html":{},"injectables/RepoService.html":{}}}],["table",{"_index":1294,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tables",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["tagging",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":604,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{}}}],["target}.id",{"_index":618,"title":{},"body":{"injectables/RepoService.html":{}}}],["tech",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["ted",{"_index":1456,"title":{},"body":{"properties.html":{}}}],["temporary",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":1098,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["them'})@httpcode(httpstatus.ok)@apipaginatedresponse(dbrepo)@apiokresponse({type",{"_index":539,"title":{},"body":{"controllers/RepoController.html":{}}}],["thing",{"_index":1323,"title":{},"body":{"index.html":{}}}],["this.basequerybuilder",{"_index":638,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":409,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":412,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":425,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":417,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":421,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":423,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":419,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":415,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":404,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":406,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.data",{"_index":452,"title":{},"body":{"classes/PageDto.html":{}}}],["this.database.pingcheck(\"db",{"_index":402,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":411,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":407,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hasnextpage",{"_index":481,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":480,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.health.check",{"_index":401,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":424,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":416,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":420,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":422,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":418,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":414,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.itemcount",{"_index":477,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.limit",{"_index":474,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":403,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":405,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.meta",{"_index":453,"title":{},"body":{"classes/PageDto.html":{}}}],["this.page",{"_index":471,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":478,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.reporepository.createquerybuilder(\"repo",{"_index":620,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.reposervice.findall(pageoptionsdto",{"_index":565,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.reposervice.findonebyid(id",{"_index":558,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["this.reposervice.findonebyownerandrepo(owner",{"_index":562,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["this.repostargazerepository.createquerybuilder(\"r2stargazes",{"_index":822,"title":{},"body":{"injectables/StargazeService.html":{}}}],["this.repostargazerepository.restore(stargazeexists.id",{"_index":827,"title":{},"body":{"injectables/StargazeService.html":{}}}],["this.repostargazerepository.save",{"_index":828,"title":{},"body":{"injectables/StargazeService.html":{}}}],["this.repostargazerepository.softdelete(stargazeexists.id",{"_index":829,"title":{},"body":{"injectables/StargazeService.html":{}}}],["this.repostarrepository.createquerybuilder(\"r2stars",{"_index":793,"title":{},"body":{"injectables/StarService.html":{}}}],["this.repostarrepository.restore(starexists.id",{"_index":801,"title":{},"body":{"injectables/StarService.html":{}}}],["this.repostarrepository.save",{"_index":802,"title":{},"body":{"injectables/StarService.html":{}}}],["this.repostarrepository.softdelete(starexists.id",{"_index":804,"title":{},"body":{"injectables/StarService.html":{}}}],["this.repovoterepository.createquerybuilder(\"r2votes",{"_index":891,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.restore(voteexists.id",{"_index":896,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.save",{"_index":897,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.softdelete(voteexists.id",{"_index":898,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.stargazeservice.downstargazebyrepoid(item.id",{"_index":740,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["this.stargazeservice.stargazebyrepoid(item.id",{"_index":736,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["this.starservice.downstarbyrepoid(item.id",{"_index":704,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["this.starservice.starbyrepoid(item.id",{"_index":701,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["this.subquerycount(qb",{"_index":628,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.voteservice.downvotebyrepoid(item.id",{"_index":771,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["this.voteservice.votebyrepoid(item.id",{"_index":768,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["thresholdpercent",{"_index":408,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":643,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["time",{"_index":190,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["timestamp",{"_index":188,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["tld",{"_index":1240,"title":{},"body":{"changelog.html":{}}}],["tmodel",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_timestamp(0",{"_index":254,"title":{},"body":{"entities/DbRepo.html":{}}}],["token",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1424,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":449,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["true",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"classes/PageDto.html":{}}}],["true})@type(undefined",{"_index":439,"title":{},"body":{"classes/PageDto.html":{}}}],["true})@validatenested({each",{"_index":438,"title":{},"body":{"classes/PageDto.html":{}}}],["type",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"classes/SupabaseAuthResponse.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1458,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["typeormhealthindicator",{"_index":387,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{}}}],["typeormmodule.forfeature",{"_index":778,"title":{},"body":{"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{}}}],["typeormmodule.forfeature([dbrepo",{"_index":571,"title":{},"body":{"modules/RepoModule.html":{}}}],["typeormmodule.forrootasync",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":1213,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":1271,"title":{},"body":{"changelog.html":{}}}],["undefined})@isenum(orderdirectionenum)@isoptional",{"_index":496,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["undefined})@isenum(repoorderfieldsenum)@isoptional",{"_index":575,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["undo",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["unfollowed",{"_index":718,"title":{},"body":{"controllers/RepoStargazeController.html":{},"injectables/StargazeService.html":{}}}],["unfollows",{"_index":739,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["unfollows'})@apiokresponse({description",{"_index":715,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["unknown",{"_index":381,"title":{},"body":{"controllers/HealthController.html":{},"injectables/SupabaseStrategy.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["updated_at",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthResponse.html":{},"miscellaneous/enumerations.html":{}}}],["updatedatecolumn",{"_index":215,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["updatedatecolumn({type",{"_index":205,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["url",{"_index":173,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"changelog.html":{}}}],["url(`https://${subdomain",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urls",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":1383,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["useguards(supabaseguard",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{}}}],["user",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.repos",{"_index":285,"title":{},"body":{"entities/DbRepo.html":{}}}],["user.repos)@joincolumn({name",{"_index":271,"title":{},"body":{"entities/DbRepo.html":{}}}],["user.repotouserstargazers",{"_index":301,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["user.repotouserstargazers)@joincolumn({name",{"_index":296,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["user.repotouserstars",{"_index":315,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["user.repotouserstars)@joincolumn({name",{"_index":311,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["user.repotousersubmissions",{"_index":329,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["user.repotousersubmissions)@joincolumn({name",{"_index":325,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["user.repotouservotes",{"_index":343,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["user.repotouservotes)@joincolumn({name",{"_index":339,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["user/user.entity",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["user_id",{"_index":236,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["user_metadata",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["user_name",{"_index":832,"title":{},"body":{"classes/SupabaseAuthResponse.html":{}}}],["userid",{"_index":669,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":368,"title":{},"body":{"entities/DbUser.html":{}}}],["users_to_repos_stargazers",{"_index":300,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["users_to_repos_stars",{"_index":314,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["users_to_repos_submissions",{"_index":328,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["users_to_repos_votes",{"_index":342,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["validate",{"_index":846,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validate(user",{"_index":853,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validatenested",{"_index":445,"title":{},"body":{"classes/PageDto.html":{}}}],["validator",{"_index":446,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["value",{"_index":486,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1070,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":1055,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":177,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{}}}],["verify",{"_index":1246,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1194,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versiond",{"_index":1258,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":1361,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1365,"title":{},"body":{"index.html":{}}}],["visually",{"_index":1329,"title":{},"body":{"index.html":{}}}],["vite",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":852,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["volume",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["volumes",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["vortex",{"_index":1457,"title":{},"body":{"properties.html":{}}}],["vortex/api.opensauced.pizza",{"_index":1218,"title":{},"body":{"changelog.html":{}}}],["vote",{"_index":752,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["vote'})@apiokresponse({description",{"_index":751,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller",{"_index":878,"title":{},"body":{"modules/VoteModule.html":{}}}],["vote.controller.ts",{"_index":744,"title":{},"body":{"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["vote.controller.ts:121",{"_index":757,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:42",{"_index":761,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:68",{"_index":764,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:95",{"_index":754,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.service",{"_index":766,"title":{},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{}}}],["vote/vote.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["votebyrepoid",{"_index":881,"title":{},"body":{"injectables/VoteService.html":{}}}],["votebyrepoid(repoid",{"_index":888,"title":{},"body":{"injectables/VoteService.html":{}}}],["voted",{"_index":760,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{}}}],["voteexists",{"_index":894,"title":{},"body":{"injectables/VoteService.html":{}}}],["voteexists.deleted_at",{"_index":895,"title":{},"body":{"injectables/VoteService.html":{}}}],["votemodule",{"_index":12,"title":{"modules/VoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VoteModule.html":{},"modules.html":{},"overview.html":{}}}],["voteonebyid",{"_index":747,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyid(id",{"_index":758,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyownerandrepo",{"_index":748,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyownerandrepo(owner",{"_index":762,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["votes",{"_index":629,"title":{},"body":{"injectables/RepoService.html":{}}}],["votescount",{"_index":583,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["voteservice",{"_index":765,"title":{"injectables/VoteService.html":{}},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{},"overview.html":{}}}],["warranties",{"_index":1409,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1404,"title":{},"body":{"license.html":{}}}],["watchers",{"_index":237,"title":{},"body":{"entities/DbRepo.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["way",{"_index":1339,"title":{},"body":{"index.html":{}}}],["web",{"_index":373,"title":{},"body":{"controllers/HealthController.html":{}}}],["where(\"r2stargazes.repo_id",{"_index":823,"title":{},"body":{"injectables/StargazeService.html":{}}}],["where(\"r2stars.repo_id",{"_index":795,"title":{},"body":{"injectables/StarService.html":{}}}],["where(\"r2votes.repo_id",{"_index":892,"title":{},"body":{"injectables/VoteService.html":{}}}],["where(\"repo.full_name",{"_index":645,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(\"repo.id",{"_index":639,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(`${aliastable}.${target}_id",{"_index":617,"title":{},"body":{"injectables/RepoService.html":{}}}],["whether",{"_index":1421,"title":{},"body":{"license.html":{}}}],["withdeleted",{"_index":794,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/VoteService.html":{}}}],["without",{"_index":189,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"license.html":{}}}],["work",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":990,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["yaml",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":1363,"title":{},"body":{"index.html":{}}}],["zone",{"_index":191,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/VoteModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nStarModule\n\nStarModule\n\nAppModule -->\n\nStarModule->AppModule\n\n\n\n\n\nStargazeModule\n\nStargazeModule\n\nAppModule -->\n\nStargazeModule->AppModule\n\n\n\n\n\nVoteModule\n\nVoteModule\n\nAppModule -->\n\nVoteModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            RepoModule\n                        \n                        \n                            StarModule\n                        \n                        \n                            StargazeModule\n                        \n                        \n                            VoteModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm/dist/interfaces/typeorm-options.interface\";\nimport { DataSource } from \"typeorm\";\n\nimport { RepoModule } from \"./repo/repo.module\";\nimport apiConfig from \"./config/api.config\";\nimport dbConfig from \"./config/database.config\";\nimport endpointConfig from \"./config/endpoint.config\";\nimport { HealthModule } from \"./health/health.module\";\nimport { DbRepo } from \"./repo/entities/repo.entity\";\nimport { DbUser } from \"./user/user.entity\";\nimport { DbContribution } from \"./contribution/contribution.entity\";\nimport { DbRepoToUserVotes } from \"./repo/entities/repo.to.user.votes.entity\";\nimport { DbRepoToUserStars } from \"./repo/entities/repo.to.user.stars.entity\";\nimport { DbRepoToUserSubmissions } from \"./repo/entities/repo.to.user.submissions.entity\";\nimport { DbRepoToUserStargazers } from \"./repo/entities/repo.to.user.stargazers.entity\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { VoteModule } from \"./vote/vote.module\";\nimport { StarModule } from \"./star/star.module\";\nimport { StargazeModule } from \"./stargaze/stargaze.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        apiConfig,\n        dbConfig,\n        endpointConfig\n      ],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\"db.connection\"),\n        host: configService.get(\"db.host\"),\n        port: configService.get(\"db.port\"),\n        username: configService.get(\"db.username\"),\n        password: configService.get(\"db.password\"),\n        database: configService.get(\"db.database\"),\n        autoLoadEntities: false,\n        entities: [\n          DbUser,\n          DbRepo,\n          DbContribution,\n          DbRepoToUserVotes,\n          DbRepoToUserStars,\n          DbRepoToUserSubmissions,\n          DbRepoToUserStargazers,\n        ],\n        synchronize: false,\n      }),\n      inject: [ConfigService],\n    }),\n    TerminusModule,\n    HttpModule,\n    AuthModule,\n    HealthModule,\n    RepoModule,\n    VoteModule,\n    StarModule,\n    StargazeModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  constructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello(user: SupabaseAuthUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/session')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'checkAuthSession', summary: 'Get authenticated session information'})@ApiOkResponse({type: SupabaseAuthResponse})@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SupabaseAuthResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, UseGuards } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseAuthUser } from \"nestjs-supabase-auth\";\nimport { User } from \"./supabase.user.decorator\";\nimport { SupabaseAuthResponse } from \"./dtos/supabase-auth-response.dto\";\n\n@Controller(\"auth\")\n@ApiTags(\"Authentication service\")\nexport class AuthController {\n  @Get(\"/session\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"checkAuthSession\",\n    summary: \"Get authenticated session information\",\n  })\n  @ApiOkResponse({ type: SupabaseAuthResponse })\n  @HttpCode(HttpStatus.OK)\n  getHello(\n    @User() user: SupabaseAuthUser,\n  ): SupabaseAuthResponse {\n    const { role, email, confirmed_at, last_sign_in_at, created_at, updated_at, user_metadata: { sub } } = user;\n\n    return {\n      id: `${String(sub)}`,\n      role,\n      email,\n      confirmed_at,\n      last_sign_in_at,\n      created_at,\n      updated_at\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseStrategy } from \"./supabase.strategy\";\nimport { AuthController } from \"./auth.controller\";\n\n@Module({\n  imports: [PassportModule],\n  providers: [SupabaseStrategy, SupabaseGuard],\n  exports: [SupabaseStrategy, SupabaseGuard],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbContribution.html":{"url":"entities/DbContribution.html","title":"entity - DbContribution","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbContribution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributor\n                            \n                            \n                                count\n                            \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                id\n                            \n                            \n                                last_merged_at\n                            \n                            \n                                repo\n                            \n                            \n                                repo_id\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_merged_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.contributions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:67\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  ManyToOne,\n  JoinColumn,\n  DeleteDateColumn,\n  CreateDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\n\n@Entity({\n  name: \"contributions\"\n})\nexport class DbContribution extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id!: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  repo_id!: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  count: number;\n\n  @Column({\n    type: \"timestamp without time zone\"\n  })\n  last_merged_at: Date;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at?: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at?: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at?: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  contributor: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, (repo) => repo.contributions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepo.html":{"url":"entities/DbRepo.html","title":"entity - DbRepo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributions\n                            \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                description\n                            \n                            \n                                full_name\n                            \n                            \n                                id\n                            \n                            \n                                is_fork\n                            \n                            \n                                issues\n                            \n                            \n                                language\n                            \n                            \n                                    Optional\n                                last_fetched_contributors_at\n                            \n                            \n                                license\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                pushed_at\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                stars\n                            \n                            \n                                subscribers\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                            \n                                user_id\n                            \n                            \n                                watchers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbContribution[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, contribution => contribution.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_fork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        last_fetched_contributors_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => to_timestamp(0)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        license\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pushed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserStars => repoToUserStars.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:150\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserVotes => repoToUserVotes.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:142\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repos)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  JoinColumn,\n  ManyToOne,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  DeleteDateColumn\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\n\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbContribution } from \"../../contribution/contribution.entity\";\nimport { DbRepoToUserVotes } from \"./repo.to.user.votes.entity\";\nimport { DbRepoToUserStars } from \"./repo.to.user.stars.entity\";\nimport { DbRepoToUserSubmissions } from \"./repo.to.user.submissions.entity\";\nimport { DbRepoToUserStargazers } from \"./repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"repos\",\n  orderBy: {\n    stars: \"DESC\",\n    name: \"ASC\"\n  }\n})\nexport class DbRepo extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id!: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  user_id!: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  issues: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  stars: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  watchers: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  subscribers: number;\n\n  @Column({ default: false })\n  is_fork: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at?: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at?: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  pushed_at?: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"to_timestamp(0)\",\n  })\n  last_fetched_contributors_at?: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at?: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  name: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  full_name: string;\n\n  @Column(\"text\")\n  description: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  language: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  license: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, user => user.repos)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  user!: DbUser;\n\n  @ApiHideProperty()\n  @OneToMany(() => DbContribution, contribution => contribution.repo)\n  contributions: DbContribution[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserVotes, repoToUserVotes => repoToUserVotes.repo)\n  repoToUserVotes: DbRepoToUserVotes[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserStars, repoToUserStars => repoToUserStars.repo)\n  repoToUserStars: DbRepoToUserStars[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.repo)\n  repoToUserSubmissions: DbRepoToUserSubmissions[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.repo)\n  repoToUserStargazers: DbRepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepoToUserStargazers.html":{"url":"entities/DbRepoToUserStargazers.html","title":"entity - DbRepoToUserStargazers","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepoToUserStargazers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.stargazers.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserStargazers)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repoToUserStargazers)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbRepo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stargazers\",\n})\nexport class DbRepoToUserStargazers {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at?: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at?: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.repoToUserStargazers)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, (repo) => repo.repoToUserStargazers)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepoToUserStars.html":{"url":"entities/DbRepoToUserStars.html","title":"entity - DbRepoToUserStars","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepoToUserStars\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.stars.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserStars)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repoToUserStars)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbRepo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stars\",\n})\nexport class DbRepoToUserStars {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at?: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at?: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.repoToUserStars)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, (repo) => repo.repoToUserStars)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepoToUserSubmissions.html":{"url":"entities/DbRepoToUserSubmissions.html","title":"entity - DbRepoToUserSubmissions","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepoToUserSubmissions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.submissions.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserSubmissions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repoToUserSubmissions)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbRepo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_submissions\",\n})\nexport class DbRepoToUserSubmissions {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at?: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at?: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, (repo) => repo.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepoToUserVotes.html":{"url":"entities/DbRepoToUserVotes.html","title":"entity - DbRepoToUserVotes","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepoToUserVotes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.votes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserVotes)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repoToUserVotes)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbRepo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_votes\",\n})\nexport class DbRepoToUserVotes {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at?: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at?: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, (user) => user.repoToUserVotes)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, (repo) => repo.repoToUserVotes)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbUser.html":{"url":"entities/DbUser.html","title":"entity - DbUser","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                has_stars_data\n                            \n                            \n                                id\n                            \n                            \n                                is_open_sauced_member\n                            \n                            \n                                is_private\n                            \n                            \n                                open_issues\n                            \n                            \n                                repos\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has_stars_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_open_sauced_member\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open_issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repo => repo.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserStars => repoToUserStars.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserVotes => repoToUserVotes.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  OneToMany,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\nimport { DbRepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\nimport { DbRepoToUserSubmissions } from \"../repo/entities/repo.to.user.submissions.entity\";\nimport { DbRepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"users\"\n})\nexport class DbUser extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id!: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  open_issues: number;\n\n  @Column({ default: false })\n  has_stars_data: boolean;\n\n  @Column({ default: false })\n  is_private: boolean;\n\n  @Column({ default: false })\n  is_open_sauced_member: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at?: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at?: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at?: Date;\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepo, repo => repo.user)\n  repos: DbRepo[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserVotes, repoToUserVotes => repoToUserVotes.user)\n  repoToUserVotes: DbRepoToUserVotes[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserStars, repoToUserStars => repoToUserStars.user)\n  repoToUserStars: DbRepoToUserStars[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.user)\n  repoToUserSubmissions: DbRepoToUserSubmissions[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.user)\n  repoToUserStargazers: DbRepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service() {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\"),\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\"),\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web() {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, ValidateNested } from \"class-validator\";\nimport { PageMetaDto } from \"./page-meta.dto\";\nimport { Type } from \"class-transformer\";\n\nexport class PageDto {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  @ValidateNested({ each: true })\n  @Type(() => Array)\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PageMetaDto })\n  @ValidateNested()\n  @Type(() => PageMetaDto)\n  readonly meta: PageMetaDto;\n\n  constructor(data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                limit\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { PageMetaParameters } from \"./page-meta-parameters.dto\";\n\nexport class PageMetaDto {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly limit: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: PageMetaParameters) {\n    this.page = pageOptionsDto.page || 1;\n    this.limit = pageOptionsDto.limit || 10;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.limit);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dtos/page-options.dto.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEnum, IsInt, IsOptional, Max, Min } from \"class-validator\";\nimport { OrderDirectionEnum } from \"../constants/order-direction.constant\";\n\nexport class PageOptionsDto {\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 50,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(50)\n  @IsOptional()\n  readonly limit?: number = 10;\n\n  @ApiPropertyOptional({ enum: OrderDirectionEnum, enumName: \"OrderDirectionEnum\", default: OrderDirectionEnum.DESC })\n  @IsEnum(OrderDirectionEnum)\n  @IsOptional()\n  readonly orderDirection?: OrderDirectionEnum = OrderDirectionEnum.DESC;\n\n  get skip(): number {\n    return ((this.page || 1) - 1) * (this.limit || 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoController.html":{"url":"controllers/RepoController.html","title":"controller - RepoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'findOneById', summary: 'Finds a repo by :id'})@HttpCode(HttpStatus.OK)@ApiOkResponse({type: DbRepo})@ApiNotFoundResponse({description: 'Repository not found'})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:owner/:repo')@ApiOperation({operationId: 'findOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo'})@HttpCode(HttpStatus.OK)@ApiOkResponse({type: DbRepo})@ApiNotFoundResponse({description: 'Repository not found'})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserList\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserList(pageOptionsDto: RepoPageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@ApiOperation({operationId: 'findAll', summary: 'Finds all repos and paginates them'})@HttpCode(HttpStatus.OK)@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, Param, Query } from \"@nestjs/common\";\nimport { RepoService } from \"./repo.service\";\nimport { DbRepo } from \"./entities/repo.entity\";\nimport { ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { RepoPageOptionsDto } from \"./dtos/repo-page-options.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service\")\nexport class RepoController {\n  constructor(private readonly repoService: RepoService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"findOneById\",\n    summary: \"Finds a repo by :id\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: DbRepo })\n  @ApiNotFoundResponse({\n    description: \"Repository not found\",\n  })\n  async findOneById(\n    @Param(\"id\") id: number,\n  ): Promise {\n    return this.repoService.findOneById(id);\n  }\n\n  @Get(\"/:owner/:repo\")\n  @ApiOperation({\n    operationId: \"findOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: DbRepo })\n  @ApiNotFoundResponse({\n    description: \"Repository not found\",\n  })\n  async findOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n  ): Promise {\n    return this.repoService.findOneByOwnerAndRepo(owner, repo);\n  }\n\n  @Get(\"/list\")\n  @ApiOperation({\n    operationId: \"findAll\",\n    summary: \"Finds all repos and paginates them\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  async findUserList(\n    @Query() pageOptionsDto: RepoPageOptionsDto,\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepoModule.html":{"url":"modules/RepoModule.html","title":"module - RepoModule","body":"\n                   \n\n\n\n\n    Modules\n    RepoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\n\nRepoService \n\nRepoService \n\n\n\nRepoModule\n\nRepoModule\n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/repo/repo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepoService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"./entities/repo.entity\";\nimport { RepoService } from \"./repo.service\";\nimport { RepoController } from \"./repo.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbRepo])],\n  controllers: [RepoController],\n  providers: [RepoService],\n  exports: [RepoService],\n})\nexport class RepoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RepoPageOptionsDto.html":{"url":"classes/RepoPageOptionsDto.html","title":"class - RepoPageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RepoPageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/dtos/repo-page-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                orderBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoOrderFieldsEnum\n\n                    \n                \n                \n                    \n                        Default value : RepoOrderFieldsEnum.stars\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: RepoOrderFieldsEnum, enumName: 'RepoOrderFieldsEnum', default: undefined})@IsEnum(RepoOrderFieldsEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/dtos/repo-page-options.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsEnum, IsOptional } from \"class-validator\";\nimport { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\n\nexport enum RepoOrderFieldsEnum {\n  issues = \"issues\",\n  stars = \"stars\",\n  watchers = \"watchers\",\n  subscribers = \"subscribers\",\n  created_at = \"created_at\",\n  updated_at = \"updated_at\",\n  name = \"name\",\n  contributionsCount = \"contributionsCount\",\n  votesCount = \"votesCount\",\n  submissionsCount = \"submissionsCount\",\n  stargazersCount = \"stargazersCount\",\n  starsCount = \"starsCount\",\n}\n\nexport class RepoPageOptionsDto extends PageOptionsDto {\n  @ApiPropertyOptional({\n    enum: RepoOrderFieldsEnum,\n    enumName: \"RepoOrderFieldsEnum\",\n    default: RepoOrderFieldsEnum.stars\n  })\n  @IsEnum(RepoOrderFieldsEnum)\n  @IsOptional()\n  readonly orderBy?: RepoOrderFieldsEnum = RepoOrderFieldsEnum.stars;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepoService.html":{"url":"injectables/RepoService.html","title":"injectable - RepoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                            \n                                subQueryCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/repo/repo.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: RepoPageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subQueryCount\n                        \n                    \n                \n            \n            \n                \nsubQueryCount(subQuery: SelectQueryBuilder, entity: string, alias: string, target: string)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    subQuery\n                                    \n                                            SelectQueryBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    entity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"repo\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository, SelectQueryBuilder } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"./entities/repo.entity\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { RepoPageOptionsDto } from \"./dtos/repo-page-options.dto\";\nimport { OrderDirectionEnum } from \"../common/constants/order-direction.constant\";\n\n@Injectable()\nexport class RepoService {\n  constructor(\n    @InjectRepository(DbRepo)\n    private repoRepository: Repository,\n  ) {}\n\n  subQueryCount(subQuery: SelectQueryBuilder, entity: string , alias: string, target = \"repo\") {\n    const aliasName = `${alias}Count`;\n    const aliasTable = `${alias}CountSelect`;\n\n    return subQuery\n      .select(\"COUNT(DISTINCT id)\", aliasName)\n      .from(entity, aliasTable)\n      .where(`${aliasTable}.${target}_id = ${target}.id`);\n  }\n\n  baseQueryBuilder() {\n    const builder = this.repoRepository.createQueryBuilder(\"repo\")\n      // .select(['repo.id'])\n      // .leftJoinAndSelect(\"repo.user\", \"user\")\n      // .leftJoinAndSelect(DbRepoToUserStars, \"stars\")\n      // .leftJoinAndMapMany(\"repo.contributions\", DbContribution, \"contributions\", \"contributions.repo_id = repo.id\")\n      .addSelect((qb) => this.subQueryCount(qb, \"Contribution\", \"contributions\"), \"contributionsCount\")\n      .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserVotes\", \"votes\"), \"votesCount\")\n      .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserSubmissions\", \"submissions\"), \"submissionsCount\")\n      .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserStargazers\", \"stargazers\"), \"stargazersCount\")\n      .addSelect((qb) => this.subQueryCount(qb, \"RepoToUserStars\", \"stars\"), \"starsCount\")\n      .loadRelationCountAndMap(\"repo.contributionsCount\", \"repo.contributions\")\n      .loadRelationCountAndMap(\"repo.votesCount\", \"repo.repoToUserVotes\")\n      .loadRelationCountAndMap(\"repo.submissionsCount\", \"repo.repoToUserSubmissions\")\n      .loadRelationCountAndMap(\"repo.stargazersCount\", \"repo.repoToUserStargazers\")\n      .loadRelationCountAndMap(\"repo.starsCount\", \"repo.repoToUserStars\");\n\n    return builder;\n  }\n\n  async findOneById(id: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.id = :id\", { id });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findOneByOwnerAndRepo(owner: string, repo: string): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.full_name = :name\", {\n        name: `${owner}/${repo}`\n      });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findAll(\n    pageOptionsDto: RepoPageOptionsDto\n  ): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n    const orderField = pageOptionsDto.orderBy || \"is_fork\";\n\n    queryBuilder\n      .orderBy(`\"repo\".\"is_fork\"`, OrderDirectionEnum.ASC)\n      .addOrderBy(`\"${orderField}\"`, pageOptionsDto.orderDirection)\n      .addOrderBy(`\"repo\".\"stars\"`, OrderDirectionEnum.DESC)\n      .addOrderBy(`\"repo\".\"created_at\"`, OrderDirectionEnum.DESC)\n      .offset(pageOptionsDto.skip)\n      .limit(pageOptionsDto.limit);\n\n    // console.log(queryBuilder.getSql());\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoStarController.html":{"url":"controllers/RepoStarController.html","title":"controller - RepoStarController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoStarController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/star/repo-star.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downStarOneById\n                            \n                            \n                                    Async\n                                downStarOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                starOneById\n                            \n                            \n                                    Async\n                                starOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStarOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStarOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/star')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downStarOneById', summary: 'Finds a repo by :id and removes existing star'})@ApiOkResponse({description: 'Returns the repo star', type: DbRepoToUserStars})@ApiNotFoundResponse({description: 'Repo or star not found'})@ApiConflictResponse({description: 'You have already removed your star'})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStarOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStarOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/star')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downStarOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and removes existing star'})@ApiOkResponse({description: 'Returns the repo star', type: DbRepo})@ApiNotFoundResponse({description: 'Repo or star not found'})@ApiConflictResponse({description: 'You have already removed your star'})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        starOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    starOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/star')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'starOneById', summary: 'Finds a repo by :id and adds a star'})@ApiOkResponse({description: 'Returns the repo star', type: DbRepoToUserStars})@ApiNotFoundResponse({description: 'Repo or star not found'})@ApiConflictResponse({description: 'You have already starred this repo'})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        starOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    starOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/star')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'starOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and adds a star'})@ApiOkResponse({description: 'Returns the repo star', type: DbRepo})@ApiNotFoundResponse({description: 'Repo or star not found'})@ApiConflictResponse({description: 'You have already starred this repo'})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param, Put, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags\n} from \"@nestjs/swagger\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { StarService } from \"./star.service\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { DbRepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service guarded\", \"Star service\")\nexport class RepoStarController {\n  constructor(\n    private readonly repoService: RepoService,\n    private readonly starService: StarService,\n  ) {}\n\n  @Put(\"/:id/star\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"starOneById\",\n    summary: \"Finds a repo by :id and adds a star\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo star\",\n    type: DbRepoToUserStars\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or star not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already starred this repo\",\n  })\n  async starOneById(\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.starService.starByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/star\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"starOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and adds a star\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo star\",\n    type: DbRepo\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or star not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already starred this repo\",\n  })\n  async starOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.starService.starByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/star\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downStarOneById\",\n    summary: \"Finds a repo by :id and removes existing star\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo star\",\n    type: DbRepoToUserStars\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or star not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already removed your star\",\n  })\n  async downStarOneById(\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.starService.downStarByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/star\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downStarOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and removes existing star\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo star\",\n    type: DbRepo\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or star not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already removed your star\",\n  })\n  async downStarOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.starService.downStarByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoStargazeController.html":{"url":"controllers/RepoStargazeController.html","title":"controller - RepoStargazeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoStargazeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stargaze/repo-stargaze.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downStargazeOneById\n                            \n                            \n                                    Async\n                                downStargazeOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                stargazeOneById\n                            \n                            \n                                    Async\n                                stargazeOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStargazeOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStargazeOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/stargaze')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downStargazeOneById', summary: 'Finds a repo by :id and unfollows'})@ApiOkResponse({description: 'Returns the repo follow', type: DbRepoToUserStargazers})@ApiNotFoundResponse({description: 'Repo or follow not found'})@ApiConflictResponse({description: 'You have already unfollowed this repo'})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStargazeOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStargazeOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/stargaze')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downStargazeOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and unfollows'})@ApiOkResponse({description: 'Returns the repo follow', type: DbRepo})@ApiNotFoundResponse({description: 'Repo or stargaze not found'})@ApiConflictResponse({description: 'You have already unfollowed this repo'})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        stargazeOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    stargazeOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/stargaze')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'stargazeOneById', summary: 'Finds a repo by :id and follows'})@ApiOkResponse({description: 'Returns the repo follow', type: DbRepoToUserStargazers})@ApiNotFoundResponse({description: 'Repo or follow not found'})@ApiConflictResponse({description: 'You have already followed this repo'})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        stargazeOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    stargazeOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/stargaze')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'stargazeOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and follows'})@ApiOkResponse({description: 'Returns the repo follow', type: DbRepoToUserStargazers})@ApiNotFoundResponse({description: 'Repo or follow not found'})@ApiConflictResponse({description: 'You have already followed this repo'})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param, Put, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags\n} from \"@nestjs/swagger\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { StargazeService } from \"./stargaze.service\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { DbRepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service guarded\", \"Stargaze service\")\nexport class RepoStargazeController {\n  constructor(\n    private readonly repoService: RepoService,\n    private readonly stargazeService: StargazeService,\n  ) {}\n\n  @Put(\"/:id/stargaze\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"stargazeOneById\",\n    summary: \"Finds a repo by :id and follows\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo follow\",\n    type: DbRepoToUserStargazers\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or follow not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already followed this repo\",\n  })\n  async stargazeOneById(\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.stargazeService.stargazeByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/stargaze\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"stargazeOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and follows\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo follow\",\n    type: DbRepoToUserStargazers\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or follow not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already followed this repo\",\n  })\n  async stargazeOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.stargazeService.stargazeByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/stargaze\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downStargazeOneById\",\n    summary: \"Finds a repo by :id and unfollows\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo follow\",\n    type: DbRepoToUserStargazers\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or follow not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already unfollowed this repo\",\n  })\n  async downStargazeOneById(\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.stargazeService.downStargazeByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/stargaze\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downStargazeOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and unfollows\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo follow\",\n    type: DbRepo\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or stargaze not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already unfollowed this repo\",\n  })\n  async downStargazeOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.stargazeService.downStargazeByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoVoteController.html":{"url":"controllers/RepoVoteController.html","title":"controller - RepoVoteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoVoteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vote/repo-vote.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downVoteOneById\n                            \n                            \n                                    Async\n                                downVoteOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                voteOneById\n                            \n                            \n                                    Async\n                                voteOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downVoteOneById', summary: 'Finds a repo by :id and removes existing vote'})@ApiOkResponse({description: 'Returns the repo vote', type: DbRepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already removed your vote'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downVoteOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and removes existing vote'})@ApiOkResponse({description: 'Returns the repo vote', type: DbRepo})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already removed your vote'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'voteOneById', summary: 'Finds a repo by :id and adds a vote'})@ApiOkResponse({description: 'Returns the repo vote', type: DbRepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already voted for this repo'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'voteOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and adds a vote'})@ApiOkResponse({description: 'Returns the repo vote', type: DbRepo})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already voted for this repo'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param, Put, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags\n} from \"@nestjs/swagger\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { VoteService } from \"./vote.service\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { DbRepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service guarded\", \"Vote service\")\nexport class RepoVoteController {\n  constructor(\n    private readonly repoService: RepoService,\n    private readonly voteService: VoteService,\n  ) {}\n\n  @Put(\"/:id/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"voteOneById\",\n    summary: \"Finds a repo by :id and adds a vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: DbRepoToUserVotes\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or vote not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already voted for this repo\",\n  })\n  async voteOneById(\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.voteService.voteByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"voteOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and adds a vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: DbRepo\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or vote not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already voted for this repo\",\n  })\n  async voteOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.voteService.voteByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downVoteOneById\",\n    summary: \"Finds a repo by :id and removes existing vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: DbRepoToUserVotes\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or vote not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already removed your vote\",\n  })\n  async downVoteOneById(\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.voteService.downVoteByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downVoteOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and removes existing vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: DbRepo\n  })\n  @ApiNotFoundResponse({\n    description: \"Repo or vote not found\",\n  })\n  @ApiConflictResponse({\n    description: \"You have already removed your vote\",\n  })\n  async downVoteOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.voteService.downVoteByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StarModule.html":{"url":"modules/StarModule.html","title":"module - StarModule","body":"\n                   \n\n\n\n\n    Modules\n    StarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StarModule\n\n\n\ncluster_StarModule_exports\n\n\n\ncluster_StarModule_providers\n\n\n\n\nStarService \n\nStarService \n\n\n\nStarModule\n\nStarModule\n\nStarService  -->\n\nStarModule->StarService \n\n\n\n\n\nRepoService\n\nRepoService\n\nStarModule -->\n\nRepoService->StarModule\n\n\n\n\n\nStarService\n\nStarService\n\nStarModule -->\n\nStarService->StarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/star/star.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                        \n                            StarService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoStarController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StarService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { StarService } from \"./star.service\";\nimport { RepoStarController } from \"./repo-star.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([\n    DbRepo,\n    DbRepoToUserStars\n  ])],\n  controllers: [RepoStarController],\n  providers: [RepoService, StarService],\n  exports: [StarService],\n})\nexport class StarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StarService.html":{"url":"injectables/StarService.html","title":"injectable - StarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/star/star.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downStarByRepoId\n                            \n                            \n                                    Async\n                                starByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoStarRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/star/star.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoStarRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/star/star.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStarByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStarByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/star/star.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        starByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    starByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/star/star.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbRepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\n\n@Injectable()\nexport class StarService {\n  constructor(\n    @InjectRepository(DbRepoToUserStars)\n    private repoStarRepository: Repository,\n  ) {}\n\n  baseQueryBuilder() {\n    const builder = this.repoStarRepository.createQueryBuilder(\"r2stars\")\n      .withDeleted();\n\n    return builder;\n  }\n\n  async starByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2stars.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2stars.user_id = :userId\", { userId });\n\n    const starExists = await queryBuilder.getOne();\n\n    if (starExists) {\n      if (starExists.deleted_at === null) {\n        throw new ConflictException(\"You have already starred this repo\");\n      }\n\n      await this.repoStarRepository.restore(starExists.id);\n\n      return starExists;\n    }\n\n    return this.repoStarRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downStarByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2stars.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2stars.user_id = :userId\", { userId });\n\n    const starExists = await queryBuilder.getOne();\n\n    if (!starExists) {\n      throw new NotFoundException(\"You have not starred this repo\");\n    }\n\n    if (starExists.deleted_at !== null) {\n      throw new ConflictException(\"You have already removed your star\");\n    }\n\n    await this.repoStarRepository.softDelete(starExists.id);\n\n    return starExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StargazeModule.html":{"url":"modules/StargazeModule.html","title":"module - StargazeModule","body":"\n                   \n\n\n\n\n    Modules\n    StargazeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StargazeModule\n\n\n\ncluster_StargazeModule_providers\n\n\n\ncluster_StargazeModule_exports\n\n\n\n\nStargazeService \n\nStargazeService \n\n\n\nStargazeModule\n\nStargazeModule\n\nStargazeService  -->\n\nStargazeModule->StargazeService \n\n\n\n\n\nRepoService\n\nRepoService\n\nStargazeModule -->\n\nRepoService->StargazeModule\n\n\n\n\n\nStargazeService\n\nStargazeService\n\nStargazeModule -->\n\nStargazeService->StargazeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stargaze/stargaze.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                        \n                            StargazeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoStargazeController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StargazeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { StargazeService } from \"./stargaze.service\";\nimport { RepoStargazeController } from \"./repo-stargaze.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([\n    DbRepo,\n    DbRepoToUserStargazers\n  ])],\n  controllers: [RepoStargazeController],\n  providers: [RepoService, StargazeService],\n  exports: [StargazeService],\n})\nexport class StargazeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StargazeService.html":{"url":"injectables/StargazeService.html","title":"injectable - StargazeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StargazeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stargaze/stargaze.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downStargazeByRepoId\n                            \n                            \n                                    Async\n                                stargazeByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoStargazeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/stargaze/stargaze.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoStargazeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/stargaze/stargaze.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStargazeByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStargazeByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/stargaze/stargaze.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        stargazeByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    stargazeByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/stargaze/stargaze.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbRepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\n\n@Injectable()\nexport class StargazeService {\n  constructor(\n    @InjectRepository(DbRepoToUserStargazers)\n    private repoStargazeRepository: Repository,\n  ) {}\n\n  baseQueryBuilder() {\n    const builder = this.repoStargazeRepository.createQueryBuilder(\"r2stargazes\")\n      .withDeleted();\n\n    return builder;\n  }\n\n  async stargazeByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2stargazes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2stargazes.user_id = :userId\", { userId });\n\n    const stargazeExists = await queryBuilder.getOne();\n\n    if (stargazeExists) {\n      if (stargazeExists.deleted_at === null) {\n        throw new ConflictException(\"You have already unfollowed this repo\");\n      }\n\n      await this.repoStargazeRepository.restore(stargazeExists.id);\n\n      return stargazeExists;\n    }\n\n    return this.repoStargazeRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downStargazeByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2stargazes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2stargazes.user_id = :userId\", { userId });\n\n    const stargazeExists = await queryBuilder.getOne();\n\n    if (!stargazeExists) {\n      throw new NotFoundException(\"You have not followed this repo\");\n    }\n\n    if (stargazeExists.deleted_at !== null) {\n      throw new ConflictException(\"You have already unfollowed this repo\");\n    }\n\n    await this.repoStargazeRepository.softDelete(stargazeExists.id);\n\n    return stargazeExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SupabaseAuthResponse.html":{"url":"classes/SupabaseAuthResponse.html","title":"class - SupabaseAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SupabaseAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/supabase-auth-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                confirmed_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                created_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                    Optional\n                                last_sign_in_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        confirmed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        last_sign_in_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        user_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SupabaseAuthResponse {\n  readonly id: string;\n  readonly user_name?: string;\n  readonly role?: string;\n  readonly email?: string;\n  readonly confirmed_at?: string;\n  readonly last_sign_in_at?: string;\n  readonly created_at?: string;\n  readonly updated_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseGuard.html":{"url":"injectables/SupabaseGuard.html","title":"injectable - SupabaseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class SupabaseGuard extends AuthGuard(\"supabase\") {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseStrategy.html":{"url":"injectables/SupabaseStrategy.html","title":"injectable - SupabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/supabase.strategy.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(req: never)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(user: SupabaseAuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { SupabaseAuthStrategy, SupabaseAuthUser } from \"nestjs-supabase-auth\";\n\nexport type SupabaseAuthRequest = Partial & { user?: SupabaseAuthUser };\n\n@Injectable()\nexport class SupabaseStrategy extends PassportStrategy(\n  SupabaseAuthStrategy,\n  \"supabase\",\n) {\n  public constructor() {\n    super({\n      supabaseUrl: process.env.SUPABASE_URL,\n      supabaseKey: process.env.SUPABASE_API_KEY,\n      supabaseOptions: {},\n      supabaseJwtSecret: process.env.SUPABASE_JWT_SECRET,\n      extractor: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate(user: SupabaseAuthUser) {\n    return super.validate(user);\n  }\n\n  authenticate(req: never) {\n    super.authenticate(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VoteModule.html":{"url":"modules/VoteModule.html","title":"module - VoteModule","body":"\n                   \n\n\n\n\n    Modules\n    VoteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VoteModule\n\n\n\ncluster_VoteModule_providers\n\n\n\ncluster_VoteModule_exports\n\n\n\n\nVoteService \n\nVoteService \n\n\n\nVoteModule\n\nVoteModule\n\nVoteService  -->\n\nVoteModule->VoteService \n\n\n\n\n\nRepoService\n\nRepoService\n\nVoteModule -->\n\nRepoService->VoteModule\n\n\n\n\n\nVoteService\n\nVoteService\n\nVoteModule -->\n\nVoteService->VoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/vote/vote.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                        \n                            VoteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoVoteController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VoteService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { VoteService } from \"./vote.service\";\nimport { RepoVoteController } from \"./repo-vote.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([\n    DbRepo,\n    DbRepoToUserVotes\n  ])],\n  controllers: [RepoVoteController],\n  providers: [RepoService, VoteService],\n  exports: [VoteService],\n})\nexport class VoteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VoteService.html":{"url":"injectables/VoteService.html","title":"injectable - VoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vote/vote.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downVoteByRepoId\n                            \n                            \n                                    Async\n                                voteByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoVoteRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/vote/vote.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoVoteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbRepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\n\n@Injectable()\nexport class VoteService {\n  constructor(\n    @InjectRepository(DbRepoToUserVotes)\n    private repoVoteRepository: Repository,\n  ) {}\n\n  baseQueryBuilder() {\n    const builder = this.repoVoteRepository.createQueryBuilder(\"r2votes\")\n      .withDeleted();\n\n    return builder;\n  }\n\n  async voteByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2votes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2votes.user_id = :userId\", { userId });\n\n    const voteExists = await queryBuilder.getOne();\n\n    if (voteExists) {\n      if (voteExists.deleted_at === null) {\n        throw new ConflictException(\"You have already voted for this repo\");\n      }\n\n      await this.repoVoteRepository.restore(voteExists.id);\n\n      return voteExists;\n    }\n\n    return this.repoVoteRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downVoteByRepoId(repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2votes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2votes.user_id = :userId\", { userId });\n\n    const voteExists = await queryBuilder.getOne();\n\n    if (!voteExists) {\n      throw new NotFoundException(\"You have not voted for this repo\");\n    }\n\n    if (voteExists.deleted_at !== null) {\n      throw new ConflictException(\"You have already removed your vote\");\n    }\n\n    await this.repoVoteRepository.softDelete(voteExists.id);\n\n    return voteExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.9.0-beta.10 (2022-08-26)\n🐛 Bug Fixes\n\nundo rogue controller route name change (6a4810f)\n\n1.9.0-beta.9 (2022-08-25)\n🐛 Bug Fixes\n\ncorrect repo contributions count (8952f19)\n\n1.9.0-beta.8 (2022-08-25)\n🐛 Bug Fixes\n\nmake order work for repo listing (69b2067)\n\n🎨 Styles\n\ncorrect lint errors from hasty push (fe20c2d)\n\n1.9.0-beta.7 (2022-08-25)\n📝 Documentation\n\nadd powered by digital ocean readme badge and referal link (5925b74)\n\n1.9.0-beta.6 (2022-08-25)\n🧑‍💻 Code Refactoring\n\ncode split repository entities (ae43450)\n\n🍕 Features\n\nadd repo up vote and down vote functionality (16678a7), closes #19\n\n1.9.0-beta.5 (2022-08-19)\n🔁 Continuous Integration\n\nattempt to push docr only on successful release (957b86e)\n\n1.9.0-beta.4 (2022-08-19)\n🔁 Continuous Integration\n\nimprove local development workflow along vite apps (b9f3798)\n\n1.9.0-beta.3 (2022-08-19)\n🐛 Bug Fixes\n\ncorrect counting of many to many tables (7249714)\n\n🧑‍💻 Code Refactoring\n\ncorrect stray console.log (b4c9879)\n\n1.9.0-beta.2 (2022-08-19)\n🔁 Continuous Integration\n\nonly deploy documentation on main branch (fad79b1), closes #14\n\n🍕 Features\n\nadd supabase auth session handler and working guards (ed9729a), closes #24\n\n1.9.0-beta.1 (2022-08-18)\n🍕 Features\n\nimplement simple supabase strategy guard (2f966a3)\n\n1.8.2 (2022-08-12)\n🐛 Bug Fixes\n\ncorrect ci release url docs (f0304d4)\n\n1.8.1 (2022-08-12)\n🔁 Continuous Integration\n\nimprove release urls (dd5e668)\n\n1.8.0 (2022-08-12)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\nupdate readme badges (17c54b9)\n\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\nadd get repository by id and full name (4552c66)\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.5 (2022-08-06)\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.4 (2022-08-06)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\n\n1.8.0-beta.3 (2022-08-05)\n🍕 Features\n\nadd get repository by id and full name (4552c66)\n\n1.8.0-beta.2 (2022-08-05)\n🍕 Features\n\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n1.8.0-beta.1 (2022-07-30)\n📝 Documentation\n\nupdate readme badges (17c54b9)\n\n1.7.12 (2022-07-30)\n🐛 Bug Fixes\n\npush all tags to docr (a9e1df6)\n\n1.7.11 (2022-07-30)\n🔁 Continuous Integration\n\npush to digital ocean container registry (cd8f21d)\n\n1.7.10 (2022-07-30)\n🔁 Continuous Integration\n\ncorrect the digital ocean tagging (673dca9)\n\n1.7.9 (2022-07-30)\n✅ Tests\n\ncheck release job outputs (31e4d60)\n\n1.7.8 (2022-07-29)\n🔁 Continuous Integration\n\ncorrect environment variables (6d23c24)\n\n1.7.7 (2022-07-29)\n✅ Tests\n\nprint out proper pull request target env variables (20880c7)\n\n1.7.6 (2022-07-29)\n🔁 Continuous Integration\n\necho github context (7adfb6b)\n\n1.7.5 (2022-07-29)\n🔁 Continuous Integration\n\nprovide variable as ENV (b57f47b)\n\n1.7.4 (2022-07-29)\n🔁 Continuous Integration\n\nchange pull request event target (20bc1e7)\n\n1.7.3 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect digital ocean docker tag based on target (b1a67da)\n\n1.7.2 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect static domain and release clean up workflow (a229a3b)\nupdate dependencies and list docr tags (79bf61d)\n\n🔁 Continuous Integration\n\nadd docr push dry run (5eddeb1)\nadd release workflow concurrency for demo purposes (63d6a92)\nextend digital ocean temporary token (d0d5ca5)\ntest bash variable environment (e1fe498)\n\n1.7.1 (2022-07-27)\n🔁 Continuous Integration\n\ndeploy developer mkdocs to github pages test (8837b2a)\n\n1.7.0 (2022-07-27)\n📝 Documentation\n\nchange github pages deploy to take tech mkdocs instead of api (bc3a37d)\n\n1.6.17 (2022-07-24)\n🔁 Continuous Integration\n\nadd temporary debug logging (ba8dfbb)\n\n1.6.16 (2022-07-23)\n🔁 Continuous Integration\n\nproperly copy contents from mounted container volume (c013b70)\n\n1.6.15 (2022-07-23)\n🔁 Continuous Integration\n\ncreate new container from release (b1eda28)\n\n1.6.14 (2022-07-23)\n🔁 Continuous Integration\n\ntest file is generated properly (c127cea)\n\n🤖 Build System\n\nattempt docker inspection again (2c0b3d1)\n\n1.6.13 (2022-07-23)\n🔁 Continuous Integration\n\ntest proper container name exposing (cc46460)\n\n1.6.12 (2022-07-23)\n🔁 Continuous Integration\n\ntest local swagger spec (7e9b8a4)\n\n1.6.11 (2022-07-21)\n🔁 Continuous Integration\n\ntest getting docker process list output (f5385b3)\n\n1.6.10 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to get value from running container (911df68)\ntest accessing running container by re-creating (77c734c)\n\n1.6.9 (2022-07-21)\n🔁 Continuous Integration\n\nget container name from runner context (94ba4e1)\n\n1.6.8 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to assign docker service name to running container (fe4b9e9)\n\n1.6.7 (2022-07-21)\n✅ Tests\n\nmount docker service and volumes (0848443)\n\n1.6.6 (2022-07-21)\n✅ Tests\n\nload docker container from artifact (b7c3395)\n\n1.6.5 (2022-07-21)\n🐛 Bug Fixes\n\ncorrect docker local creation (cd306f8)\n\n1.6.4 (2022-07-21)\n✅ Tests\n\nload docker container in flight environment (e145e2d)\n\n1.6.3 (2022-07-20)\n🤖 Build System\n\nupdate deployment and add simple repo submission structure (33fea7e)\n\n1.6.2 (2022-07-19)\n🤖 Build System\n\nrevert to production release container (8aee8e5)\n\n1.6.1 (2022-07-19)\n🤖 Build System\n\nimprove swagger generation (22d3cc1)\n\n🐛 Bug Fixes\n\ncorrect workflow yaml comments (7fe63aa)\n\n1.6.0 (2022-07-19)\n🎨 Styles\n\nimplement correct eslint rules for immediate scoping (bd6d621), closes #1\n\n🍕 Features\n\nupdate dependencies and nest to stable new version (c24937f)\n\n🔁 Continuous Integration\n\nadd docker build and static swagger docs jobs (81e8bbc)\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n🤖 Build System\n\nadd better eslint baseline configuration (3918a78)\nadd minimal eslint configuration (a0db0aa)\nadd minor deployment improvements and github pages adjustments (cb83f9d)\nimplement prettier rules in typescript eslint (166050d)\n\n🐛 Bug Fixes\n\ncorrect release workflow artifact strategy (b5b6ac5)\ncorrect rogue workflow artifact (61b67d5)\n\n1.5.1 (2022-07-13)\n🔁 Continuous Integration\n\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n📦 0-vortex/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.5.0 (2022-06-21)\n🍕 Features\n\nimplement proper starsCount (fdc11ea)\nimplement proper votesCount (607cf5d)\n\n1.4.0 (2022-06-17)\n🍕 Features\n\nadd minimal pagination decorator (ac31556)\n\n1.3.0 (2022-06-10)\n🍕 Features\n\nadd abstract pagination component (630f3b5)\nadd repository relations and limit select (b4d3785)\n\n1.2.0 (2022-06-09)\n🍕 Features\n\nattach user relationship to get repos (e663170)\n\n1.1.0 (2022-06-07)\n🍕 Features\n\nadd basic tld entities (273f337)\n\n1.0.2 (2022-06-05)\n🤖 Build System\n\nadd supabase migration system (34d521d)\n\n1.0.1 (2022-06-05)\n✅ Tests\n\nverify database diagrams generation (73d1c74)\n\n1.0.0 (2022-06-05)\n🍕 Features\n\nadjust health checks endpoints (cb9206d)\ninitial commit (5e7c6c7)\n\n🐛 Bug Fixes\n\ncorrect npm scripts, workflow node versiond and update deps (2c0b15f)\nupdate nest typeorm integration and correct db status (58bf922)\n\n🔥 Performance Improvements\n\nremove minor version engines requirements (7db9008)\n\n✅ Tests\n\nexplain current test configuration and unblock pipelines (272c09a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/supabase-auth-response.dto.ts\n            \n            class\n            SupabaseAuthResponse\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/supabase.guard.ts\n            \n            injectable\n            SupabaseGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.strategy.ts\n            \n            injectable\n            SupabaseStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/supabase.user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.user.decorator.ts\n            \n            variable\n            UserId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/dtos/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/endpoint.config.ts\n            \n            variable\n            getDomain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.entity.ts\n            \n            entity\n            DbContribution\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/dtos/repo-page-options.dto.ts\n            \n            class\n            RepoPageOptionsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.entity.ts\n            \n            entity\n            DbRepo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.stargazers.entity.ts\n            \n            entity\n            DbRepoToUserStargazers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.stars.entity.ts\n            \n            entity\n            DbRepoToUserStars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.submissions.entity.ts\n            \n            entity\n            DbRepoToUserSubmissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.votes.entity.ts\n            \n            entity\n            DbRepoToUserVotes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.controller.ts\n            \n            controller\n            RepoController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repo/repo.service.ts\n            \n            injectable\n            RepoService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/star/repo-star.controller.ts\n            \n            controller\n            RepoStarController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/star/star.service.ts\n            \n            injectable\n            StarService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/stargaze/repo-stargaze.controller.ts\n            \n            controller\n            RepoStargazeController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/stargaze/stargaze.service.ts\n            \n            injectable\n            StargazeService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            DbUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/vote/repo-vote.controller.ts\n            \n            controller\n            RepoVoteController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/vote/vote.service.ts\n            \n            injectable\n            VoteService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderDirectionEnum   (src/.../order-direction.constant.ts)\n                        \n                        \n                            RepoOrderFieldsEnum   (src/.../repo-page-options.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/order-direction.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderDirectionEnum\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n    src/repo/dtos/repo-page-options.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        RepoOrderFieldsEnum\n                    \n                \n                        \n                            \n                                 issues\n                            \n                        \n                        \n                            \n                                Value : issues\n                            \n                        \n                        \n                            \n                                 stars\n                            \n                        \n                        \n                            \n                                Value : stars\n                            \n                        \n                        \n                            \n                                 watchers\n                            \n                        \n                        \n                            \n                                Value : watchers\n                            \n                        \n                        \n                            \n                                 subscribers\n                            \n                        \n                        \n                            \n                                Value : subscribers\n                            \n                        \n                        \n                            \n                                 created_at\n                            \n                        \n                        \n                            \n                                Value : created_at\n                            \n                        \n                        \n                            \n                                 updated_at\n                            \n                        \n                        \n                            \n                                Value : updated_at\n                            \n                        \n                        \n                            \n                                 name\n                            \n                        \n                        \n                            \n                                Value : name\n                            \n                        \n                        \n                            \n                                 contributionsCount\n                            \n                        \n                        \n                            \n                                Value : contributionsCount\n                            \n                        \n                        \n                            \n                                 votesCount\n                            \n                        \n                        \n                            \n                                Value : votesCount\n                            \n                        \n                        \n                            \n                                 submissionsCount\n                            \n                        \n                        \n                            \n                                Value : submissionsCount\n                            \n                        \n                        \n                            \n                                 stargazersCount\n                            \n                        \n                        \n                            \n                                Value : stargazersCount\n                            \n                        \n                        \n                            \n                                 starsCount\n                            \n                        \n                        \n                            \n                                Value : starsCount\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n  🍕 Open Sauced Nest Supabase API🍕\n  The path to your next Open Source contribution\n  \n  \n  \n\n\n\n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n🚀 Live release environments\n\napi.opensauced.pizza\nbeta.api.opensauced.pizza\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=16.7.0\nnpm>=8.0.0\ndocker>=20.10.12\nsupabase>=0.18.0\n\n🔑 Database commands\nStarting the Supabase Studio\nFirst thing we have to do for local development is start the studio locally at localhost:54321:\nnpm run db:startMake changes\nIf we are adding a new table structure, first do it visually in the Supabase Studio and test locally.\nCheck the migration difference with the following command:\nnpm run db:changesIf everything is fine we can run the following command to apply the changes to the database:\nnpm run db:commit add_table_nameTest changes\nSimplest way to test the migrations are working is to reset the local database:\nnpm run db:resetPush changes\nIf everything is fine we can push the changes to the remote database:\nnpm run db:push🔑 Supabase structure\nClick the image to see the schema diagram full documentation.\n\n🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StargazeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VoteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\ncluster_StargazeModule\n\n\n\ncluster_StargazeModule_exports\n\n\n\ncluster_StargazeModule_providers\n\n\n\ncluster_StarModule\n\n\n\ncluster_StarModule_exports\n\n\n\ncluster_StarModule_providers\n\n\n\ncluster_VoteModule\n\n\n\ncluster_VoteModule_exports\n\n\n\ncluster_VoteModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nStarModule\n\nStarModule\n\nAppModule -->\n\nStarModule->AppModule\n\n\n\n\n\nStarService \n\nStarService \n\nStarService  -->\n\nStarModule->StarService \n\n\n\n\n\nStargazeModule\n\nStargazeModule\n\nAppModule -->\n\nStargazeModule->AppModule\n\n\n\n\n\nStargazeService \n\nStargazeService \n\nStargazeService  -->\n\nStargazeModule->StargazeService \n\n\n\n\n\nVoteModule\n\nVoteModule\n\nAppModule -->\n\nVoteModule->AppModule\n\n\n\n\n\nVoteService \n\nVoteService \n\nVoteService  -->\n\nVoteModule->VoteService \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\nStarModule -->\n\nRepoService->StarModule\n\n\n\nStargazeModule -->\n\nRepoService->StargazeModule\n\n\n\nVoteModule -->\n\nRepoService->VoteModule\n\n\n\n\n\nStargazeService\n\nStargazeService\n\nStargazeModule -->\n\nStargazeService->StargazeModule\n\n\n\n\n\nStarService\n\nStarService\n\nStarModule -->\n\nStarService->StarModule\n\n\n\n\n\nVoteService\n\nVoteService\n\nVoteModule -->\n\nVoteService->VoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.9.0-beta.10\n        \n            Description : API dot Open Sauced is NestJS and SupaBase powered OAS3 backend designed to remove client complexity and provide a structured graph of all @open-sauced integrations\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/api.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/api.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/api.opensauced.pizza.git\n        \n            Author : TED Vortex \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageMetaParameters   (src/.../page-meta-parameters.dto.ts)\n                        \n                        \n                            SupabaseAuthRequest   (src/.../supabase.strategy.ts)\n                        \n                        \n                            SupabaseAuthRequest   (src/.../supabase.user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/dtos/page-meta-parameters.dto.ts\n    \n    \n        \n            \n                \n                    \n                    PageMetaParameters\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/auth/supabase.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    SupabaseAuthRequest\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/auth/supabase.user.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    SupabaseAuthRequest\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            getDomain   (src/.../endpoint.config.ts)\n                        \n                        \n                            User   (src/.../supabase.user.decorator.ts)\n                        \n                        \n                            UserId   (src/.../supabase.user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  model: TModel,\n) => {\n  return applyDecorators(\n    ApiExtraModels(PageDto, model),\n    ApiOkResponse({\n      description: \"Successfully received model list\",\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PageDto) },\n          {\n            properties: {\n              data: {\n                type: \"array\",\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/config/endpoint.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (subdomain?: string) =>\n  new URL(`https://${subdomain ? `${subdomain}.` : \"\" }${process.env.DOMAIN || \"opensauced.pizza\"}`).toString()\n                    \n                \n\n\n        \n    \n\n    src/auth/supabase.user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.user?.user_metadata?.sub as string;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
