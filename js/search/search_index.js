var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.046,1,2.504]],["body/modules/AppModule.html",[0,1.382,1,5.032,2,1.388,3,2.154,4,2.977,5,2.977,6,4.067,7,0.021,8,4.067,9,4.067,10,4.067,11,4.067,12,4.067,13,4.067,14,4.067,15,2.29,16,1.56,17,1.388,18,0.252,19,0.228,20,0.203,21,3.481,22,2.623,23,0.536,24,0.684,25,1.892,26,1.312,27,4.806,28,5.075,29,2.977,30,4.806,31,3.481,32,4.109,33,2.645,34,4.806,35,3.481,36,3.481,37,5.504,38,1.176,39,3.481,40,4.806,41,3.481,42,4.806,43,3.481,44,4.806,45,3.481,46,3.481,47,1.056,48,1.388,49,2.154,50,2.033,51,2.154,52,2.977,53,2.03,54,2.198,55,2.03,56,2.198,57,2.03,58,2.198,59,2.03,60,2.198,61,3.481,62,3.481,63,3.481,64,3.481,65,3.481,66,3.481,67,3.481,68,2.977,69,3.481,70,2.645,71,3.481,72,3.481,73,0.415,74,3.481,75,3.481,76,3.481,77,2.977,78,3.481,79,3.481,80,3.481,81,3.481,82,3.481,83,2.396,84,3.481,85,3.481,86,2.29,87,1.388,88,3.481,89,3.481,90,1.001,91,1.769,92,0.252,93,0.113,94,1.056,95,1.176,96,0.013,97,0.013]],["title/controllers/AuthController.html",[98,1.046,99,2.504]],["body/controllers/AuthController.html",[7,0.021,18,0.316,19,0.285,20,0.255,23,0.497,24,0.856,73,0.665,90,1.253,92,0.316,93,0.141,96,0.016,97,0.016,98,1.253,99,3.841,100,3.725,101,2.213,102,3.887,103,0.483,104,1.884,105,6.155,106,4.356,107,5.55,108,1.011,109,4.356,110,5.579,111,2.835,112,3.033,113,4.771,114,4.356,115,4.356,116,0.719,117,4.356,118,1.394,119,0.763,120,0.763,121,1.93,122,1.471,123,4.468,124,4.356,125,4.356,126,2.751,127,3.524,128,2.659,129,2.835,130,2.213,131,1.067,132,1.952,133,3.725,134,3.309,135,2.545,136,4.356,137,4.356,138,4.356,139,4.356,140,4.356,141,1.952,142,4.356,143,2.751,144,2.213,145,4.356,146,4.356,147,1.642,148,4.771,149,4.771,150,4.771,151,4.771,152,2.225,153,2.225,154,4.356,155,4.356,156,4.771,157,1.253,158,1.321,159,4.356,160,4.356]],["title/modules/AuthModule.html",[0,1.046,6,2.297]],["body/modules/AuthModule.html",[0,1.703,2,1.909,3,2.653,6,4.613,7,0.021,15,2.822,16,2.145,17,1.909,18,0.347,19,0.313,20,0.28,22,2.281,23,0.5,24,0.941,90,1.703,91,3.008,92,0.347,93,0.155,96,0.017,97,0.017,99,4.425,132,3.306,133,4.093,161,4.093,162,4.093,163,4.093,164,4.659,165,4.787,166,3.218,167,5.921,168,3.637,169,4.787,170,4.787]],["title/modules/ContributionModule.html",[0,1.046,8,2.297]],["body/modules/ContributionModule.html",[0,1.69,2,1.885,3,2.633,7,0.021,8,4.574,15,2.8,16,2.119,17,1.885,18,0.343,19,0.309,20,0.276,22,2.253,23,0.515,24,0.929,25,2.57,26,1.782,47,1.291,48,1.885,51,2.633,90,1.69,91,2.985,92,0.343,93,0.153,96,0.016,97,0.016,166,3.194,171,4.043,172,4.043,173,4.043,174,4.302,175,2.243,176,4.728,177,4.401,178,3.592,179,2.119,180,4.043,181,0.983,182,4.728,183,2.986]],["title/classes/ContributionPageOptionsDto.html",[93,0.118,184,2.297]],["body/classes/ContributionPageOptionsDto.html",[7,0.021,18,0.297,19,0.268,20,0.24,23,0.433,73,0.756,92,0.389,93,0.174,96,0.015,97,0.015,103,0.455,108,1.472,116,1.047,120,1.223,131,1.005,152,2.14,153,2.14,184,3.389,185,2.23,186,4.077,187,1.924,188,2.591,189,2.917,190,2.281,191,1.543,192,2.661,193,4.544,194,3.389,195,4.077,196,5.002,197,2.661,198,3.449,199,5.115,200,4.077,201,4.544,202,3.695,203,4.102,204,4.102,205,1.116,206,1.546,207,4.077,208,3.494,209,3.116,210,3.116,211,3.116,212,5.115,213,3.508,214,3.494,215,2.591,216,3.116,217,3.508,218,3.116,219,3.508,220,3.695,221,3.116,222,4.077,223,2.824,224,2.824,225,1.733,226,3.695,227,3.695,228,4.077,229,4.077,230,4.102]],["title/injectables/ContributionService.html",[174,2.124,231,1.103]],["body/injectables/ContributionService.html",[7,0.021,18,0.3,19,0.271,20,0.242,23,0.507,24,0.815,26,1.563,38,1.4,51,1.858,73,0.644,87,1.653,92,0.3,93,0.134,94,1.639,95,1.4,96,0.015,97,0.015,103,0.46,104,1.825,116,0.892,118,1.729,119,0.946,120,0.946,122,1.4,147,2.49,157,1.192,174,3.157,178,3.15,184,4.023,187,1.258,190,2.03,196,3.15,199,3.545,205,1.25,214,2.422,215,2.618,224,2.854,225,1.751,231,1.639,232,1.976,233,3.545,234,2.144,235,4.567,236,4.146,237,2.039,238,4.146,239,5.404,240,3.15,241,4.278,242,4.146,243,3.545,244,2.155,245,2.422,246,1.751,247,2.107,248,3.545,249,3.15,250,3.721,251,3.15,252,3.545,253,4.146,254,3.512,255,4.146,256,3.545,257,3.545,258,4.146,259,3.545,260,3.545,261,4.146,262,3.545,263,3.545,264,3.545,265,3.72,266,2.283,267,3.545,268,3.545,269,2.422,270,3.545]],["title/entities/DbContribution.html",[51,1.63,271,1.103]],["body/entities/DbContribution.html",[7,0.021,18,0.193,19,0.174,20,0.156,23,0.38,38,0.9,47,1.154,48,1.063,51,1.778,73,0.836,86,2.502,87,1.063,92,0.193,93,0.086,96,0.011,97,0.011,103,0.295,108,1.512,116,1.075,119,0.92,120,1.031,121,1.141,131,0.653,152,1.89,153,1.89,158,1.703,181,1.167,189,1.449,191,1.141,197,2.36,205,1.302,206,1.979,227,3.263,228,3.601,229,4.265,237,1.27,271,1.204,272,2.28,273,3.706,274,2.577,275,2.675,276,4.265,277,1.979,278,3.199,279,2.732,280,3.303,281,3.067,282,2.28,283,3.989,284,3.989,285,3.989,286,3.989,287,2.666,288,3.015,289,3.968,290,3.015,291,3.968,292,2.666,293,3.989,294,2.666,295,3.182,296,2.157,297,3.469,298,2.99,299,4.114,300,1.891,301,2.668,302,2.502,303,1.449,304,3.182,305,3.182,306,3.404,307,2.854,308,2.666,309,1.449,310,2.668,311,2.666,312,2.502,313,2.666,314,2.666,315,2.668,316,3.393,317,3.015,318,2.666,319,2.666,320,1.557,321,2.666,322,2.318,323,2.666,324,2.666,325,2.666,326,1.891,327,1.891,328,2.016,329,2.016,330,1.449,331,2.666,332,3.015,333,3.968,334,3.393,335,2.666,336,2.666,337,3.199,338,3.015,339,2.025,340,2.318,341,2.318,342,2.157,343,2.157,344,2.157,345,2.577,346,3.313,347,2.577,348,1.449,349,1.27,350,1.449,351,1.684,352,1.9,353,2.666,354,2.025,355,1.557,356,2.666,357,2.016,358,1.449,359,1.835,360,2.666,361,2.28]],["title/entities/DbRepo.html",[47,0.799,271,1.103]],["body/entities/DbRepo.html",[7,0.021,18,0.122,19,0.23,20,0.098,23,0.401,38,0.567,47,0.607,49,1.826,50,0.982,51,1.826,52,1.437,53,1.721,55,1.721,57,1.721,59,1.721,73,0.846,86,2.782,87,0.67,92,0.122,93,0.054,96,0.008,97,0.008,103,0.186,108,1.564,116,1.113,119,0.998,120,0.998,121,1.471,131,0.412,152,1.402,153,1.402,158,1.365,189,0.913,191,0.794,193,1.276,197,2.411,205,1.366,206,1.041,237,2.102,271,0.838,273,3.753,274,1.912,276,3.42,277,2.247,278,3.299,279,1.902,280,3.322,281,3.121,283,4.328,284,4.328,285,4.328,286,3.677,288,4.059,293,4.328,295,2.895,296,1.912,297,3.215,298,2.459,299,2.573,300,1.316,301,1.403,302,1.316,303,0.913,304,2.895,305,2.895,306,3.097,307,2.631,309,0.913,310,2.459,312,1.941,315,2.07,320,0.982,322,1.614,326,1.316,327,1.941,328,2.07,329,2.07,330,0.913,332,2.098,337,3.351,338,2.098,339,1.276,340,1.614,341,1.614,342,1.501,343,1.501,344,1.501,345,3.008,346,3.351,347,2.215,348,0.913,349,0.801,350,0.913,351,2.221,352,2.007,354,1.276,355,0.982,357,0.854,358,0.913,362,1.437,363,3.517,364,3.517,365,3.099,366,4.501,367,3.517,368,2.843,369,3.517,370,3.42,371,3.42,372,3.42,373,3.42,374,3.057,375,3.42,376,2.145,377,3.42,378,3.849,379,2.762,380,1.68,381,1.68,382,1.68,383,2.762,384,2.098,385,2.762,386,2.098,387,2.459,388,1.68,389,1.68,390,2.098,391,2.762,392,2.762,393,1.68,394,1.68,395,1.68,396,1.902,397,1.902,398,2.098,399,2.762,400,2.098,401,2.762,402,1.276,403,1.68,404,1.68,405,1.68,406,2.762,407,1.68,408,4.074,409,1.68,410,1.68,411,2.762,412,1.68,413,2.762,414,1.68,415,1.68,416,1.68,417,2.098,418,1.68,419,1.68,420,2.762,421,1.68,422,2.762,423,1.68,424,2.762,425,1.68,426,2.762,427,1.68,428,1.68,429,1.68,430,1.68,431,1.68,432,1.68,433,2.762,434,1.68,435,1.68,436,1.68,437,1.68,438,1.403,439,1.68,440,1.68,441,1.68,442,1.68,443,4.139,444,1.68,445,1.68,446,1.68,447,1.68,448,0.801,449,1.437,450,1.437,451,1.68,452,1.68,453,1.68,454,1.68,455,1.68,456,1.68,457,1.614,458,1.68,459,1.68,460,1.157,461,1.68,462,1.68]],["title/entities/DbRepoToUserStargazers.html",[59,1.536,271,1.103]],["body/entities/DbRepoToUserStargazers.html",[7,0.021,18,0.226,19,0.203,20,0.182,23,0.433,38,1.051,47,1.241,49,2.532,50,1.818,59,1.876,73,0.814,86,2.117,87,1.241,92,0.226,93,0.101,96,0.012,97,0.012,103,0.345,108,1.517,116,1.079,119,0.907,120,1.088,121,1.839,131,0.762,152,2.066,153,2.066,158,1.94,181,1.242,191,1.277,197,2.129,205,1.292,206,1.674,237,1.422,271,1.348,273,3.711,274,2.816,275,2.847,278,2.816,280,3.217,295,3.157,296,2.415,297,3.43,298,2.871,300,2.117,301,2.257,302,2.117,303,1.692,304,3.157,305,3.157,306,3.377,307,3.071,309,1.692,310,2.257,312,2.961,315,2.257,320,2.595,322,3.3,326,2.117,327,2.117,328,2.257,329,2.257,330,1.692,337,2.816,340,3.026,341,3.026,342,2.415,343,2.415,344,2.415,345,3.071,346,3.071,347,2.816,348,1.692,349,1.483,350,1.692,352,1.812,355,1.818,357,1.581,358,1.692,376,2.847,463,2.661,464,4.72,465,3.112,466,3.112,467,2.143,468,3.112,469,3.112,470,3.112,471,2.143,472,3.112,473,3.112,474,3.112,475,3.112,476,2.143,477,3.112,478,3.058,479,2.143,480,3.112,481,2.143,482,1.818,483,3.112,484,2.661]],["title/entities/DbRepoToUserStars.html",[55,1.536,271,1.103]],["body/entities/DbRepoToUserStars.html",[7,0.021,18,0.226,19,0.203,20,0.182,23,0.433,38,1.051,47,1.241,49,2.532,50,1.818,55,1.876,73,0.814,86,2.117,87,1.241,92,0.226,93,0.101,96,0.012,97,0.012,103,0.345,108,1.517,116,1.079,119,0.907,120,1.088,121,1.839,131,0.762,152,2.066,153,2.066,158,1.94,181,1.242,191,1.277,197,2.129,205,1.292,206,1.674,237,1.422,271,1.348,273,3.711,274,2.816,275,2.847,278,2.816,280,3.217,295,3.157,296,2.415,297,3.43,298,2.871,300,2.117,301,2.257,302,2.117,303,1.692,304,3.157,305,3.157,306,3.377,307,3.071,309,1.692,310,2.257,312,2.961,315,2.257,320,2.595,322,3.3,326,2.117,327,2.117,328,2.257,329,2.257,330,1.692,337,2.816,340,3.026,341,3.026,342,2.415,343,2.415,344,2.415,345,3.071,346,3.071,347,2.816,348,1.692,349,1.483,350,1.692,352,1.812,355,1.818,357,1.581,358,1.692,376,2.847,467,2.143,471,2.143,476,2.143,478,3.058,479,2.143,481,2.143,482,1.818,485,2.661,486,4.277,487,3.112,488,3.112,489,3.112,490,3.112,491,3.112,492,3.112,493,3.112,494,3.112,495,3.112,496,3.112,497,3.112,498,3.112,499,2.661]],["title/entities/DbRepoToUserSubmissions.html",[57,1.536,271,1.103]],["body/entities/DbRepoToUserSubmissions.html",[7,0.021,18,0.213,19,0.192,20,0.172,23,0.424,38,0.994,47,1.21,49,2.468,50,1.719,57,1.802,73,0.814,86,2.786,87,1.173,92,0.213,93,0.095,96,0.012,97,0.012,103,0.326,108,1.523,116,1.083,119,0.879,120,1.128,121,1.808,131,0.721,152,2.002,153,2.002,158,1.907,181,1.215,191,1.227,197,2.203,205,1.267,206,1.608,237,1.365,271,1.294,273,3.717,274,2.729,275,2.786,278,2.993,280,3.254,295,3.097,296,2.32,297,3.388,298,3.097,300,2.033,301,2.168,302,2.033,303,1.6,304,3.097,305,3.097,306,3.314,307,2.993,309,1.6,310,2.168,312,2.905,315,2.168,320,2.493,322,3.216,326,2.033,327,2.033,328,2.168,329,2.168,330,1.6,337,2.993,340,2.933,341,2.933,342,2.32,343,2.32,344,2.32,345,2.993,346,3.177,347,2.729,348,1.6,349,1.402,350,1.6,352,1.849,355,1.719,357,1.495,358,1.6,376,2.786,387,2.168,396,2.938,397,2.938,402,2.236,457,2.493,467,2.026,471,2.026,476,2.026,478,2.938,479,2.026,481,2.026,482,1.719,500,2.516,501,4.293,502,4.893,503,2.943,504,2.943,505,2.943,506,4.267,507,4.267,508,2.943,509,2.943,510,2.943,511,2.943,512,2.943,513,2.943,514,2.943,515,2.943,516,2.943,517,2.943,518,2.516]],["title/entities/DbRepoToUserVotes.html",[53,1.536,271,1.103]],["body/entities/DbRepoToUserVotes.html",[7,0.021,18,0.226,19,0.203,20,0.182,23,0.433,38,1.051,47,1.241,49,2.532,50,1.818,53,1.876,73,0.814,86,2.117,87,1.241,92,0.226,93,0.101,96,0.012,97,0.012,103,0.345,108,1.517,116,1.079,119,0.907,120,1.088,121,1.839,131,0.762,152,2.066,153,2.066,158,1.94,181,1.242,191,1.277,197,2.129,205,1.292,206,1.674,237,1.422,271,1.348,273,3.711,274,2.816,275,2.847,278,2.816,280,3.217,295,3.157,296,2.415,297,3.43,298,2.871,300,2.117,301,2.257,302,2.117,303,1.692,304,3.157,305,3.157,306,3.377,307,3.071,309,1.692,310,2.257,312,2.961,315,2.257,320,2.595,322,3.3,326,2.117,327,2.117,328,2.257,329,2.257,330,1.692,337,2.816,340,3.026,341,3.026,342,2.415,343,2.415,344,2.415,345,3.071,346,3.071,347,2.816,348,1.692,349,1.483,350,1.692,352,1.812,355,1.818,357,1.581,358,1.692,376,2.847,467,2.143,471,2.143,476,2.143,478,3.058,479,2.143,481,2.143,482,1.818,519,2.661,520,4.277,521,3.112,522,3.112,523,3.112,524,3.112,525,3.112,526,3.112,527,3.112,528,3.112,529,3.112,530,3.112,531,3.112,532,3.112,533,2.661]],["title/entities/DbUser.html",[49,1.63,271,1.103]],["body/entities/DbUser.html",[7,0.021,18,0.175,19,0.158,20,0.141,23,0.44,38,0.816,47,1.098,48,0.963,49,1.651,53,2.11,54,1.526,55,2.11,56,1.526,57,2.11,58,1.526,59,2.11,60,1.526,73,0.828,86,3.122,87,0.963,92,0.175,93,0.078,95,1.244,96,0.01,97,0.01,103,0.268,108,1.555,116,1.106,119,0.782,120,0.993,121,1.927,131,0.592,152,1.781,153,1.781,158,1.355,181,0.766,189,1.313,191,1.06,197,2.347,205,1.179,206,1.389,271,1.118,273,3.753,274,2.428,277,1.389,278,2.924,279,2.537,280,3.193,281,2.919,282,2.066,283,2.799,284,2.799,285,2.799,286,2.799,288,2.799,293,2.799,295,2.88,296,2.003,297,3.228,298,2.539,300,1.756,301,1.872,302,1.756,303,1.313,304,2.88,305,2.88,306,3.082,307,2.716,309,1.313,310,2.539,312,1.756,315,1.872,326,1.756,327,1.756,328,1.872,329,1.872,330,1.313,337,3.082,338,2.799,339,1.836,342,2.003,343,2.003,344,2.003,345,3.304,346,3.082,347,2.428,348,1.313,349,1.151,350,1.313,352,1.788,354,1.836,357,1.228,358,1.313,359,1.663,365,2.537,370,4.087,371,4.087,372,4.087,373,4.087,378,4.6,387,1.872,396,3.903,397,3.44,398,3.796,400,2.799,402,2.799,443,4.848,448,2.129,482,1.411,534,2.066,535,4.466,536,4.466,537,4.466,538,4.6,539,4.466,540,2.416,541,2.416,542,2.416,543,2.416,544,2.416,545,2.416,546,3.685,547,2.416,548,3.151,549,3.685,550,3.685,551,3.685,552,3.151,553,2.416,554,2.416,555,3.685,556,2.416,557,2.416,558,3.685,559,2.416,560,3.685,561,2.416,562,3.685,563,2.416,564,3.685,565,2.416,566,3.685,567,2.416,568,2.416,569,1.836,570,2.416]],["title/controllers/HealthController.html",[98,1.046,571,2.504]],["body/controllers/HealthController.html",[7,0.021,18,0.274,19,0.247,20,0.221,23,0.445,24,0.742,28,4.908,29,3.228,33,2.868,83,2.599,90,1.086,92,0.274,93,0.122,94,1.145,95,2.228,96,0.014,97,0.014,98,1.086,101,1.918,103,0.418,104,1.715,108,1.179,111,3.119,116,0.838,122,1.715,128,2.735,129,2.916,130,1.918,131,0.925,141,3.022,144,2.581,157,1.46,192,1.423,234,2.605,387,3.119,457,3.586,571,3.497,572,3.228,573,5.642,574,6.598,575,3.775,576,5.079,577,4.867,578,5.079,579,3.775,580,3.859,581,3.775,582,5.079,583,3.775,584,5.079,585,5.079,586,5.079,587,5.74,588,5.079,589,5.079,590,3.775,591,3.775,592,3.775,593,3.775,594,3.775,595,3.775,596,4.343,597,5.079,598,3.775,599,3.775,600,3.775,601,3.775,602,3.775,603,3.775,604,5.079,605,3.775,606,4.343,607,3.775,608,3.775,609,3.775,610,3.775,611,3.775,612,3.775,613,3.775,614,3.775,615,3.775,616,3.775,617,3.775,618,3.775,619,3.775,620,3.775,621,3.775]],["title/modules/HealthModule.html",[0,1.046,9,2.297]],["body/modules/HealthModule.html",[0,1.836,2,2.163,7,0.021,9,4.032,18,0.393,19,0.355,20,0.317,22,2.585,23,0.492,24,1.066,32,5.46,33,4.121,90,1.836,92,0.393,93,0.176,96,0.018,97,0.018,571,4.671,622,5.424,623,5.424]],["title/classes/PageDto.html",[93,0.118,246,1.536]],["body/classes/PageDto.html",[7,0.021,18,0.324,19,0.292,20,0.261,23,0.475,70,4.311,73,0.837,92,0.324,93,0.202,94,1.721,96,0.016,97,0.016,103,0.496,108,1.317,116,1.028,118,1.431,119,0.783,120,0.783,131,1.096,185,2.432,187,1.357,191,1.632,192,2.605,223,3.08,246,2.397,250,4.151,251,3.398,624,3.825,625,5.911,626,4.434,627,4.473,628,5.139,629,5.675,630,4.473,631,4.473,632,4.473,633,4.473,634,4.473,635,4.473,636,4.735,637,6.232,638,6.232,639,3.825,640,4.473,641,3.825,642,4.473,643,4.473]],["title/classes/PageMetaDto.html",[93,0.118,250,2.124]],["body/classes/PageMetaDto.html",[7,0.021,18,0.261,19,0.236,20,0.211,23,0.357,70,3.74,73,0.794,86,2.346,92,0.261,93,0.117,94,1.493,96,0.014,97,0.014,103,0.4,108,1.51,116,1.099,118,1.154,119,0.631,120,0.631,131,0.883,185,1.96,187,2.147,190,1.218,191,1.416,192,2.748,194,3.54,205,1.49,206,2.377,208,3.519,250,2.876,265,4.341,280,3.373,352,1.974,386,3.74,396,4.147,397,4.147,398,4.576,626,2.277,636,5.061,644,4.669,645,3.083,646,5.606,647,5.606,648,5.606,649,3.605,650,4.147,651,4.923,652,5.566,653,4.923,654,3.605,655,5.151,656,6.023,657,4.923,658,3.605,659,4.923,660,3.605,661,4.21,662,3.605,663,4.21,664,3.605,665,3.605,666,4.794,667,3.605,668,4.21,669,3.605,670,3.605,671,3.605,672,3.605,673,3.605,674,3.605]],["title/interfaces/PageMetaParameters.html",[650,2.504,675,2.504]],["body/interfaces/PageMetaParameters.html",[7,0.021,18,0.387,19,0.349,20,0.312,23,0.387,73,0.754,92,0.387,96,0.018,97,0.018,103,0.592,187,1.619,190,2.48,191,1.818,205,1.401,225,2.254,265,4.797,626,3.37,644,3.674,650,4.354,675,3.674,676,5.337,677,4.564]],["title/classes/PageOptionsDto.html",[93,0.118,190,1.228]],["body/classes/PageOptionsDto.html",[7,0.021,18,0.29,19,0.261,20,0.234,23,0.455,73,0.799,92,0.29,93,0.191,96,0.015,97,0.015,103,0.443,108,1.37,116,1.036,120,1.175,131,0.979,157,1.149,185,2.172,187,1.791,188,2.524,190,1.782,191,1.517,192,2.647,194,3.729,195,4.486,197,2.647,198,3.21,200,3.036,201,4.008,205,1.422,206,2.367,207,4.008,208,4.103,209,4.008,210,4.008,211,3.036,214,3.995,215,3.729,216,3.036,218,3.036,220,4.323,221,3.036,222,4.771,223,2.751,226,2.751,249,3.036,639,3.417,644,4.495,666,3.417,668,3.417,678,5.275,679,5.05,680,3.996,681,3.996,682,3.996,683,3.996,684,3.996,685,5.905,686,3.996,687,3.996,688,3.996,689,5.275,690,5.275,691,3.996,692,3.996]],["title/controllers/RepoContributionsController.html",[98,1.046,177,2.504]],["body/controllers/RepoContributionsController.html",[7,0.021,18,0.259,19,0.234,20,0.209,23,0.49,24,0.702,51,2.5,73,0.715,90,1.027,92,0.259,93,0.116,94,1.083,95,1.652,96,0.014,97,0.014,98,1.027,101,1.815,103,0.396,104,1.652,108,1.135,111,3.049,116,0.807,118,1.565,119,0.857,120,0.857,122,1.652,128,2.659,129,2.835,130,1.815,131,0.875,141,2.192,144,2.485,147,1.844,157,1.407,158,1.82,174,3.259,175,1.785,177,3.368,178,2.714,179,1.601,180,3.054,181,1.488,184,4.197,187,1.083,190,2.192,192,1.844,205,1.16,225,1.509,234,2.315,244,2.392,246,1.509,247,1.815,252,3.054,266,2.066,277,2.446,299,2.256,351,3.789,352,1.484,438,3.049,448,1.702,693,4.771,694,3.054,695,6.285,696,6.285,697,3.572,698,3.572,699,2.858,700,5.131,701,6,702,4.892,703,4.892,704,3.505,705,3.572,706,3.572,707,3.572,708,4.892,709,3.572,710,2.087,711,3.259,712,3.259,713,1.815,714,2.087,715,1.702,716,2.087,717,2.087,718,2.087,719,3.572,720,4.892,721,2.087,722,2.858,723,2.087,724,4.892,725,4.892,726,3.572,727,2.087,728,2.087,729,2.087]],["title/controllers/RepoController.html",[98,1.046,730,2.504]],["body/controllers/RepoController.html",[7,0.021,18,0.26,19,0.235,20,0.21,23,0.482,24,0.706,47,1.384,73,0.775,90,1.034,92,0.26,93,0.116,94,1.09,95,1.214,96,0.014,97,0.014,98,1.034,101,1.826,103,0.398,104,1.659,108,1.299,111,3.304,116,0.924,118,1.791,119,0.98,120,0.98,122,1.89,128,2.867,129,3.057,130,1.826,131,0.88,141,1.611,144,2.844,157,1.609,158,1.698,175,1.791,181,1.429,187,1.09,190,1.659,192,1.355,205,1.164,225,1.518,234,2.451,235,4.785,237,1.925,240,2.73,244,2.593,246,1.518,247,1.826,277,2.451,352,1.49,438,3.057,448,2.667,699,3.799,704,3.514,710,2.1,711,2.87,712,3.269,713,1.826,714,2.1,715,1.713,716,2.1,717,2.1,718,2.1,721,2.1,723,2.1,727,2.1,728,2.1,729,2.1,730,3.382,731,3.073,732,5.386,733,5.386,734,2.867,735,3.594,736,3.102,737,2.27,738,3.594,739,3.073,740,3.594,741,3.594,742,4.912,743,3.594,744,3.073,745,3.594,746,3.594,747,3.594,748,3.073,749,2.73,750,3.073,751,3.594,752,3.594,753,3.594,754,2.27,755,2.27]],["title/modules/RepoModule.html",[0,1.046,10,2.297]],["body/modules/RepoModule.html",[0,1.738,2,1.974,3,2.709,7,0.021,10,4.532,15,2.88,16,2.219,17,1.974,18,0.359,19,0.324,20,0.289,22,2.359,23,0.505,24,0.973,25,2.691,26,1.866,47,1.088,90,1.738,91,3.071,92,0.359,93,0.16,96,0.017,97,0.017,166,3.285,175,2.371,730,4.492,748,4.233,749,3.761,756,4.233,757,4.95,758,4.233,759,4.95,760,4.95,761,4.95]],["title/classes/RepoPageOptionsDto.html",[93,0.118,734,1.733]],["body/classes/RepoPageOptionsDto.html",[7,0.021,18,0.287,19,0.259,20,0.231,23,0.426,73,0.745,92,0.38,93,0.17,96,0.015,97,0.015,103,0.438,108,1.451,116,1.032,119,0.918,120,1.213,131,0.969,152,2.089,153,2.089,185,2.15,187,1.897,188,2.498,189,2.848,190,2.258,191,1.507,192,2.642,193,4.463,194,3.309,195,3.98,197,2.642,198,3.4,200,3.98,201,4.463,202,4.696,205,1.089,206,1.491,207,3.98,208,3.432,209,3.005,210,3.005,211,3.005,212,5.024,213,3.382,214,3.432,215,2.498,216,3.005,217,3.382,218,3.005,219,3.382,220,3.607,221,3.005,222,3.98,223,2.723,224,2.723,225,1.671,226,3.607,365,3.607,374,3.309,375,3.98,377,3.98,734,2.497,762,3.98,763,5.024,764,3.955,765,3.955,766,3.98,767,3.607,768,3.98,769,3.98,770,3.607,771,3.955]],["title/injectables/RepoService.html",[175,1.164,231,1.103]],["body/injectables/RepoService.html",[7,0.021,18,0.206,19,0.186,20,0.166,23,0.462,24,0.558,26,1.07,38,0.959,47,0.624,51,1.863,53,1.199,55,1.199,57,1.199,59,1.199,73,0.717,87,1.132,92,0.206,93,0.092,94,1.261,95,0.959,96,0.012,97,0.012,103,0.315,104,1.404,116,0.993,118,1.926,119,1.089,120,1.009,121,0.816,122,1.946,147,2.555,157,1.657,158,1.747,175,1.33,181,1.198,187,0.861,190,1.661,197,1.07,198,1.543,202,1.954,205,1.251,214,1.658,215,1.793,224,1.954,225,1.199,231,1.261,232,1.353,234,2.32,235,3.736,237,1.732,240,2.156,243,3.554,244,2.4,245,1.658,246,1.199,247,1.442,248,2.427,249,2.156,250,3.162,251,2.156,254,3.633,256,2.427,257,2.427,259,2.427,260,2.427,262,2.427,263,2.427,264,2.427,265,2.861,266,2.286,267,2.427,268,2.427,269,2.426,270,2.427,271,1.491,277,2.654,351,2.625,361,2.427,374,2.625,438,2.112,484,2.427,499,2.427,518,2.427,533,2.427,628,2.156,722,3.516,732,4.205,733,4.205,734,2.579,739,2.427,744,2.427,749,2.156,750,2.427,763,2.427,766,2.156,767,1.954,768,2.156,769,2.156,770,1.954,772,2.427,773,3.418,774,4.917,775,2.838,776,2.838,777,4.156,778,2.838,779,2.542,780,4.917,781,2.838,782,2.838,783,2.838,784,2.838,785,5.413,786,4.917,787,4.205,788,2.838,789,4.917,790,3.105,791,2.838,792,4.156,793,2.838,794,4.156,795,2.838,796,2.838,797,2.838,798,2.838,799,2.838,800,2.625,801,2.838,802,2.838,803,2.838,804,2.838,805,2.838,806,2.838,807,2.838,808,5.761,809,5.761,810,2.427,811,2.156,812,2.427,813,2.838,814,2.838,815,2.838,816,2.838,817,2.838,818,3.105,819,2.838,820,2.625,821,2.625,822,2.838,823,2.838,824,2.838,825,2.838,826,2.838,827,2.838,828,2.838,829,2.838,830,2.838]],["title/controllers/RepoStarController.html",[98,1.046,831,2.504]],["body/controllers/RepoStarController.html",[7,0.021,18,0.17,19,0.154,20,0.138,23,0.465,24,0.462,47,0.965,48,0.938,55,2.245,56,1.486,73,0.794,90,0.676,92,0.17,93,0.076,94,0.714,95,1.219,96,0.01,97,0.01,98,0.676,101,1.195,103,0.261,104,1.219,108,1.233,111,3.205,112,1.963,116,0.877,118,1.701,119,0.931,120,0.931,121,1.038,122,2.227,126,1.486,127,3.543,128,2.673,129,2.85,130,1.195,131,0.576,132,1.054,141,1.618,143,3.357,144,2.701,147,1.857,157,1.528,158,1.828,175,1.406,179,1.054,181,1.525,187,0.714,190,1.219,192,1.361,205,1.454,225,0.994,234,2.399,244,2.515,246,0.994,247,1.195,266,2.081,277,2.454,352,1.975,374,1.486,438,3.062,448,2.094,486,4.891,699,3.685,704,2.879,710,1.374,711,2.109,712,3.105,713,1.195,714,1.374,715,1.121,716,1.374,717,1.374,718,1.374,721,2.109,722,2.879,723,2.109,727,2.109,728,2.109,729,2.109,734,2.348,736,2.28,737,1.486,754,1.486,755,1.486,779,3.011,831,2.485,832,4.797,833,2.012,834,5.315,835,5.315,836,5.315,837,5.315,838,5.315,839,2.352,840,2.352,841,3.744,842,3.744,843,4.927,844,4.927,845,3.392,846,3.062,847,2.879,848,2.352,849,2.352,850,2.352,851,2.352,852,2.352,853,2.352,854,4.262,855,2.352,856,2.352,857,2.352,858,3.744,859,2.352,860,2.352,861,2.352,862,2.352,863,1.486,864,1.62,865,3.659,866,2.566,867,2.012,868,1.62,869,1.62,870,1.62,871,1.62,872,2.352,873,2.352,874,3.61,875,2.352,876,2.352,877,3.61,878,2.352]],["title/controllers/RepoStargazeController.html",[98,1.046,879,2.504]],["body/controllers/RepoStargazeController.html",[7,0.021,18,0.173,19,0.156,20,0.139,23,0.466,24,0.468,47,0.973,48,0.95,59,2.258,60,1.504,73,0.796,90,0.685,92,0.173,93,0.077,94,0.722,95,1.231,96,0.01,97,0.01,98,0.685,101,1.21,103,0.264,104,1.231,108,1.24,111,3.216,112,1.981,116,0.882,118,1.71,119,0.936,120,0.936,121,1.048,122,2.232,126,1.504,127,3.56,128,2.686,129,2.864,130,1.21,131,0.583,132,1.067,141,1.633,143,3.375,144,2.716,147,1.869,157,1.537,158,1.835,175,1.417,179,1.067,181,1.534,187,0.722,190,1.231,192,1.374,205,1.456,225,1.006,234,2.405,244,2.524,246,1.006,247,1.21,266,2.095,277,2.461,352,1.981,438,3.074,448,2.11,464,3.363,699,3.697,704,2.897,710,1.391,711,2.129,712,3.122,713,1.21,714,1.391,715,1.135,716,1.391,717,1.391,718,1.391,721,2.129,722,2.897,723,2.129,727,2.129,728,2.129,729,2.129,734,2.363,736,2.302,737,1.504,754,1.504,755,1.504,779,3.015,812,2.036,845,3.414,846,3.074,863,1.504,864,1.64,865,3.68,868,1.64,869,1.64,870,1.64,871,1.64,879,2.509,880,4.82,881,2.036,882,5.345,883,5.345,884,5.345,885,5.345,886,5.345,887,2.381,888,2.381,889,3.644,890,6.681,891,4.959,892,4.241,893,2.381,894,2.381,895,2.381,896,2.381,897,2.381,898,2.381,899,4.82,900,2.381,901,2.381,902,2.381,903,3.644,904,2.381,905,2.381,906,2.381,907,2.381,908,2.586,909,2.036,910,2.381,911,2.381,912,3.644,913,3.644,914,2.381,915,2.381,916,3.644,917,3.644,918,2.381]],["title/controllers/RepoSubmitController.html",[98,1.046,919,2.504]],["body/controllers/RepoSubmitController.html",[7,0.021,18,0.17,19,0.154,20,0.138,23,0.465,24,0.462,47,0.965,48,0.938,57,2.245,58,1.486,73,0.794,90,0.676,92,0.17,93,0.076,94,0.714,95,1.219,96,0.01,97,0.01,98,0.676,101,1.195,103,0.261,104,1.219,108,1.233,111,3.205,112,1.963,116,0.877,118,1.701,119,0.931,120,0.931,121,1.038,122,2.227,126,1.486,127,3.543,128,2.673,129,2.85,130,1.195,131,0.576,132,1.054,141,1.618,143,3.357,144,2.701,147,1.857,157,1.528,158,1.828,175,1.406,179,1.054,181,1.525,187,0.714,190,1.219,192,1.361,205,1.454,225,0.994,234,2.399,244,2.515,246,0.994,247,1.195,266,2.081,277,2.454,352,1.975,438,3.062,448,2.094,502,5.379,699,3.685,704,2.879,710,1.374,711,2.109,712,3.105,713,1.195,714,1.374,715,1.121,716,1.374,717,1.374,718,1.374,721,2.109,722,2.879,723,2.109,727,2.109,728,2.109,729,2.109,734,2.348,736,2.28,737,1.486,754,1.486,755,1.486,779,3.011,811,1.787,841,3.744,842,3.744,845,3.392,846,3.062,847,2.879,858,3.744,863,1.486,864,1.62,865,3.659,868,1.62,869,1.62,870,1.62,871,1.62,919,2.485,920,4.797,921,2.012,922,5.315,923,5.315,924,5.315,925,5.315,926,5.315,927,2.352,928,2.352,929,4.927,930,4.927,931,2.352,932,2.352,933,2.352,934,2.352,935,2.352,936,2.352,937,4.797,938,2.352,939,2.352,940,2.352,941,2.352,942,2.352,943,2.352,944,2.352,945,2.566,946,2.012,947,1.787,948,2.352,949,2.352,950,3.61,951,2.352,952,2.352,953,3.61,954,2.352]],["title/controllers/RepoVoteController.html",[98,1.046,955,2.504]],["body/controllers/RepoVoteController.html",[7,0.021,18,0.17,19,0.154,20,0.138,23,0.465,24,0.462,47,0.965,48,0.938,53,2.245,54,1.486,73,0.794,90,0.676,92,0.17,93,0.076,94,0.714,95,1.219,96,0.01,97,0.01,98,0.676,101,1.195,103,0.261,104,1.219,108,1.233,111,3.205,112,1.963,116,0.877,118,1.701,119,0.931,120,0.931,121,1.038,122,2.227,126,1.486,127,3.543,128,2.673,129,2.85,130,1.195,131,0.576,132,1.054,141,1.618,143,3.357,144,2.701,147,1.857,157,1.528,158,1.828,175,1.406,179,1.054,181,1.525,187,0.714,190,1.219,192,1.361,205,1.454,225,0.994,234,2.399,244,2.515,246,0.994,247,1.195,266,2.081,277,2.454,352,1.975,438,3.062,448,2.094,520,4.891,699,3.685,704,2.879,710,1.374,711,2.109,712,3.105,713,1.195,714,1.374,715,1.121,716,1.374,717,1.374,718,1.374,721,2.109,722,2.879,723,2.109,727,2.109,728,2.109,729,2.109,734,2.348,736,2.28,737,1.486,754,1.486,755,1.486,779,3.011,810,2.012,841,3.744,842,3.744,845,3.392,846,3.062,847,2.879,858,3.744,863,1.486,864,1.62,865,3.659,868,1.62,869,1.62,870,1.62,871,1.62,955,2.485,956,4.797,957,2.012,958,5.315,959,5.315,960,5.315,961,5.315,962,5.315,963,2.352,964,2.352,965,4.927,966,4.927,967,2.352,968,2.352,969,2.352,970,2.352,971,2.352,972,2.352,973,4.262,974,2.352,975,2.352,976,2.352,977,2.352,978,2.352,979,2.352,980,2.352,981,2.566,982,2.012,983,2.352,984,2.352,985,3.61,986,2.352,987,2.352,988,3.61,989,2.352]],["title/modules/StarModule.html",[0,1.046,11,2.297]],["body/modules/StarModule.html",[0,1.69,2,1.885,3,2.633,7,0.021,11,4.574,15,2.8,16,2.119,17,1.885,18,0.343,19,0.309,20,0.276,22,2.253,23,0.515,24,0.929,25,2.57,26,1.782,47,1.291,48,1.885,55,2.482,56,2.986,90,1.69,91,2.985,92,0.343,93,0.153,96,0.016,97,0.016,166,3.194,175,2.243,179,2.119,181,0.983,183,2.986,831,4.401,866,4.302,867,4.043,990,4.043,991,4.043,992,4.043,993,4.728,994,4.728]],["title/injectables/StarService.html",[231,1.103,866,2.124]],["body/injectables/StarService.html",[7,0.021,18,0.271,19,0.245,20,0.219,23,0.443,24,0.736,26,1.411,38,1.265,55,1.582,56,2.365,73,0.681,92,0.271,93,0.121,94,1.532,95,1.265,96,0.014,97,0.014,103,0.415,104,1.706,116,1.01,118,1.829,119,1.001,120,1.001,122,1.931,147,2.408,157,1.76,181,1.05,205,1.481,231,1.532,232,1.785,234,2.348,237,1.958,241,4.378,244,2.44,245,2.188,254,3.574,266,2.584,269,2.562,275,1.785,376,1.785,486,2.578,773,3.864,779,2.986,790,2.365,800,3.19,818,3.19,820,3.19,821,3.61,846,2.567,847,2.188,854,3.838,866,2.951,995,3.202,996,5.716,997,5.716,998,3.745,999,3.745,1000,5.051,1001,3.745,1002,3.745,1003,3.745,1004,3.745,1005,3.745,1006,2.578,1007,3.745,1008,3.745,1009,2.578,1010,5.051,1011,5.051,1012,6.582,1013,5.051,1014,3.478,1015,3.745,1016,3.745,1017,2.578,1018,3.745]],["title/modules/StargazeModule.html",[0,1.046,12,2.297]],["body/modules/StargazeModule.html",[0,1.69,2,1.885,3,2.633,7,0.021,12,4.574,15,2.8,16,2.119,17,1.885,18,0.343,19,0.309,20,0.276,22,2.253,23,0.515,24,0.929,25,2.57,26,1.782,47,1.291,48,1.885,59,2.482,60,2.986,90,1.69,91,2.985,92,0.343,93,0.153,96,0.016,97,0.016,166,3.194,175,2.243,179,2.119,181,0.983,183,2.986,879,4.401,908,4.302,909,4.043,1019,4.043,1020,4.043,1021,4.043,1022,4.728,1023,4.728]],["title/injectables/StargazeService.html",[231,1.103,908,2.124]],["body/injectables/StargazeService.html",[7,0.021,18,0.271,19,0.245,20,0.219,23,0.443,24,0.736,26,1.411,38,1.265,59,1.582,60,2.365,73,0.681,92,0.271,93,0.121,94,1.532,95,1.265,96,0.014,97,0.014,103,0.415,104,1.706,116,1.01,118,1.829,119,1.001,120,1.001,122,1.931,147,2.408,157,1.76,181,1.188,205,1.481,231,1.532,232,1.785,234,2.348,237,1.958,241,4.378,244,2.44,245,2.188,254,3.574,266,2.584,269,2.562,275,1.785,376,1.785,773,3.864,779,2.986,790,2.365,800,3.19,818,3.19,820,3.19,821,3.61,846,2.567,892,4.32,899,3.202,908,2.951,1006,2.578,1009,2.578,1014,3.478,1017,2.578,1024,3.202,1025,5.716,1026,5.716,1027,3.745,1028,3.745,1029,5.051,1030,3.745,1031,3.745,1032,3.745,1033,3.745,1034,3.745,1035,3.745,1036,3.745,1037,5.051,1038,5.051,1039,6.582,1040,5.051,1041,3.745,1042,3.745,1043,3.745]],["title/modules/SubmitModule.html",[0,1.046,13,2.297]],["body/modules/SubmitModule.html",[0,1.69,2,1.885,3,2.633,7,0.021,13,4.574,15,2.8,16,2.119,17,1.885,18,0.343,19,0.309,20,0.276,22,2.253,23,0.515,24,0.929,25,2.57,26,1.782,47,1.291,48,1.885,57,2.482,58,2.986,90,1.69,91,2.985,92,0.343,93,0.153,96,0.016,97,0.016,166,3.194,175,2.243,179,2.119,181,0.983,183,2.986,919,4.401,945,4.302,946,4.043,1044,4.043,1045,4.043,1046,4.043,1047,4.728,1048,4.728]],["title/injectables/SubmitService.html",[231,1.103,945,2.124]],["body/injectables/SubmitService.html",[7,0.021,18,0.271,19,0.245,20,0.219,23,0.443,24,0.736,26,1.411,38,1.265,57,1.582,58,2.365,73,0.681,92,0.271,93,0.121,94,1.532,95,1.265,96,0.014,97,0.014,103,0.415,104,1.706,116,1.01,118,1.829,119,1.001,120,1.001,122,1.931,147,2.408,157,1.76,181,1.05,205,1.481,231,1.532,232,1.785,234,2.348,237,1.958,241,4.378,244,2.44,245,2.188,254,3.574,266,2.584,269,2.562,275,1.785,376,1.785,773,3.864,779,2.986,790,2.365,800,3.19,818,3.19,820,3.19,821,3.61,846,2.567,847,2.188,945,2.951,947,2.845,1006,2.578,1009,2.578,1014,3.478,1017,2.578,1049,3.202,1050,5.716,1051,5.716,1052,3.745,1053,3.745,1054,5.051,1055,3.745,1056,3.745,1057,3.745,1058,3.745,1059,3.745,1060,3.745,1061,3.745,1062,5.051,1063,5.051,1064,6.582,1065,5.051,1066,5.051,1067,3.745,1068,3.745,1069,3.745]],["title/classes/SupabaseAuthDto.html",[93,0.118,123,2.504]],["body/classes/SupabaseAuthDto.html",[7,0.021,18,0.23,19,0.208,20,0.186,23,0.23,73,0.783,92,0.23,93,0.103,96,0.013,97,0.013,102,4.223,103,0.352,108,1.525,112,3.686,116,1.085,119,0.789,120,1.232,121,2.046,123,3.103,131,0.778,135,4.157,148,5.149,149,5.149,150,4.48,151,4.48,152,2.089,153,2.089,156,4.48,158,1.589,185,1.727,191,1.296,192,2.758,206,2.477,220,4.525,277,2.682,279,3.103,280,3.391,281,2.633,297,3.34,298,3.34,300,2.148,301,3.34,302,3.132,312,2.148,315,2.897,326,2.148,352,1.994,357,3.34,359,3.103,482,2.633,538,3.854,636,3.424,652,2.716,1070,5.718,1071,2.716,1072,6.432,1073,4.507,1074,4.507,1075,3.176,1076,3.176,1077,4.507,1078,3.176,1079,3.176,1080,4.507,1081,3.176,1082,3.176,1083,3.176,1084,3.176]],["title/injectables/SupabaseGuard.html",[132,1.63,231,1.103]],["body/injectables/SupabaseGuard.html",[7,0.021,18,0.402,19,0.363,20,0.325,23,0.469,24,1.092,92,0.402,93,0.18,96,0.018,97,0.018,132,2.901,168,4.219,189,3.019,231,1.964,232,2.647,1085,4.749,1086,5.554,1087,5.554]],["title/injectables/SupabaseStrategy.html",[164,2.297,231,1.103]],["body/injectables/SupabaseStrategy.html",[7,0.021,18,0.331,19,0.298,20,0.267,23,0.478,24,0.897,73,0.685,92,0.331,93,0.148,94,1.908,96,0.016,97,0.016,102,2.881,103,0.506,104,1.94,107,5.645,116,1.038,118,1.838,119,1.006,120,1.006,121,1.652,122,1.94,134,3.465,135,3.356,157,1.312,164,3.628,168,3.465,189,2.479,231,1.743,232,2.174,234,2.243,273,2.919,580,3.465,1088,3.9,1089,6.289,1090,6.289,1091,4.561,1092,4.561,1093,6.289,1094,4.561,1095,5.745,1096,4.561,1097,4.561,1098,4.561,1099,5.745,1100,4.561,1101,4.561,1102,4.561,1103,5.745,1104,4.561,1105,4.561,1106,4.561,1107,4.561,1108,4.561,1109,4.561,1110,4.561,1111,4.561,1112,4.561,1113,4.561,1114,4.561,1115,4.561]],["title/modules/VoteModule.html",[0,1.046,14,2.297]],["body/modules/VoteModule.html",[0,1.69,2,1.885,3,2.633,7,0.021,14,4.574,15,2.8,16,2.119,17,1.885,18,0.343,19,0.309,20,0.276,22,2.253,23,0.515,24,0.929,25,2.57,26,1.782,47,1.291,48,1.885,53,2.482,54,2.986,90,1.69,91,2.985,92,0.343,93,0.153,96,0.016,97,0.016,166,3.194,175,2.243,179,2.119,181,0.983,183,2.986,955,4.401,981,4.302,982,4.043,1116,4.043,1117,4.043,1118,4.043,1119,4.728,1120,4.728]],["title/injectables/VoteService.html",[231,1.103,981,2.124]],["body/injectables/VoteService.html",[7,0.021,18,0.271,19,0.245,20,0.219,23,0.443,24,0.736,26,1.411,38,1.265,53,1.582,54,2.365,73,0.681,92,0.271,93,0.121,94,1.532,95,1.265,96,0.014,97,0.014,103,0.415,104,1.706,116,1.01,118,1.829,119,1.001,120,1.001,122,1.931,147,2.408,157,1.76,181,1.05,205,1.481,231,1.532,232,1.785,234,2.348,237,1.958,241,4.378,244,2.44,245,2.188,254,3.574,266,2.584,269,2.562,275,1.785,376,1.785,520,2.578,773,3.864,779,2.986,790,2.365,800,3.19,818,3.19,820,3.19,821,3.61,846,2.567,847,2.188,973,3.838,981,2.951,1006,2.578,1009,2.578,1014,3.478,1017,2.578,1121,3.202,1122,5.716,1123,5.716,1124,3.745,1125,3.745,1126,5.051,1127,3.745,1128,3.745,1129,3.745,1130,3.745,1131,3.745,1132,3.745,1133,3.745,1134,5.051,1135,5.051,1136,6.582,1137,5.051,1138,3.745,1139,3.745,1140,3.745]],["title/changelog.html",[1141,2.095,1142,2.311,1143,2.602]],["body/changelog.html",[3,1.75,7,0.021,17,0.521,20,0.171,38,1.318,47,0.287,49,0.586,51,0.586,53,0.945,55,0.945,57,0.945,59,0.945,68,1.913,73,0.156,83,2.019,87,1.814,96,0.006,97,0.006,98,0.999,102,1.413,108,0.303,112,2.608,113,1.117,119,0.745,121,1.38,135,1.713,141,1.556,157,0.643,158,0.678,181,1.169,191,1.441,194,0.825,198,0.71,206,1.105,208,0.763,226,0.9,227,0.9,237,1.249,269,1.314,271,1.455,276,0.993,281,0.763,290,1.699,295,0.664,299,1.413,300,0.623,302,2.286,305,0.664,310,1.136,317,0.993,326,2.552,327,3.432,328,3.192,329,0.664,332,2.638,349,2.286,351,1.413,370,0.993,371,0.993,372,0.993,373,0.993,384,1.699,387,0.664,390,1.699,400,0.993,417,2.966,448,1.86,464,0.993,486,0.9,501,1.117,502,0.993,520,1.54,552,2.508,569,0.993,573,1.117,577,0.993,596,1.117,626,1.413,661,1.117,663,2.508,700,1.913,715,0.623,767,0.9,770,0.9,787,2.508,811,0.993,854,0.993,863,1.852,937,1.117,947,0.993,973,0.993,1141,0.9,1143,1.913,1144,1.117,1145,2.237,1146,2.508,1147,2.237,1148,5.07,1149,1.117,1150,2.932,1151,5.355,1152,6.088,1153,5.889,1154,1.307,1155,4.102,1156,4.549,1157,6.479,1158,1.117,1159,1.307,1160,1.307,1161,2.508,1162,2.237,1163,2.237,1164,1.117,1165,1.307,1166,6.088,1167,6.088,1168,1.307,1169,2.237,1170,3.806,1171,1.307,1172,1.307,1173,1.913,1174,2.932,1175,1.307,1176,1.307,1177,1.307,1178,3.303,1179,3.472,1180,3.472,1181,1.117,1182,1.307,1183,2.969,1184,2.932,1185,2.508,1186,1.117,1187,1.307,1188,1.307,1189,1.307,1190,1.307,1191,1.307,1192,1.307,1193,1.913,1194,1.307,1195,1.307,1196,1.307,1197,1.307,1198,1.307,1199,4.256,1200,2.932,1201,3.472,1202,1.307,1203,1.307,1204,1.307,1205,1.307,1206,1.307,1207,1.307,1208,1.307,1209,1.307,1210,1.307,1211,1.307,1212,1.307,1213,1.307,1214,5.01,1215,2.932,1216,1.307,1217,1.307,1218,2.237,1219,2.932,1220,1.307,1221,1.307,1222,3.639,1223,1.307,1224,1.307,1225,1.307,1226,1.307,1227,1.307,1228,1.307,1229,4.441,1230,5.194,1231,1.307,1232,1.307,1233,1.307,1234,1.307,1235,1.307,1236,1.913,1237,1.307,1238,1.307,1239,1.307,1240,1.307,1241,1.307,1242,1.307,1243,5.355,1244,5.194,1245,4.549,1246,4.256,1247,1.307,1248,1.307,1249,2.932,1250,1.307,1251,1.307,1252,1.307,1253,1.307,1254,1.307,1255,2.237,1256,1.307,1257,1.307,1258,1.307,1259,1.307,1260,1.307,1261,2.932,1262,0.993,1263,1.307,1264,1.307,1265,1.307,1266,1.307,1267,1.307,1268,1.307,1269,4.797,1270,1.307,1271,1.307,1272,1.307,1273,1.307,1274,1.307,1275,1.307,1276,1.307,1277,1.307,1278,1.307,1279,1.307,1280,1.307,1281,2.237,1282,1.307,1283,2.932,1284,1.307,1285,1.307,1286,3.472,1287,1.307,1288,1.307,1289,1.307,1290,1.307,1291,1.307,1292,1.307,1293,1.307,1294,1.307,1295,1.117,1296,3.904,1297,3.904,1298,1.307,1299,1.307,1300,1.307,1301,1.307,1302,1.307,1303,1.307,1304,1.307,1305,1.307,1306,1.307,1307,1.307,1308,2.237,1309,6.434,1310,6.479,1311,3.472,1312,3.472,1313,1.307,1314,4.284,1315,1.307,1316,2.237,1317,2.508,1318,1.117,1319,3.89,1320,1.307,1321,1.307,1322,1.307,1323,1.307,1324,2.237,1325,1.307,1326,1.913,1327,1.307,1328,1.307,1329,1.307,1330,1.307,1331,1.307,1332,2.237,1333,3.904,1334,1.307,1335,1.307,1336,1.307,1337,1.307,1338,1.117,1339,1.307,1340,1.307,1341,2.237,1342,2.237,1343,2.932,1344,2.237,1345,2.237,1346,1.307,1347,1.307,1348,1.307,1349,2.932,1350,1.307,1351,2.237,1352,1.307,1353,1.307,1354,1.307,1355,1.307,1356,4.256,1357,2.969,1358,3.472,1359,2.237,1360,2.932,1361,2.237,1362,2.237,1363,2.237,1364,2.932,1365,3.904,1366,2.237,1367,2.237,1368,2.237,1369,4.256,1370,2.237,1371,2.237,1372,2.932,1373,2.237,1374,2.237,1375,3.904,1376,6.774,1377,1.307,1378,1.307,1379,1.307,1380,4.579,1381,1.307,1382,1.307,1383,1.307,1384,1.307,1385,1.307,1386,1.307,1387,3.89,1388,1.307,1389,1.307,1390,1.307,1391,1.307,1392,2.932,1393,1.699,1394,1.307,1395,1.307,1396,1.307,1397,1.699,1398,2.237,1399,1.307,1400,1.307,1401,1.307,1402,1.913,1403,1.307,1404,1.307,1405,1.117,1406,1.913,1407,1.307,1408,1.307,1409,1.117,1410,1.307,1411,1.307,1412,4.284,1413,1.307,1414,1.307,1415,1.307,1416,1.307,1417,1.913,1418,1.307,1419,1.307,1420,1.307,1421,1.117,1422,1.117,1423,1.307,1424,1.307,1425,1.307,1426,1.307,1427,1.307,1428,1.307,1429,1.307,1430,1.307,1431,4.102,1432,1.307,1433,1.307,1434,1.307,1435,2.237,1436,1.307,1437,2.237,1438,1.307,1439,1.307,1440,1.307,1441,1.307,1442,1.307,1443,1.307,1444,1.307,1445,1.307,1446,1.117,1447,1.307,1448,1.307,1449,3.904,1450,2.237,1451,0.993,1452,1.307,1453,1.307,1454,1.307,1455,1.307,1456,1.307,1457,1.307,1458,1.307,1459,1.307,1460,1.307,1461,1.307,1462,1.307,1463,1.307,1464,1.307,1465,1.307,1466,1.307,1467,1.307,1468,1.307,1469,1.307,1470,1.307,1471,1.307,1472,1.307,1473,1.307,1474,1.307,1475,2.508,1476,1.307,1477,1.307,1478,1.307,1479,1.307,1480,1.307,1481,1.307,1482,1.307,1483,1.307,1484,1.307,1485,1.307,1486,1.307,1487,1.307,1488,1.307,1489,1.307,1490,1.307,1491,1.307,1492,2.932,1493,1.307,1494,1.307,1495,1.307,1496,1.307,1497,1.307,1498,1.307,1499,1.307,1500,1.117,1501,1.307,1502,1.307,1503,1.307,1504,1.117,1505,1.307,1506,1.307,1507,2.237,1508,1.307,1509,1.307,1510,1.307,1511,1.307,1512,1.307,1513,1.307,1514,1.307,1515,1.307,1516,1.913,1517,1.307,1518,1.913,1519,1.307,1520,1.307,1521,1.307,1522,2.237,1523,2.237,1524,2.237,1525,1.913,1526,2.237,1527,1.307,1528,2.932,1529,1.307,1530,2.237,1531,1.307,1532,2.237,1533,2.237,1534,1.307,1535,1.307,1536,1.307,1537,1.307,1538,1.307,1539,1.307,1540,1.307,1541,1.307,1542,1.307,1543,1.307,1544,1.307,1545,1.307,1546,1.307,1547,1.307,1548,2.237,1549,1.307,1550,1.307,1551,1.307,1552,1.307,1553,1.117,1554,1.307,1555,1.307,1556,1.307,1557,1.307,1558,1.307,1559,1.307,1560,1.307,1561,1.307,1562,1.307,1563,1.307,1564,1.307,1565,1.117,1566,1.307,1567,1.307,1568,1.307,1569,1.307,1570,1.307,1571,1.117,1572,1.307,1573,1.307,1574,1.307,1575,1.307,1576,1.307,1577,1.117,1578,1.117,1579,1.307,1580,1.307,1581,1.307,1582,1.307,1583,1.307,1584,1.307,1585,1.307,1586,1.307,1587,1.307,1588,1.307,1589,1.307,1590,1.307,1591,1.307,1592,1.307]],["title/coverage.html",[1593,3.762]],["body/coverage.html",[7,0.021,20,0.215,47,0.808,49,1.649,51,1.649,53,1.554,55,1.554,57,1.554,59,1.554,73,0.439,93,0.212,96,0.014,97,0.014,98,1.959,99,2.533,100,3.146,102,2.324,121,1.058,123,2.533,132,1.649,164,2.324,174,2.149,175,1.177,177,2.533,184,2.324,186,2.795,187,1.514,188,3.578,190,1.243,231,2.067,233,3.146,246,1.554,250,2.149,269,1.649,271,2.031,272,3.146,281,4.393,312,1.753,362,3.146,463,3.146,485,3.146,500,3.146,519,3.146,534,3.146,571,2.533,572,3.146,624,3.146,626,2.324,644,3.9,645,3.146,650,2.533,675,2.533,677,3.146,693,3.146,694,3.146,713,1.87,715,1.753,730,2.533,731,3.146,734,1.753,762,2.795,772,3.146,779,1.554,831,2.533,832,3.146,833,3.146,866,2.149,879,2.533,880,3.146,881,3.146,908,2.149,919,2.533,920,3.146,921,3.146,945,2.149,955,2.533,956,3.146,957,3.146,981,2.149,995,3.146,1024,3.146,1049,3.146,1070,3.146,1071,3.146,1085,3.146,1088,3.146,1121,3.146,1158,3.146,1178,2.533,1406,5.195,1593,2.795,1594,3.679,1595,3.679,1596,3.679,1597,7.148,1598,6.075,1599,3.792,1600,3.146,1601,3.146,1602,6.075,1603,3.679,1604,3.146,1605,3.146,1606,6.548,1607,3.146,1608,3.146,1609,3.679,1610,6.075,1611,3.679,1612,3.146]],["title/miscellaneous/enumerations.html",[1613,1.546,1614,3.738]],["body/miscellaneous/enumerations.html",[7,0.021,96,0.016,97,0.016,103,0.519,119,1.023,152,2.657,153,2.657,186,3.556,187,2.021,188,4.208,196,4.436,198,4.076,202,4.02,214,3.411,227,4.02,228,4.436,229,4.436,365,4.02,374,3.687,375,4.436,377,4.436,449,4.993,450,4.993,762,3.556,766,4.436,767,4.02,768,4.436,769,4.436,770,4.02,1613,2.378,1614,4.003,1615,4.681,1616,4.681,1617,5.839,1618,4.681,1619,4.681]],["title/miscellaneous/functions.html",[1613,1.546,1620,3.738]],["body/miscellaneous/functions.html",[7,0.018,96,0.018,97,0.018,103,0.638,1607,4.926,1608,5.947,1613,2.927,1620,4.926,1621,5.76]],["title/index.html",[103,0.337,1141,2.095,1142,2.311]],["body/index.html",[7,0.02,16,1.378,17,1.226,19,0.201,77,2.63,83,3.868,96,0.012,97,0.012,135,3.474,141,1.378,181,0.639,187,0.933,197,1.66,237,1.409,269,1.378,277,1.159,290,3.346,299,1.942,317,2.336,368,1.942,384,3.346,386,2.336,387,3.144,390,2.336,417,2.336,457,3.282,460,2.117,569,2.336,577,4.518,606,2.63,628,2.336,679,2.63,1144,2.63,1146,5.085,1153,3.767,1155,4.401,1164,2.63,1170,3.346,1173,2.63,1178,2.117,1181,3.767,1183,2.63,1185,4.401,1186,2.63,1193,4.401,1229,4.805,1236,4.805,1262,2.336,1314,4.805,1317,5.085,1318,5.085,1319,2.63,1326,2.63,1338,2.63,1357,3.767,1380,2.63,1387,4.805,1397,3.346,1412,5.291,1417,2.63,1421,2.63,1422,6.165,1431,4.805,1446,2.63,1451,2.336,1475,3.767,1500,3.767,1504,4.401,1516,2.63,1553,2.63,1565,2.63,1571,2.63,1577,5.983,1578,2.63,1593,2.336,1612,2.63,1622,3.075,1623,3.075,1624,4.405,1625,3.075,1626,3.075,1627,3.075,1628,5.449,1629,2.63,1630,3.075,1631,3.075,1632,3.075,1633,3.075,1634,3.075,1635,3.075,1636,3.075,1637,4.405,1638,3.075,1639,3.075,1640,4.405,1641,3.075,1642,3.075,1643,3.075,1644,3.075,1645,4.401,1646,6.372,1647,3.075,1648,3.075,1649,3.075,1650,2.63,1651,4.405,1652,3.075,1653,3.075,1654,3.075,1655,3.075,1656,3.075,1657,3.075,1658,3.075,1659,3.075,1660,3.075,1661,4.405,1662,3.075,1663,3.075,1664,4.405,1665,3.075,1666,3.075,1667,3.075,1668,3.075,1669,3.075,1670,3.075,1671,3.075,1672,3.075,1673,4.405,1674,3.075,1675,4.405,1676,4.405,1677,3.075,1678,3.075,1679,3.075,1680,4.405,1681,3.075,1682,3.075,1683,3.075,1684,3.075,1685,3.075,1686,3.075,1687,3.075,1688,3.075,1689,3.075,1690,3.075,1691,3.075,1692,4.405,1693,3.075,1694,4.405,1695,4.405,1696,3.075,1697,2.63,1698,3.075,1699,3.075,1700,3.075,1701,4.405,1702,3.075,1703,3.075,1704,4.405,1705,4.405,1706,3.075,1707,3.075,1708,3.075,1709,2.63,1710,3.075,1711,3.075,1712,4.405,1713,3.075,1714,4.405,1715,4.405,1716,3.075,1717,3.075,1718,3.075,1719,3.075,1720,3.075,1721,3.075,1722,4.405,1723,4.405,1724,3.075,1725,3.075,1726,3.075,1727,3.075,1728,3.075,1729,3.075,1730,3.075,1731,3.075,1732,3.075,1733,3.075,1734,3.075,1735,4.405,1736,3.075,1737,3.075,1738,3.075,1739,3.075,1740,3.075,1741,3.075,1742,3.075,1743,3.075,1744,3.075,1745,3.075,1746,3.075,1747,3.075,1748,3.075,1749,3.075,1750,3.075,1751,4.405,1752,3.075,1753,3.075,1754,3.075,1755,3.075,1756,3.075,1757,3.075]],["title/license.html",[368,1.921,1141,2.095,1142,2.311]],["body/license.html",[7,0.016,17,1.897,96,0.016,97,0.016,304,3.257,316,4.068,327,2.267,368,3.005,387,2.417,457,2.779,460,3.275,548,4.068,1178,3.275,1409,4.068,1451,4.481,1628,4.068,1629,6.2,1645,5.044,1650,4.068,1697,5.044,1709,4.068,1758,6.41,1759,4.757,1760,5.898,1761,4.757,1762,4.757,1763,4.757,1764,4.757,1765,4.757,1766,4.757,1767,4.757,1768,4.757,1769,4.757,1770,4.757,1771,4.757,1772,4.757,1773,4.757,1774,4.757,1775,4.757,1776,4.757,1777,4.757,1778,5.898,1779,4.757,1780,4.757,1781,4.757,1782,4.757,1783,4.757,1784,4.757,1785,5.898,1786,5.898,1787,4.757,1788,4.757,1789,4.757,1790,4.757,1791,4.757,1792,4.757,1793,4.757,1794,4.757,1795,4.757,1796,4.757,1797,4.757,1798,4.757,1799,4.757,1800,4.757,1801,4.757,1802,4.757,1803,4.757,1804,4.757,1805,4.757,1806,4.757,1807,4.757,1808,4.757,1809,4.757,1810,4.757,1811,4.757,1812,4.757,1813,4.757]],["title/modules.html",[2,1.975]],["body/modules.html",[1,3.632,2,2.104,6,3.332,7,0.018,8,3.332,9,3.332,10,3.332,11,3.332,12,3.332,13,3.332,14,3.332,96,0.018,97,0.018,1814,7.327,1815,7.327,1816,7.327,1817,7.373,1818,4.512,1819,5.276]],["title/overview.html",[1820,4.235]],["body/overview.html",[1,5.057,2,1.538,3,2.309,4,3.298,5,3.298,6,4.405,7,0.021,8,4.35,9,3.664,10,4.193,11,4.35,12,4.35,13,4.35,14,4.35,15,2.455,16,1.728,17,1.538,87,1.538,90,1.109,96,0.014,97,0.014,132,3.038,161,3.298,162,3.298,163,3.298,164,4.281,171,3.298,172,3.298,173,3.298,174,3.96,175,2.29,185,2.096,208,2.253,232,1.838,675,2.655,756,3.298,758,3.298,866,3.96,908,3.96,945,3.96,981,3.96,990,3.298,991,3.298,992,3.298,1019,3.298,1020,3.298,1021,3.298,1044,3.298,1045,3.298,1046,3.298,1116,3.298,1117,3.298,1118,3.298,1525,3.298,1820,3.298,1821,3.857,1822,5.152,1823,3.857]],["title/properties.html",[191,1.257,1824,3.042]],["body/properties.html",[7,0.021,96,0.018,97,0.018,134,3.99,135,3.068,191,1.51,237,1.681,334,5.356,352,1.593,359,3.616,368,3.317,387,3.183,457,3.659,460,3.616,1148,4.491,1149,4.491,1161,4.491,1170,3.99,1295,4.491,1405,4.491,1518,4.491,1818,4.491,1825,5.252,1826,5.252,1827,5.252,1828,5.252,1829,5.252,1830,5.252,1831,5.252,1832,5.252,1833,5.252,1834,5.252,1835,5.252,1836,5.252,1837,5.252,1838,5.252,1839,5.252,1840,5.252,1841,5.252]],["title/miscellaneous/typealiases.html",[1613,1.546,1842,4.371]],["body/miscellaneous/typealiases.html",[7,0.018,73,0.687,96,0.018,97,0.018,103,0.638,1599,4.376,1613,2.927,1843,5.76,1844,6.612,1845,4.926]],["title/miscellaneous/variables.html",[1393,3.321,1613,1.546]],["body/miscellaneous/variables.html",[7,0.021,73,0.543,96,0.016,97,0.016,103,0.505,121,1.65,128,2.169,147,2.163,157,1.65,191,1.309,197,2.486,198,3.586,269,2.04,277,2.163,349,2.994,352,1.381,580,4.359,625,3.893,641,3.893,655,3.893,713,2.915,715,2.734,779,2.424,1222,3.893,1262,3.458,1393,3.458,1397,4.359,1402,4.907,1599,3.458,1600,3.893,1601,4.907,1604,3.893,1605,4.907,1613,2.313,1845,4.907,1846,4.552,1847,4.552,1848,4.552,1849,4.552,1850,4.552,1851,4.552,1852,4.552,1853,4.552,1854,5.738,1855,4.552,1856,4.552,1857,5.738,1858,4.552,1859,4.552,1860,4.552,1861,5.738,1862,5.738,1863,5.738,1864,5.738,1865,4.552,1866,4.552]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":281,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{},"coverage.html":{}}}],["0/1",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["0046b05",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":1192,"title":{},"body":{"changelog.html":{}}}],["04082d7",{"_index":1277,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":1375,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1376,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":328,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"changelog.html":{}}}],["0848443",{"_index":1490,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["09c96fe",{"_index":1242,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":208,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"changelog.html":{},"overview.html":{}}}],["1.0.0",{"_index":1570,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":1567,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":1564,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":1560,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1557,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":1551,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":1546,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":1543,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":1541,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":1512,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":1506,"title":{},"body":{"changelog.html":{}}}],["1.6.10",{"_index":1474,"title":{},"body":{"changelog.html":{}}}],["1.6.11",{"_index":1470,"title":{},"body":{"changelog.html":{}}}],["1.6.12",{"_index":1467,"title":{},"body":{"changelog.html":{}}}],["1.6.13",{"_index":1464,"title":{},"body":{"changelog.html":{}}}],["1.6.14",{"_index":1459,"title":{},"body":{"changelog.html":{}}}],["1.6.15",{"_index":1456,"title":{},"body":{"changelog.html":{}}}],["1.6.16",{"_index":1448,"title":{},"body":{"changelog.html":{}}}],["1.6.17",{"_index":1444,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":1502,"title":{},"body":{"changelog.html":{}}}],["1.6.3",{"_index":1499,"title":{},"body":{"changelog.html":{}}}],["1.6.4",{"_index":1496,"title":{},"body":{"changelog.html":{}}}],["1.6.5",{"_index":1494,"title":{},"body":{"changelog.html":{}}}],["1.6.6",{"_index":1491,"title":{},"body":{"changelog.html":{}}}],["1.6.7",{"_index":1487,"title":{},"body":{"changelog.html":{}}}],["1.6.8",{"_index":1484,"title":{},"body":{"changelog.html":{}}}],["1.6.9",{"_index":1481,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":1439,"title":{},"body":{"changelog.html":{}}}],["1.7.1",{"_index":1434,"title":{},"body":{"changelog.html":{}}}],["1.7.10",{"_index":1383,"title":{},"body":{"changelog.html":{}}}],["1.7.11",{"_index":1379,"title":{},"body":{"changelog.html":{}}}],["1.7.12",{"_index":1377,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":1416,"title":{},"body":{"changelog.html":{}}}],["1.7.3",{"_index":1411,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":1408,"title":{},"body":{"changelog.html":{}}}],["1.7.5",{"_index":1404,"title":{},"body":{"changelog.html":{}}}],["1.7.6",{"_index":1400,"title":{},"body":{"changelog.html":{}}}],["1.7.7",{"_index":1395,"title":{},"body":{"changelog.html":{}}}],["1.7.8",{"_index":1391,"title":{},"body":{"changelog.html":{}}}],["1.7.9",{"_index":1386,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":1356,"title":{},"body":{"changelog.html":{}}}],["1.8.1",{"_index":1353,"title":{},"body":{"changelog.html":{}}}],["1.8.2",{"_index":1348,"title":{},"body":{"changelog.html":{}}}],["1.9.0",{"_index":1148,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["10",{"_index":206,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{}}}],["100",{"_index":657,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(50)@isoptional",{"_index":211,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["11756",{"_index":455,"title":{},"body":{"entities/DbRepo.html":{}}}],["11756})@column({type",{"_index":430,"title":{},"body":{"entities/DbRepo.html":{}}}],["12",{"_index":1349,"title":{},"body":{"changelog.html":{}}}],["12237133",{"_index":353,"title":{},"body":{"entities/DbContribution.html":{}}}],["12237133})@primarycolumn('bigint",{"_index":313,"title":{},"body":{"entities/DbContribution.html":{}}}],["13",{"_index":1372,"title":{},"body":{"changelog.html":{}}}],["13:24:51.000000",{"_index":357,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{}}}],["13:24:51.000000'})@column({type",{"_index":318,"title":{},"body":{"entities/DbContribution.html":{}}}],["13:24:51.000000'})@createdatecolumn({type",{"_index":303,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["14",{"_index":1336,"title":{},"body":{"changelog.html":{}}}],["14b6a44",{"_index":1205,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":356,"title":{},"body":{"entities/DbContribution.html":{}}}],["15})@column({type",{"_index":292,"title":{},"body":{"entities/DbContribution.html":{}}}],["166050d",{"_index":1538,"title":{},"body":{"changelog.html":{}}}],["16678a7",{"_index":1307,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1547,"title":{},"body":{"changelog.html":{}}}],["17c54b9",{"_index":1363,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":1343,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":302,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{}}}],["196",{"_index":481,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["196})@primarygeneratedcolumn",{"_index":467,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["1bbeaf6",{"_index":1212,"title":{},"body":{"changelog.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":218,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["20",{"_index":1255,"title":{},"body":{"changelog.html":{}}}],["2016",{"_index":301,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{}}}],["2022",{"_index":327,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"changelog.html":{},"license.html":{}}}],["2073883",{"_index":1190,"title":{},"body":{"changelog.html":{}}}],["20880c7",{"_index":1399,"title":{},"body":{"changelog.html":{}}}],["20bc1e7",{"_index":1410,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":1244,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1257,"title":{},"body":{"changelog.html":{}}}],["22:04:29.000000",{"_index":358,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["22:04:29.000000'})@updatedatecolumn({type",{"_index":330,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["22:04:39.000000",{"_index":456,"title":{},"body":{"entities/DbRepo.html":{}}}],["22:04:39.000000'})@column({type",{"_index":418,"title":{},"body":{"entities/DbRepo.html":{}}}],["22d3cc1",{"_index":1508,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":1449,"title":{},"body":{"changelog.html":{}}}],["237133",{"_index":482,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{}}}],["237133})@column",{"_index":476,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["237133})@primarycolumn('bigint",{"_index":544,"title":{},"body":{"entities/DbUser.html":{}}}],["24",{"_index":1341,"title":{},"body":{"changelog.html":{}}}],["247e0ba",{"_index":1204,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1286,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":286,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["26",{"_index":1279,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":1435,"title":{},"body":{"changelog.html":{}}}],["272c09a",{"_index":1592,"title":{},"body":{"changelog.html":{}}}],["273f337",{"_index":1563,"title":{},"body":{"changelog.html":{}}}],["274",{"_index":452,"title":{},"body":{"entities/DbRepo.html":{}}}],["274})@column({type",{"_index":404,"title":{},"body":{"entities/DbRepo.html":{}}}],["28",{"_index":329,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"changelog.html":{}}}],["29",{"_index":1214,"title":{},"body":{"changelog.html":{}}}],["2a8d198",{"_index":1224,"title":{},"body":{"changelog.html":{}}}],["2bdec65",{"_index":1202,"title":{},"body":{"changelog.html":{}}}],["2c0b15f",{"_index":1582,"title":{},"body":{"changelog.html":{}}}],["2c0b3d1",{"_index":1463,"title":{},"body":{"changelog.html":{}}}],["2f966a3",{"_index":1347,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":1199,"title":{},"body":{"changelog.html":{}}}],["3001",{"_index":1642,"title":{},"body":{"index.html":{}}}],["31e4d60",{"_index":1390,"title":{},"body":{"changelog.html":{}}}],["3282435",{"_index":1221,"title":{},"body":{"changelog.html":{}}}],["334268d",{"_index":1226,"title":{},"body":{"changelog.html":{}}}],["33fea7e",{"_index":1501,"title":{},"body":{"changelog.html":{}}}],["34d521d",{"_index":1566,"title":{},"body":{"changelog.html":{}}}],["3774b36",{"_index":1270,"title":{},"body":{"changelog.html":{}}}],["3918a78",{"_index":1529,"title":{},"body":{"changelog.html":{}}}],["4552c66",{"_index":1368,"title":{},"body":{"changelog.html":{}}}],["4601be2",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["498",{"_index":570,"title":{},"body":{"entities/DbUser.html":{}}}],["498})@column({type",{"_index":556,"title":{},"body":{"entities/DbUser.html":{}}}],["4b264d5",{"_index":1197,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":453,"title":{},"body":{"entities/DbRepo.html":{}}}],["50",{"_index":210,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["500",{"_index":1194,"title":{},"body":{"changelog.html":{}}}],["5473",{"_index":454,"title":{},"body":{"entities/DbRepo.html":{}}}],["5473})@column({type",{"_index":441,"title":{},"body":{"entities/DbRepo.html":{}}}],["57568598",{"_index":451,"title":{},"body":{"entities/DbRepo.html":{}}}],["57568598})@column({type",{"_index":439,"title":{},"body":{"entities/DbRepo.html":{}}}],["58bf922",{"_index":1584,"title":{},"body":{"changelog.html":{}}}],["5925b74",{"_index":1301,"title":{},"body":{"changelog.html":{}}}],["59dd7bf",{"_index":1234,"title":{},"body":{"changelog.html":{}}}],["5e7c6c7",{"_index":1576,"title":{},"body":{"changelog.html":{}}}],["5eddeb1",{"_index":1423,"title":{},"body":{"changelog.html":{}}}],["5f79c49",{"_index":1526,"title":{},"body":{"changelog.html":{}}}],["5})@column({type",{"_index":428,"title":{},"body":{"entities/DbRepo.html":{}}}],["6",{"_index":1823,"title":{},"body":{"overview.html":{}}}],["607cf5d",{"_index":1545,"title":{},"body":{"changelog.html":{}}}],["618225f",{"_index":1208,"title":{},"body":{"changelog.html":{}}}],["61ac1e7",{"_index":1276,"title":{},"body":{"changelog.html":{}}}],["61b67d5",{"_index":1540,"title":{},"body":{"changelog.html":{}}}],["62b3eea",{"_index":1374,"title":{},"body":{"changelog.html":{}}}],["630f3b5",{"_index":1554,"title":{},"body":{"changelog.html":{}}}],["63d6a92",{"_index":1427,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":408,"title":{},"body":{"entities/DbRepo.html":{}}}],["673dca9",{"_index":1385,"title":{},"body":{"changelog.html":{}}}],["69b2067",{"_index":1291,"title":{},"body":{"changelog.html":{}}}],["6a4810f",{"_index":1284,"title":{},"body":{"changelog.html":{}}}],["6d23c24",{"_index":1394,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1525,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["71359796",{"_index":355,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["71359796})@column",{"_index":471,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["71359796})@column({type",{"_index":324,"title":{},"body":{"entities/DbContribution.html":{}}}],["71359796})@primarycolumn('bigint",{"_index":394,"title":{},"body":{"entities/DbRepo.html":{}}}],["7249714",{"_index":1328,"title":{},"body":{"changelog.html":{}}}],["73d1c74",{"_index":1569,"title":{},"body":{"changelog.html":{}}}],["77c734c",{"_index":1480,"title":{},"body":{"changelog.html":{}}}],["79bf61d",{"_index":1420,"title":{},"body":{"changelog.html":{}}}],["7adfb6b",{"_index":1403,"title":{},"body":{"changelog.html":{}}}],["7db9008",{"_index":1588,"title":{},"body":{"changelog.html":{}}}],["7e9b8a4",{"_index":1469,"title":{},"body":{"changelog.html":{}}}],["7fe63aa",{"_index":1511,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1822,"title":{},"body":{"overview.html":{}}}],["8080:3001",{"_index":1676,"title":{},"body":{"index.html":{}}}],["81e8bbc",{"_index":1521,"title":{},"body":{"changelog.html":{}}}],["860fff3",{"_index":1264,"title":{},"body":{"changelog.html":{}}}],["867d740",{"_index":1273,"title":{},"body":{"changelog.html":{}}}],["8810e03",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["8837b2a",{"_index":1438,"title":{},"body":{"changelog.html":{}}}],["8952f19",{"_index":1287,"title":{},"body":{"changelog.html":{}}}],["8aee8e5",{"_index":1505,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1821,"title":{},"body":{"overview.html":{}}}],["911df68",{"_index":1476,"title":{},"body":{"changelog.html":{}}}],["9484df4",{"_index":1275,"title":{},"body":{"changelog.html":{}}}],["94ba4e1",{"_index":1483,"title":{},"body":{"changelog.html":{}}}],["957b86e",{"_index":1315,"title":{},"body":{"changelog.html":{}}}],["_data",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a08abfd",{"_index":1203,"title":{},"body":{"changelog.html":{}}}],["a0db0aa",{"_index":1531,"title":{},"body":{"changelog.html":{}}}],["a229a3b",{"_index":1419,"title":{},"body":{"changelog.html":{}}}],["a9e1df6",{"_index":1378,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1784,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":1552,"title":{},"body":{"changelog.html":{}}}],["ac31556",{"_index":1550,"title":{},"body":{"changelog.html":{}}}],["accessing",{"_index":1477,"title":{},"body":{"changelog.html":{}}}],["accessors",{"_index":678,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["action",{"_index":1808,"title":{},"body":{"license.html":{}}}],["activity",{"_index":555,"title":{},"body":{"entities/DbUser.html":{}}}],["add",{"_index":1153,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["add_table_nametest",{"_index":1726,"title":{},"body":{"index.html":{}}}],["added",{"_index":1693,"title":{},"body":{"index.html":{}}}],["adding",{"_index":1718,"title":{},"body":{"index.html":{}}}],["additional",{"_index":1258,"title":{},"body":{"changelog.html":{}}}],["addorderby(`\"${orderfield",{"_index":259,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["addorderby(`\"contribution\".\"created_at",{"_index":261,"title":{},"body":{"injectables/ContributionService.html":{}}}],["addorderby(`\"repo\".\"created_at",{"_index":830,"title":{},"body":{"injectables/RepoService.html":{}}}],["adds",{"_index":858,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["addselect(qb",{"_index":808,"title":{},"body":{"injectables/RepoService.html":{}}}],["adjust",{"_index":1571,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["adjustments",{"_index":1534,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":1238,"title":{},"body":{"changelog.html":{}}}],["advised",{"_index":1687,"title":{},"body":{"index.html":{}}}],["ae43450",{"_index":1304,"title":{},"body":{"changelog.html":{}}}],["af531e4",{"_index":1373,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":1462,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":786,"title":{},"body":{"injectables/RepoService.html":{}}}],["aliases",{"_index":1843,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliasname",{"_index":792,"title":{},"body":{"injectables/RepoService.html":{}}}],["aliastable",{"_index":794,"title":{},"body":{"injectables/RepoService.html":{}}}],["alias}count",{"_index":793,"title":{},"body":{"injectables/RepoService.html":{}}}],["alias}countselect",{"_index":795,"title":{},"body":{"injectables/RepoService.html":{}}}],["allof",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["along",{"_index":1320,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":846,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["and/or",{"_index":1776,"title":{},"body":{"license.html":{}}}],["andwhere(\"r2stargazes.user_id",{"_index":1038,"title":{},"body":{"injectables/StargazeService.html":{}}}],["andwhere(\"r2stars.user_id",{"_index":1011,"title":{},"body":{"injectables/StarService.html":{}}}],["andwhere(\"r2submits.user_id",{"_index":1063,"title":{},"body":{"injectables/SubmitService.html":{}}}],["andwhere(\"r2votes.user_id",{"_index":1135,"title":{},"body":{"injectables/VoteService.html":{}}}],["api",{"_index":1170,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["api.opensauced.pizza",{"_index":1624,"title":{},"body":{"index.html":{}}}],["api.opensauced.pizzaalternatively",{"_index":1677,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["apiconfig",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["apiconflictresponse",{"_index":865,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["apidocs",{"_index":1359,"title":{},"body":{"changelog.html":{}}}],["apiextramodels(pagedto",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apihideproperty",{"_index":345,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["apihideproperty()@column({default",{"_index":542,"title":{},"body":{"entities/DbUser.html":{}}}],["apihideproperty()@column({type",{"_index":410,"title":{},"body":{"entities/DbRepo.html":{}}}],["apihideproperty()@deletedatecolumn({type",{"_index":309,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["apihideproperty()@manytoone(undefined",{"_index":320,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["apihideproperty()@onetomany(undefined",{"_index":378,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["apimodelproperty",{"_index":346,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["apimodelproperty({description",{"_index":278,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["apimodelpropertyoptional",{"_index":347,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["apimodelpropertyoptional({description",{"_index":296,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["apinotfoundresponse",{"_index":712,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["apiokresponse",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"miscellaneous/variables.html":{}}}],["apioperation",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["apipaginatedresponse",{"_index":713,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse(dbcontribution",{"_index":720,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["apipaginatedresponse(dbrepo",{"_index":754,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["apiproperty",{"_index":636,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/SupabaseAuthDto.html":{}}}],["apiproperty({description",{"_index":652,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/SupabaseAuthDto.html":{}}}],["apiproperty({type",{"_index":634,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":220,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthDto.html":{}}}],["apipropertyoptional({description",{"_index":1072,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["apipropertyoptional({enum",{"_index":200,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":207,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["apitags",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["apitags(\"authentication",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"health",{"_index":591,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"repository",{"_index":718,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["app",{"_index":1641,"title":{},"body":{"index.html":{}}}],["app.opensauced",{"_index":546,"title":{},"body":{"entities/DbUser.html":{}}}],["appearing",{"_index":1260,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":1638,"title":{},"body":{"index.html":{}}}],["apply",{"_index":1724,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approved",{"_index":506,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["apps",{"_index":1322,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1812,"title":{},"body":{"license.html":{}}}],["array",{"_index":641,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["artifact",{"_index":1492,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":450,"title":{},"body":{"entities/DbRepo.html":{},"miscellaneous/enumerations.html":{}}}],["assets",{"_index":1698,"title":{},"body":{"index.html":{}}}],["assign",{"_index":1485,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1767,"title":{},"body":{"license.html":{}}}],["async",{"_index":234,"title":{},"body":{"injectables/ContributionService.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["attach",{"_index":1558,"title":{},"body":{"changelog.html":{}}}],["attempt",{"_index":1311,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"changelog.html":{},"coverage.html":{}}}],["auth.controller",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/supabase.guard",{"_index":868,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["auth/supabase.user.decorator",{"_index":869,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["authcontroller",{"_index":99,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1089,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticate(req",{"_index":1092,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticated",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{}}}],["authguard",{"_index":1086,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authguard(\"supabase",{"_index":1087,"title":{},"body":{"injectables/SupabaseGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1840,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":1802,"title":{},"body":{"license.html":{}}}],["authuser${relation",{"_index":826,"title":{},"body":{"injectables/RepoService.html":{}}}],["authuser${relation}.user_id",{"_index":827,"title":{},"body":{"injectables/RepoService.html":{}}}],["autoloadentities",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1819,"title":{},"body":{"modules.html":{}}}],["await",{"_index":266,"title":{},"body":{"injectables/ContributionService.html":{},"controllers/RepoContributionsController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["b0169e7",{"_index":1241,"title":{},"body":{"changelog.html":{}}}],["b1a67da",{"_index":1415,"title":{},"body":{"changelog.html":{}}}],["b1eda28",{"_index":1458,"title":{},"body":{"changelog.html":{}}}],["b457783",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["b4c9879",{"_index":1331,"title":{},"body":{"changelog.html":{}}}],["b4d3785",{"_index":1556,"title":{},"body":{"changelog.html":{}}}],["b57f47b",{"_index":1407,"title":{},"body":{"changelog.html":{}}}],["b5b6ac5",{"_index":1539,"title":{},"body":{"changelog.html":{}}}],["b7c3395",{"_index":1493,"title":{},"body":{"changelog.html":{}}}],["b8b22da",{"_index":1271,"title":{},"body":{"changelog.html":{}}}],["b9f3798",{"_index":1323,"title":{},"body":{"changelog.html":{}}}],["ba8dfbb",{"_index":1447,"title":{},"body":{"changelog.html":{}}}],["backed",{"_index":1702,"title":{},"body":{"index.html":{}}}],["backend",{"_index":1827,"title":{},"body":{"properties.html":{}}}],["badge",{"_index":1298,"title":{},"body":{"changelog.html":{}}}],["badges",{"_index":1362,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":1414,"title":{},"body":{"changelog.html":{}}}],["baseentity",{"_index":338,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["baseline",{"_index":1527,"title":{},"body":{"changelog.html":{}}}],["basequerybuilder",{"_index":773,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["bash",{"_index":1432,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":1561,"title":{},"body":{"changelog.html":{}}}],["bc3a37d",{"_index":1443,"title":{},"body":{"changelog.html":{}}}],["bd6d621",{"_index":1515,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":1688,"title":{},"body":{"index.html":{}}}],["being",{"_index":1651,"title":{},"body":{"index.html":{}}}],["below",{"_index":1752,"title":{},"body":{"index.html":{}}}],["beneficial",{"_index":1653,"title":{},"body":{"index.html":{}}}],["beta",{"_index":551,"title":{},"body":{"entities/DbUser.html":{}}}],["beta.1",{"_index":1342,"title":{},"body":{"changelog.html":{}}}],["beta.10",{"_index":1278,"title":{},"body":{"changelog.html":{}}}],["beta.11",{"_index":1253,"title":{},"body":{"changelog.html":{}}}],["beta.12",{"_index":1228,"title":{},"body":{"changelog.html":{}}}],["beta.13",{"_index":1213,"title":{},"body":{"changelog.html":{}}}],["beta.14",{"_index":1198,"title":{},"body":{"changelog.html":{}}}],["beta.15",{"_index":1191,"title":{},"body":{"changelog.html":{}}}],["beta.16",{"_index":1149,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["beta.2",{"_index":1332,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":1324,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":1316,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":1308,"title":{},"body":{"changelog.html":{}}}],["beta.6",{"_index":1302,"title":{},"body":{"changelog.html":{}}}],["beta.7",{"_index":1294,"title":{},"body":{"changelog.html":{}}}],["beta.8",{"_index":1288,"title":{},"body":{"changelog.html":{}}}],["beta.9",{"_index":1285,"title":{},"body":{"changelog.html":{}}}],["beta.api.opensauced.pizza",{"_index":1625,"title":{},"body":{"index.html":{}}}],["better",{"_index":1364,"title":{},"body":{"changelog.html":{}}}],["bigint",{"_index":293,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["binaries",{"_index":1630,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":396,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbUser.html":{},"classes/PageMetaDto.html":{}}}],["bootstrap",{"_index":1608,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["branch",{"_index":317,"title":{},"body":{"entities/DbContribution.html":{},"changelog.html":{},"index.html":{}}}],["break",{"_index":1684,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":1232,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1817,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1814,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1836,"title":{},"body":{"properties.html":{}}}],["build",{"_index":1229,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["builder",{"_index":800,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["builds",{"_index":1673,"title":{},"body":{"index.html":{}}}],["business",{"_index":1660,"title":{},"body":{"index.html":{}}}],["c",{"_index":1759,"title":{},"body":{"license.html":{}}}],["c013b70",{"_index":1455,"title":{},"body":{"changelog.html":{}}}],["c127cea",{"_index":1460,"title":{},"body":{"changelog.html":{}}}],["c24937f",{"_index":1519,"title":{},"body":{"changelog.html":{}}}],["c8115b6",{"_index":1252,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":1652,"title":{},"body":{"index.html":{}}}],["cb83f9d",{"_index":1535,"title":{},"body":{"changelog.html":{}}}],["cb9206d",{"_index":1573,"title":{},"body":{"changelog.html":{}}}],["cc46460",{"_index":1466,"title":{},"body":{"changelog.html":{}}}],["cd306f8",{"_index":1495,"title":{},"body":{"changelog.html":{}}}],["cd8f21d",{"_index":1382,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":1283,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":1143,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1146,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["channel",{"_index":1750,"title":{},"body":{"index.html":{}}}],["character",{"_index":283,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["charge",{"_index":1764,"title":{},"body":{"license.html":{}}}],["check",{"_index":577,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["checkauthsession",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["checks",{"_index":1572,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1350,"title":{},"body":{"changelog.html":{}}}],["cito",{"_index":1639,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1805,"title":{},"body":{"license.html":{}}}],["class",{"_index":93,"title":{"classes/ContributionPageOptionsDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["classes",{"_index":185,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthDto.html":{},"overview.html":{}}}],["clean",{"_index":1218,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":1731,"title":{},"body":{"index.html":{}}}],["client",{"_index":1829,"title":{},"body":{"properties.html":{}}}],["closes",{"_index":1243,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_contributionmodule",{"_index":171,"title":{},"body":{"modules/ContributionModule.html":{},"overview.html":{}}}],["cluster_contributionmodule_exports",{"_index":173,"title":{},"body":{"modules/ContributionModule.html":{},"overview.html":{}}}],["cluster_contributionmodule_providers",{"_index":172,"title":{},"body":{"modules/ContributionModule.html":{},"overview.html":{}}}],["cluster_repomodule",{"_index":756,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_exports",{"_index":758,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_providers",{"_index":757,"title":{},"body":{"modules/RepoModule.html":{}}}],["cluster_stargazemodule",{"_index":1019,"title":{},"body":{"modules/StargazeModule.html":{},"overview.html":{}}}],["cluster_stargazemodule_exports",{"_index":1021,"title":{},"body":{"modules/StargazeModule.html":{},"overview.html":{}}}],["cluster_stargazemodule_providers",{"_index":1020,"title":{},"body":{"modules/StargazeModule.html":{},"overview.html":{}}}],["cluster_starmodule",{"_index":990,"title":{},"body":{"modules/StarModule.html":{},"overview.html":{}}}],["cluster_starmodule_exports",{"_index":991,"title":{},"body":{"modules/StarModule.html":{},"overview.html":{}}}],["cluster_starmodule_providers",{"_index":992,"title":{},"body":{"modules/StarModule.html":{},"overview.html":{}}}],["cluster_submitmodule",{"_index":1044,"title":{},"body":{"modules/SubmitModule.html":{},"overview.html":{}}}],["cluster_submitmodule_exports",{"_index":1046,"title":{},"body":{"modules/SubmitModule.html":{},"overview.html":{}}}],["cluster_submitmodule_providers",{"_index":1045,"title":{},"body":{"modules/SubmitModule.html":{},"overview.html":{}}}],["cluster_votemodule",{"_index":1116,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["cluster_votemodule_exports",{"_index":1117,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["cluster_votemodule_providers",{"_index":1118,"title":{},"body":{"modules/VoteModule.html":{},"overview.html":{}}}],["code",{"_index":1155,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["collection",{"_index":656,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["column",{"_index":337,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["column(\"text",{"_index":458,"title":{},"body":{"entities/DbRepo.html":{}}}],["column('text",{"_index":388,"title":{},"body":{"entities/DbRepo.html":{}}}],["command",{"_index":1646,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1699,"title":{},"body":{"index.html":{}}}],["comments",{"_index":1510,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":1575,"title":{},"body":{"changelog.html":{}}}],["committing",{"_index":1689,"title":{},"body":{"index.html":{}}}],["common/constants/order",{"_index":248,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["common/decorators/api",{"_index":714,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["common/dtos/page",{"_index":224,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{}}}],["common/dtos/page.dto",{"_index":247,"title":{},"body":{"injectables/ContributionService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["community",{"_index":1742,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1696,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":1830,"title":{},"body":{"properties.html":{}}}],["component",{"_index":1553,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["concurrency",{"_index":1424,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1783,"title":{},"body":{"license.html":{}}}],["config/api.config",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["config/endpoint.config",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configservice.get(\"db.connection",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.database",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.host",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.password",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.port",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.username",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1528,"title":{},"body":{"changelog.html":{}}}],["configured",{"_index":1700,"title":{},"body":{"index.html":{}}}],["confirmation",{"_index":1074,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["confirmed_at",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{}}}],["conflictexception",{"_index":1006,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["conflictexception(\"you",{"_index":1014,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["connect",{"_index":1701,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1709,"title":{},"body":{"index.html":{},"license.html":{}}}],["console.log",{"_index":1330,"title":{},"body":{"changelog.html":{}}}],["console.log(querybuilder.getsql",{"_index":264,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["const",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ContributionService.html":{},"controllers/RepoContributionsController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["constants/order",{"_index":688,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["constructor",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContributionService.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["constructor(contributionrepository",{"_index":236,"title":{},"body":{"injectables/ContributionService.html":{}}}],["constructor(data",{"_index":627,"title":{},"body":{"classes/PageDto.html":{}}}],["constructor(reporepository",{"_index":775,"title":{},"body":{"injectables/RepoService.html":{}}}],["constructor(repostargazerepository",{"_index":1027,"title":{},"body":{"injectables/StargazeService.html":{}}}],["constructor(repostarrepository",{"_index":998,"title":{},"body":{"injectables/StarService.html":{}}}],["constructor(reposubmitrepository",{"_index":1052,"title":{},"body":{"injectables/SubmitService.html":{}}}],["constructor(repovoterepository",{"_index":1124,"title":{},"body":{"injectables/VoteService.html":{}}}],["constructor(undefined",{"_index":649,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["container",{"_index":1380,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["contents",{"_index":1452,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":1402,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continuous",{"_index":1309,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1809,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1737,"title":{},"body":{"index.html":{}}}],["contributed",{"_index":289,"title":{},"body":{"entities/DbContribution.html":{}}}],["contributing",{"_index":1735,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":299,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"controllers/RepoContributionsController.html":{},"changelog.html":{},"index.html":{}}}],["contribution.entity",{"_index":178,"title":{},"body":{"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"controllers/RepoContributionsController.html":{}}}],["contribution.repo",{"_index":379,"title":{},"body":{"entities/DbRepo.html":{}}}],["contribution.service",{"_index":180,"title":{},"body":{"modules/ContributionModule.html":{},"controllers/RepoContributionsController.html":{}}}],["contribution/contribution.entity",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{}}}],["contribution/contribution.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["contributionmodule",{"_index":8,"title":{"modules/ContributionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"modules.html":{},"overview.html":{}}}],["contributionorderfieldsenum",{"_index":196,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"miscellaneous/enumerations.html":{}}}],["contributionorderfieldsenum.count",{"_index":199,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{}}}],["contributionpageoptionsdto",{"_index":184,"title":{"classes/ContributionPageOptionsDto.html":{}},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"controllers/RepoContributionsController.html":{},"coverage.html":{}}}],["contributionrepository",{"_index":239,"title":{},"body":{"injectables/ContributionService.html":{}}}],["contributions",{"_index":351,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"controllers/RepoContributionsController.html":{},"injectables/RepoService.html":{},"changelog.html":{}}}],["contributions.controller",{"_index":182,"title":{},"body":{"modules/ContributionModule.html":{}}}],["contributions.controller.ts",{"_index":694,"title":{},"body":{"controllers/RepoContributionsController.html":{},"coverage.html":{}}}],["contributions.controller.ts:31",{"_index":709,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["contributions.controller.ts:48",{"_index":705,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["contributions.repo_id",{"_index":806,"title":{},"body":{"injectables/RepoService.html":{}}}],["contributionscount",{"_index":766,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["contributionservice",{"_index":174,"title":{"injectables/ContributionService.html":{}},"body":{"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"controllers/RepoContributionsController.html":{},"coverage.html":{},"overview.html":{}}}],["contributor",{"_index":229,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"miscellaneous/enumerations.html":{}}}],["controller",{"_index":98,"title":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"health",{"_index":590,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"repos",{"_index":717,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["controllers",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{},"overview.html":{}}}],["conversation",{"_index":1745,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1778,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1451,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["copying",{"_index":1708,"title":{},"body":{"index.html":{}}}],["copyright",{"_index":1758,"title":{},"body":{"license.html":{}}}],["correct",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["correctly",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":227,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["counting",{"_index":1325,"title":{},"body":{"changelog.html":{}}}],["couple",{"_index":1691,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1593,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":1457,"title":{},"body":{"changelog.html":{}}}],["created",{"_index":1523,"title":{},"body":{"changelog.html":{}}}],["created_at",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthDto.html":{},"miscellaneous/enumerations.html":{}}}],["createdatecolumn",{"_index":343,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["createparamdecorator",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":1479,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":300,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{}}}],["current",{"_index":661,"title":{},"body":{"classes/PageMetaDto.html":{},"changelog.html":{}}}],["cypress",{"_index":1670,"title":{},"body":{"index.html":{}}}],["d051987",{"_index":1207,"title":{},"body":{"changelog.html":{}}}],["d08b3ff",{"_index":1274,"title":{},"body":{"changelog.html":{}}}],["d0d5ca5",{"_index":1430,"title":{},"body":{"changelog.html":{}}}],["d2745ff",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["d315ea4",{"_index":1268,"title":{},"body":{"changelog.html":{}}}],["d77ea52",{"_index":1361,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1806,"title":{},"body":{"license.html":{}}}],["data",{"_index":625,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["datasource",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":295,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"changelog.html":{}}}],["db",{"_index":1583,"title":{},"body":{"changelog.html":{}}}],["db:changesif",{"_index":1721,"title":{},"body":{"index.html":{}}}],["db:commit",{"_index":1725,"title":{},"body":{"index.html":{}}}],["db:push",{"_index":1730,"title":{},"body":{"index.html":{}}}],["db:resetpush",{"_index":1729,"title":{},"body":{"index.html":{}}}],["db:startmake",{"_index":1717,"title":{},"body":{"index.html":{}}}],["dbc66f3",{"_index":1206,"title":{},"body":{"changelog.html":{}}}],["dbconfig",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["dbcontribution",{"_index":51,"title":{"entities/DbContribution.html":{}},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"controllers/RepoContributionsController.html":{},"injectables/RepoService.html":{},"changelog.html":{},"coverage.html":{}}}],["dbcontribution})@apinotfoundresponse({description",{"_index":703,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["dbrepo",{"_index":47,"title":{"entities/DbRepo.html":{}},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{},"changelog.html":{},"coverage.html":{}}}],["dbrepotouserstargazers",{"_index":59,"title":{"entities/DbRepoToUserStargazers.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{},"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"changelog.html":{},"coverage.html":{}}}],["dbrepotouserstargazers})@apinotfoundresponse({description",{"_index":891,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["dbrepotouserstars",{"_index":55,"title":{"entities/DbRepoToUserStars.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"changelog.html":{},"coverage.html":{}}}],["dbrepotouserstars})@apinotfoundresponse({description",{"_index":844,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["dbrepotousersubmissions",{"_index":57,"title":{"entities/DbRepoToUserSubmissions.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{},"controllers/RepoSubmitController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"changelog.html":{},"coverage.html":{}}}],["dbrepotousersubmissions})@apinotfoundresponse({description",{"_index":930,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["dbrepotouservotes",{"_index":53,"title":{"entities/DbRepoToUserVotes.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{}}}],["dbrepotouservotes})@apinotfoundresponse({description",{"_index":966,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["dbrepo})@apinotfoundresponse({description",{"_index":742,"title":{},"body":{"controllers/RepoController.html":{}}}],["dbuser",{"_index":49,"title":{"entities/DbUser.html":{}},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"changelog.html":{},"coverage.html":{}}}],["dd5e668",{"_index":1355,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1768,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1813,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1445,"title":{},"body":{"changelog.html":{}}}],["decorator",{"_index":1549,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{}}}],["default",{"_index":197,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["delete",{"_index":863,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{}}}],["delete(\"/:id/star",{"_index":876,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["delete(\"/:id/stargaze",{"_index":915,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["delete(\"/:id/submit",{"_index":952,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["delete(\"/:id/vote",{"_index":987,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete(\"/:owner/:repo/star",{"_index":878,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["delete(\"/:owner/:repo/stargaze",{"_index":918,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["delete(\"/:owner/:repo/submit",{"_index":954,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["delete(\"/:owner/:repo/vote",{"_index":989,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete('/:id/star')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":840,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["delete('/:id/stargaze')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":888,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["delete('/:id/submit')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":928,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["delete('/:id/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":964,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["delete('/:owner/:repo/star')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":850,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["delete('/:owner/:repo/stargaze')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":895,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["delete('/:owner/:repo/submit')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":933,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["delete('/:owner/:repo/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":969,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["deleted_at",{"_index":274,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["deletedatecolumn",{"_index":342,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["demo",{"_index":1425,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":1333,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":1357,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deps",{"_index":1581,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":449,"title":{},"body":{"entities/DbRepo.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":352,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageMetaDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthDto.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":1828,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":1436,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":1318,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["diagram",{"_index":1734,"title":{},"body":{"index.html":{}}}],["diagrams",{"_index":1360,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":1720,"title":{},"body":{"index.html":{}}}],["digital",{"_index":1296,"title":{},"body":{"changelog.html":{}}}],["direction.constant",{"_index":249,"title":{},"body":{"injectables/ContributionService.html":{},"classes/PageOptionsDto.html":{},"injectables/RepoService.html":{}}}],["direction.constant.ts",{"_index":1617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["discord.find",{"_index":1746,"title":{},"body":{"index.html":{}}}],["disk",{"_index":594,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":589,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":1164,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["distribute",{"_index":1774,"title":{},"body":{"license.html":{}}}],["dit",{"_index":1678,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1412,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["docker>=20.10.12",{"_index":1635,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":1522,"title":{},"body":{"changelog.html":{}}}],["docr",{"_index":1312,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":1351,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1366,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":1178,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":1418,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":1825,"title":{},"body":{"properties.html":{}}}],["down",{"_index":1305,"title":{},"body":{"changelog.html":{}}}],["downstarbyrepoid",{"_index":996,"title":{},"body":{"injectables/StarService.html":{}}}],["downstarbyrepoid(repoid",{"_index":1002,"title":{},"body":{"injectables/StarService.html":{}}}],["downstargazebyrepoid",{"_index":1025,"title":{},"body":{"injectables/StargazeService.html":{}}}],["downstargazebyrepoid(repoid",{"_index":1031,"title":{},"body":{"injectables/StargazeService.html":{}}}],["downstargazeonebyid",{"_index":882,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["downstargazeonebyid(id",{"_index":887,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["downstargazeonebyownerandrepo",{"_index":883,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["downstargazeonebyownerandrepo(owner",{"_index":894,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["downstaronebyid",{"_index":834,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downstaronebyid(id",{"_index":839,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downstaronebyownerandrepo",{"_index":835,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downstaronebyownerandrepo(owner",{"_index":849,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["downsubmitbyrepoid",{"_index":1050,"title":{},"body":{"injectables/SubmitService.html":{}}}],["downsubmitbyrepoid(repoid",{"_index":1056,"title":{},"body":{"injectables/SubmitService.html":{}}}],["downsubmitonebyid",{"_index":922,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["downsubmitonebyid(id",{"_index":927,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["downsubmitonebyownerandrepo",{"_index":923,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["downsubmitonebyownerandrepo(owner",{"_index":932,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["downvotebyrepoid",{"_index":1122,"title":{},"body":{"injectables/VoteService.html":{}}}],["downvotebyrepoid(repoid",{"_index":1128,"title":{},"body":{"injectables/VoteService.html":{}}}],["downvoteonebyid",{"_index":958,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyid(id",{"_index":963,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyownerandrepo",{"_index":959,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["downvoteonebyownerandrepo(owner",{"_index":968,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["dry",{"_index":1421,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dtos",{"_index":1210,"title":{},"body":{"changelog.html":{}}}],["dtos/contribution",{"_index":252,"title":{},"body":{"injectables/ContributionService.html":{},"controllers/RepoContributionsController.html":{}}}],["dtos/repo",{"_index":750,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["dtos/supabase",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["during",{"_index":1683,"title":{},"body":{"index.html":{}}}],["e0d38ca",{"_index":1250,"title":{},"body":{"changelog.html":{}}}],["e145e2d",{"_index":1498,"title":{},"body":{"changelog.html":{}}}],["e1fe498",{"_index":1433,"title":{},"body":{"changelog.html":{}}}],["e392288",{"_index":1254,"title":{},"body":{"changelog.html":{}}}],["e42223f",{"_index":1237,"title":{},"body":{"changelog.html":{}}}],["e5e2e03",{"_index":1196,"title":{},"body":{"changelog.html":{}}}],["e663170",{"_index":1559,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":640,"title":{},"body":{"classes/PageDto.html":{}}}],["eba258a",{"_index":1367,"title":{},"body":{"changelog.html":{}}}],["echo",{"_index":1401,"title":{},"body":{"changelog.html":{}}}],["ed9729a",{"_index":1340,"title":{},"body":{"changelog.html":{}}}],["email",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{}}}],["encounter",{"_index":1649,"title":{},"body":{"index.html":{}}}],["encourage",{"_index":1736,"title":{},"body":{"index.html":{}}}],["endpointconfig",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints",{"_index":596,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":578,"title":{},"body":{"controllers/HealthController.html":{}}}],["engines",{"_index":1586,"title":{},"body":{"changelog.html":{}}}],["entities",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{},"changelog.html":{},"overview.html":{}}}],["entities/repo.entity",{"_index":749,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{}}}],["entity",{"_index":271,"title":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{},"changelog.html":{},"coverage.html":{}}}],["enum",{"_index":226,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"changelog.html":{}}}],["enumerations",{"_index":1614,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":201,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["env",{"_index":1398,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":1392,"title":{},"body":{"changelog.html":{}}}],["environments",{"_index":1623,"title":{},"body":{"index.html":{}}}],["error",{"_index":1195,"title":{},"body":{"changelog.html":{}}}],["errors",{"_index":1185,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eslint",{"_index":1246,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1409,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["everything",{"_index":1722,"title":{},"body":{"index.html":{}}}],["example",{"_index":280,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageMetaDto.html":{},"classes/SupabaseAuthDto.html":{}}}],["exclude",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["executioncontext",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existing",{"_index":842,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["explain",{"_index":1589,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["exports",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{}}}],["exposing",{"_index":1465,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1793,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1428,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":189,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}}}],["extra",{"_index":1220,"title":{},"body":{"changelog.html":{}}}],["extractjwt",{"_index":1100,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1113,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractor",{"_index":1112,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["f0304d4",{"_index":1352,"title":{},"body":{"changelog.html":{}}}],["f05c29c",{"_index":1272,"title":{},"body":{"changelog.html":{}}}],["f29f5f2",{"_index":1217,"title":{},"body":{"changelog.html":{}}}],["f4570c3",{"_index":1263,"title":{},"body":{"changelog.html":{}}}],["f5385b3",{"_index":1473,"title":{},"body":{"changelog.html":{}}}],["f5f942f",{"_index":1225,"title":{},"body":{"changelog.html":{}}}],["f8c9324",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["f8d41f1",{"_index":1256,"title":{},"body":{"changelog.html":{}}}],["f96a793",{"_index":1227,"title":{},"body":{"changelog.html":{}}}],["fad79b1",{"_index":1335,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageMetaDto.html":{}}}],["false})@column({default",{"_index":402,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbUser.html":{}}}],["fdc11ea",{"_index":1544,"title":{},"body":{"changelog.html":{}}}],["fe20c2d",{"_index":1293,"title":{},"body":{"changelog.html":{}}}],["fe4b9e9",{"_index":1486,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":552,"title":{},"body":{"entities/DbUser.html":{},"changelog.html":{}}}],["features",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":1240,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":1371,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":1650,"title":{},"body":{"index.html":{},"license.html":{}}}],["find",{"_index":708,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["findall",{"_index":235,"title":{},"body":{"injectables/ContributionService.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findall(pageoptionsdto",{"_index":240,"title":{},"body":{"injectables/ContributionService.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findallbyownerandrepo",{"_index":695,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["findallbyownerandrepo(owner",{"_index":697,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["findallbyrepoid",{"_index":696,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["findallbyrepoid(id",{"_index":706,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["findalluserstargazed",{"_index":884,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["findalluserstargazed(pageoptionsdto",{"_index":897,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["findalluserstarred",{"_index":836,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["findalluserstarred(pageoptionsdto",{"_index":852,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["findallusersubmitted",{"_index":924,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["findallusersubmitted(pageoptionsdto",{"_index":935,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["findalluservoted",{"_index":960,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["findalluservoted(pageoptionsdto",{"_index":971,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["findonebyid",{"_index":732,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyid(id",{"_index":739,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo",{"_index":733,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo(owner",{"_index":744,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["finds",{"_index":699,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["fine",{"_index":1723,"title":{},"body":{"index.html":{}}}],["first",{"_index":1181,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fitness",{"_index":1798,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1685,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":397,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbUser.html":{},"classes/PageMetaDto.html":{}}}],["flight",{"_index":1497,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":1663,"title":{},"body":{"index.html":{}}}],["follow",{"_index":890,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["followed",{"_index":899,"title":{},"body":{"controllers/RepoStargazeController.html":{},"injectables/StargazeService.html":{}}}],["following",{"_index":1628,"title":{},"body":{"index.html":{},"license.html":{}}}],["follows",{"_index":912,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["follows'})@apiokresponse({description",{"_index":903,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["fork",{"_index":399,"title":{},"body":{"entities/DbRepo.html":{}}}],["formatit",{"_index":1686,"title":{},"body":{"index.html":{}}}],["found",{"_index":704,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["found'})@apiconflictresponse({description",{"_index":845,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["free",{"_index":1763,"title":{},"body":{"license.html":{}}}],["from(entity",{"_index":797,"title":{},"body":{"injectables/RepoService.html":{}}}],["full",{"_index":390,"title":{},"body":{"entities/DbRepo.html":{},"changelog.html":{},"index.html":{}}}],["full_name",{"_index":363,"title":{},"body":{"entities/DbRepo.html":{}}}],["function",{"_index":1158,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["functionality",{"_index":1306,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":1620,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1781,"title":{},"body":{"license.html":{}}}],["generated",{"_index":1173,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generation",{"_index":1507,"title":{},"body":{"changelog.html":{}}}],["get(\"/:id",{"_index":751,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/:id/contributions",{"_index":719,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["get(\"/:owner/:repo",{"_index":752,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/:owner/:repo/contributions",{"_index":726,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["get(\"/list",{"_index":753,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/listuserstargazed",{"_index":910,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["get(\"/listuserstarred",{"_index":872,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["get(\"/listusersubmitted",{"_index":948,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["get(\"/listuservoted",{"_index":983,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["get(\"/service",{"_index":595,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/session",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"/web",{"_index":609,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":740,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/:id/contributions')@apioperation({operationid",{"_index":707,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["get('/:owner/:repo')@apioperation({operationid",{"_index":745,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/:owner/:repo/contributions')@apioperation({operationid",{"_index":698,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["get('/list')@apioperation({operationid",{"_index":735,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/listuserstargazed')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":898,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["get('/listuserstarred')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":853,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["get('/listusersubmitted')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":936,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["get('/listuservoted')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":972,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":575,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/session')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":581,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdomain",{"_index":1605,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethello",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello(user",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["getschemapath(model",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(pagedto",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getskip",{"_index":683,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getting",{"_index":1141,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["ghcr.io/open",{"_index":1679,"title":{},"body":{"index.html":{}}}],["git+https://github.com/open",{"_index":1838,"title":{},"body":{"properties.html":{}}}],["github",{"_index":332,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"changelog.html":{}}}],["granted",{"_index":1762,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1818,"title":{},"body":{"modules.html":{},"properties.html":{}}}],["guard",{"_index":1346,"title":{},"body":{"changelog.html":{}}}],["guarded",{"_index":871,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["guards",{"_index":1339,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1739,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1740,"title":{},"body":{"index.html":{}}}],["handler",{"_index":1337,"title":{},"body":{"changelog.html":{}}}],["has_stars_data",{"_index":535,"title":{},"body":{"entities/DbUser.html":{}}}],["hasnextpage",{"_index":646,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":647,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["hasty",{"_index":1292,"title":{},"body":{"changelog.html":{}}}],["health",{"_index":573,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["health.controller",{"_index":623,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":587,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":584,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":571,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":9,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["healthstatusservice",{"_index":576,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":582,"title":{},"body":{"controllers/HealthController.html":{}}}],["hereby",{"_index":1761,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["hide",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1803,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1834,"title":{},"body":{"properties.html":{}}}],["host",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["hot",{"_index":1247,"title":{},"body":{"changelog.html":{}}}],["http",{"_index":592,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["httphealthindicator",{"_index":585,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["https://app.opensauced.pizza",{"_index":461,"title":{},"body":{"entities/DbRepo.html":{}}}],["https://app.opensauced.pizza'})@column({type",{"_index":434,"title":{},"body":{"entities/DbRepo.html":{}}}],["https://github.com/open",{"_index":334,"title":{},"body":{"entities/DbContribution.html":{},"properties.html":{}}}],["httpstatus",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{}}}],["id'})@apiokresponse({type",{"_index":741,"title":{},"body":{"controllers/RepoController.html":{}}}],["identifier",{"_index":312,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{},"coverage.html":{}}}],["identify",{"_index":385,"title":{},"body":{"entities/DbRepo.html":{}}}],["image",{"_index":1732,"title":{},"body":{"index.html":{}}}],["immediate",{"_index":1513,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":1245,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1794,"title":{},"body":{"license.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["imports",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{}}}],["improve",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":1533,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1787,"title":{},"body":{"license.html":{}}}],["including",{"_index":1697,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":103,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":398,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"classes/PageMetaDto.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["information",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["information'})@apiokresponse({type",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["inherited",{"_index":212,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["initial",{"_index":1574,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":231,"title":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["injectables",{"_index":232,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"overview.html":{}}}],["injectrepository",{"_index":245,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["injectrepository(dbcontribution",{"_index":253,"title":{},"body":{"injectables/ContributionService.html":{}}}],["injectrepository(dbrepo",{"_index":791,"title":{},"body":{"injectables/RepoService.html":{}}}],["injectrepository(dbrepotouserstargazers",{"_index":1035,"title":{},"body":{"injectables/StargazeService.html":{}}}],["injectrepository(dbrepotouserstars",{"_index":1007,"title":{},"body":{"injectables/StarService.html":{}}}],["injectrepository(dbrepotousersubmissions",{"_index":1060,"title":{},"body":{"injectables/SubmitService.html":{}}}],["injectrepository(dbrepotouservotes",{"_index":1132,"title":{},"body":{"injectables/VoteService.html":{}}}],["innerjoin(`repo.repotouser${relation",{"_index":825,"title":{},"body":{"injectables/RepoService.html":{}}}],["inspection",{"_index":1461,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":1637,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1631,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1704,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1442,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":1310,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":1832,"title":{},"body":{"properties.html":{}}}],["interface",{"_index":675,"title":{"interfaces/PageMetaParameters.html":{}},"body":{"interfaces/PageMetaParameters.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":676,"title":{},"body":{"interfaces/PageMetaParameters.html":{}}}],["is_accepted",{"_index":501,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{},"changelog.html":{}}}],["is_fork",{"_index":364,"title":{},"body":{"entities/DbRepo.html":{}}}],["is_open_sauced_member",{"_index":536,"title":{},"body":{"entities/DbUser.html":{}}}],["is_private",{"_index":537,"title":{},"body":{"entities/DbUser.html":{}}}],["isarray",{"_index":637,"title":{},"body":{"classes/PageDto.html":{}}}],["isarray()@apiproperty({isarray",{"_index":630,"title":{},"body":{"classes/PageDto.html":{}}}],["isenum",{"_index":221,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["isenum(contributionorderfieldsenum",{"_index":230,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{}}}],["isenum(orderdirectionenum",{"_index":692,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(repoorderfieldsenum",{"_index":771,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["isglobal",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":685,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isoptional",{"_index":222,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["issues",{"_index":365,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["item",{"_index":722,"title":{},"body":{"controllers/RepoContributionsController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["item.id",{"_index":725,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["itemcount",{"_index":265,"title":{},"body":{"injectables/ContributionService.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"injectables/RepoService.html":{}}}],["items",{"_index":655,"title":{},"body":{"classes/PageMetaDto.html":{},"miscellaneous/variables.html":{}}}],["javascript",{"_index":459,"title":{},"body":{"entities/DbRepo.html":{}}}],["javascript'})@column({type",{"_index":407,"title":{},"body":{"entities/DbRepo.html":{}}}],["job",{"_index":1388,"title":{},"body":{"changelog.html":{}}}],["jobs",{"_index":1520,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":1744,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":341,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["jwt",{"_index":1102,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["keywords",{"_index":1833,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1792,"title":{},"body":{"license.html":{}}}],["language",{"_index":366,"title":{},"body":{"entities/DbRepo.html":{}}}],["last",{"_index":315,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{}}}],["last_fetched_contributors_at",{"_index":367,"title":{},"body":{"entities/DbRepo.html":{}}}],["last_merged_at",{"_index":228,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"miscellaneous/enumerations.html":{}}}],["last_sign_in_at",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{}}}],["latest",{"_index":1231,"title":{},"body":{"changelog.html":{}}}],["leftjoinandmapmany(\"repo.contributions",{"_index":805,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(\"repo.user",{"_index":803,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(dbrepotouserstars",{"_index":804,"title":{},"body":{"injectables/RepoService.html":{}}}],["length",{"_index":285,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["leverage",{"_index":1668,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1807,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1804,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1662,"title":{},"body":{"index.html":{}}}],["license",{"_index":368,"title":{"license.html":{}},"body":{"entities/DbRepo.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":194,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"changelog.html":{}}}],["limit(pageoptionsdto.limit",{"_index":263,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["limitation",{"_index":1770,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1795,"title":{},"body":{"license.html":{}}}],["link",{"_index":1300,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":433,"title":{},"body":{"entities/DbRepo.html":{}}}],["links",{"_index":1358,"title":{},"body":{"changelog.html":{}}}],["lint",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":1680,"title":{},"body":{"index.html":{}}}],["lintthis",{"_index":1682,"title":{},"body":{"index.html":{}}}],["list",{"_index":1222,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["listing",{"_index":700,"title":{},"body":{"controllers/RepoContributionsController.html":{},"changelog.html":{}}}],["live",{"_index":1622,"title":{},"body":{"index.html":{}}}],["load",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["loadrelationcountandmap(\"repo.contributionscount",{"_index":813,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.stargazerscount",{"_index":816,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.starscount",{"_index":817,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.submissionscount",{"_index":815,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.votescount",{"_index":814,"title":{},"body":{"injectables/RepoService.html":{}}}],["local",{"_index":1317,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["localhost:54321",{"_index":1716,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1715,"title":{},"body":{"index.html":{}}}],["logging",{"_index":1446,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["logic",{"_index":1661,"title":{},"body":{"index.html":{}}}],["login",{"_index":538,"title":{},"body":{"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{}}}],["machines",{"_index":1632,"title":{},"body":{"index.html":{}}}],["main",{"_index":1334,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1289,"title":{},"body":{"changelog.html":{}}}],["managed",{"_index":1239,"title":{},"body":{"changelog.html":{}}}],["managing",{"_index":1711,"title":{},"body":{"index.html":{}}}],["manual",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":1326,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["manytoone",{"_index":340,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["matching",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":672,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["max",{"_index":686,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(50",{"_index":691,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maximum",{"_index":209,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["memory",{"_index":593,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":588,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1797,"title":{},"body":{"license.html":{}}}],["merge",{"_index":316,"title":{},"body":{"entities/DbContribution.html":{},"license.html":{}}}],["meta",{"_index":626,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"changelog.html":{},"coverage.html":{}}}],["meta.dto",{"_index":251,"title":{},"body":{"injectables/ContributionService.html":{},"classes/PageDto.html":{},"injectables/RepoService.html":{}}}],["meta.dto.ts",{"_index":645,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:15",{"_index":660,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":658,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:27",{"_index":664,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:33",{"_index":654,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:39",{"_index":651,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":662,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["metadata",{"_index":1370,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ContributionService.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["migration",{"_index":1565,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["migrations",{"_index":1712,"title":{},"body":{"index.html":{}}}],["min",{"_index":687,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":690,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimal",{"_index":1530,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":689,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minor",{"_index":1532,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1613,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1692,"title":{},"body":{"index.html":{}}}],["mit",{"_index":460,"title":{},"body":{"entities/DbRepo.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["mit'})@column({type",{"_index":414,"title":{},"body":{"entities/DbRepo.html":{}}}],["mkdocs",{"_index":1437,"title":{},"body":{"changelog.html":{}}}],["mocking",{"_index":1672,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1648,"title":{},"body":{"index.html":{}}}],["model",{"_index":349,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1772,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1265,"title":{},"body":{"changelog.html":{}}}],["mount",{"_index":1488,"title":{},"body":{"changelog.html":{}}}],["mounted",{"_index":1453,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":1659,"title":{},"body":{"index.html":{}}}],["much",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["names",{"_index":1216,"title":{},"body":{"changelog.html":{}}}],["naming",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":1627,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1666,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1516,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nestjs",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["nestjs/config",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["nestjs/passport",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/swagger",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthDto.html":{}}}],["nestjs/swagger/dist/decorators/api",{"_index":348,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["nestjs/terminus",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["nestjs/typeorm",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["nestjs/typeorm/dist/interfaces/typeorm",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["never",{"_index":1093,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["new",{"_index":269,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":386,"title":{},"body":{"entities/DbRepo.html":{},"classes/PageMetaDto.html":{},"index.html":{}}}],["node",{"_index":1579,"title":{},"body":{"changelog.html":{}}}],["node>=16.7.0",{"_index":1633,"title":{},"body":{"index.html":{}}}],["non",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["noninfringement",{"_index":1801,"title":{},"body":{"license.html":{}}}],["notable",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["notfoundexception",{"_index":790,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["notfoundexception(\"you",{"_index":1017,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["notice",{"_index":1785,"title":{},"body":{"license.html":{}}}],["now",{"_index":307,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["npm",{"_index":1577,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm>=8.0.0",{"_index":1634,"title":{},"body":{"index.html":{}}}],["number",{"_index":205,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["oas3",{"_index":1826,"title":{},"body":{"properties.html":{}}}],["obtaining",{"_index":1766,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":1297,"title":{},"body":{"changelog.html":{}}}],["octo",{"_index":1755,"title":{},"body":{"index.html":{}}}],["offset(pageoptionsdto.skip",{"_index":262,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["onetomany",{"_index":443,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["open",{"_index":387,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["open_issues",{"_index":539,"title":{},"body":{"entities/DbUser.html":{}}}],["openapi",{"_index":1261,"title":{},"body":{"changelog.html":{}}}],["opening",{"_index":1690,"title":{},"body":{"index.html":{}}}],["opensauced",{"_index":1248,"title":{},"body":{"changelog.html":{}}}],["opensauced.pizza\"}`).tostring",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operationid",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["opted",{"_index":549,"title":{},"body":{"entities/DbUser.html":{}}}],["optional",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["options.dto",{"_index":225,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"interfaces/PageMetaParameters.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["options.dto.ts",{"_index":188,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["options.dto.ts:15",{"_index":682,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:21",{"_index":204,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{}}}],["options.dto.ts:27",{"_index":680,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:28",{"_index":765,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":681,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":684,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.interface",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":1193,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["orderby",{"_index":193,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbRepo.html":{},"classes/RepoPageOptionsDto.html":{}}}],["orderby(`\"repo\".\"is_fork",{"_index":828,"title":{},"body":{"injectables/RepoService.html":{}}}],["orderdirection",{"_index":195,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["orderdirectionenum",{"_index":214,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["orderdirectionenum.asc",{"_index":829,"title":{},"body":{"injectables/RepoService.html":{}}}],["orderdirectionenum.desc",{"_index":215,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{}}}],["orderfield",{"_index":256,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["origin",{"_index":333,"title":{},"body":{"entities/DbContribution.html":{}}}],["otherwise",{"_index":1811,"title":{},"body":{"license.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1472,"title":{},"body":{"changelog.html":{}}}],["outputs",{"_index":1389,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1820,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":1748,"title":{},"body":{"index.html":{}}}],["owner",{"_index":438,"title":{},"body":{"entities/DbRepo.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["owner}/${repo",{"_index":823,"title":{},"body":{"injectables/RepoService.html":{}}}],["p",{"_index":1675,"title":{},"body":{"index.html":{}}}],["package",{"_index":1824,"title":{"properties.html":{}},"body":{}}],["package.json",{"_index":1694,"title":{},"body":{"index.html":{}}}],["page",{"_index":187,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["pagecount",{"_index":648,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":246,"title":{"classes/PageDto.html":{}},"body":{"injectables/ContributionService.html":{},"classes/PageDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["pagedto(entities",{"_index":270,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["pagemetadto",{"_index":250,"title":{"classes/PageMetaDto.html":{}},"body":{"injectables/ContributionService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagemetadto})@validatenested()@type(undefined",{"_index":635,"title":{},"body":{"classes/PageDto.html":{}}}],["pagemetaparameters",{"_index":650,"title":{"interfaces/PageMetaParameters.html":{}},"body":{"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"coverage.html":{}}}],["pageoptionsdto",{"_index":190,"title":{"classes/PageOptionsDto.html":{}},"body":{"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["pageoptionsdto.limit",{"_index":669,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.orderby",{"_index":257,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["pageoptionsdto.orderdirection",{"_index":260,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["pageoptionsdto.page",{"_index":667,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto:15",{"_index":219,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["pageoptionsdto:27",{"_index":213,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["pageoptionsdto:32",{"_index":217,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["pages",{"_index":663,"title":{},"body":{"classes/PageMetaDto.html":{},"changelog.html":{}}}],["paginated",{"_index":715,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginates",{"_index":736,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["paginating",{"_index":701,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["pagination",{"_index":1548,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":710,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"id",{"_index":721,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"owner",{"_index":727,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["param(\"repo",{"_index":728,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["parameters",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ContributionService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["parameters.dto",{"_index":665,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["parameters.dto.ts",{"_index":677,"title":{},"body":{"interfaces/PageMetaParameters.html":{},"coverage.html":{}}}],["particular",{"_index":1799,"title":{},"body":{"license.html":{}}}],["passport",{"_index":1101,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["passportmodule",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1099,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["password",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":606,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["per",{"_index":659,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["performance",{"_index":1585,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1760,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1779,"title":{},"body":{"license.html":{}}}],["person",{"_index":1765,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1780,"title":{},"body":{"license.html":{}}}],["pipelines",{"_index":1591,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":1738,"title":{},"body":{"index.html":{}}}],["port",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["portions",{"_index":1789,"title":{},"body":{"license.html":{}}}],["postgres",{"_index":1703,"title":{},"body":{"index.html":{}}}],["powered",{"_index":1295,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["prefix",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["prerequisites",{"_index":1626,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":1536,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":1674,"title":{},"body":{"index.html":{}}}],["previous",{"_index":653,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["primarycolumn",{"_index":339,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["primarycolumn(\"bigint",{"_index":354,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["primarygeneratedcolumn",{"_index":478,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["print",{"_index":1396,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContributionService.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["proceed",{"_index":1741,"title":{},"body":{"index.html":{}}}],["process",{"_index":1471,"title":{},"body":{"changelog.html":{}}}],["process.env.domain",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.supabase_api_key",{"_index":1108,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_jwt_secret",{"_index":1111,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_url",{"_index":1106,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["production",{"_index":1504,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["profile",{"_index":550,"title":{},"body":{"entities/DbUser.html":{}}}],["programming",{"_index":406,"title":{},"body":{"entities/DbRepo.html":{}}}],["project",{"_index":384,"title":{},"body":{"entities/DbRepo.html":{},"changelog.html":{},"index.html":{}}}],["promise",{"_index":244,"title":{},"body":{"injectables/ContributionService.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["proper",{"_index":1369,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":1450,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":191,"title":{"properties.html":{}},"body":{"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property.decorator",{"_index":350,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["provide",{"_index":1405,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["provided",{"_index":1790,"title":{},"body":{"license.html":{}}}],["providers",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{}}}],["public",{"_index":273,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"injectables/SupabaseStrategy.html":{}}}],["publish",{"_index":1773,"title":{},"body":{"license.html":{}}}],["pull",{"_index":290,"title":{},"body":{"entities/DbContribution.html":{},"changelog.html":{},"index.html":{}}}],["purpose",{"_index":1800,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1426,"title":{},"body":{"changelog.html":{}}}],["push",{"_index":417,"title":{},"body":{"entities/DbRepo.html":{},"changelog.html":{},"index.html":{}}}],["pushed_at",{"_index":369,"title":{},"body":{"entities/DbRepo.html":{}}}],["put",{"_index":864,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["put(\"/:id/star",{"_index":873,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["put(\"/:id/stargaze",{"_index":911,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["put(\"/:id/submit",{"_index":949,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["put(\"/:id/vote",{"_index":984,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put(\"/:owner/:repo/star",{"_index":875,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["put(\"/:owner/:repo/stargaze",{"_index":914,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["put(\"/:owner/:repo/submit",{"_index":951,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["put(\"/:owner/:repo/vote",{"_index":986,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put('/:id/star')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":857,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["put('/:id/stargaze')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":902,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["put('/:id/submit')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":940,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["put('/:id/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":976,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["put('/:owner/:repo/star')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":861,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["put('/:owner/:repo/stargaze')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":906,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["put('/:owner/:repo/submit')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":943,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["put('/:owner/:repo/vote')@apibearerauth()@useguards(supabaseguard)@apioperation({operationid",{"_index":979,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["quality",{"_index":1681,"title":{},"body":{"index.html":{}}}],["query",{"_index":711,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["querybuilder",{"_index":254,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["querybuilder.getcount",{"_index":267,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["querybuilder.getmany",{"_index":268,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["querybuilder.getone",{"_index":820,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["questions",{"_index":1743,"title":{},"body":{"index.html":{}}}],["re",{"_index":1478,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":1667,"title":{},"body":{"index.html":{}}}],["readme",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":192,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthDto.html":{}}}],["received",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refactoring",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["referal",{"_index":1299,"title":{},"body":{"changelog.html":{}}}],["referencedcolumnname",{"_index":322,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["registration",{"_index":1073,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["registry",{"_index":1381,"title":{},"body":{"changelog.html":{}}}],["relation",{"_index":1259,"title":{},"body":{"changelog.html":{}}}],["relations",{"_index":1555,"title":{},"body":{"changelog.html":{}}}],["relationship",{"_index":1215,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":1314,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remaining",{"_index":1209,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":1705,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1161,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["removed",{"_index":847,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["removes",{"_index":841,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["rename",{"_index":1269,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":181,"title":{},"body":{"modules/ContributionModule.html":{},"entities/DbContribution.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"index.html":{}}}],["repo'})@apiokresponse({type",{"_index":746,"title":{},"body":{"controllers/RepoController.html":{}}}],["repo.contributions",{"_index":361,"title":{},"body":{"entities/DbContribution.html":{},"injectables/RepoService.html":{}}}],["repo.contributions)@joincolumn({name",{"_index":321,"title":{},"body":{"entities/DbContribution.html":{}}}],["repo.controller",{"_index":760,"title":{},"body":{"modules/RepoModule.html":{}}}],["repo.entity",{"_index":479,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["repo.id",{"_index":807,"title":{},"body":{"injectables/RepoService.html":{}}}],["repo.repotouserstargazers",{"_index":484,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"injectables/RepoService.html":{}}}],["repo.repotouserstargazers)@joincolumn({name",{"_index":469,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["repo.repotouserstars",{"_index":499,"title":{},"body":{"entities/DbRepoToUserStars.html":{},"injectables/RepoService.html":{}}}],["repo.repotouserstars)@joincolumn({name",{"_index":490,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["repo.repotousersubmissions",{"_index":518,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{},"injectables/RepoService.html":{}}}],["repo.repotousersubmissions)@joincolumn({name",{"_index":509,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["repo.repotouservotes",{"_index":533,"title":{},"body":{"entities/DbRepoToUserVotes.html":{},"injectables/RepoService.html":{}}}],["repo.repotouservotes)@joincolumn({name",{"_index":524,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["repo.service",{"_index":748,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{}}}],["repo.to.user.stargazers.entity",{"_index":447,"title":{},"body":{"entities/DbRepo.html":{}}}],["repo.to.user.stars.entity",{"_index":445,"title":{},"body":{"entities/DbRepo.html":{}}}],["repo.to.user.submissions.entity",{"_index":446,"title":{},"body":{"entities/DbRepo.html":{}}}],["repo.to.user.votes.entity",{"_index":444,"title":{},"body":{"entities/DbRepo.html":{}}}],["repo.user",{"_index":558,"title":{},"body":{"entities/DbUser.html":{}}}],["repo/dtos/repo",{"_index":870,"title":{},"body":{"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["repo/entities/repo.entity",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"entities/DbContribution.html":{},"entities/DbUser.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{}}}],["repo/entities/repo.to.user.stargazers.entity",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"entities/DbUser.html":{},"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{}}}],["repo/entities/repo.to.user.stars.entity",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"entities/DbUser.html":{},"controllers/RepoStarController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{}}}],["repo/entities/repo.to.user.submissions.entity",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"entities/DbUser.html":{},"controllers/RepoSubmitController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{}}}],["repo/entities/repo.to.user.votes.entity",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"entities/DbUser.html":{},"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{}}}],["repo/repo.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["repo/repo.service",{"_index":179,"title":{},"body":{"modules/ContributionModule.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{}}}],["repo_id",{"_index":275,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["repocontributionscontroller",{"_index":177,"title":{"controllers/RepoContributionsController.html":{}},"body":{"modules/ContributionModule.html":{},"controllers/RepoContributionsController.html":{},"coverage.html":{}}}],["repocontroller",{"_index":730,"title":{"controllers/RepoController.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"coverage.html":{}}}],["repoid",{"_index":241,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["repomodule",{"_index":10,"title":{"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["repoorderfieldsenum",{"_index":202,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["repoorderfieldsenum.stars",{"_index":763,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{}}}],["repopageoptionsdto",{"_index":734,"title":{"classes/RepoPageOptionsDto.html":{}},"body":{"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["reporepository",{"_index":777,"title":{},"body":{"injectables/RepoService.html":{}}}],["report",{"_index":1656,"title":{},"body":{"index.html":{}}}],["repos",{"_index":448,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{}}}],["reposervice",{"_index":175,"title":{"injectables/RepoService.html":{}},"body":{"modules/ContributionModule.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{},"coverage.html":{},"overview.html":{}}}],["repository",{"_index":237,"title":{},"body":{"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["repostarcontroller",{"_index":831,"title":{"controllers/RepoStarController.html":{}},"body":{"controllers/RepoStarController.html":{},"modules/StarModule.html":{},"coverage.html":{}}}],["repostargazecontroller",{"_index":879,"title":{"controllers/RepoStargazeController.html":{}},"body":{"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{},"coverage.html":{}}}],["repostargazerepository",{"_index":1029,"title":{},"body":{"injectables/StargazeService.html":{}}}],["repostarrepository",{"_index":1000,"title":{},"body":{"injectables/StarService.html":{}}}],["reposubmitcontroller",{"_index":919,"title":{"controllers/RepoSubmitController.html":{}},"body":{"controllers/RepoSubmitController.html":{},"modules/SubmitModule.html":{},"coverage.html":{}}}],["reposubmitrepository",{"_index":1054,"title":{},"body":{"injectables/SubmitService.html":{}}}],["repotouserstargazers",{"_index":370,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"changelog.html":{}}}],["repotouserstargazers.repo",{"_index":420,"title":{},"body":{"entities/DbRepo.html":{}}}],["repotouserstargazers.user",{"_index":560,"title":{},"body":{"entities/DbUser.html":{}}}],["repotouserstars",{"_index":371,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"changelog.html":{}}}],["repotouserstars.repo",{"_index":422,"title":{},"body":{"entities/DbRepo.html":{}}}],["repotouserstars.user",{"_index":562,"title":{},"body":{"entities/DbUser.html":{}}}],["repotousersubmissions",{"_index":372,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"changelog.html":{}}}],["repotousersubmissions.repo",{"_index":424,"title":{},"body":{"entities/DbRepo.html":{}}}],["repotousersubmissions.user",{"_index":564,"title":{},"body":{"entities/DbUser.html":{}}}],["repotouservotes",{"_index":373,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"changelog.html":{}}}],["repotouservotes.repo",{"_index":426,"title":{},"body":{"entities/DbRepo.html":{}}}],["repotouservotes.user",{"_index":566,"title":{},"body":{"entities/DbUser.html":{}}}],["repovotecontroller",{"_index":955,"title":{"controllers/RepoVoteController.html":{}},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"coverage.html":{}}}],["repovoterepository",{"_index":1126,"title":{},"body":{"injectables/VoteService.html":{}}}],["representation",{"_index":1754,"title":{},"body":{"index.html":{}}}],["representing",{"_index":298,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{}}}],["req",{"_index":1095,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["request",{"_index":1397,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user?.user_metadata.sub",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":291,"title":{},"body":{"entities/DbContribution.html":{}}}],["requirements",{"_index":1587,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{},"index.html":{},"overview.html":{}}}],["response",{"_index":1266,"title":{},"body":{"changelog.html":{}}}],["response.decorator",{"_index":716,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["response.decorator.ts",{"_index":1601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.dto.ts",{"_index":1071,"title":{},"body":{"classes/SupabaseAuthDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":1084,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:20",{"_index":1082,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:26",{"_index":1078,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:32",{"_index":1075,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:38",{"_index":1081,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:44",{"_index":1076,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:50",{"_index":1083,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["response.dto.ts:8",{"_index":1079,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["restriction",{"_index":1769,"title":{},"body":{"license.html":{}}}],["results",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ContributionService.html":{},"controllers/HealthController.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ContributionService.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{}}}],["revert",{"_index":1503,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1771,"title":{},"body":{"license.html":{}}}],["rogue",{"_index":1281,"title":{},"body":{"changelog.html":{}}}],["role",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{}}}],["route",{"_index":1282,"title":{},"body":{"changelog.html":{}}}],["rule",{"_index":1658,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1249,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":1422,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runner",{"_index":1482,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":1475,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sauced",{"_index":457,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbRepoToUserSubmissions.html":{},"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["sauced'})@column({type",{"_index":392,"title":{},"body":{"entities/DbRepo.html":{}}}],["sauced/api.opensauced.pizza",{"_index":1144,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sauced/api.opensauced.pizza#readme",{"_index":1835,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza.git",{"_index":1839,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza/issues",{"_index":1837,"title":{},"body":{"properties.html":{}}}],["sauced/hot/pull/320",{"_index":360,"title":{},"body":{"entities/DbContribution.html":{}}}],["sauced/hot/pull/320'})@column({type",{"_index":335,"title":{},"body":{"entities/DbContribution.html":{}}}],["sauced/open",{"_index":391,"title":{},"body":{"entities/DbRepo.html":{}}}],["schema",{"_index":1262,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":1267,"title":{},"body":{"changelog.html":{}}}],["scoping",{"_index":1514,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":1524,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":1578,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["see",{"_index":1733,"title":{},"body":{"index.html":{}}}],["select",{"_index":310,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"changelog.html":{}}}],["select(\"count(distinct",{"_index":796,"title":{},"body":{"injectables/RepoService.html":{}}}],["select(['repo.id",{"_index":802,"title":{},"body":{"injectables/RepoService.html":{}}}],["selectquerybuilder",{"_index":785,"title":{},"body":{"injectables/RepoService.html":{}}}],["sell",{"_index":1777,"title":{},"body":{"license.html":{}}}],["service",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"changelog.html":{},"index.html":{}}}],["services",{"_index":1235,"title":{},"body":{"changelog.html":{}}}],["session",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"changelog.html":{}}}],["settings",{"_index":1710,"title":{},"body":{"index.html":{}}}],["shall",{"_index":1786,"title":{},"body":{"license.html":{}}}],["short",{"_index":383,"title":{},"body":{"entities/DbRepo.html":{}}}],["sign",{"_index":1080,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["simple",{"_index":1344,"title":{},"body":{"changelog.html":{}}}],["simplest",{"_index":1727,"title":{},"body":{"index.html":{}}}],["skip",{"_index":679,"title":{},"body":{"classes/PageOptionsDto.html":{},"index.html":{}}}],["soft",{"_index":1200,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1629,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseGuard.html":{},"injectables/SupabaseStrategy.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"index.html":{}}}],["sources",{"_index":401,"title":{},"body":{"entities/DbRepo.html":{}}}],["spdx",{"_index":413,"title":{},"body":{"entities/DbRepo.html":{}}}],["spec",{"_index":1468,"title":{},"body":{"changelog.html":{}}}],["split",{"_index":1303,"title":{},"body":{"changelog.html":{}}}],["src/.../api",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../contribution",{"_index":1615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../endpoint.config.ts",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order",{"_index":1616,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../repo",{"_index":1618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../supabase.user.decorator.ts",{"_index":1845,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dtos/supabase",{"_index":1070,"title":{},"body":{"classes/SupabaseAuthDto.html":{},"coverage.html":{}}}],["src/auth/supabase.guard.ts",{"_index":1085,"title":{},"body":{"injectables/SupabaseGuard.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts",{"_index":1088,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts:10",{"_index":1091,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:21",{"_index":1098,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:25",{"_index":1094,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.user.decorator.ts",{"_index":1599,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/order",{"_index":1619,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/decorators/api",{"_index":1600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/page",{"_index":644,"title":{},"body":{"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts",{"_index":624,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts:11",{"_index":633,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dtos/page.dto.ts:16",{"_index":629,"title":{},"body":{"classes/PageDto.html":{}}}],["src/config/endpoint.config.ts",{"_index":1604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contribution/contribution.entity.ts",{"_index":272,"title":{},"body":{"entities/DbContribution.html":{},"coverage.html":{}}}],["src/contribution/contribution.entity.ts:106",{"_index":323,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:24",{"_index":314,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:34",{"_index":325,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:44",{"_index":294,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:51",{"_index":319,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:61",{"_index":308,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:71",{"_index":331,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:78",{"_index":311,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:88",{"_index":287,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.entity.ts:98",{"_index":336,"title":{},"body":{"entities/DbContribution.html":{}}}],["src/contribution/contribution.module.ts",{"_index":176,"title":{},"body":{"modules/ContributionModule.html":{}}}],["src/contribution/contribution.service.ts",{"_index":233,"title":{},"body":{"injectables/ContributionService.html":{},"coverage.html":{}}}],["src/contribution/contribution.service.ts:11",{"_index":238,"title":{},"body":{"injectables/ContributionService.html":{}}}],["src/contribution/contribution.service.ts:17",{"_index":242,"title":{},"body":{"injectables/ContributionService.html":{}}}],["src/contribution/dtos/contribution",{"_index":186,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/contribution/repo",{"_index":693,"title":{},"body":{"controllers/RepoContributionsController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts",{"_index":572,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":579,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":583,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":622,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1607,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/repo/dtos/repo",{"_index":762,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/repo/entities/repo.entity.ts",{"_index":362,"title":{},"body":{"entities/DbRepo.html":{},"coverage.html":{}}}],["src/repo/entities/repo.entity.ts:103",{"_index":381,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:113",{"_index":432,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:123",{"_index":419,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:131",{"_index":412,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:138",{"_index":382,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:148",{"_index":416,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:158",{"_index":393,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:165",{"_index":389,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:175",{"_index":409,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:185",{"_index":415,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:195",{"_index":435,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:203",{"_index":437,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:207",{"_index":380,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:211",{"_index":427,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:215",{"_index":423,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:219",{"_index":425,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:223",{"_index":421,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:36",{"_index":395,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:46",{"_index":440,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:56",{"_index":405,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:66",{"_index":429,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:76",{"_index":442,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:86",{"_index":431,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.entity.ts:93",{"_index":403,"title":{},"body":{"entities/DbRepo.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts",{"_index":463,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:22",{"_index":468,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:29",{"_index":477,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:36",{"_index":472,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:46",{"_index":465,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:56",{"_index":473,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:63",{"_index":466,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:71",{"_index":475,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stargazers.entity.ts:79",{"_index":470,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts",{"_index":485,"title":{},"body":{"entities/DbRepoToUserStars.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:22",{"_index":489,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:29",{"_index":496,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:36",{"_index":492,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:46",{"_index":487,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:56",{"_index":493,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:63",{"_index":488,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:71",{"_index":495,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.stars.entity.ts:79",{"_index":491,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts",{"_index":500,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:22",{"_index":505,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:29",{"_index":515,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:36",{"_index":511,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:43",{"_index":508,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:53",{"_index":503,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:63",{"_index":512,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:70",{"_index":504,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:78",{"_index":514,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.submissions.entity.ts:86",{"_index":510,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts",{"_index":519,"title":{},"body":{"entities/DbRepoToUserVotes.html":{},"coverage.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:22",{"_index":523,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:29",{"_index":530,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:36",{"_index":526,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:46",{"_index":521,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:56",{"_index":527,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:63",{"_index":522,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:71",{"_index":529,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/entities/repo.to.user.votes.entity.ts:79",{"_index":525,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["src/repo/repo.controller.ts",{"_index":731,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{}}}],["src/repo/repo.controller.ts:21",{"_index":743,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:34",{"_index":747,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:48",{"_index":738,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.module.ts",{"_index":759,"title":{},"body":{"modules/RepoModule.html":{}}}],["src/repo/repo.service.ts",{"_index":772,"title":{},"body":{"injectables/RepoService.html":{},"coverage.html":{}}}],["src/repo/repo.service.ts:12",{"_index":776,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:18",{"_index":788,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:28",{"_index":778,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:52",{"_index":782,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:67",{"_index":783,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:82",{"_index":781,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/star/repo",{"_index":832,"title":{},"body":{"controllers/RepoStarController.html":{},"coverage.html":{}}}],["src/star/star.module.ts",{"_index":993,"title":{},"body":{"modules/StarModule.html":{}}}],["src/star/star.service.ts",{"_index":995,"title":{},"body":{"injectables/StarService.html":{},"coverage.html":{}}}],["src/star/star.service.ts:13",{"_index":1001,"title":{},"body":{"injectables/StarService.html":{}}}],["src/star/star.service.ts:20",{"_index":1005,"title":{},"body":{"injectables/StarService.html":{}}}],["src/star/star.service.ts:45",{"_index":1003,"title":{},"body":{"injectables/StarService.html":{}}}],["src/star/star.service.ts:7",{"_index":999,"title":{},"body":{"injectables/StarService.html":{}}}],["src/stargaze/repo",{"_index":880,"title":{},"body":{"controllers/RepoStargazeController.html":{},"coverage.html":{}}}],["src/stargaze/stargaze.module.ts",{"_index":1022,"title":{},"body":{"modules/StargazeModule.html":{}}}],["src/stargaze/stargaze.service.ts",{"_index":1024,"title":{},"body":{"injectables/StargazeService.html":{},"coverage.html":{}}}],["src/stargaze/stargaze.service.ts:13",{"_index":1030,"title":{},"body":{"injectables/StargazeService.html":{}}}],["src/stargaze/stargaze.service.ts:20",{"_index":1034,"title":{},"body":{"injectables/StargazeService.html":{}}}],["src/stargaze/stargaze.service.ts:45",{"_index":1032,"title":{},"body":{"injectables/StargazeService.html":{}}}],["src/stargaze/stargaze.service.ts:7",{"_index":1028,"title":{},"body":{"injectables/StargazeService.html":{}}}],["src/submit/repo",{"_index":920,"title":{},"body":{"controllers/RepoSubmitController.html":{},"coverage.html":{}}}],["src/submit/submit.module.ts",{"_index":1047,"title":{},"body":{"modules/SubmitModule.html":{}}}],["src/submit/submit.service.ts",{"_index":1049,"title":{},"body":{"injectables/SubmitService.html":{},"coverage.html":{}}}],["src/submit/submit.service.ts:13",{"_index":1055,"title":{},"body":{"injectables/SubmitService.html":{}}}],["src/submit/submit.service.ts:20",{"_index":1059,"title":{},"body":{"injectables/SubmitService.html":{}}}],["src/submit/submit.service.ts:45",{"_index":1057,"title":{},"body":{"injectables/SubmitService.html":{}}}],["src/submit/submit.service.ts:7",{"_index":1053,"title":{},"body":{"injectables/SubmitService.html":{}}}],["src/user/user.entity.ts",{"_index":534,"title":{},"body":{"entities/DbUser.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:103",{"_index":567,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:107",{"_index":563,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:111",{"_index":565,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:115",{"_index":561,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:27",{"_index":545,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:37",{"_index":557,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:44",{"_index":543,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:51",{"_index":553,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:58",{"_index":547,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:68",{"_index":540,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:78",{"_index":568,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:88",{"_index":554,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:95",{"_index":541,"title":{},"body":{"entities/DbUser.html":{}}}],["src/user/user.entity.ts:99",{"_index":559,"title":{},"body":{"entities/DbUser.html":{}}}],["src/vote/repo",{"_index":956,"title":{},"body":{"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["src/vote/vote.module.ts",{"_index":1119,"title":{},"body":{"modules/VoteModule.html":{}}}],["src/vote/vote.service.ts",{"_index":1121,"title":{},"body":{"injectables/VoteService.html":{},"coverage.html":{}}}],["src/vote/vote.service.ts:13",{"_index":1127,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:20",{"_index":1131,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:45",{"_index":1129,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/vote/vote.service.ts:7",{"_index":1125,"title":{},"body":{"injectables/VoteService.html":{}}}],["stable",{"_index":1517,"title":{},"body":{"changelog.html":{}}}],["staff",{"_index":507,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["star",{"_index":486,"title":{},"body":{"entities/DbRepoToUserStars.html":{},"controllers/RepoStarController.html":{},"injectables/StarService.html":{},"changelog.html":{}}}],["star'})@apiokresponse({description",{"_index":843,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller",{"_index":994,"title":{},"body":{"modules/StarModule.html":{}}}],["star.controller.ts",{"_index":833,"title":{},"body":{"controllers/RepoStarController.html":{},"coverage.html":{}}}],["star.controller.ts:103",{"_index":848,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller.ts:125",{"_index":851,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller.ts:38",{"_index":855,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller.ts:58",{"_index":859,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.controller.ts:80",{"_index":862,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["star.service",{"_index":867,"title":{},"body":{"controllers/RepoStarController.html":{},"modules/StarModule.html":{}}}],["star/star.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["starbyrepoid",{"_index":997,"title":{},"body":{"injectables/StarService.html":{}}}],["starbyrepoid(repoid",{"_index":1004,"title":{},"body":{"injectables/StarService.html":{}}}],["starexists",{"_index":1012,"title":{},"body":{"injectables/StarService.html":{}}}],["starexists.deleted_at",{"_index":1013,"title":{},"body":{"injectables/StarService.html":{}}}],["stargaze",{"_index":464,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{},"controllers/RepoStargazeController.html":{},"changelog.html":{}}}],["stargaze.controller",{"_index":1023,"title":{},"body":{"modules/StargazeModule.html":{}}}],["stargaze.controller.ts",{"_index":881,"title":{},"body":{"controllers/RepoStargazeController.html":{},"coverage.html":{}}}],["stargaze.controller.ts:103",{"_index":893,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.controller.ts:125",{"_index":896,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.controller.ts:38",{"_index":900,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.controller.ts:58",{"_index":904,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.controller.ts:80",{"_index":907,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargaze.service",{"_index":909,"title":{},"body":{"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{}}}],["stargaze/stargaze.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["stargazebyrepoid",{"_index":1026,"title":{},"body":{"injectables/StargazeService.html":{}}}],["stargazebyrepoid(repoid",{"_index":1033,"title":{},"body":{"injectables/StargazeService.html":{}}}],["stargazed",{"_index":1223,"title":{},"body":{"changelog.html":{}}}],["stargazeexists",{"_index":1039,"title":{},"body":{"injectables/StargazeService.html":{}}}],["stargazeexists.deleted_at",{"_index":1040,"title":{},"body":{"injectables/StargazeService.html":{}}}],["stargazemodule",{"_index":12,"title":{"modules/StargazeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StargazeModule.html":{},"modules.html":{},"overview.html":{}}}],["stargazeonebyid",{"_index":885,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargazeonebyid(id",{"_index":901,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargazeonebyownerandrepo",{"_index":886,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargazeonebyownerandrepo(owner",{"_index":905,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["stargazers",{"_index":812,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoStargazeController.html":{}}}],["stargazerscount",{"_index":769,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["stargazeservice",{"_index":908,"title":{"injectables/StargazeService.html":{}},"body":{"controllers/RepoStargazeController.html":{},"modules/StargazeModule.html":{},"injectables/StargazeService.html":{},"coverage.html":{},"overview.html":{}}}],["starmodule",{"_index":11,"title":{"modules/StarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StarModule.html":{},"modules.html":{},"overview.html":{}}}],["staronebyid",{"_index":837,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["staronebyid(id",{"_index":856,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["staronebyownerandrepo",{"_index":838,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["staronebyownerandrepo(owner",{"_index":860,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["starred",{"_index":854,"title":{},"body":{"controllers/RepoStarController.html":{},"injectables/StarService.html":{},"changelog.html":{}}}],["stars",{"_index":374,"title":{},"body":{"entities/DbRepo.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"miscellaneous/enumerations.html":{}}}],["starscount",{"_index":770,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["starservice",{"_index":866,"title":{"injectables/StarService.html":{}},"body":{"controllers/RepoStarController.html":{},"modules/StarModule.html":{},"injectables/StarService.html":{},"coverage.html":{},"overview.html":{}}}],["start",{"_index":1640,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1643,"title":{},"body":{"index.html":{}}}],["started",{"_index":1142,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1417,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":400,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbUser.html":{},"changelog.html":{}}}],["strategy",{"_index":1345,"title":{},"body":{"changelog.html":{}}}],["stray",{"_index":1329,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":277,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["string(sub",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["string(user_name",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["structure",{"_index":1500,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["structured",{"_index":1831,"title":{},"body":{"properties.html":{}}}],["studio",{"_index":1714,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":1189,"title":{},"body":{"changelog.html":{}}}],["style",{"_index":1251,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":1183,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sub",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["subdomain",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":1782,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1775,"title":{},"body":{"license.html":{}}}],["submission",{"_index":502,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{},"controllers/RepoSubmitController.html":{},"changelog.html":{}}}],["submission'})@apiokresponse({description",{"_index":929,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submissions",{"_index":811,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoSubmitController.html":{},"changelog.html":{}}}],["submissionscount",{"_index":768,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"miscellaneous/enumerations.html":{}}}],["submit",{"_index":947,"title":{},"body":{"controllers/RepoSubmitController.html":{},"injectables/SubmitService.html":{},"changelog.html":{}}}],["submit.controller",{"_index":1048,"title":{},"body":{"modules/SubmitModule.html":{}}}],["submit.controller.ts",{"_index":921,"title":{},"body":{"controllers/RepoSubmitController.html":{},"coverage.html":{}}}],["submit.controller.ts:103",{"_index":931,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submit.controller.ts:125",{"_index":934,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submit.controller.ts:38",{"_index":938,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submit.controller.ts:58",{"_index":941,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submit.controller.ts:80",{"_index":944,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submit.service",{"_index":946,"title":{},"body":{"controllers/RepoSubmitController.html":{},"modules/SubmitModule.html":{}}}],["submit/submit.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["submitbyrepoid",{"_index":1051,"title":{},"body":{"injectables/SubmitService.html":{}}}],["submitbyrepoid(repoid",{"_index":1058,"title":{},"body":{"injectables/SubmitService.html":{}}}],["submitd",{"_index":1066,"title":{},"body":{"injectables/SubmitService.html":{}}}],["submitexists",{"_index":1064,"title":{},"body":{"injectables/SubmitService.html":{}}}],["submitexists.deleted_at",{"_index":1065,"title":{},"body":{"injectables/SubmitService.html":{}}}],["submitmodule",{"_index":13,"title":{"modules/SubmitModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubmitModule.html":{},"modules.html":{},"overview.html":{}}}],["submitonebyid",{"_index":925,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submitonebyid(id",{"_index":939,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submitonebyownerandrepo",{"_index":926,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submitonebyownerandrepo(owner",{"_index":942,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["submitservice",{"_index":945,"title":{"injectables/SubmitService.html":{}},"body":{"controllers/RepoSubmitController.html":{},"modules/SubmitModule.html":{},"injectables/SubmitService.html":{},"coverage.html":{},"overview.html":{}}}],["submitted",{"_index":937,"title":{},"body":{"controllers/RepoSubmitController.html":{},"changelog.html":{}}}],["subquery",{"_index":789,"title":{},"body":{"injectables/RepoService.html":{}}}],["subquerycount",{"_index":774,"title":{},"body":{"injectables/RepoService.html":{}}}],["subquerycount(subquery",{"_index":784,"title":{},"body":{"injectables/RepoService.html":{}}}],["subscribers",{"_index":375,"title":{},"body":{"entities/DbRepo.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["substantial",{"_index":1788,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1313,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["suite",{"_index":1644,"title":{},"body":{"index.html":{}}}],["summary",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["supabase",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["supabase.guard",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["supabase.strategy",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["supabase.user.decorator",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabase>=0.18.0",{"_index":1636,"title":{},"body":{"index.html":{}}}],["supabaseauthdto",{"_index":123,"title":{"classes/SupabaseAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{},"coverage.html":{}}}],["supabaseauthdto})@httpcode(httpstatus.ok",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabaseauthrequest",{"_index":1844,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["supabaseauthstrategy",{"_index":1103,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseauthuser",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseStrategy.html":{}}}],["supabaseguard",{"_index":132,"title":{"injectables/SupabaseGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/SupabaseGuard.html":{},"coverage.html":{},"overview.html":{}}}],["supabasejwtsecret",{"_index":1110,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasekey",{"_index":1107,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseoptions",{"_index":1109,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasestrategy",{"_index":164,"title":{"injectables/SupabaseStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":1105,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super",{"_index":1104,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.authenticate(req",{"_index":1115,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.validate(user",{"_index":1114,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["support",{"_index":1815,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1816,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1365,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":1230,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":628,"title":{},"body":{"classes/PageDto.html":{},"injectables/RepoService.html":{},"index.html":{}}}],["table",{"_index":1612,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tables",{"_index":1327,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1413,"title":{},"body":{"changelog.html":{}}}],["tagging",{"_index":1384,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1201,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":1440,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":787,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{}}}],["target}.id",{"_index":799,"title":{},"body":{"injectables/RepoService.html":{}}}],["tech",{"_index":1441,"title":{},"body":{"changelog.html":{}}}],["ted",{"_index":1841,"title":{},"body":{"properties.html":{}}}],["temporary",{"_index":1174,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":1431,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["test:coveragefor",{"_index":1657,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1387,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["testyou",{"_index":1655,"title":{},"body":{"index.html":{}}}],["them'})@apipaginatedresponse(dbcontribution)@apiokresponse({type",{"_index":702,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["them'})@apipaginatedresponse(dbrepo)@apiokresponse({type",{"_index":737,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["thing",{"_index":1713,"title":{},"body":{"index.html":{}}}],["this.basequerybuilder",{"_index":818,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":605,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":608,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":621,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":613,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":617,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":619,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":615,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":611,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":600,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":602,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.contributionrepository.createquerybuilder(\"contribution",{"_index":255,"title":{},"body":{"injectables/ContributionService.html":{}}}],["this.contributionservice.findall(pageoptionsdto",{"_index":724,"title":{},"body":{"controllers/RepoContributionsController.html":{}}}],["this.data",{"_index":642,"title":{},"body":{"classes/PageDto.html":{}}}],["this.database.pingcheck(\"db",{"_index":598,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":607,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":603,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hasnextpage",{"_index":674,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":673,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.health.check",{"_index":597,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":620,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":612,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":616,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":618,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":614,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":610,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.itemcount",{"_index":670,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.limit",{"_index":668,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":599,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":601,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.meta",{"_index":643,"title":{},"body":{"classes/PageDto.html":{}}}],["this.page",{"_index":666,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":671,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.reporepository.createquerybuilder(\"repo",{"_index":801,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.reposervice.findall(pageoptionsdto",{"_index":755,"title":{},"body":{"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["this.reposervice.findonebyid(id",{"_index":723,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["this.reposervice.findonebyownerandrepo(owner",{"_index":729,"title":{},"body":{"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["this.repostargazerepository.createquerybuilder(\"r2stargazes",{"_index":1036,"title":{},"body":{"injectables/StargazeService.html":{}}}],["this.repostargazerepository.restore(stargazeexists.id",{"_index":1041,"title":{},"body":{"injectables/StargazeService.html":{}}}],["this.repostargazerepository.save",{"_index":1042,"title":{},"body":{"injectables/StargazeService.html":{}}}],["this.repostargazerepository.softdelete(stargazeexists.id",{"_index":1043,"title":{},"body":{"injectables/StargazeService.html":{}}}],["this.repostarrepository.createquerybuilder(\"r2stars",{"_index":1008,"title":{},"body":{"injectables/StarService.html":{}}}],["this.repostarrepository.restore(starexists.id",{"_index":1015,"title":{},"body":{"injectables/StarService.html":{}}}],["this.repostarrepository.save",{"_index":1016,"title":{},"body":{"injectables/StarService.html":{}}}],["this.repostarrepository.softdelete(starexists.id",{"_index":1018,"title":{},"body":{"injectables/StarService.html":{}}}],["this.reposubmitrepository.createquerybuilder(\"r2submits",{"_index":1061,"title":{},"body":{"injectables/SubmitService.html":{}}}],["this.reposubmitrepository.restore(submitexists.id",{"_index":1067,"title":{},"body":{"injectables/SubmitService.html":{}}}],["this.reposubmitrepository.save",{"_index":1068,"title":{},"body":{"injectables/SubmitService.html":{}}}],["this.reposubmitrepository.softdelete(submitexists.id",{"_index":1069,"title":{},"body":{"injectables/SubmitService.html":{}}}],["this.repovoterepository.createquerybuilder(\"r2votes",{"_index":1133,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.restore(voteexists.id",{"_index":1138,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.save",{"_index":1139,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.repovoterepository.softdelete(voteexists.id",{"_index":1140,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.stargazeservice.downstargazebyrepoid(item.id",{"_index":917,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["this.stargazeservice.stargazebyrepoid(item.id",{"_index":913,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["this.starservice.downstarbyrepoid(item.id",{"_index":877,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["this.starservice.starbyrepoid(item.id",{"_index":874,"title":{},"body":{"controllers/RepoStarController.html":{}}}],["this.submitservice.downsubmitbyrepoid(item.id",{"_index":953,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["this.submitservice.submitbyrepoid(item.id",{"_index":950,"title":{},"body":{"controllers/RepoSubmitController.html":{}}}],["this.subquerycount(qb",{"_index":809,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.voteservice.downvotebyrepoid(item.id",{"_index":988,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["this.voteservice.votebyrepoid(item.id",{"_index":985,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["thresholdpercent",{"_index":604,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":821,"title":{},"body":{"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["time",{"_index":305,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"changelog.html":{}}}],["timestamp",{"_index":297,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{}}}],["tld",{"_index":1562,"title":{},"body":{"changelog.html":{}}}],["tmodel",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_timestamp(0",{"_index":411,"title":{},"body":{"entities/DbRepo.html":{}}}],["token",{"_index":1429,"title":{},"body":{"changelog.html":{}}}],["tools",{"_index":1669,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1810,"title":{},"body":{"license.html":{}}}],["total",{"_index":288,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["transformer",{"_index":639,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["true",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{}}}],["true})@type(undefined",{"_index":632,"title":{},"body":{"classes/PageDto.html":{}}}],["true})@validatenested({each",{"_index":631,"title":{},"body":{"classes/PageDto.html":{}}}],["type",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/ContributionPageOptionsDto.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoContributionsController.html":{},"controllers/RepoController.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"injectables/VoteService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1842,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContributionService.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["typeormhealthindicator",{"_index":586,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{}}}],["typeormmodule.forfeature",{"_index":183,"title":{},"body":{"modules/ContributionModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{}}}],["typeormmodule.forfeature([dbrepo",{"_index":761,"title":{},"body":{"modules/RepoModule.html":{}}}],["typeormmodule.forrootasync",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":1236,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["types:auto",{"_index":1695,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":1537,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":1707,"title":{},"body":{"index.html":{}}}],["unblock",{"_index":1590,"title":{},"body":{"changelog.html":{}}}],["undefined})@isenum(contributionorderfieldsenum)@isoptional",{"_index":203,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{}}}],["undefined})@isenum(orderdirectionenum)@isoptional",{"_index":216,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["undefined})@isenum(repoorderfieldsenum)@isoptional",{"_index":764,"title":{},"body":{"classes/RepoPageOptionsDto.html":{}}}],["undo",{"_index":1280,"title":{},"body":{"changelog.html":{}}}],["unfollowed",{"_index":892,"title":{},"body":{"controllers/RepoStargazeController.html":{},"injectables/StargazeService.html":{}}}],["unfollows",{"_index":916,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["unfollows'})@apiokresponse({description",{"_index":889,"title":{},"body":{"controllers/RepoStargazeController.html":{}}}],["unique",{"_index":279,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{}}}],["unit",{"_index":1665,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":580,"title":{},"body":{"controllers/HealthController.html":{},"injectables/SupabaseStrategy.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":1219,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":326,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{},"changelog.html":{}}}],["updated",{"_index":1757,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"classes/ContributionPageOptionsDto.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"classes/RepoPageOptionsDto.html":{},"classes/SupabaseAuthDto.html":{},"miscellaneous/enumerations.html":{}}}],["updatedatecolumn",{"_index":344,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["url",{"_index":276,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"changelog.html":{}}}],["url(`https://${subdomain",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urls",{"_index":1354,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":1645,"title":{},"body":{"index.html":{},"license.html":{}}}],["usefactory",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["useguards(supabaseguard",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{}}}],["user",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"classes/SupabaseAuthDto.html":{},"injectables/SupabaseStrategy.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.repos",{"_index":462,"title":{},"body":{"entities/DbRepo.html":{}}}],["user.repos)@joincolumn({name",{"_index":436,"title":{},"body":{"entities/DbRepo.html":{}}}],["user.repotouserstargazers",{"_index":483,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["user.repotouserstargazers)@joincolumn({name",{"_index":474,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["user.repotouserstars",{"_index":498,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["user.repotouserstars)@joincolumn({name",{"_index":494,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["user.repotousersubmissions",{"_index":517,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["user.repotousersubmissions)@joincolumn({name",{"_index":513,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["user.repotouservotes",{"_index":532,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["user.repotouservotes)@joincolumn({name",{"_index":528,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["user/user.entity",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{}}}],["user_id",{"_index":376,"title":{},"body":{"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["user_metadata",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["user_name",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"classes/SupabaseAuthDto.html":{}}}],["userid",{"_index":779,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoStarController.html":{},"controllers/RepoStargazeController.html":{},"controllers/RepoSubmitController.html":{},"controllers/RepoVoteController.html":{},"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["userrelations",{"_index":780,"title":{},"body":{"injectables/RepoService.html":{}}}],["userrelations?.map(relation",{"_index":824,"title":{},"body":{"injectables/RepoService.html":{}}}],["users",{"_index":569,"title":{},"body":{"entities/DbUser.html":{},"changelog.html":{},"index.html":{}}}],["users_to_repos_stargazers",{"_index":480,"title":{},"body":{"entities/DbRepoToUserStargazers.html":{}}}],["users_to_repos_stars",{"_index":497,"title":{},"body":{"entities/DbRepoToUserStars.html":{}}}],["users_to_repos_submissions",{"_index":516,"title":{},"body":{"entities/DbRepoToUserSubmissions.html":{}}}],["users_to_repos_votes",{"_index":531,"title":{},"body":{"entities/DbRepoToUserVotes.html":{}}}],["validate",{"_index":1090,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validate(user",{"_index":1097,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validatenested",{"_index":638,"title":{},"body":{"classes/PageDto.html":{}}}],["validator",{"_index":223,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{}}}],["value",{"_index":198,"title":{},"body":{"classes/ContributionPageOptionsDto.html":{},"classes/PageOptionsDto.html":{},"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1211,"title":{},"body":{"changelog.html":{}}}],["variable",{"_index":1406,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":1393,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":284,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbUser.html":{}}}],["verify",{"_index":1568,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1518,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versiond",{"_index":1580,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":1233,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":1706,"title":{},"body":{"index.html":{}}}],["videos",{"_index":1747,"title":{},"body":{"index.html":{}}}],["view",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["visual",{"_index":1753,"title":{},"body":{"index.html":{}}}],["visualisation",{"_index":1176,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":1751,"title":{},"body":{"index.html":{}}}],["visualizer",{"_index":1756,"title":{},"body":{"index.html":{}}}],["visually",{"_index":1719,"title":{},"body":{"index.html":{}}}],["vite",{"_index":1321,"title":{},"body":{"changelog.html":{}}}],["vitest",{"_index":1671,"title":{},"body":{"index.html":{}}}],["void",{"_index":1096,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["volume",{"_index":1454,"title":{},"body":{"changelog.html":{}}}],["volumes",{"_index":1489,"title":{},"body":{"changelog.html":{}}}],["vortex",{"_index":359,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbUser.html":{},"classes/SupabaseAuthDto.html":{},"properties.html":{}}}],["vortex'})@column({type",{"_index":282,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbUser.html":{}}}],["vortex/api.opensauced.pizza",{"_index":1542,"title":{},"body":{"changelog.html":{}}}],["vortex@opensauced.pizza",{"_index":1077,"title":{},"body":{"classes/SupabaseAuthDto.html":{}}}],["vote",{"_index":520,"title":{},"body":{"entities/DbRepoToUserVotes.html":{},"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["vote'})@apiokresponse({description",{"_index":965,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller",{"_index":1120,"title":{},"body":{"modules/VoteModule.html":{}}}],["vote.controller.ts",{"_index":957,"title":{},"body":{"controllers/RepoVoteController.html":{},"coverage.html":{}}}],["vote.controller.ts:103",{"_index":967,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:125",{"_index":970,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:38",{"_index":974,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:58",{"_index":977,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.controller.ts:80",{"_index":980,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["vote.service",{"_index":982,"title":{},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{}}}],["vote/vote.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["votebyrepoid",{"_index":1123,"title":{},"body":{"injectables/VoteService.html":{}}}],["votebyrepoid(repoid",{"_index":1130,"title":{},"body":{"injectables/VoteService.html":{}}}],["voted",{"_index":973,"title":{},"body":{"controllers/RepoVoteController.html":{},"injectables/VoteService.html":{},"changelog.html":{}}}],["voteexists",{"_index":1136,"title":{},"body":{"injectables/VoteService.html":{}}}],["voteexists.deleted_at",{"_index":1137,"title":{},"body":{"injectables/VoteService.html":{}}}],["votemodule",{"_index":14,"title":{"modules/VoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VoteModule.html":{},"modules.html":{},"overview.html":{}}}],["voteonebyid",{"_index":961,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyid(id",{"_index":975,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyownerandrepo",{"_index":962,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["voteonebyownerandrepo(owner",{"_index":978,"title":{},"body":{"controllers/RepoVoteController.html":{}}}],["votes",{"_index":810,"title":{},"body":{"injectables/RepoService.html":{},"controllers/RepoVoteController.html":{}}}],["votescount",{"_index":767,"title":{},"body":{"classes/RepoPageOptionsDto.html":{},"injectables/RepoService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["voteservice",{"_index":981,"title":{"injectables/VoteService.html":{}},"body":{"controllers/RepoVoteController.html":{},"modules/VoteModule.html":{},"injectables/VoteService.html":{},"coverage.html":{},"overview.html":{}}}],["warranties",{"_index":1796,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1791,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1647,"title":{},"body":{"index.html":{}}}],["watchers",{"_index":377,"title":{},"body":{"entities/DbRepo.html":{},"classes/RepoPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["watchman",{"_index":1654,"title":{},"body":{"index.html":{}}}],["way",{"_index":1728,"title":{},"body":{"index.html":{}}}],["web",{"_index":574,"title":{},"body":{"controllers/HealthController.html":{}}}],["where(\"contribution.repo_id",{"_index":258,"title":{},"body":{"injectables/ContributionService.html":{}}}],["where(\"r2stargazes.repo_id",{"_index":1037,"title":{},"body":{"injectables/StargazeService.html":{}}}],["where(\"r2stars.repo_id",{"_index":1010,"title":{},"body":{"injectables/StarService.html":{}}}],["where(\"r2submits.repo_id",{"_index":1062,"title":{},"body":{"injectables/SubmitService.html":{}}}],["where(\"r2votes.repo_id",{"_index":1134,"title":{},"body":{"injectables/VoteService.html":{}}}],["where(\"repo.full_name",{"_index":822,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(\"repo.id",{"_index":819,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(`${aliastable}.${target}_id",{"_index":798,"title":{},"body":{"injectables/RepoService.html":{}}}],["whether",{"_index":548,"title":{},"body":{"entities/DbUser.html":{},"license.html":{}}}],["withdeleted",{"_index":1009,"title":{},"body":{"injectables/StarService.html":{},"injectables/StargazeService.html":{},"injectables/SubmitService.html":{},"injectables/VoteService.html":{}}}],["without",{"_index":304,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{},"license.html":{}}}],["work",{"_index":1290,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":1319,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["working",{"_index":1338,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["write",{"_index":1664,"title":{},"body":{"index.html":{}}}],["writing",{"_index":1186,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["yaml",{"_index":1509,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":243,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/RepoService.html":{}}}],["youtube",{"_index":1749,"title":{},"body":{"index.html":{}}}],["zone",{"_index":306,"title":{},"body":{"entities/DbContribution.html":{},"entities/DbRepo.html":{},"entities/DbRepoToUserStargazers.html":{},"entities/DbRepoToUserStars.html":{},"entities/DbRepoToUserSubmissions.html":{},"entities/DbRepoToUserVotes.html":{},"entities/DbUser.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"modules/RepoModule.html":{},"modules/StarModule.html":{},"modules/StargazeModule.html":{},"modules/SubmitModule.html":{},"modules/VoteModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nContributionModule\n\nContributionModule\n\nAppModule -->\n\nContributionModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nStarModule\n\nStarModule\n\nAppModule -->\n\nStarModule->AppModule\n\n\n\n\n\nStargazeModule\n\nStargazeModule\n\nAppModule -->\n\nStargazeModule->AppModule\n\n\n\n\n\nSubmitModule\n\nSubmitModule\n\nAppModule -->\n\nSubmitModule->AppModule\n\n\n\n\n\nVoteModule\n\nVoteModule\n\nAppModule -->\n\nVoteModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ContributionModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            RepoModule\n                        \n                        \n                            StarModule\n                        \n                        \n                            StargazeModule\n                        \n                        \n                            SubmitModule\n                        \n                        \n                            VoteModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm/dist/interfaces/typeorm-options.interface\";\nimport { DataSource } from \"typeorm\";\n\nimport { RepoModule } from \"./repo/repo.module\";\nimport apiConfig from \"./config/api.config\";\nimport dbConfig from \"./config/database.config\";\nimport endpointConfig from \"./config/endpoint.config\";\nimport { HealthModule } from \"./health/health.module\";\nimport { DbRepo } from \"./repo/entities/repo.entity\";\nimport { DbUser } from \"./user/user.entity\";\nimport { DbContribution } from \"./contribution/contribution.entity\";\nimport { DbRepoToUserVotes } from \"./repo/entities/repo.to.user.votes.entity\";\nimport { DbRepoToUserStars } from \"./repo/entities/repo.to.user.stars.entity\";\nimport { DbRepoToUserSubmissions } from \"./repo/entities/repo.to.user.submissions.entity\";\nimport { DbRepoToUserStargazers } from \"./repo/entities/repo.to.user.stargazers.entity\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { VoteModule } from \"./vote/vote.module\";\nimport { StarModule } from \"./star/star.module\";\nimport { StargazeModule } from \"./stargaze/stargaze.module\";\nimport { SubmitModule } from \"./submit/submit.module\";\nimport { ContributionModule } from \"./contribution/contribution.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        apiConfig,\n        dbConfig,\n        endpointConfig,\n      ],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\"db.connection\"),\n        host: configService.get(\"db.host\"),\n        port: configService.get(\"db.port\"),\n        username: configService.get(\"db.username\"),\n        password: configService.get(\"db.password\"),\n        database: configService.get(\"db.database\"),\n        autoLoadEntities: false,\n        entities: [\n          DbUser,\n          DbRepo,\n          DbContribution,\n          DbRepoToUserVotes,\n          DbRepoToUserStars,\n          DbRepoToUserSubmissions,\n          DbRepoToUserStargazers,\n        ],\n        synchronize: false,\n      }) as TypeOrmModuleOptions,\n      inject: [ConfigService],\n    }),\n    TerminusModule,\n    HttpModule,\n    AuthModule,\n    HealthModule,\n    RepoModule,\n    VoteModule,\n    StarModule,\n    StargazeModule,\n    SubmitModule,\n    ContributionModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  constructor (private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello(user: SupabaseAuthUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/session')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'checkAuthSession', summary: 'Get authenticated session information'})@ApiOkResponse({type: SupabaseAuthDto})@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SupabaseAuthDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, UseGuards } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseAuthUser } from \"nestjs-supabase-auth\";\nimport { User } from \"./supabase.user.decorator\";\nimport { SupabaseAuthDto } from \"./dtos/supabase-auth-response.dto\";\n\n@Controller(\"auth\")\n@ApiTags(\"Authentication service\")\nexport class AuthController {\n  @Get(\"/session\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"checkAuthSession\",\n    summary: \"Get authenticated session information\",\n  })\n  @ApiOkResponse({ type: SupabaseAuthDto })\n  @HttpCode(HttpStatus.OK)\n  getHello (\n    @User() user: SupabaseAuthUser,\n  ): SupabaseAuthDto {\n    const { role, email, confirmed_at, last_sign_in_at, created_at, updated_at, user_metadata: { sub, user_name } } = user;\n\n    return {\n      id: `${String(sub)}`,\n      user_name: `${String(user_name)}`,\n      role,\n      email,\n      confirmed_at,\n      last_sign_in_at,\n      created_at,\n      updated_at,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseGuard\n                        \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { SupabaseGuard } from \"./supabase.guard\";\nimport { SupabaseStrategy } from \"./supabase.strategy\";\nimport { AuthController } from \"./auth.controller\";\n\n@Module({\n  imports: [PassportModule],\n  providers: [SupabaseStrategy, SupabaseGuard],\n  exports: [SupabaseStrategy, SupabaseGuard],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContributionModule.html":{"url":"modules/ContributionModule.html","title":"module - ContributionModule","body":"\n                   \n\n\n\n\n    Modules\n    ContributionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ContributionModule\n\n\n\ncluster_ContributionModule_providers\n\n\n\ncluster_ContributionModule_exports\n\n\n\n\nContributionService \n\nContributionService \n\n\n\nContributionModule\n\nContributionModule\n\nContributionService  -->\n\nContributionModule->ContributionService \n\n\n\n\n\nContributionService\n\nContributionService\n\nContributionModule -->\n\nContributionService->ContributionModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nContributionModule -->\n\nRepoService->ContributionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/contribution/contribution.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContributionService\n                        \n                        \n                            RepoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoContributionsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContributionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbContribution } from \"./contribution.entity\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { ContributionService } from \"./contribution.service\";\nimport { RepoContributionsController } from \"./repo-contributions.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([\n    DbRepo,\n    DbContribution,\n  ])],\n  controllers: [RepoContributionsController],\n  providers: [RepoService, ContributionService],\n  exports: [ContributionService],\n})\nexport class ContributionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContributionPageOptionsDto.html":{"url":"classes/ContributionPageOptionsDto.html","title":"class - ContributionPageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContributionPageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/dtos/contribution-page-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                orderBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContributionOrderFieldsEnum\n\n                    \n                \n                \n                    \n                        Default value : ContributionOrderFieldsEnum.count\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: ContributionOrderFieldsEnum, enumName: 'RepoOrderFieldsEnum', default: undefined})@IsEnum(ContributionOrderFieldsEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/dtos/contribution-page-options.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsEnum, IsOptional } from \"class-validator\";\nimport { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\n\nexport enum ContributionOrderFieldsEnum {\n  count = \"count\",\n  last_merged_at = \"last_merged_at\",\n  created_at = \"created_at\",\n  updated_at = \"updated_at\",\n  contributor = \"contributor\",\n}\n\nexport class ContributionPageOptionsDto extends PageOptionsDto {\n  @ApiPropertyOptional({\n    enum: ContributionOrderFieldsEnum,\n    enumName: \"RepoOrderFieldsEnum\",\n    default: ContributionOrderFieldsEnum.count,\n  })\n  @IsEnum(ContributionOrderFieldsEnum)\n  @IsOptional()\n  readonly orderBy?: ContributionOrderFieldsEnum = ContributionOrderFieldsEnum.count;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContributionService.html":{"url":"injectables/ContributionService.html","title":"injectable - ContributionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContributionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contributionRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/contribution/contribution.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contributionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: ContributionPageOptionsDto, repoId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/contribution/contribution.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                ContributionPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbContribution } from \"./contribution.entity\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { OrderDirectionEnum } from \"../common/constants/order-direction.constant\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { ContributionOrderFieldsEnum, ContributionPageOptionsDto } from \"./dtos/contribution-page-options.dto\";\n\n@Injectable()\nexport class ContributionService {\n  constructor (\n    @InjectRepository(DbContribution)\n    private contributionRepository: Repository,\n  ) {}\n\n  async findAll (\n    pageOptionsDto: ContributionPageOptionsDto,\n    repoId?: number,\n  ): Promise> {\n    const queryBuilder = this.contributionRepository.createQueryBuilder(\"contribution\");\n    const orderField = pageOptionsDto.orderBy ?? ContributionOrderFieldsEnum.count;\n\n    if (repoId) {\n      queryBuilder\n        .where(\"contribution.repo_id = :repoId\", { repoId });\n    }\n\n    queryBuilder\n      .addOrderBy(`\"${orderField}\"`, pageOptionsDto.orderDirection)\n      .addOrderBy(`\"contribution\".\"created_at\"`, OrderDirectionEnum.DESC)\n      .offset(pageOptionsDto.skip)\n      .limit(pageOptionsDto.limit);\n\n    // console.log(queryBuilder.getSql());\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbContribution.html":{"url":"entities/DbContribution.html","title":"entity - DbContribution","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbContribution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                contributor\n                            \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                last_merged_at\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contributor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Contributor unique user name', example: '0-vortex'})@Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Total number of contributed pull requests', example: 15})@Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing contribution creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Contribution identifier', example: 12237133})@PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        last_merged_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Timestamp representing last contribution merge to the default branch', example: '2016-10-19 13:24:51.000000'})@Column({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.contributions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing contribution last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Contribution GitHub origin URL', example: 'https://github.com/open-sauced/hot/pull/320'})@Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:98\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  ManyToOne,\n  JoinColumn,\n  DeleteDateColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { ApiModelProperty, ApiModelPropertyOptional } from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"contributions\" })\nexport class DbContribution extends BaseEntity {\n  @ApiModelProperty({\n    description: \"Contribution identifier\",\n    example: 12237133,\n  })\n  @PrimaryColumn(\"bigint\")\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @Column({\n    type: \"bigint\",\n    select: false,\n  })\n  public repo_id!: number;\n\n  @ApiModelProperty({\n    description: \"Total number of contributed pull requests\",\n    example: 15,\n  })\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  public count: number;\n\n  @ApiModelProperty({\n    description: \"Timestamp representing last contribution merge to the default branch\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @Column({ type: \"timestamp without time zone\" })\n  public last_merged_at: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing contribution creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing contribution last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiModelProperty({\n    description: \"Contributor unique user name\",\n    example: \"0-vortex\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 255,\n  })\n  public contributor: string;\n\n  @ApiModelProperty({\n    description: \"Contribution GitHub origin URL\",\n    example: \"https://github.com/open-sauced/hot/pull/320\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 255,\n  })\n  public url: string;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, repo => repo.contributions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepo.html":{"url":"entities/DbRepo.html","title":"entity - DbRepo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                contributions\n                            \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                full_name\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                is_fork\n                            \n                            \n                                    Public\n                                issues\n                            \n                            \n                                    Public\n                                language\n                            \n                            \n                                    Public\n                                    Optional\n                                last_fetched_contributors_at\n                            \n                            \n                                    Public\n                                license\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                pushed_at\n                            \n                            \n                                    Public\n                                repoToUserStargazers\n                            \n                            \n                                    Public\n                                repoToUserStars\n                            \n                            \n                                    Public\n                                repoToUserSubmissions\n                            \n                            \n                                    Public\n                                repoToUserVotes\n                            \n                            \n                                    Public\n                                stars\n                            \n                            \n                                    Public\n                                subscribers\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                url\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                            \n                                    Public\n                                watchers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contributions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbContribution[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, contribution => contribution.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:207\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing repository creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository short description', example: '🍕This is a project to identify your next open source contribution! 🍕'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:165\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository full name', example: 'open-sauced/open-sauced'})@Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        is_fork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Flag indicating fork status, false for sources', example: false})@Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Total number of issues', example: 274})@Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository programming language', example: 'JavaScript'})@Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:175\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        last_fetched_contributors_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@Column({type: 'timestamp without time zone', default: () => to_timestamp(0), select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        license\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository SPDX license', example: 'MIT'})@Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:185\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository unique name', example: 'open-sauced'})@Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        pushed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing repository last push', example: '2022-08-28 22:04:39.000000'})@Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:223\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserStars => repoToUserStars.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:215\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:219\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserVotes => repoToUserVotes.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:211\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Total number of stars', example: 5})@Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Total number of subscribers', example: 11756})@Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing repository last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository GitHub linked URL', example: 'https://app.opensauced.pizza'})@Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:195\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repos)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:203\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Owner user identifier', example: 57568598})@Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        watchers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Total number of watchers', example: 5473})@Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.entity.ts:76\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  JoinColumn,\n  ManyToOne,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  DeleteDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\n\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbContribution } from \"../../contribution/contribution.entity\";\nimport { DbRepoToUserVotes } from \"./repo.to.user.votes.entity\";\nimport { DbRepoToUserStars } from \"./repo.to.user.stars.entity\";\nimport { DbRepoToUserSubmissions } from \"./repo.to.user.submissions.entity\";\nimport { DbRepoToUserStargazers } from \"./repo.to.user.stargazers.entity\";\nimport { ApiModelProperty, ApiModelPropertyOptional } from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({\n  name: \"repos\",\n  orderBy: {\n    stars: \"DESC\",\n    name: \"ASC\",\n  },\n})\nexport class DbRepo extends BaseEntity {\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @PrimaryColumn(\"bigint\")\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"Owner user identifier\",\n    example: 57568598,\n  })\n  @Column({\n    type: \"bigint\",\n    select: false,\n  })\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"Total number of issues\",\n    example: 274,\n  })\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  public issues: number;\n\n  @ApiModelProperty({\n    description: \"Total number of stars\",\n    example: 5,\n  })\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  public stars: number;\n\n  @ApiModelProperty({\n    description: \"Total number of watchers\",\n    example: 5473,\n  })\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  public watchers: number;\n\n  @ApiModelProperty({\n    description: \"Total number of subscribers\",\n    example: 11756,\n  })\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  public subscribers: number;\n\n  @ApiModelProperty({\n    description: \"Flag indicating fork status, false for sources\",\n    example: false,\n  })\n  @Column({ default: false })\n  public is_fork: boolean;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing repository creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing repository last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing repository last push\",\n    example: \"2022-08-28 22:04:39.000000\",\n  })\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public pushed_at?: Date;\n\n  @ApiHideProperty()\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"to_timestamp(0)\",\n    select: false,\n  })\n  public last_fetched_contributors_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiModelProperty({\n    description: \"Repository unique name\",\n    example: \"open-sauced\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 255,\n  })\n  public name: string;\n\n  @ApiModelProperty({\n    description: \"Repository full name\",\n    example: \"open-sauced/open-sauced\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 255,\n  })\n  public full_name: string;\n\n  @ApiModelProperty({\n    description: \"Repository short description\",\n    example: \"🍕This is a project to identify your next open source contribution! 🍕\",\n  })\n  @Column(\"text\")\n  public description: string;\n\n  @ApiModelProperty({\n    description: \"Repository programming language\",\n    example: \"JavaScript\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 64,\n  })\n  public language: string;\n\n  @ApiModelProperty({\n    description: \"Repository SPDX license\",\n    example: \"MIT\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 64,\n  })\n  public license: string;\n\n  @ApiModelProperty({\n    description: \"Repository GitHub linked URL\",\n    example: \"https://app.opensauced.pizza\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 255,\n  })\n  public url: string;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, user => user.repos)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @OneToMany(() => DbContribution, contribution => contribution.repo)\n  public contributions: DbContribution[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserVotes, repoToUserVotes => repoToUserVotes.repo)\n  public repoToUserVotes: DbRepoToUserVotes[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserStars, repoToUserStars => repoToUserStars.repo)\n  public repoToUserStars: DbRepoToUserStars[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.repo)\n  public repoToUserSubmissions: DbRepoToUserSubmissions[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.repo)\n  public repoToUserStargazers: DbRepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepoToUserStargazers.html":{"url":"entities/DbRepoToUserStargazers.html","title":"entity - DbRepoToUserStargazers","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepoToUserStargazers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.stargazers.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing stargaze creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Stargaze identifier', example: 196})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserStargazers)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing stargaze last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repoToUserStargazers)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stargazers.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbRepo } from \"./repo.entity\";\nimport { ApiModelProperty, ApiModelPropertyOptional } from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"users_to_repos_stargazers\" })\nexport class DbRepoToUserStargazers {\n  @ApiModelProperty({\n    description: \"Stargaze identifier\",\n    example: 196,\n  })\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column()\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @Column()\n  public repo_id!: number;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing stargaze creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing stargaze last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, user => user.repoToUserStargazers)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, repo => repo.repoToUserStargazers)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepoToUserStars.html":{"url":"entities/DbRepoToUserStars.html","title":"entity - DbRepoToUserStars","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepoToUserStars\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.stars.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing star creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Star identifier', example: 196})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserStars)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing star last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repoToUserStars)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.stars.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbRepo } from \"./repo.entity\";\nimport { ApiModelProperty, ApiModelPropertyOptional } from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"users_to_repos_stars\" })\nexport class DbRepoToUserStars {\n  @ApiModelProperty({\n    description: \"Star identifier\",\n    example: 196,\n  })\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column()\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @Column()\n  public repo_id!: number;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing star creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing star last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, user => user.repoToUserStars)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, repo => repo.repoToUserStars)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepoToUserSubmissions.html":{"url":"entities/DbRepoToUserSubmissions.html","title":"entity - DbRepoToUserSubmissions","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepoToUserSubmissions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.submissions.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                is_accepted\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing submission creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Submission identifier', example: 196})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        is_accepted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Flag representing if the submission is approved by open sauced staff', example: false})@Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserSubmissions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing submission last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repoToUserSubmissions)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.submissions.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbRepo } from \"./repo.entity\";\nimport { ApiModelProperty, ApiModelPropertyOptional } from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"users_to_repos_submissions\" })\nexport class DbRepoToUserSubmissions {\n  @ApiModelProperty({\n    description: \"Submission identifier\",\n    example: 196,\n  })\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column()\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @Column()\n  public repo_id!: number;\n\n  @ApiModelProperty({\n    description: \"Flag representing if the submission is approved by open sauced staff\",\n    example: false,\n  })\n  @Column({ default: false })\n  public is_accepted?: boolean;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing submission creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing submission last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, user => user.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, repo => repo.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbRepoToUserVotes.html":{"url":"entities/DbRepoToUserVotes.html","title":"entity - DbRepoToUserVotes","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbRepoToUserVotes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/entities/repo.to.user.votes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing vote creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Vote identifier', example: 196})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, repo => repo.repoToUserVotes)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Repository identifier', example: 71359796})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing vote last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUser\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@ManyToOne(undefined, user => user.repoToUserVotes)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/entities/repo.to.user.votes.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\nimport { DbUser } from \"../../user/user.entity\";\nimport { DbRepo } from \"./repo.entity\";\nimport { ApiModelProperty, ApiModelPropertyOptional } from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"users_to_repos_votes\" })\nexport class DbRepoToUserVotes {\n  @ApiModelProperty({\n    description: \"Vote identifier\",\n    example: 196,\n  })\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @Column()\n  public user_id!: number;\n\n  @ApiModelProperty({\n    description: \"Repository identifier\",\n    example: 71359796,\n  })\n  @Column()\n  public repo_id!: number;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing vote creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing vote last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbUser, user => user.repoToUserVotes)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: DbUser;\n\n  @ApiHideProperty()\n  @ManyToOne(() => DbRepo, repo => repo.repoToUserVotes)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: DbRepo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DbUser.html":{"url":"entities/DbUser.html","title":"entity - DbUser","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DbUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created_at\n                            \n                            \n                                    Public\n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Public\n                                has_stars_data\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                is_open_sauced_member\n                            \n                            \n                                    Public\n                                is_private\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                open_issues\n                            \n                            \n                                    Public\n                                repos\n                            \n                            \n                                    Public\n                                repoToUserStargazers\n                            \n                            \n                                    Public\n                                repoToUserStars\n                            \n                            \n                                    Public\n                                repoToUserSubmissions\n                            \n                            \n                                    Public\n                                repoToUserVotes\n                            \n                            \n                                    Public\n                                    Optional\n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing user creation', example: '2016-10-19 13:24:51.000000'})@CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@DeleteDateColumn({type: 'timestamp without time zone', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        has_stars_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@Column({default: false, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User identifier', example: 237133})@PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        is_open_sauced_member\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Flag indicating app.opensauced user status', example: false})@Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        is_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Flag indicating whether user opted to have a private profile (beta feature', example: false})@Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'User unique login name', example: '0-vortex'})@Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        open_issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelProperty({description: 'Total number of open issues user has across public activity', example: 498})@Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repo => repo.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserStars => repoToUserStars.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbRepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@OneToMany(undefined, repoToUserVotes => repoToUserVotes.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiModelPropertyOptional({description: 'Timestamp representing user last update', example: '2022-08-28 22:04:29.000000'})@UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:78\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  OneToMany,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ApiHideProperty } from \"@nestjs/swagger\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\nimport { DbRepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\nimport { DbRepoToUserSubmissions } from \"../repo/entities/repo.to.user.submissions.entity\";\nimport { DbRepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\nimport { ApiModelProperty, ApiModelPropertyOptional } from \"@nestjs/swagger/dist/decorators/api-model-property.decorator\";\n\n@Entity({ name: \"users\" })\nexport class DbUser extends BaseEntity {\n  @ApiModelProperty({\n    description: \"User identifier\",\n    example: 237133,\n  })\n  @PrimaryColumn(\"bigint\")\n  public id!: number;\n\n  @ApiModelProperty({\n    description: \"Total number of open issues user has across public activity\",\n    example: 498,\n  })\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  public open_issues: number;\n\n  @ApiHideProperty()\n  @Column({\n    default: false,\n    select: false,\n  })\n  public has_stars_data: boolean;\n\n  @ApiModelProperty({\n    description: \"Flag indicating whether user opted to have a private profile (beta feature\",\n    example: false,\n  })\n  @Column({ default: false })\n  public is_private: boolean;\n\n  @ApiModelProperty({\n    description: \"Flag indicating app.opensauced user status\",\n    example: false,\n  })\n  @Column({ default: false })\n  public is_open_sauced_member: boolean;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing user creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public created_at?: Date;\n\n  @ApiModelPropertyOptional({\n    description: \"Timestamp representing user last update\",\n    example: \"2022-08-28 22:04:29.000000\",\n  })\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  public updated_at?: Date;\n\n  @ApiModelProperty({\n    description: \"User unique login name\",\n    example: \"0-vortex\",\n  })\n  @Column({\n    type: \"character varying\",\n    length: 255,\n  })\n  public login: string;\n\n  @ApiHideProperty()\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n    select: false,\n  })\n  public deleted_at?: Date;\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepo, repo => repo.user)\n  public repos: DbRepo[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserVotes, repoToUserVotes => repoToUserVotes.user)\n  public repoToUserVotes: DbRepoToUserVotes[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserStars, repoToUserStars => repoToUserStars.user)\n  public repoToUserStars: DbRepoToUserStars[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.user)\n  public repoToUserSubmissions: DbRepoToUserSubmissions[];\n\n  @ApiHideProperty()\n  @OneToMany(() => DbRepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.user)\n  public repoToUserStargazers: DbRepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor (\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service () {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")!),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")!),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\")!,\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\")!,\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web () {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")!),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")!),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")!),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")!),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")!),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")!),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, ValidateNested } from \"class-validator\";\nimport { PageMetaDto } from \"./page-meta.dto\";\nimport { Type } from \"class-transformer\";\n\nexport class PageDto {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  @ValidateNested({ each: true })\n  @Type(() => Array)\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PageMetaDto })\n  @ValidateNested()\n  @Type(() => PageMetaDto)\n  readonly meta: PageMetaDto;\n\n  constructor (data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                limit\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page-meta.dto.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Flag indicating if there is a next page', example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Flag indicating if there is a previous page', example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of items in the collection', example: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of items per page', example: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The current page', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of pages in the collection', example: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { PageMetaParameters } from \"./page-meta-parameters.dto\";\n\nexport class PageMetaDto {\n  @ApiProperty({\n    description: \"The current page\",\n    example: 1,\n  })\n  readonly page: number;\n\n  @ApiProperty({\n    description: \"The number of items per page\",\n    example: 10,\n  })\n  readonly limit: number;\n\n  @ApiProperty({\n    description: \"The number of items in the collection\",\n    example: 100,\n  })\n  readonly itemCount: number;\n\n  @ApiProperty({\n    description: \"The number of pages in the collection\",\n    example: 10,\n  })\n  readonly pageCount: number;\n\n  @ApiProperty({\n    description: \"Flag indicating if there is a previous page\",\n    example: false,\n  })\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty({\n    description: \"Flag indicating if there is a next page\",\n    example: true,\n  })\n  readonly hasNextPage: boolean;\n\n  constructor ({ pageOptionsDto, itemCount }: PageMetaParameters) {\n    this.page = pageOptionsDto.page ?? 1;\n    this.limit = pageOptionsDto.limit ?? 10;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.limit);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageMetaParameters.html":{"url":"interfaces/PageMetaParameters.html","title":"interface - PageMetaParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageMetaParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta-parameters.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            itemCount\n                                        \n                                \n                                \n                                        \n                                            pageOptionsDto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageOptionsDto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageOptionsDto:         PageOptionsDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageOptionsDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PageOptionsDto } from \"./page-options.dto\";\n\nexport interface PageMetaParameters {\n  pageOptionsDto: PageOptionsDto;\n  itemCount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dtos/page-options.dto.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEnum, IsInt, IsOptional, Max, Min } from \"class-validator\";\nimport { OrderDirectionEnum } from \"../constants/order-direction.constant\";\n\nexport class PageOptionsDto {\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 50,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(50)\n  @IsOptional()\n  readonly limit?: number = 10;\n\n  @ApiPropertyOptional({ enum: OrderDirectionEnum, enumName: \"OrderDirectionEnum\", default: OrderDirectionEnum.DESC })\n  @IsEnum(OrderDirectionEnum)\n  @IsOptional()\n  readonly orderDirection?: OrderDirectionEnum = OrderDirectionEnum.DESC;\n\n  get skip (): number {\n    return ((this.page ?? 1) - 1) * (this.limit ?? 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoContributionsController.html":{"url":"controllers/RepoContributionsController.html","title":"controller - RepoContributionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoContributionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/repo-contributions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findAllByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByOwnerAndRepo(owner: string, repo: string, pageOptionsDto: ContributionPageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:owner/:repo/contributions')@ApiOperation({operationId: 'findAllByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo listing all contributions and paginating them'})@ApiPaginatedResponse(DbContribution)@ApiOkResponse({type: DbContribution})@ApiNotFoundResponse({description: 'Repo not found'})\n                \n            \n\n            \n                \n                    Defined in src/contribution/repo-contributions.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                ContributionPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByRepoId(id: number, pageOptionsDto: ContributionPageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/contributions')@ApiOperation({operationId: 'findAllByRepoId', summary: 'Find a repo by :id listing all contributions and paginating them'})@ApiPaginatedResponse(DbContribution)@ApiOkResponse({type: DbContribution})@ApiNotFoundResponse({description: 'Repo not found'})\n                \n            \n\n            \n                \n                    Defined in src/contribution/repo-contributions.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                ContributionPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from \"@nestjs/common\";\nimport {\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { ContributionService } from \"./contribution.service\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { DbContribution } from \"./contribution.entity\";\nimport { ContributionPageOptionsDto } from \"./dtos/contribution-page-options.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service\", \"Contribution service\")\nexport class RepoContributionsController {\n  constructor (\n    private readonly repoService: RepoService,\n    private readonly contributionService: ContributionService,\n  ) {}\n\n  @Get(\"/:id/contributions\")\n  @ApiOperation({\n    operationId: \"findAllByRepoId\",\n    summary: \"Find a repo by :id listing all contributions and paginating them\",\n  })\n  @ApiPaginatedResponse(DbContribution)\n  @ApiOkResponse({ type: DbContribution })\n  @ApiNotFoundResponse({ description: \"Repo not found\" })\n  async findAllByRepoId (\n    @Param(\"id\") id: number,\n      @Query() pageOptionsDto: ContributionPageOptionsDto,\n  ): Promise> {\n    const item = await this.repoService.findOneById(id);\n\n    return this.contributionService.findAll(pageOptionsDto, item.id);\n  }\n\n  @Get(\"/:owner/:repo/contributions\")\n  @ApiOperation({\n    operationId: \"findAllByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo listing all contributions and paginating them\",\n  })\n  @ApiPaginatedResponse(DbContribution)\n  @ApiOkResponse({ type: DbContribution })\n  @ApiNotFoundResponse({ description: \"Repo not found\" })\n  async findAllByOwnerAndRepo (\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @Query() pageOptionsDto: ContributionPageOptionsDto,\n  ): Promise> {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.contributionService.findAll(pageOptionsDto, item.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoController.html":{"url":"controllers/RepoController.html","title":"controller - RepoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: RepoPageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@ApiOperation({operationId: 'findAll', summary: 'Finds all repos and paginates them'})@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'findOneById', summary: 'Finds a repo by :id'})@ApiOkResponse({type: DbRepo})@ApiNotFoundResponse({description: 'Repository not found'})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:owner/:repo')@ApiOperation({operationId: 'findOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo'})@ApiOkResponse({type: DbRepo})@ApiNotFoundResponse({description: 'Repository not found'})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from \"@nestjs/common\";\nimport { RepoService } from \"./repo.service\";\nimport { DbRepo } from \"./entities/repo.entity\";\nimport { ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { RepoPageOptionsDto } from \"./dtos/repo-page-options.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service\")\nexport class RepoController {\n  constructor (private readonly repoService: RepoService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"findOneById\",\n    summary: \"Finds a repo by :id\",\n  })\n  @ApiOkResponse({ type: DbRepo })\n  @ApiNotFoundResponse({ description: \"Repository not found\" })\n  async findOneById (\n    @Param(\"id\") id: number,\n  ): Promise {\n    return this.repoService.findOneById(id);\n  }\n\n  @Get(\"/:owner/:repo\")\n  @ApiOperation({\n    operationId: \"findOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo\",\n  })\n  @ApiOkResponse({ type: DbRepo })\n  @ApiNotFoundResponse({ description: \"Repository not found\" })\n  async findOneByOwnerAndRepo (\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n  ): Promise {\n    return this.repoService.findOneByOwnerAndRepo(owner, repo);\n  }\n\n  @Get(\"/list\")\n  @ApiOperation({\n    operationId: \"findAll\",\n    summary: \"Finds all repos and paginates them\",\n  })\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  async findAll (\n    @Query() pageOptionsDto: RepoPageOptionsDto,\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepoModule.html":{"url":"modules/RepoModule.html","title":"module - RepoModule","body":"\n                   \n\n\n\n\n    Modules\n    RepoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_providers\n\n\n\ncluster_RepoModule_exports\n\n\n\n\nRepoService \n\nRepoService \n\n\n\nRepoModule\n\nRepoModule\n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/repo/repo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepoService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"./entities/repo.entity\";\nimport { RepoService } from \"./repo.service\";\nimport { RepoController } from \"./repo.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DbRepo])],\n  controllers: [RepoController],\n  providers: [RepoService],\n  exports: [RepoService],\n})\nexport class RepoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RepoPageOptionsDto.html":{"url":"classes/RepoPageOptionsDto.html","title":"class - RepoPageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RepoPageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/dtos/repo-page-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                orderBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                limit\n                            \n                            \n                                    Readonly\n                                    Optional\n                                orderDirection\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepoOrderFieldsEnum\n\n                    \n                \n                \n                    \n                        Default value : RepoOrderFieldsEnum.stars\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: RepoOrderFieldsEnum, enumName: 'RepoOrderFieldsEnum', default: undefined})@IsEnum(RepoOrderFieldsEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/dtos/repo-page-options.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        orderDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDirectionEnum\n\n                    \n                \n                \n                    \n                        Default value : OrderDirectionEnum.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: OrderDirectionEnum, enumName: 'OrderDirectionEnum', default: undefined})@IsEnum(OrderDirectionEnum)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsEnum, IsOptional } from \"class-validator\";\nimport { PageOptionsDto } from \"../../common/dtos/page-options.dto\";\n\nexport enum RepoOrderFieldsEnum {\n  issues = \"issues\",\n  stars = \"stars\",\n  watchers = \"watchers\",\n  subscribers = \"subscribers\",\n  created_at = \"created_at\",\n  updated_at = \"updated_at\",\n  name = \"name\",\n  contributionsCount = \"contributionsCount\",\n  votesCount = \"votesCount\",\n  submissionsCount = \"submissionsCount\",\n  stargazersCount = \"stargazersCount\",\n  starsCount = \"starsCount\",\n}\n\nexport class RepoPageOptionsDto extends PageOptionsDto {\n  @ApiPropertyOptional({\n    enum: RepoOrderFieldsEnum,\n    enumName: \"RepoOrderFieldsEnum\",\n    default: RepoOrderFieldsEnum.stars,\n  })\n  @IsEnum(RepoOrderFieldsEnum)\n  @IsOptional()\n  readonly orderBy?: RepoOrderFieldsEnum = RepoOrderFieldsEnum.stars;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepoService.html":{"url":"injectables/RepoService.html","title":"injectable - RepoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                            \n                                subQueryCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/repo/repo.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: RepoPageOptionsDto, userId?: number, userRelations?: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    userRelations\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subQueryCount\n                        \n                    \n                \n            \n            \n                \nsubQueryCount(subQuery: SelectQueryBuilder, entity: string, alias: string, target: string)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    subQuery\n                                    \n                                            SelectQueryBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    entity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"repo\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository, SelectQueryBuilder } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"./entities/repo.entity\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { RepoOrderFieldsEnum, RepoPageOptionsDto } from \"./dtos/repo-page-options.dto\";\nimport { OrderDirectionEnum } from \"../common/constants/order-direction.constant\";\n\n@Injectable()\nexport class RepoService {\n  constructor (\n    @InjectRepository(DbRepo)\n    private repoRepository: Repository,\n  ) {}\n\n  subQueryCount (subQuery: SelectQueryBuilder, entity: string, alias: string, target = \"repo\") {\n    const aliasName = `${alias}Count`;\n    const aliasTable = `${alias}CountSelect`;\n\n    return subQuery\n      .select(\"COUNT(DISTINCT id)\", aliasName)\n      .from(entity, aliasTable)\n      .where(`${aliasTable}.${target}_id = ${target}.id`);\n  }\n\n  baseQueryBuilder () {\n    const builder = this.repoRepository.createQueryBuilder(\"repo\")\n\n    /*\n     * .select(['repo.id'])\n     * .leftJoinAndSelect(\"repo.user\", \"user\")\n     * .leftJoinAndSelect(DbRepoToUserStars, \"stars\")\n     * .leftJoinAndMapMany(\"repo.contributions\", DbContribution, \"contributions\", \"contributions.repo_id = repo.id\")\n     */\n\n      .addSelect(qb => this.subQueryCount(qb, \"DbContribution\", \"contributions\"), \"contributionsCount\")\n      .addSelect(qb => this.subQueryCount(qb, \"DbRepoToUserVotes\", \"votes\"), \"votesCount\")\n      .addSelect(qb => this.subQueryCount(qb, \"DbRepoToUserSubmissions\", \"submissions\"), \"submissionsCount\")\n      .addSelect(qb => this.subQueryCount(qb, \"DbRepoToUserStargazers\", \"stargazers\"), \"stargazersCount\")\n      .addSelect(qb => this.subQueryCount(qb, \"DbRepoToUserStars\", \"stars\"), \"starsCount\")\n      .loadRelationCountAndMap(\"repo.contributionsCount\", \"repo.contributions\")\n      .loadRelationCountAndMap(\"repo.votesCount\", \"repo.repoToUserVotes\")\n      .loadRelationCountAndMap(\"repo.submissionsCount\", \"repo.repoToUserSubmissions\")\n      .loadRelationCountAndMap(\"repo.stargazersCount\", \"repo.repoToUserStargazers\")\n      .loadRelationCountAndMap(\"repo.starsCount\", \"repo.repoToUserStars\");\n\n    return builder;\n  }\n\n  async findOneById (id: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.id = :id\", { id });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw (new NotFoundException);\n    }\n\n    return item;\n  }\n\n  async findOneByOwnerAndRepo (owner: string, repo: string): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.full_name = :name\", { name: `${owner}/${repo}` });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw (new NotFoundException);\n    }\n\n    return item;\n  }\n\n  async findAll (\n    pageOptionsDto: RepoPageOptionsDto,\n    userId?: number,\n    userRelations?: string[],\n  ): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n    const orderField = pageOptionsDto.orderBy ?? RepoOrderFieldsEnum.stars;\n\n    if (userId) {\n      userRelations?.map(relation =>\n        queryBuilder\n          .innerJoin(`repo.repoToUser${relation}`, `authUser${relation}`, `authUser${relation}.user_id = :userId`, { userId }));\n    }\n\n    queryBuilder\n      .orderBy(`\"repo\".\"is_fork\"`, OrderDirectionEnum.ASC)\n      .addOrderBy(`\"${orderField}\"`, pageOptionsDto.orderDirection)\n      .addOrderBy(`\"repo\".\"created_at\"`, OrderDirectionEnum.DESC)\n      .offset(pageOptionsDto.skip)\n      .limit(pageOptionsDto.limit);\n\n    // console.log(queryBuilder.getSql());\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoStarController.html":{"url":"controllers/RepoStarController.html","title":"controller - RepoStarController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoStarController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/star/repo-star.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downStarOneById\n                            \n                            \n                                    Async\n                                downStarOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findAllUserStarred\n                            \n                            \n                                    Async\n                                starOneById\n                            \n                            \n                                    Async\n                                starOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStarOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStarOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/star')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downStarOneById', summary: 'Finds a repo by :id and removes existing star'})@ApiOkResponse({description: 'Returns the repo star', type: DbRepoToUserStars})@ApiNotFoundResponse({description: 'Repo or star not found'})@ApiConflictResponse({description: 'You have already removed your star'})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStarOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStarOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/star')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downStarOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and removes existing star'})@ApiOkResponse({description: 'Returns the repo star', type: DbRepoToUserStars})@ApiNotFoundResponse({description: 'Repo or star not found'})@ApiConflictResponse({description: 'You have already removed your star'})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserStarred\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserStarred(pageOptionsDto: RepoPageOptionsDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/listUserStarred')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'findAllUserStarred', summary: 'Finds all repos starred by authenticated user and paginates them'})@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        starOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    starOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/star')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'starOneById', summary: 'Finds a repo by :id and adds a star'})@ApiOkResponse({description: 'Returns the repo star', type: DbRepoToUserStars})@ApiNotFoundResponse({description: 'Repo or star not found'})@ApiConflictResponse({description: 'You have already starred this repo'})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        starOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    starOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/star')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'starOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and adds a star'})@ApiOkResponse({description: 'Returns the repo star', type: DbRepoToUserStars})@ApiNotFoundResponse({description: 'Repo or star not found'})@ApiConflictResponse({description: 'You have already starred this repo'})\n                \n            \n\n            \n                \n                    Defined in src/star/repo-star.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, Put, Query, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { RepoService } from \"../repo/repo.service\";\nimport { StarService } from \"./star.service\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { DbRepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { RepoPageOptionsDto } from \"../repo/dtos/repo-page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service guarded\", \"Star service\")\nexport class RepoStarController {\n  constructor (\n    private readonly repoService: RepoService,\n    private readonly starService: StarService,\n  ) {}\n\n  @Get(\"/listUserStarred\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"findAllUserStarred\",\n    summary: \"Finds all repos starred by authenticated user and paginates them\",\n  })\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  async findAllUserStarred (\n    @Query() pageOptionsDto: RepoPageOptionsDto,\n      @UserId() userId: number,\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto, userId, [\"Stars\"]);\n  }\n\n  @Put(\"/:id/star\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"starOneById\",\n    summary: \"Finds a repo by :id and adds a star\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo star\",\n    type: DbRepoToUserStars,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or star not found\" })\n  @ApiConflictResponse({ description: \"You have already starred this repo\" })\n  async starOneById (\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.starService.starByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/star\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"starOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and adds a star\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo star\",\n    type: DbRepoToUserStars,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or star not found\" })\n  @ApiConflictResponse({ description: \"You have already starred this repo\" })\n  async starOneByOwnerAndRepo (\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.starService.starByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/star\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downStarOneById\",\n    summary: \"Finds a repo by :id and removes existing star\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo star\",\n    type: DbRepoToUserStars,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or star not found\" })\n  @ApiConflictResponse({ description: \"You have already removed your star\" })\n  async downStarOneById (\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.starService.downStarByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/star\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downStarOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and removes existing star\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo star\",\n    type: DbRepoToUserStars,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or star not found\" })\n  @ApiConflictResponse({ description: \"You have already removed your star\" })\n  async downStarOneByOwnerAndRepo (\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.starService.downStarByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoStargazeController.html":{"url":"controllers/RepoStargazeController.html","title":"controller - RepoStargazeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoStargazeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stargaze/repo-stargaze.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downStargazeOneById\n                            \n                            \n                                    Async\n                                downStargazeOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findAllUserStargazed\n                            \n                            \n                                    Async\n                                stargazeOneById\n                            \n                            \n                                    Async\n                                stargazeOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStargazeOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStargazeOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/stargaze')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downStargazeOneById', summary: 'Finds a repo by :id and unfollows'})@ApiOkResponse({description: 'Returns the repo follow', type: DbRepoToUserStargazers})@ApiNotFoundResponse({description: 'Repo or follow not found'})@ApiConflictResponse({description: 'You have already unfollowed this repo'})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStargazeOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStargazeOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/stargaze')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downStargazeOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and unfollows'})@ApiOkResponse({description: 'Returns the repo follow', type: DbRepoToUserStargazers})@ApiNotFoundResponse({description: 'Repo or stargaze not found'})@ApiConflictResponse({description: 'You have already unfollowed this repo'})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserStargazed\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserStargazed(pageOptionsDto: RepoPageOptionsDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/listUserStargazed')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'findAllUserStargazed', summary: 'Finds all repos followed by authenticated user and paginates them'})@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        stargazeOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    stargazeOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/stargaze')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'stargazeOneById', summary: 'Finds a repo by :id and follows'})@ApiOkResponse({description: 'Returns the repo follow', type: DbRepoToUserStargazers})@ApiNotFoundResponse({description: 'Repo or follow not found'})@ApiConflictResponse({description: 'You have already followed this repo'})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        stargazeOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    stargazeOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/stargaze')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'stargazeOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and follows'})@ApiOkResponse({description: 'Returns the repo follow', type: DbRepoToUserStargazers})@ApiNotFoundResponse({description: 'Repo or follow not found'})@ApiConflictResponse({description: 'You have already followed this repo'})\n                \n            \n\n            \n                \n                    Defined in src/stargaze/repo-stargaze.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, Put, Query, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { RepoService } from \"../repo/repo.service\";\nimport { StargazeService } from \"./stargaze.service\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { DbRepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { RepoPageOptionsDto } from \"../repo/dtos/repo-page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service guarded\", \"Stargaze service\")\nexport class RepoStargazeController {\n  constructor (\n    private readonly repoService: RepoService,\n    private readonly stargazeService: StargazeService,\n  ) {}\n\n  @Get(\"/listUserStargazed\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"findAllUserStargazed\",\n    summary: \"Finds all repos followed by authenticated user and paginates them\",\n  })\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  async findAllUserStargazed (\n    @Query() pageOptionsDto: RepoPageOptionsDto,\n      @UserId() userId: number,\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto, userId, [\"Stargazers\"]);\n  }\n\n  @Put(\"/:id/stargaze\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"stargazeOneById\",\n    summary: \"Finds a repo by :id and follows\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo follow\",\n    type: DbRepoToUserStargazers,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or follow not found\" })\n  @ApiConflictResponse({ description: \"You have already followed this repo\" })\n  async stargazeOneById (\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.stargazeService.stargazeByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/stargaze\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"stargazeOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and follows\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo follow\",\n    type: DbRepoToUserStargazers,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or follow not found\" })\n  @ApiConflictResponse({ description: \"You have already followed this repo\" })\n  async stargazeOneByOwnerAndRepo (\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.stargazeService.stargazeByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/stargaze\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downStargazeOneById\",\n    summary: \"Finds a repo by :id and unfollows\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo follow\",\n    type: DbRepoToUserStargazers,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or follow not found\" })\n  @ApiConflictResponse({ description: \"You have already unfollowed this repo\" })\n  async downStargazeOneById (\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.stargazeService.downStargazeByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/stargaze\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downStargazeOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and unfollows\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo follow\",\n    type: DbRepoToUserStargazers,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or stargaze not found\" })\n  @ApiConflictResponse({ description: \"You have already unfollowed this repo\" })\n  async downStargazeOneByOwnerAndRepo (\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.stargazeService.downStargazeByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoSubmitController.html":{"url":"controllers/RepoSubmitController.html","title":"controller - RepoSubmitController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoSubmitController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/submit/repo-submit.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downSubmitOneById\n                            \n                            \n                                    Async\n                                downSubmitOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findAllUserSubmitted\n                            \n                            \n                                    Async\n                                submitOneById\n                            \n                            \n                                    Async\n                                submitOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downSubmitOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downSubmitOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/submit')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downSubmitOneById', summary: 'Finds a repo by :id and removes existing submission'})@ApiOkResponse({description: 'Returns the repo submission', type: DbRepoToUserSubmissions})@ApiNotFoundResponse({description: 'Repo or submission not found'})@ApiConflictResponse({description: 'You have already removed your submission'})\n                \n            \n\n            \n                \n                    Defined in src/submit/repo-submit.controller.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downSubmitOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downSubmitOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/submit')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downSubmitOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and removes existing submission'})@ApiOkResponse({description: 'Returns the repo submission', type: DbRepoToUserSubmissions})@ApiNotFoundResponse({description: 'Repo or submission not found'})@ApiConflictResponse({description: 'You have already removed your submission'})\n                \n            \n\n            \n                \n                    Defined in src/submit/repo-submit.controller.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserSubmitted\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserSubmitted(pageOptionsDto: RepoPageOptionsDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/listUserSubmitted')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'findAllUserSubmitted', summary: 'Finds all repos submitted by authenticated user and paginates them'})@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})\n                \n            \n\n            \n                \n                    Defined in src/submit/repo-submit.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submitOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/submit')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'submitOneById', summary: 'Finds a repo by :id and adds a submission'})@ApiOkResponse({description: 'Returns the repo submission', type: DbRepoToUserSubmissions})@ApiNotFoundResponse({description: 'Repo or submission not found'})@ApiConflictResponse({description: 'You have already submitted this repo'})\n                \n            \n\n            \n                \n                    Defined in src/submit/repo-submit.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submitOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/submit')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'submitOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and adds a submission'})@ApiOkResponse({description: 'Returns the repo submission', type: DbRepoToUserSubmissions})@ApiNotFoundResponse({description: 'Repo or submission not found'})@ApiConflictResponse({description: 'You have already submitted this repo'})\n                \n            \n\n            \n                \n                    Defined in src/submit/repo-submit.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, Put, Query, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { RepoService } from \"../repo/repo.service\";\nimport { SubmitService } from \"./submit.service\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { DbRepoToUserSubmissions } from \"../repo/entities/repo.to.user.submissions.entity\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { RepoPageOptionsDto } from \"../repo/dtos/repo-page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service guarded\", \"Submit service\")\nexport class RepoSubmitController {\n  constructor (\n    private readonly repoService: RepoService,\n    private readonly submitService: SubmitService,\n  ) {}\n\n  @Get(\"/listUserSubmitted\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"findAllUserSubmitted\",\n    summary: \"Finds all repos submitted by authenticated user and paginates them\",\n  })\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  async findAllUserSubmitted (\n    @Query() pageOptionsDto: RepoPageOptionsDto,\n      @UserId() userId: number,\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto, userId, [\"Submissions\"]);\n  }\n\n  @Put(\"/:id/submit\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"submitOneById\",\n    summary: \"Finds a repo by :id and adds a submission\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo submission\",\n    type: DbRepoToUserSubmissions,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or submission not found\" })\n  @ApiConflictResponse({ description: \"You have already submitted this repo\" })\n  async submitOneById (\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.submitService.submitByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/submit\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"submitOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and adds a submission\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo submission\",\n    type: DbRepoToUserSubmissions,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or submission not found\" })\n  @ApiConflictResponse({ description: \"You have already submitted this repo\" })\n  async submitOneByOwnerAndRepo (\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.submitService.submitByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/submit\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downSubmitOneById\",\n    summary: \"Finds a repo by :id and removes existing submission\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo submission\",\n    type: DbRepoToUserSubmissions,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or submission not found\" })\n  @ApiConflictResponse({ description: \"You have already removed your submission\" })\n  async downSubmitOneById (\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.submitService.downSubmitByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/submit\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downSubmitOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and removes existing submission\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo submission\",\n    type: DbRepoToUserSubmissions,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or submission not found\" })\n  @ApiConflictResponse({ description: \"You have already removed your submission\" })\n  async downSubmitOneByOwnerAndRepo (\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.submitService.downSubmitByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoVoteController.html":{"url":"controllers/RepoVoteController.html","title":"controller - RepoVoteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoVoteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vote/repo-vote.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downVoteOneById\n                            \n                            \n                                    Async\n                                downVoteOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findAllUserVoted\n                            \n                            \n                                    Async\n                                voteOneById\n                            \n                            \n                                    Async\n                                voteOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downVoteOneById', summary: 'Finds a repo by :id and removes existing vote'})@ApiOkResponse({description: 'Returns the repo vote', type: DbRepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already removed your vote'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:owner/:repo/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'downVoteOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and removes existing vote'})@ApiOkResponse({description: 'Returns the repo vote', type: DbRepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already removed your vote'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserVoted\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserVoted(pageOptionsDto: RepoPageOptionsDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/listUserVoted')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'findAllUserVoted', summary: 'Finds all repos voted by authenticated user and paginates them'})@ApiPaginatedResponse(DbRepo)@ApiOkResponse({type: DbRepo})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                RepoPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteOneById(id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'voteOneById', summary: 'Finds a repo by :id and adds a vote'})@ApiOkResponse({description: 'Returns the repo vote', type: DbRepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already voted for this repo'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteOneByOwnerAndRepo(owner: string, repo: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:owner/:repo/vote')@ApiBearerAuth()@UseGuards(SupabaseGuard)@ApiOperation({operationId: 'voteOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo and adds a vote'})@ApiOkResponse({description: 'Returns the repo vote', type: DbRepoToUserVotes})@ApiNotFoundResponse({description: 'Repo or vote not found'})@ApiConflictResponse({description: 'You have already voted for this repo'})\n                \n            \n\n            \n                \n                    Defined in src/vote/repo-vote.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, Put, Query, UseGuards } from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { RepoService } from \"../repo/repo.service\";\nimport { VoteService } from \"./vote.service\";\nimport { SupabaseGuard } from \"../auth/supabase.guard\";\nimport { UserId } from \"../auth/supabase.user.decorator\";\nimport { DbRepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { RepoPageOptionsDto } from \"../repo/dtos/repo-page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repository service guarded\", \"Vote service\")\nexport class RepoVoteController {\n  constructor (\n    private readonly repoService: RepoService,\n    private readonly voteService: VoteService,\n  ) {}\n\n  @Get(\"/listUserVoted\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"findAllUserVoted\",\n    summary: \"Finds all repos voted by authenticated user and paginates them\",\n  })\n  @ApiPaginatedResponse(DbRepo)\n  @ApiOkResponse({ type: DbRepo })\n  async findAllUserVoted (\n    @Query() pageOptionsDto: RepoPageOptionsDto,\n      @UserId() userId: number,\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto, userId, [\"Votes\"]);\n  }\n\n  @Put(\"/:id/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"voteOneById\",\n    summary: \"Finds a repo by :id and adds a vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: DbRepoToUserVotes,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or vote not found\" })\n  @ApiConflictResponse({ description: \"You have already voted for this repo\" })\n  async voteOneById (\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.voteService.voteByRepoId(item.id, userId);\n  }\n\n  @Put(\"/:owner/:repo/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"voteOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and adds a vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: DbRepoToUserVotes,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or vote not found\" })\n  @ApiConflictResponse({ description: \"You have already voted for this repo\" })\n  async voteOneByOwnerAndRepo (\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.voteService.voteByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:id/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downVoteOneById\",\n    summary: \"Finds a repo by :id and removes existing vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: DbRepoToUserVotes,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or vote not found\" })\n  @ApiConflictResponse({ description: \"You have already removed your vote\" })\n  async downVoteOneById (\n    @Param(\"id\") id: number,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneById(id);\n\n    return this.voteService.downVoteByRepoId(item.id, userId);\n  }\n\n  @Delete(\"/:owner/:repo/vote\")\n  @ApiBearerAuth()\n  @UseGuards(SupabaseGuard)\n  @ApiOperation({\n    operationId: \"downVoteOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo and removes existing vote\",\n  })\n  @ApiOkResponse({\n    description: \"Returns the repo vote\",\n    type: DbRepoToUserVotes,\n  })\n  @ApiNotFoundResponse({ description: \"Repo or vote not found\" })\n  @ApiConflictResponse({ description: \"You have already removed your vote\" })\n  async downVoteOneByOwnerAndRepo (\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n      @UserId() userId: number,\n  ): Promise {\n    const item = await this.repoService.findOneByOwnerAndRepo(owner, repo);\n\n    return this.voteService.downVoteByRepoId(item.id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StarModule.html":{"url":"modules/StarModule.html","title":"module - StarModule","body":"\n                   \n\n\n\n\n    Modules\n    StarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StarModule\n\n\n\ncluster_StarModule_exports\n\n\n\ncluster_StarModule_providers\n\n\n\n\nStarService \n\nStarService \n\n\n\nStarModule\n\nStarModule\n\nStarService  -->\n\nStarModule->StarService \n\n\n\n\n\nRepoService\n\nRepoService\n\nStarModule -->\n\nRepoService->StarModule\n\n\n\n\n\nStarService\n\nStarService\n\nStarModule -->\n\nStarService->StarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/star/star.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                        \n                            StarService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoStarController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StarService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { StarService } from \"./star.service\";\nimport { RepoStarController } from \"./repo-star.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([\n    DbRepo,\n    DbRepoToUserStars,\n  ])],\n  controllers: [RepoStarController],\n  providers: [RepoService, StarService],\n  exports: [StarService],\n})\nexport class StarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StarService.html":{"url":"injectables/StarService.html","title":"injectable - StarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/star/star.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downStarByRepoId\n                            \n                            \n                                    Async\n                                starByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoStarRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/star/star.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoStarRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/star/star.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStarByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStarByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/star/star.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        starByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    starByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/star/star.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbRepoToUserStars } from \"../repo/entities/repo.to.user.stars.entity\";\n\n@Injectable()\nexport class StarService {\n  constructor (\n    @InjectRepository(DbRepoToUserStars)\n    private repoStarRepository: Repository,\n  ) {}\n\n  baseQueryBuilder () {\n    const builder = this.repoStarRepository.createQueryBuilder(\"r2stars\")\n      .withDeleted();\n\n    return builder;\n  }\n\n  async starByRepoId (repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2stars.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2stars.user_id = :userId\", { userId });\n\n    const starExists = await queryBuilder.getOne();\n\n    if (starExists) {\n      if (!starExists.deleted_at) {\n        throw new ConflictException(\"You have already starred this repo\");\n      }\n\n      await this.repoStarRepository.restore(starExists.id);\n\n      return starExists;\n    }\n\n    return this.repoStarRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downStarByRepoId (repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2stars.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2stars.user_id = :userId\", { userId });\n\n    const starExists = await queryBuilder.getOne();\n\n    if (!starExists) {\n      throw new NotFoundException(\"You have not starred this repo\");\n    }\n\n    if (starExists.deleted_at) {\n      throw new ConflictException(\"You have already removed your star\");\n    }\n\n    await this.repoStarRepository.softDelete(starExists.id);\n\n    return starExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StargazeModule.html":{"url":"modules/StargazeModule.html","title":"module - StargazeModule","body":"\n                   \n\n\n\n\n    Modules\n    StargazeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StargazeModule\n\n\n\ncluster_StargazeModule_providers\n\n\n\ncluster_StargazeModule_exports\n\n\n\n\nStargazeService \n\nStargazeService \n\n\n\nStargazeModule\n\nStargazeModule\n\nStargazeService  -->\n\nStargazeModule->StargazeService \n\n\n\n\n\nRepoService\n\nRepoService\n\nStargazeModule -->\n\nRepoService->StargazeModule\n\n\n\n\n\nStargazeService\n\nStargazeService\n\nStargazeModule -->\n\nStargazeService->StargazeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stargaze/stargaze.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                        \n                            StargazeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoStargazeController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StargazeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { StargazeService } from \"./stargaze.service\";\nimport { RepoStargazeController } from \"./repo-stargaze.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([\n    DbRepo,\n    DbRepoToUserStargazers,\n  ])],\n  controllers: [RepoStargazeController],\n  providers: [RepoService, StargazeService],\n  exports: [StargazeService],\n})\nexport class StargazeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StargazeService.html":{"url":"injectables/StargazeService.html","title":"injectable - StargazeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StargazeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stargaze/stargaze.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downStargazeByRepoId\n                            \n                            \n                                    Async\n                                stargazeByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoStargazeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/stargaze/stargaze.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoStargazeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/stargaze/stargaze.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downStargazeByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downStargazeByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/stargaze/stargaze.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        stargazeByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    stargazeByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/stargaze/stargaze.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbRepoToUserStargazers } from \"../repo/entities/repo.to.user.stargazers.entity\";\n\n@Injectable()\nexport class StargazeService {\n  constructor (\n    @InjectRepository(DbRepoToUserStargazers)\n    private repoStargazeRepository: Repository,\n  ) {}\n\n  baseQueryBuilder () {\n    const builder = this.repoStargazeRepository.createQueryBuilder(\"r2stargazes\")\n      .withDeleted();\n\n    return builder;\n  }\n\n  async stargazeByRepoId (repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2stargazes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2stargazes.user_id = :userId\", { userId });\n\n    const stargazeExists = await queryBuilder.getOne();\n\n    if (stargazeExists) {\n      if (!stargazeExists.deleted_at) {\n        throw new ConflictException(\"You have already unfollowed this repo\");\n      }\n\n      await this.repoStargazeRepository.restore(stargazeExists.id);\n\n      return stargazeExists;\n    }\n\n    return this.repoStargazeRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downStargazeByRepoId (repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2stargazes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2stargazes.user_id = :userId\", { userId });\n\n    const stargazeExists = await queryBuilder.getOne();\n\n    if (!stargazeExists) {\n      throw new NotFoundException(\"You have not followed this repo\");\n    }\n\n    if (stargazeExists.deleted_at) {\n      throw new ConflictException(\"You have already unfollowed this repo\");\n    }\n\n    await this.repoStargazeRepository.softDelete(stargazeExists.id);\n\n    return stargazeExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubmitModule.html":{"url":"modules/SubmitModule.html","title":"module - SubmitModule","body":"\n                   \n\n\n\n\n    Modules\n    SubmitModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SubmitModule\n\n\n\ncluster_SubmitModule_providers\n\n\n\ncluster_SubmitModule_exports\n\n\n\n\nSubmitService \n\nSubmitService \n\n\n\nSubmitModule\n\nSubmitModule\n\nSubmitService  -->\n\nSubmitModule->SubmitService \n\n\n\n\n\nRepoService\n\nRepoService\n\nSubmitModule -->\n\nRepoService->SubmitModule\n\n\n\n\n\nSubmitService\n\nSubmitService\n\nSubmitModule -->\n\nSubmitService->SubmitModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/submit/submit.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                        \n                            SubmitService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoSubmitController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SubmitService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserSubmissions } from \"../repo/entities/repo.to.user.submissions.entity\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { SubmitService } from \"./submit.service\";\nimport { RepoSubmitController } from \"./repo-submit.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([\n    DbRepo,\n    DbRepoToUserSubmissions,\n  ])],\n  controllers: [RepoSubmitController],\n  providers: [RepoService, SubmitService],\n  exports: [SubmitService],\n})\nexport class SubmitModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmitService.html":{"url":"injectables/SubmitService.html","title":"injectable - SubmitService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubmitService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/submit/submit.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downSubmitByRepoId\n                            \n                            \n                                    Async\n                                submitByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoSubmitRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/submit/submit.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoSubmitRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/submit/submit.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downSubmitByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downSubmitByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/submit/submit.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submitByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/submit/submit.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbRepoToUserSubmissions } from \"../repo/entities/repo.to.user.submissions.entity\";\n\n@Injectable()\nexport class SubmitService {\n  constructor (\n    @InjectRepository(DbRepoToUserSubmissions)\n    private repoSubmitRepository: Repository,\n  ) {}\n\n  baseQueryBuilder () {\n    const builder = this.repoSubmitRepository.createQueryBuilder(\"r2submits\")\n      .withDeleted();\n\n    return builder;\n  }\n\n  async submitByRepoId (repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2submits.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2submits.user_id = :userId\", { userId });\n\n    const submitExists = await queryBuilder.getOne();\n\n    if (submitExists) {\n      if (!submitExists.deleted_at) {\n        throw new ConflictException(\"You have already submitd for this repo\");\n      }\n\n      await this.repoSubmitRepository.restore(submitExists.id);\n\n      return submitExists;\n    }\n\n    return this.repoSubmitRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downSubmitByRepoId (repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2submits.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2submits.user_id = :userId\", { userId });\n\n    const submitExists = await queryBuilder.getOne();\n\n    if (!submitExists) {\n      throw new NotFoundException(\"You have not submitd for this repo\");\n    }\n\n    if (submitExists.deleted_at) {\n      throw new ConflictException(\"You have already removed your submit\");\n    }\n\n    await this.repoSubmitRepository.softDelete(submitExists.id);\n\n    return submitExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SupabaseAuthDto.html":{"url":"classes/SupabaseAuthDto.html","title":"class - SupabaseAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SupabaseAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/supabase-auth-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                confirmed_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                created_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                    Optional\n                                last_sign_in_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updated_at\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        confirmed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Timestamp representing supabase user registration confirmation', example: '2016-10-19 13:24:51.000000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Timestamp representing supabase user creation', example: '2016-10-19 13:24:51.000000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Supabase authenticated user email', example: 'vortex@opensauced.pizza'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Supabase authenticated unique user identifier', example: 237133})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        last_sign_in_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Timestamp representing supabase user last sign in', example: '2016-10-19 13:24:51.000000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Supabase authenticated user role', example: 'authenticated'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Timestamp representing supabase user last update', example: '2016-10-19 13:24:51.000000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        user_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Supabase authenticated user login name', example: '0-vortex'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/supabase-auth-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\n\nexport class SupabaseAuthDto {\n  @ApiProperty({\n    description: \"Supabase authenticated unique user identifier\",\n    example: 237133,\n  })\n  readonly id: string;\n\n  @ApiPropertyOptional({\n    description: \"Supabase authenticated user login name\",\n    example: \"0-vortex\",\n  })\n  readonly user_name?: string;\n\n  @ApiPropertyOptional({\n    description: \"Supabase authenticated user role\",\n    example: \"authenticated\",\n  })\n  readonly role?: string;\n\n  @ApiPropertyOptional({\n    description: \"Supabase authenticated user email\",\n    example: \"vortex@opensauced.pizza\",\n  })\n  readonly email?: string;\n\n  @ApiPropertyOptional({\n    description: \"Timestamp representing supabase user registration confirmation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  readonly confirmed_at?: string;\n\n  @ApiPropertyOptional({\n    description: \"Timestamp representing supabase user last sign in\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  readonly last_sign_in_at?: string;\n\n  @ApiPropertyOptional({\n    description: \"Timestamp representing supabase user creation\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  readonly created_at?: string;\n\n  @ApiPropertyOptional({\n    description: \"Timestamp representing supabase user last update\",\n    example: \"2016-10-19 13:24:51.000000\",\n  })\n  readonly updated_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseGuard.html":{"url":"injectables/SupabaseGuard.html","title":"injectable - SupabaseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class SupabaseGuard extends AuthGuard(\"supabase\") {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseStrategy.html":{"url":"injectables/SupabaseStrategy.html","title":"injectable - SupabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/supabase.strategy.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(req: never)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(user: SupabaseAuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SupabaseAuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { SupabaseAuthStrategy, SupabaseAuthUser } from \"nestjs-supabase-auth\";\n\n@Injectable()\nexport class SupabaseStrategy extends PassportStrategy(\n  SupabaseAuthStrategy,\n  \"supabase\",\n) {\n  public constructor () {\n    super({\n      supabaseUrl: process.env.SUPABASE_URL,\n      supabaseKey: process.env.SUPABASE_API_KEY,\n      supabaseOptions: {},\n      supabaseJwtSecret: process.env.SUPABASE_JWT_SECRET,\n      extractor: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate (user: SupabaseAuthUser) {\n    return super.validate(user);\n  }\n\n  authenticate (req: never) {\n    super.authenticate(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VoteModule.html":{"url":"modules/VoteModule.html","title":"module - VoteModule","body":"\n                   \n\n\n\n\n    Modules\n    VoteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VoteModule\n\n\n\ncluster_VoteModule_exports\n\n\n\ncluster_VoteModule_providers\n\n\n\n\nVoteService \n\nVoteService \n\n\n\nVoteModule\n\nVoteModule\n\nVoteService  -->\n\nVoteModule->VoteService \n\n\n\n\n\nRepoService\n\nRepoService\n\nVoteModule -->\n\nRepoService->VoteModule\n\n\n\n\n\nVoteService\n\nVoteService\n\nVoteModule -->\n\nVoteService->VoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/vote/vote.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                        \n                            VoteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoVoteController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VoteService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { DbRepo } from \"../repo/entities/repo.entity\";\nimport { DbRepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\nimport { RepoService } from \"../repo/repo.service\";\nimport { VoteService } from \"./vote.service\";\nimport { RepoVoteController } from \"./repo-vote.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([\n    DbRepo,\n    DbRepoToUserVotes,\n  ])],\n  controllers: [RepoVoteController],\n  providers: [RepoService, VoteService],\n  exports: [VoteService],\n})\nexport class VoteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VoteService.html":{"url":"injectables/VoteService.html","title":"injectable - VoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vote/vote.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                downVoteByRepoId\n                            \n                            \n                                    Async\n                                voteByRepoId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoVoteRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/vote/vote.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoVoteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downVoteByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    downVoteByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        voteByRepoId\n                        \n                    \n                \n            \n            \n                \n                    \n                    voteByRepoId(repoId: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/vote/vote.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { DbRepoToUserVotes } from \"../repo/entities/repo.to.user.votes.entity\";\n\n@Injectable()\nexport class VoteService {\n  constructor (\n    @InjectRepository(DbRepoToUserVotes)\n    private repoVoteRepository: Repository,\n  ) {}\n\n  baseQueryBuilder () {\n    const builder = this.repoVoteRepository.createQueryBuilder(\"r2votes\")\n      .withDeleted();\n\n    return builder;\n  }\n\n  async voteByRepoId (repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2votes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2votes.user_id = :userId\", { userId });\n\n    const voteExists = await queryBuilder.getOne();\n\n    if (voteExists) {\n      if (!voteExists.deleted_at) {\n        throw new ConflictException(\"You have already voted for this repo\");\n      }\n\n      await this.repoVoteRepository.restore(voteExists.id);\n\n      return voteExists;\n    }\n\n    return this.repoVoteRepository.save({\n      repo_id: repoId,\n      user_id: userId,\n    });\n  }\n\n  async downVoteByRepoId (repoId: number, userId: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"r2votes.repo_id = :repoId\", { repoId })\n      .andWhere(\"r2votes.user_id = :userId\", { userId });\n\n    const voteExists = await queryBuilder.getOne();\n\n    if (!voteExists) {\n      throw new NotFoundException(\"You have not voted for this repo\");\n    }\n\n    if (voteExists.deleted_at) {\n      throw new ConflictException(\"You have already removed your vote\");\n    }\n\n    await this.repoVoteRepository.softDelete(voteExists.id);\n\n    return voteExists;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.9.0-beta.16 (2022-09-06)\n🍕 Features\n\nadd paginated contributions service (d2745ff)\n\n🧑‍💻 Code Refactoring\n\ncorrect controller function naming (0046b05)\nremove non-meta hidden properties from typeorm entity display (4601be2)\n\n🐛 Bug Fixes\n\ncorrectly hide api hidden model properties from typeorm select (8810e03)\nexclude generated temporary view from database visualisation (b457783)\n\n📝 Documentation\n\nimprove readme for first time users (f8c9324)\n\n🎨 Styles\n\ncorrect lint errors from writing too much manual stuff (2073883)\n\n1.9.0-beta.15 (2022-09-01)\n🐛 Bug Fixes\n\ncorrect repository service order 500 error (e5e2e03)\n\n🎨 Styles\n\ncorrect lint errors (4b264d5)\n\n1.9.0-beta.14 (2022-08-30)\n📝 Documentation\n\nupdate repo api model properties and hide soft delete tags for all entities (2bdec65)\n\n🧑‍💻 Code Refactoring\n\nadd Contribution api model properties (a08abfd)\nadd DbRepoToUserStargazers api model properties (247e0ba)\nadd DbRepoToUserStars api model properties (14b6a44)\nadd DbRepoToUserSubmissions api model properties (dbc66f3)\nadd DbRepoToUserVotes api model properties (d051987)\nadd User api model properties (618225f)\n\n🐛 Bug Fixes\n\ncorrect remaining dtos and auth controller return values (1bbeaf6)\n\n1.9.0-beta.13 (2022-08-29)\n🐛 Bug Fixes\n\ncorrect repo listing database relationship names (f29f5f2)\n\n🧑‍💻 Code Refactoring\n\nclean up repo controller extra decorators (3282435)\n\n🍕 Features\n\nadd list authenticated user stargazed repos (2a8d198)\nadd list authenticated user starred repos (f5f942f)\nadd list authenticated user submitted repos (334268d)\nadd list authenticated user voted repos (f96a793)\n\n1.9.0-beta.12 (2022-08-29)\n🤖 Build System\n\nupdate dependencies to latest non breaking versions (59dd7bf)\n\n🐛 Bug Fixes\n\ncorrect repo authenticated services return types (e42223f)\n\n🍕 Features\n\nadd is_accepted admin managed field to repo user submissions (b0169e7)\nadd submit repo authenticated feature (09c96fe), closes #21\nimplement eslint hot opensauced rules (e0d38ca)\n\n🧑‍💻 Code Refactoring\n\nimplement new eslint style changes (c8115b6)\n\n1.9.0-beta.11 (2022-08-28)\n🍕 Features\n\nadd star repo authenticated feature (e392288), closes #20\nadd stargaze repo authenticated feature (f8d41f1), closes #22\n\n🐛 Bug Fixes\n\ncorrect additional relation entities appearing in openapi schema (f4570c3)\ncorrect date type meta tags openapi types (860fff3)\nremove more relationship entities from openapi response schemas (d315ea4)\n\n🧑‍💻 Code Refactoring\n\nrename Contribution entity into DbContribution (3774b36)\nrename enum (b8b22da)\nrename Repo entity into DbRepo (f05c29c)\nrename RepoToUserStargazers entity into DbRepoToUserStargazers (867d740)\nrename RepoToUserStars entity into DbRepoToUserStars (d08b3ff)\nrename RepoToUserSubmissions entity into DbRepoToUserSubmissions (9484df4)\nrename RepoToUserVotes entity into DbRepoToUserVotes (61ac1e7)\nrename User entity into DbUser (04082d7)\n\n1.9.0-beta.10 (2022-08-26)\n🐛 Bug Fixes\n\nundo rogue controller route name change (6a4810f)\n\n1.9.0-beta.9 (2022-08-25)\n🐛 Bug Fixes\n\ncorrect repo contributions count (8952f19)\n\n1.9.0-beta.8 (2022-08-25)\n🐛 Bug Fixes\n\nmake order work for repo listing (69b2067)\n\n🎨 Styles\n\ncorrect lint errors from hasty push (fe20c2d)\n\n1.9.0-beta.7 (2022-08-25)\n📝 Documentation\n\nadd powered by digital ocean readme badge and referal link (5925b74)\n\n1.9.0-beta.6 (2022-08-25)\n🧑‍💻 Code Refactoring\n\ncode split repository entities (ae43450)\n\n🍕 Features\n\nadd repo up vote and down vote functionality (16678a7), closes #19\n\n1.9.0-beta.5 (2022-08-19)\n🔁 Continuous Integration\n\nattempt to push docr only on successful release (957b86e)\n\n1.9.0-beta.4 (2022-08-19)\n🔁 Continuous Integration\n\nimprove local development workflow along vite apps (b9f3798)\n\n1.9.0-beta.3 (2022-08-19)\n🐛 Bug Fixes\n\ncorrect counting of many to many tables (7249714)\n\n🧑‍💻 Code Refactoring\n\ncorrect stray console.log (b4c9879)\n\n1.9.0-beta.2 (2022-08-19)\n🔁 Continuous Integration\n\nonly deploy documentation on main branch (fad79b1), closes #14\n\n🍕 Features\n\nadd supabase auth session handler and working guards (ed9729a), closes #24\n\n1.9.0-beta.1 (2022-08-18)\n🍕 Features\n\nimplement simple supabase strategy guard (2f966a3)\n\n1.8.2 (2022-08-12)\n🐛 Bug Fixes\n\ncorrect ci release url docs (f0304d4)\n\n1.8.1 (2022-08-12)\n🔁 Continuous Integration\n\nimprove release urls (dd5e668)\n\n1.8.0 (2022-08-12)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\nupdate readme badges (17c54b9)\n\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\nadd get repository by id and full name (4552c66)\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.5 (2022-08-06)\n🍕 Features\n\nadd better swagger document links (eba258a), closes #18\n\n🤖 Build System\n\nupdate dependencies (62b3eea)\n\n1.8.0-beta.4 (2022-08-06)\n📝 Documentation\n\nadd deployment links and apidocs diagrams (d77ea52)\n\n1.8.0-beta.3 (2022-08-05)\n🍕 Features\n\nadd get repository by id and full name (4552c66)\n\n1.8.0-beta.2 (2022-08-05)\n🍕 Features\n\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n1.8.0-beta.1 (2022-07-30)\n📝 Documentation\n\nupdate readme badges (17c54b9)\n\n1.7.12 (2022-07-30)\n🐛 Bug Fixes\n\npush all tags to docr (a9e1df6)\n\n1.7.11 (2022-07-30)\n🔁 Continuous Integration\n\npush to digital ocean container registry (cd8f21d)\n\n1.7.10 (2022-07-30)\n🔁 Continuous Integration\n\ncorrect the digital ocean tagging (673dca9)\n\n1.7.9 (2022-07-30)\n✅ Tests\n\ncheck release job outputs (31e4d60)\n\n1.7.8 (2022-07-29)\n🔁 Continuous Integration\n\ncorrect environment variables (6d23c24)\n\n1.7.7 (2022-07-29)\n✅ Tests\n\nprint out proper pull request target env variables (20880c7)\n\n1.7.6 (2022-07-29)\n🔁 Continuous Integration\n\necho github context (7adfb6b)\n\n1.7.5 (2022-07-29)\n🔁 Continuous Integration\n\nprovide variable as ENV (b57f47b)\n\n1.7.4 (2022-07-29)\n🔁 Continuous Integration\n\nchange pull request event target (20bc1e7)\n\n1.7.3 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect digital ocean docker tag based on target (b1a67da)\n\n1.7.2 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect static domain and release clean up workflow (a229a3b)\nupdate dependencies and list docr tags (79bf61d)\n\n🔁 Continuous Integration\n\nadd docr push dry run (5eddeb1)\nadd release workflow concurrency for demo purposes (63d6a92)\nextend digital ocean temporary token (d0d5ca5)\ntest bash variable environment (e1fe498)\n\n1.7.1 (2022-07-27)\n🔁 Continuous Integration\n\ndeploy developer mkdocs to github pages test (8837b2a)\n\n1.7.0 (2022-07-27)\n📝 Documentation\n\nchange github pages deploy to take tech mkdocs instead of api (bc3a37d)\n\n1.6.17 (2022-07-24)\n🔁 Continuous Integration\n\nadd temporary debug logging (ba8dfbb)\n\n1.6.16 (2022-07-23)\n🔁 Continuous Integration\n\nproperly copy contents from mounted container volume (c013b70)\n\n1.6.15 (2022-07-23)\n🔁 Continuous Integration\n\ncreate new container from release (b1eda28)\n\n1.6.14 (2022-07-23)\n🔁 Continuous Integration\n\ntest file is generated properly (c127cea)\n\n🤖 Build System\n\nattempt docker inspection again (2c0b3d1)\n\n1.6.13 (2022-07-23)\n🔁 Continuous Integration\n\ntest proper container name exposing (cc46460)\n\n1.6.12 (2022-07-23)\n🔁 Continuous Integration\n\ntest local swagger spec (7e9b8a4)\n\n1.6.11 (2022-07-21)\n🔁 Continuous Integration\n\ntest getting docker process list output (f5385b3)\n\n1.6.10 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to get value from running container (911df68)\ntest accessing running container by re-creating (77c734c)\n\n1.6.9 (2022-07-21)\n🔁 Continuous Integration\n\nget container name from runner context (94ba4e1)\n\n1.6.8 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to assign docker service name to running container (fe4b9e9)\n\n1.6.7 (2022-07-21)\n✅ Tests\n\nmount docker service and volumes (0848443)\n\n1.6.6 (2022-07-21)\n✅ Tests\n\nload docker container from artifact (b7c3395)\n\n1.6.5 (2022-07-21)\n🐛 Bug Fixes\n\ncorrect docker local creation (cd306f8)\n\n1.6.4 (2022-07-21)\n✅ Tests\n\nload docker container in flight environment (e145e2d)\n\n1.6.3 (2022-07-20)\n🤖 Build System\n\nupdate deployment and add simple repo submission structure (33fea7e)\n\n1.6.2 (2022-07-19)\n🤖 Build System\n\nrevert to production release container (8aee8e5)\n\n1.6.1 (2022-07-19)\n🤖 Build System\n\nimprove swagger generation (22d3cc1)\n\n🐛 Bug Fixes\n\ncorrect workflow yaml comments (7fe63aa)\n\n1.6.0 (2022-07-19)\n🎨 Styles\n\nimplement correct eslint rules for immediate scoping (bd6d621), closes #1\n\n🍕 Features\n\nupdate dependencies and nest to stable new version (c24937f)\n\n🔁 Continuous Integration\n\nadd docker build and static swagger docs jobs (81e8bbc)\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n🤖 Build System\n\nadd better eslint baseline configuration (3918a78)\nadd minimal eslint configuration (a0db0aa)\nadd minor deployment improvements and github pages adjustments (cb83f9d)\nimplement prettier rules in typescript eslint (166050d)\n\n🐛 Bug Fixes\n\ncorrect release workflow artifact strategy (b5b6ac5)\ncorrect rogue workflow artifact (61b67d5)\n\n1.5.1 (2022-07-13)\n🔁 Continuous Integration\n\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n📦 0-vortex/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.5.0 (2022-06-21)\n🍕 Features\n\nimplement proper starsCount (fdc11ea)\nimplement proper votesCount (607cf5d)\n\n1.4.0 (2022-06-17)\n🍕 Features\n\nadd minimal pagination decorator (ac31556)\n\n1.3.0 (2022-06-10)\n🍕 Features\n\nadd abstract pagination component (630f3b5)\nadd repository relations and limit select (b4d3785)\n\n1.2.0 (2022-06-09)\n🍕 Features\n\nattach user relationship to get repos (e663170)\n\n1.1.0 (2022-06-07)\n🍕 Features\n\nadd basic tld entities (273f337)\n\n1.0.2 (2022-06-05)\n🤖 Build System\n\nadd supabase migration system (34d521d)\n\n1.0.1 (2022-06-05)\n✅ Tests\n\nverify database diagrams generation (73d1c74)\n\n1.0.0 (2022-06-05)\n🍕 Features\n\nadjust health checks endpoints (cb9206d)\ninitial commit (5e7c6c7)\n\n🐛 Bug Fixes\n\ncorrect npm scripts, workflow node versiond and update deps (2c0b15f)\nupdate nest typeorm integration and correct db status (58bf922)\n\n🔥 Performance Improvements\n\nremove minor version engines requirements (7db9008)\n\n✅ Tests\n\nexplain current test configuration and unblock pipelines (272c09a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/supabase-auth-response.dto.ts\n            \n            class\n            SupabaseAuthDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/supabase.guard.ts\n            \n            injectable\n            SupabaseGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.strategy.ts\n            \n            injectable\n            SupabaseStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/supabase.user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/supabase.user.decorator.ts\n            \n            variable\n            UserId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta-parameters.dto.ts\n            \n            interface\n            PageMetaParameters\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/dtos/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/endpoint.config.ts\n            \n            variable\n            getDomain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.entity.ts\n            \n            entity\n            DbContribution\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.service.ts\n            \n            injectable\n            ContributionService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/contribution/dtos/contribution-page-options.dto.ts\n            \n            class\n            ContributionPageOptionsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/contribution/repo-contributions.controller.ts\n            \n            controller\n            RepoContributionsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/dtos/repo-page-options.dto.ts\n            \n            class\n            RepoPageOptionsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.entity.ts\n            \n            entity\n            DbRepo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.stargazers.entity.ts\n            \n            entity\n            DbRepoToUserStargazers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.stars.entity.ts\n            \n            entity\n            DbRepoToUserStars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.submissions.entity.ts\n            \n            entity\n            DbRepoToUserSubmissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/entities/repo.to.user.votes.entity.ts\n            \n            entity\n            DbRepoToUserVotes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.controller.ts\n            \n            controller\n            RepoController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repo/repo.service.ts\n            \n            injectable\n            RepoService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/star/repo-star.controller.ts\n            \n            controller\n            RepoStarController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/star/star.service.ts\n            \n            injectable\n            StarService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/stargaze/repo-stargaze.controller.ts\n            \n            controller\n            RepoStargazeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/stargaze/stargaze.service.ts\n            \n            injectable\n            StargazeService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/submit/repo-submit.controller.ts\n            \n            controller\n            RepoSubmitController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/submit/submit.service.ts\n            \n            injectable\n            SubmitService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            DbUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/vote/repo-vote.controller.ts\n            \n            controller\n            RepoVoteController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/vote/vote.service.ts\n            \n            injectable\n            VoteService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContributionOrderFieldsEnum   (src/.../contribution-page-options.dto.ts)\n                        \n                        \n                            OrderDirectionEnum   (src/.../order-direction.constant.ts)\n                        \n                        \n                            RepoOrderFieldsEnum   (src/.../repo-page-options.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/contribution/dtos/contribution-page-options.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        ContributionOrderFieldsEnum\n                    \n                \n                        \n                            \n                                 count\n                            \n                        \n                        \n                            \n                                Value : count\n                            \n                        \n                        \n                            \n                                 last_merged_at\n                            \n                        \n                        \n                            \n                                Value : last_merged_at\n                            \n                        \n                        \n                            \n                                 created_at\n                            \n                        \n                        \n                            \n                                Value : created_at\n                            \n                        \n                        \n                            \n                                 updated_at\n                            \n                        \n                        \n                            \n                                Value : updated_at\n                            \n                        \n                        \n                            \n                                 contributor\n                            \n                        \n                        \n                            \n                                Value : contributor\n                            \n                        \n            \n        \n\n    src/common/constants/order-direction.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderDirectionEnum\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n    src/repo/dtos/repo-page-options.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        RepoOrderFieldsEnum\n                    \n                \n                        \n                            \n                                 issues\n                            \n                        \n                        \n                            \n                                Value : issues\n                            \n                        \n                        \n                            \n                                 stars\n                            \n                        \n                        \n                            \n                                Value : stars\n                            \n                        \n                        \n                            \n                                 watchers\n                            \n                        \n                        \n                            \n                                Value : watchers\n                            \n                        \n                        \n                            \n                                 subscribers\n                            \n                        \n                        \n                            \n                                Value : subscribers\n                            \n                        \n                        \n                            \n                                 created_at\n                            \n                        \n                        \n                            \n                                Value : created_at\n                            \n                        \n                        \n                            \n                                 updated_at\n                            \n                        \n                        \n                            \n                                Value : updated_at\n                            \n                        \n                        \n                            \n                                 name\n                            \n                        \n                        \n                            \n                                Value : name\n                            \n                        \n                        \n                            \n                                 contributionsCount\n                            \n                        \n                        \n                            \n                                Value : contributionsCount\n                            \n                        \n                        \n                            \n                                 votesCount\n                            \n                        \n                        \n                            \n                                Value : votesCount\n                            \n                        \n                        \n                            \n                                 submissionsCount\n                            \n                        \n                        \n                            \n                                Value : submissionsCount\n                            \n                        \n                        \n                            \n                                 stargazersCount\n                            \n                        \n                        \n                            \n                                Value : stargazersCount\n                            \n                        \n                        \n                            \n                                 starsCount\n                            \n                        \n                        \n                            \n                                Value : starsCount\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n  🍕 Open Sauced Nest Supabase API🍕\n  The path to your next Open Source contribution\n  \n  \n  \n\n\n\n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n🚀 Live release environments\n\napi.opensauced.pizza\nbeta.api.opensauced.pizza\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=16.7.0\nnpm>=8.0.0\ndocker>=20.10.12\nsupabase>=0.18.0\n\n🖥️ Local development\nTo install the application:\nnpm ciTo start a local copy of the app on port 3001:\nnpm run start:dev🧪 Test\nFor running the test suite, use the following command. Since the tests run in watch mode by default, some users may encounter errors about too many files being open. In this case, it may be beneficial to install watchman.\nnpm testYou can request a coverage report by running the following command:\nnpm run test:coverageFor writing tests, the rule is move business or service logic to the lib folder and write unit tests. Logic that needs to be in a React component, then leverage tools like Cypress or Vitest mocking to write tests.\n📦 Docker builds\nA development preview can also be run from docker:\ndocker build -t api.opensauced.pizza .\ndocker run -p 8080:3001 api.opensauced.pizzaAlternatively you can pull the production container and skip all builds:\ndocker run -dit -p 8080:3001 ghcr.io/open-sauced/api.opensauced.pizza🎨 Code linting\nTo check the code and styles quality, use the following command:\nnpm run lintThis will also display during development, but not break on errors.\nTo fix the linting errors, use the following command:\nnpm run formatIt is advised to run this command before committing or opening a pull request.\n📕 Types\nWe have a couple of scripts to check and adjust missing types.\nIn order to dry run what types would be added to package.json:\nnpm run types:auto-check In order to add any missing types to package.json:\nnpm run types:auto-add🚀 Production deployment\nA production deployment is a complete build of the project, including the build of the static assets.\nnpm run build🔑 Database commands\nThe API is configured to connect to a local Docker backed PostGres instance however \nyou can also connect to a remote Supabase instance by logging in via the UI and \ncopying the connection string from the settings page.\nManaging supabase migrations\nFirst thing we have to do for local development is start the studio locally at localhost:54321:\nnpm run db:startMake changes\nIf we are adding a new table structure, first do it visually in the Supabase Studio and test locally.\nCheck the migration difference with the following command:\nnpm run db:changesIf everything is fine we can run the following command to apply the changes to the database:\nnpm run db:commit add_table_nameTest changes\nSimplest way to test the migrations are working is to reset the local database:\nnpm run db:resetPush changes\nIf everything is fine we can push the changes to the remote database:\nnpm run db:push🔑 Supabase structure\nClick the image to see the schema diagram full documentation.\n\n🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\nBelow is visual representation of our code repository. It is generated by Octo Repo Visualizer.\nThis visualization is being updated on release to our default branch by our release workflow.\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContributionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StargazeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubmitModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VoteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ContributionModule\n\n\n\ncluster_ContributionModule_exports\n\n\n\ncluster_ContributionModule_providers\n\n\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_StargazeModule\n\n\n\ncluster_StargazeModule_exports\n\n\n\ncluster_StargazeModule_providers\n\n\n\ncluster_StarModule\n\n\n\ncluster_StarModule_exports\n\n\n\ncluster_StarModule_providers\n\n\n\ncluster_SubmitModule\n\n\n\ncluster_SubmitModule_exports\n\n\n\ncluster_SubmitModule_providers\n\n\n\ncluster_VoteModule\n\n\n\ncluster_VoteModule_exports\n\n\n\ncluster_VoteModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nSupabaseGuard \n\nSupabaseGuard \n\nSupabaseGuard  -->\n\nAuthModule->SupabaseGuard \n\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nContributionModule\n\nContributionModule\n\nAppModule -->\n\nContributionModule->AppModule\n\n\n\n\n\nContributionService \n\nContributionService \n\nContributionService  -->\n\nContributionModule->ContributionService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nStarModule\n\nStarModule\n\nAppModule -->\n\nStarModule->AppModule\n\n\n\n\n\nStarService \n\nStarService \n\nStarService  -->\n\nStarModule->StarService \n\n\n\n\n\nStargazeModule\n\nStargazeModule\n\nAppModule -->\n\nStargazeModule->AppModule\n\n\n\n\n\nStargazeService \n\nStargazeService \n\nStargazeService  -->\n\nStargazeModule->StargazeService \n\n\n\n\n\nSubmitModule\n\nSubmitModule\n\nAppModule -->\n\nSubmitModule->AppModule\n\n\n\n\n\nSubmitService \n\nSubmitService \n\nSubmitService  -->\n\nSubmitModule->SubmitService \n\n\n\n\n\nVoteModule\n\nVoteModule\n\nAppModule -->\n\nVoteModule->AppModule\n\n\n\n\n\nVoteService \n\nVoteService \n\nVoteService  -->\n\nVoteModule->VoteService \n\n\n\n\n\nSupabaseGuard\n\nSupabaseGuard\n\nAuthModule -->\n\nSupabaseGuard->AuthModule\n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\nContributionService\n\nContributionService\n\nContributionModule -->\n\nContributionService->ContributionModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nContributionModule -->\n\nRepoService->ContributionModule\n\n\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\nStarModule -->\n\nRepoService->StarModule\n\n\n\nStargazeModule -->\n\nRepoService->StargazeModule\n\n\n\nSubmitModule -->\n\nRepoService->SubmitModule\n\n\n\nVoteModule -->\n\nRepoService->VoteModule\n\n\n\n\n\nStargazeService\n\nStargazeService\n\nStargazeModule -->\n\nStargazeService->StargazeModule\n\n\n\n\n\nStarService\n\nStarService\n\nStarModule -->\n\nStarService->StarModule\n\n\n\n\n\nSubmitService\n\nSubmitService\n\nSubmitModule -->\n\nSubmitService->SubmitModule\n\n\n\n\n\nVoteService\n\nVoteService\n\nVoteModule -->\n\nVoteService->VoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.9.0-beta.16\n        \n            Description : API dot Open Sauced is NestJS and SupaBase powered OAS3 backend designed to remove client complexity and provide a structured graph of all @open-sauced integrations\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/api.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/api.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/api.opensauced.pizza.git\n        \n            Author : TED Vortex \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SupabaseAuthRequest   (src/.../supabase.user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/supabase.user.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    SupabaseAuthRequest\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            getDomain   (src/.../endpoint.config.ts)\n                        \n                        \n                            User   (src/.../supabase.user.decorator.ts)\n                        \n                        \n                            UserId   (src/.../supabase.user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (model: TModel) => applyDecorators(\n  ApiExtraModels(PageDto, model),\n  ApiOkResponse({\n    description: \"Successfully received model list\",\n    schema: {\n      allOf: [\n        { $ref: getSchemaPath(PageDto) },\n        {\n          properties: {\n            data: {\n              type: \"array\",\n              items: { $ref: getSchemaPath(model) },\n            },\n          },\n        },\n      ],\n    },\n  }),\n)\n                    \n                \n\n\n        \n    \n\n    src/config/endpoint.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (subdomain?: string) =>\n  new URL(`https://${subdomain ? `${subdomain}.` : \"\"}${process.env.DOMAIN ?? \"opensauced.pizza\"}`).toString()\n                    \n                \n\n\n        \n    \n\n    src/auth/supabase.user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.user?.user_metadata.sub as string;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
