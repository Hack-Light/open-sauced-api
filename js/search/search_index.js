var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.327,1,1.996]],["body/modules/AppModule.html",[0,1.696,1,3.601,2,1.343,3,2.281,4,2.406,5,2.406,6,3.079,7,0.036,8,3.079,9,2.551,10,1.643,11,1.343,12,0.468,13,0.417,14,0.369,15,2.901,16,2.931,17,0.997,18,1.221,19,2.406,20,2.081,21,4.029,22,4.148,23,2.406,24,4.029,25,2.901,26,3.342,27,2.081,28,2.901,29,2.901,30,2.901,31,4.629,32,1.017,33,2.901,34,4.029,35,2.901,36,4.029,37,2.901,38,4.029,39,2.901,40,2.901,41,0.888,42,2.081,43,1.177,44,1.481,45,2.057,46,2.406,47,2.057,48,2.406,49,2.057,50,2.406,51,2.057,52,2.406,53,2.057,54,2.406,55,2.901,56,2.406,57,2.901,58,2.406,59,2.901,60,2.901,61,0.522,62,2.901,63,2.901,64,2.901,65,2.901,66,2.901,67,2.901,68,2.901,69,2.901,70,2.901,71,1.837,72,2.901,73,2.901,74,2.551,75,0.929,76,2.901,77,2.901,78,1.481,79,2.081,80,0.468,81,0.279,82,2.406,83,0.023,84,0.023]],["title/modules/AuthModule.html",[0,1.327,85,1.996]],["body/modules/AuthModule.html",[0,2.115,2,1.878,3,2.845,7,0.035,9,3.181,10,2.298,11,1.878,12,0.655,13,0.584,14,0.516,16,2.57,17,0.88,18,1.709,79,3.603,80,0.655,81,0.39,83,0.028,84,0.028,85,3.832,86,3.366,87,3.366,88,3.366,89,3.548,90,4.058,91,4.167,92,4.058,93,5.023,94,3.366]],["title/entities/Contribution.html",[45,1.609,95,0.695]],["body/entities/Contribution.html",[7,0.036,12,0.396,13,0.352,14,0.312,17,0.577,32,0.859,41,1.223,42,1.758,45,1.824,61,1.084,74,2.263,75,0.785,80,0.396,81,0.235,83,0.02,84,0.02,95,0.788,96,2.033,97,0.352,98,0.952,99,4.217,100,4.217,101,1.951,102,1.951,103,1.726,104,4.217,105,2.79,106,1.951,107,3.498,108,2.624,109,1.648,110,3.533,111,3.844,112,3.844,113,3.844,114,3.844,115,1.368,116,2.451,117,1.646,118,3.323,119,1.974,120,2.023,121,2.451,122,2.518,123,1.134,124,2.518,125,2.291,126,2.518,127,2.518,128,2.144,129,2.451,130,1.134,131,2.451,132,1.758,133,2.451,134,2.451,135,1.251,136,2.451,137,1.824,138,2.451,139,2.563,140,2.451,141,1.134,142,2.451,143,2.451,144,2.38,145,2.563,146,1.758,147,1.824,148,1.824,149,1.654,150,1.654,151,1.654,152,0.952,153,1.758,154,1.552,155,1.758,156,2.451]],["title/controllers/HealthController.html",[157,1.785,158,1.996]],["body/controllers/HealthController.html",[7,0.036,12,0.485,13,0.432,14,0.382,17,0.819,18,1.265,22,3.911,23,2.493,27,2.155,71,1.903,78,1.534,80,0.485,81,0.289,83,0.023,84,0.023,97,0.432,109,1.206,115,1.002,157,1.702,158,2.614,159,2.493,160,2.493,161,3.424,162,2.614,163,3.9,164,4.211,165,5.076,166,3.005,167,3.005,168,2.614,169,3.424,170,3.005,171,3.005,172,4.128,173,4.128,174,4.128,175,4.715,176,4.128,177,4.128,178,3.382,179,2.493,180,1.702,181,3.005,182,3.005,183,1.702,184,4.56,185,3.005,186,3.005,187,3.005,188,1.702,189,3.005,190,2.107,191,4.128,192,3.005,193,3.005,194,3.005,195,3.005,196,3.005,197,3.005,198,4.128,199,3.005,200,3.424,201,3.005,202,3.005,203,3.005,204,3.005,205,3.005,206,3.005,207,3.005,208,3.005,209,3.005,210,3.005,211,3.005,212,3.005,213,3.005,214,3.005,215,3.005]],["title/modules/HealthModule.html",[0,1.327,6,1.785]],["body/modules/HealthModule.html",[0,2.227,2,2.045,6,2.996,7,0.035,12,0.713,13,0.635,14,0.562,16,2.798,17,0.914,18,1.86,26,4.389,27,3.169,78,2.701,80,0.713,81,0.424,83,0.03,84,0.03,158,3.586,216,4.419,217,4.419]],["title/classes/PageDto.html",[81,0.303,218,1.785]],["body/classes/PageDto.html",[7,0.036,12,0.55,13,0.49,14,0.433,17,0.862,58,3.728,61,1.046,80,0.55,81,0.483,83,0.025,84,0.025,97,0.49,98,1.198,109,1.313,115,1.22,152,0.909,180,1.931,183,1.931,188,3.23,218,2.545,219,2.159,220,2.828,221,4.607,222,4.171,223,4.494,224,5.554,225,3.342,226,4.494,227,1.931,228,1.741,229,3.409,230,3.409,231,3.409,232,3.409,233,3.409,234,3.409,235,4.17,236,5.027,237,5.027,238,2.828,239,2.445,240,2.828,241,2.828,242,3.409,243,2.828,244,3.409,245,3.409]],["title/classes/PageMetaDto.html",[81,0.303,225,1.785]],["body/classes/PageMetaDto.html",[7,0.036,12,0.489,13,0.436,14,0.385,17,0.67,61,1.016,80,0.489,81,0.291,83,0.023,84,0.023,97,0.436,98,1.107,109,1.611,115,1.37,117,1.84,152,0.808,180,1.717,183,2.352,188,3.504,219,1.92,222,2.175,225,2.352,227,1.717,228,1.548,235,5.014,239,3.654,246,3.64,247,2.515,248,4.737,249,4.737,250,4.428,251,4.737,252,3.397,253,3.032,254,4.227,255,4.153,256,3.654,257,3.032,258,3.032,259,3.032,260,3.032,261,3.032,262,3.032,263,1.548,264,3.93,265,3.032,266,2.979,267,3.445,268,3.032,269,2.175,270,3.032,271,3.032,272,3.032,273,3.032,274,3.032]],["title/classes/PageOptionsDto.html",[81,0.303,263,1.609]],["body/classes/PageOptionsDto.html",[7,0.036,12,0.476,13,0.425,14,0.375,17,0.813,61,0.984,80,0.476,81,0.449,83,0.023,84,0.023,97,0.425,98,1.087,109,1.365,115,1.223,117,1.794,119,2.225,180,1.672,188,3.283,190,1.507,219,1.87,228,2.791,238,2.449,239,3.35,241,2.449,246,3.348,252,3.35,263,2.082,264,2.449,266,4.157,267,2.449,269,3.613,275,2.449,276,4.208,277,4.078,278,4.671,279,2.958,280,4.671,281,2.952,282,4.078,283,2.952,284,2.952,285,4.078,286,2.952,287,2.952,288,4.078,289,4.078,290,2.952,291,2.952,292,2.952,293,2.952,294,5.038,295,2.952,296,4.671,297,5.038,298,2.952,299,2.952,300,2.952,301,2.952,302,2.952,303,4.078,304,4.078,305,2.952]],["title/entities/Repo.html",[41,0.695,95,0.695]],["body/entities/Repo.html",[7,0.036,12,0.244,13,0.218,14,0.192,17,0.719,32,0.531,41,0.543,43,1.403,44,0.773,45,2.159,46,1.256,47,2.451,49,2.451,51,2.451,53,2.451,61,1.092,74,2.271,75,0.485,80,0.244,81,0.145,83,0.014,84,0.014,95,0.543,97,0.218,98,0.656,101,1.44,102,1.44,103,1.383,106,1.44,107,2.582,108,2.917,109,1.69,110,3.694,111,4.094,112,4.094,113,4.094,114,3.507,115,1.403,117,1.649,118,3.54,119,2.113,120,2.63,122,2.284,123,0.701,124,2.284,125,2.078,126,2.284,127,2.284,128,1.957,130,0.701,132,1.086,135,0.773,137,1.257,139,1.766,141,0.701,144,2.461,145,1.766,146,1.086,147,1.257,148,1.257,149,1.14,150,1.14,151,1.14,152,1.127,153,2.232,154,0.959,155,1.086,256,1.766,306,1.256,307,2.232,308,3.112,309,3.112,310,3.112,311,3.112,312,3.112,313,1.762,314,3.112,315,3.585,316,3.112,317,2.234,318,3.112,319,3.272,320,2.463,321,1.514,322,1.514,323,1.514,324,1.514,325,1.514,326,1.514,327,1.514,328,1.256,329,1.514,330,1.514,331,3.585,332,1.514,333,2.463,334,1.514,335,1.514,336,1.514,337,1.514,338,2.463,339,1.514,340,2.463,341,1.514,342,2.463,343,1.514,344,2.463,345,1.514,346,1.514,347,1.514,348,1.514,349,1.514,350,1.514,351,1.514,352,1.514,353,1.514,354,3.507,355,1.514,356,1.514,357,1.514,358,1.514,359,0.959,360,0.857,361,0.773,362,1.256,363,1.514,364,1.514]],["title/controllers/RepoController.html",[157,1.785,365,1.996]],["body/controllers/RepoController.html",[7,0.036,12,0.43,13,0.383,14,0.339,17,0.879,18,1.122,41,1.314,61,1.001,78,1.361,80,0.43,81,0.256,82,2.211,83,0.021,84,0.021,97,0.383,103,1.549,108,2.997,109,1.292,115,1.073,117,1.415,152,1.178,157,1.509,160,2.211,162,2.404,163,3.587,168,2.799,178,3.454,179,2.211,180,1.509,188,1.509,190,2.257,218,1.509,227,2.503,228,2.257,263,2.701,359,1.688,365,2.404,366,2.211,367,4.223,368,4.223,369,4.42,370,2.211,371,2.665,372,4.817,373,4.817,374,2.665,375,3.795,376,4.223,377,2.665,378,4.389,379,2.211,380,2.665,381,3.995,382,2.665,383,2.665,384,2.665,385,2.665,386,2.665,387,2.665,388,2.665,389,2.665,390,3.795,391,2.257,392,2.211,393,1.233,394,4.42,395,4.42,396,2.211,397,2.211,398,2.211,399,1.911,400,2.665,401,1.911,402,2.665,403,2.665,404,2.665,405,2.665,406,3.795,407,4.42,408,2.665,409,2.665,410,2.665,411,2.665,412,2.665,413,2.665,414,2.665,415,2.665,416,2.665]],["title/modules/RepoModule.html",[0,1.327,8,1.785]],["body/modules/RepoModule.html",[0,2.061,2,1.802,3,2.772,7,0.035,8,3.396,9,3.1,10,2.205,11,1.802,12,0.628,13,0.56,14,0.495,16,2.466,17,0.934,18,1.639,19,3.23,20,2.792,41,0.858,78,2.499,79,3.511,80,0.628,81,0.374,83,0.027,84,0.027,91,4.061,365,3.391,391,3.181,392,3.23,393,1.802,417,3.23,418,3.23,419,3.23,420,3.894,421,3.894,422,3.894]],["title/injectables/RepoService.html",[391,1.609,423,1.785]],["body/injectables/RepoService.html",[7,0.036,12,0.408,13,0.364,14,0.322,17,0.865,18,1.065,20,1.814,32,0.886,41,1.037,43,0.739,61,0.846,75,0.81,80,0.408,81,0.243,83,0.021,84,0.021,97,0.364,103,1.504,108,2.944,115,1.211,117,1.374,152,1.386,153,1.814,162,2.315,163,3.542,168,2.978,183,2.07,184,2.098,190,2.401,218,1.432,225,2.663,227,2.663,228,2.401,240,2.098,250,3.032,263,2.737,367,3.032,368,3.032,370,3.032,376,3.561,378,4.313,379,3.032,381,2.098,391,1.866,393,1.171,396,3.032,397,2.098,398,2.098,423,2.07,424,1.814,425,2.098,426,4.703,427,4.293,428,2.53,429,2.978,430,2.53,431,3.656,432,2.53,433,2.53,434,2.53,435,2.53,436,2.53,437,2.53,438,2.53,439,2.53,440,2.53,441,2.53,442,2.53,443,2.53,444,2.098,445,2.53,446,2.098,447,2.53,448,2.098,449,2.53,450,2.098,451,5.489,452,5.199,453,4.293,454,2.53,455,5.199,456,4.703,457,3.656,458,3.656,459,2.663,460,2.53,461,2.53,462,2.53,463,2.53,464,2.53,465,2.53,466,2.53,467,2.53,468,2.53,469,2.53]],["title/entities/RepoToUserStargazers.html",[53,1.609,95,0.695]],["body/entities/RepoToUserStargazers.html",[7,0.036,12,0.421,13,0.375,14,0.332,17,0.705,32,0.914,41,1.242,43,1.647,44,1.332,53,1.908,61,1.041,75,0.835,80,0.421,81,0.25,83,0.021,84,0.021,95,0.824,97,0.375,98,0.996,101,2.207,102,2.021,103,2.028,105,2.473,106,2.021,109,1.617,115,1.343,117,1.682,119,1.831,122,2.431,123,1.207,124,2.431,125,2.212,126,2.431,127,2.431,128,2.207,130,1.207,135,1.908,137,2.435,141,1.207,144,2.336,147,2.23,148,2.23,149,1.729,150,1.729,151,1.729,152,1.164,317,2.473,360,1.477,361,1.332,393,1.207,450,2.163,470,2.163,471,3.387,472,2.608,473,2.608,474,2.766,475,2.608,476,2.608,477,2.608,478,2.608,479,2.608,480,2.608,481,2.608,482,2.608,483,2.608,484,2.608]],["title/entities/RepoToUserStars.html",[49,1.609,95,0.695]],["body/entities/RepoToUserStars.html",[7,0.036,12,0.421,13,0.375,14,0.332,17,0.705,32,0.914,41,1.242,43,1.647,44,1.332,49,1.908,61,1.041,75,0.835,80,0.421,81,0.25,83,0.021,84,0.021,95,0.824,97,0.375,98,0.996,101,2.207,102,2.021,103,2.028,105,2.473,106,2.021,109,1.617,115,1.343,117,1.682,119,1.831,122,2.431,123,1.207,124,2.431,125,2.212,126,2.431,127,2.431,128,2.207,130,1.207,135,1.908,137,2.435,141,1.207,144,2.336,147,2.23,148,2.23,149,1.729,150,1.729,151,1.729,152,1.164,317,2.473,360,1.477,361,1.332,393,1.207,446,2.163,471,3.387,474,2.766,485,2.163,486,2.608,487,2.608,488,2.608,489,2.608,490,2.608,491,2.608,492,2.608,493,2.608,494,2.608,495,2.608,496,2.608,497,2.608]],["title/entities/RepoToUserSubmissions.html",[51,1.609,95,0.695]],["body/entities/RepoToUserSubmissions.html",[7,0.036,12,0.421,13,0.375,14,0.332,17,0.705,32,0.914,41,1.242,43,1.647,44,1.332,51,1.908,61,1.041,75,0.835,80,0.421,81,0.25,83,0.021,84,0.021,95,0.824,97,0.375,98,0.996,101,2.207,102,2.021,103,2.028,105,2.473,106,2.021,109,1.617,115,1.343,117,1.682,119,1.831,122,2.431,123,1.207,124,2.431,125,2.212,126,2.431,127,2.431,128,2.207,130,1.207,135,1.908,137,2.435,141,1.207,144,2.336,147,2.23,148,2.23,149,1.729,150,1.729,151,1.729,152,1.164,317,2.473,360,1.477,361,1.332,393,1.207,448,2.163,471,3.387,474,2.766,498,2.163,499,2.608,500,2.608,501,2.608,502,2.608,503,2.608,504,2.608,505,2.608,506,2.608,507,2.608,508,2.608,509,2.608,510,2.608]],["title/entities/RepoToUserVotes.html",[47,1.609,95,0.695]],["body/entities/RepoToUserVotes.html",[7,0.036,12,0.421,13,0.375,14,0.332,17,0.705,32,0.914,41,1.242,43,1.647,44,1.332,47,1.908,61,1.041,75,0.835,80,0.421,81,0.25,83,0.021,84,0.021,95,0.824,97,0.375,98,0.996,101,2.207,102,2.021,103,2.028,105,2.473,106,2.021,109,1.617,115,1.343,117,1.682,119,1.831,122,2.431,123,1.207,124,2.431,125,2.212,126,2.431,127,2.431,128,2.207,130,1.207,135,1.908,137,2.435,141,1.207,144,2.336,147,2.23,148,2.23,149,1.729,150,1.729,151,1.729,152,1.164,317,2.473,360,1.477,361,1.332,393,1.207,444,2.163,471,3.387,474,2.766,511,2.163,512,2.608,513,2.608,514,2.608,515,2.608,516,2.608,517,2.608,518,2.608,519,2.608,520,2.608,521,2.608,522,2.608,523,2.608]],["title/injectables/SupabaseStrategy.html",[89,1.785,423,1.785]],["body/injectables/SupabaseStrategy.html",[7,0.036,12,0.58,13,0.516,14,0.457,17,0.911,18,1.512,43,1.05,61,0.646,80,0.58,81,0.345,83,0.026,84,0.026,89,2.633,94,2.979,97,0.516,115,1.128,152,0.957,154,2.275,162,2.944,163,3.265,168,2.275,169,2.979,183,2.92,190,1.834,227,2.034,228,1.834,423,2.633,424,2.576,471,2.633,524,2.979,525,4.65,526,3.592,527,4.65,528,5.452,529,3.592,530,4.65,531,3.592,532,3.592,533,3.592,534,4.65,535,2.979,536,2.944,537,3.592,538,3.592,539,3.592,540,3.592,541,3.592,542,3.592,543,3.592,544,3.592,545,3.592,546,3.592,547,3.592,548,3.592,549,3.592,550,3.592,551,3.592,552,2.979,553,3.592]],["title/entities/User.html",[43,0.921,95,0.695]],["body/entities/User.html",[7,0.036,12,0.359,13,0.32,14,0.283,17,0.802,32,0.781,41,1.095,42,1.597,43,0.973,47,2.763,48,1.848,49,2.763,50,1.848,51,2.763,52,1.848,53,2.763,54,1.848,61,1.063,74,3.146,75,0.713,80,0.359,81,0.214,83,0.019,84,0.019,95,0.734,97,0.32,98,0.887,101,1.845,102,1.845,103,1.397,106,1.845,109,1.674,110,1.597,115,1.39,117,1.416,118,2.388,119,2.078,120,1.885,122,2.299,123,1.031,124,2.299,125,2.092,126,2.299,127,2.299,128,2.047,130,1.031,132,1.597,141,1.031,144,2.191,145,2.388,146,1.597,149,1.541,150,1.541,151,1.541,152,0.594,154,1.411,155,1.597,256,3.563,319,3.928,328,3.307,354,4.121,359,2.525,554,1.848,555,3.987,556,3.987,557,3.987,558,3.987,559,2.227,560,2.227,561,2.227,562,2.227,563,2.227,564,2.227,565,2.227,566,3.33,567,2.227,568,3.33,569,2.227,570,3.33,571,2.227,572,3.33,573,2.227,574,3.33,575,2.227,576,2.227,577,2.227]],["title/changelog.html",[578,1.679,579,1.901,580,2.199]],["body/changelog.html",[3,1.26,7,0.035,11,0.62,14,0.363,32,0.78,41,0.295,43,0.391,56,1.846,71,0.848,75,0.712,83,0.012,84,0.012,103,0.469,120,0.758,139,0.96,152,0.887,161,1.111,164,1.846,252,0.96,266,0.96,269,1.596,279,0.848,359,0.848,429,1.41,459,1.26,536,0.848,552,1.846,578,0.848,580,1.846,581,0.848,582,1.339,583,2.226,584,1.846,585,1.846,586,2.226,587,2.369,588,1.111,589,5.01,590,2.226,591,3.693,592,4.59,593,5.225,594,1.111,595,1.339,596,1.339,597,3.693,598,1.339,599,1.339,600,1.339,601,1.339,602,2.226,603,1.339,604,2.226,605,1.339,606,5.909,607,3.693,608,1.41,609,3.985,610,1.339,611,1.339,612,1.339,613,1.339,614,4.224,615,4.224,616,2.369,617,2.226,618,2.856,619,1.339,620,1.339,621,5.51,622,5.553,623,3.328,624,3.328,625,4.858,626,1.339,627,1.339,628,1.339,629,4.858,630,1.339,631,1.339,632,1.339,633,4.224,634,1.111,635,3.306,636,1.339,637,1.339,638,1.339,639,1.339,640,4.224,641,2.856,642,1.596,643,1.339,644,1.339,645,1.339,646,2.226,647,2.856,648,2.226,649,1.339,650,1.339,651,1.339,652,3.328,653,2.226,654,1.339,655,1.339,656,1.111,657,1.846,658,1.339,659,1.339,660,2.226,661,1.111,662,1.339,663,1.339,664,4.59,665,1.339,666,1.339,667,1.339,668,1.339,669,2.226,670,1.339,671,1.339,672,1.339,673,3.985,674,1.339,675,1.846,676,1.339,677,1.339,678,1.111,679,1.339,680,1.339,681,1.339,682,1.339,683,1.339,684,1.339,685,2.226,686,1.339,687,1.339,688,3.668,689,1.339,690,1.339,691,1.339,692,2.226,693,3.328,694,1.339,695,2.226,696,2.856,697,1.339,698,1.339,699,1.339,700,1.339,701,0.96,702,1.339,703,1.339,704,1.339,705,1.339,706,1.339,707,1.339,708,1.339,709,3.693,710,2.226,711,1.111,712,1.339,713,1.339,714,1.339,715,1.339,716,1.339,717,1.339,718,1.339,719,1.339,720,1.339,721,1.339,722,4.224,723,4.224,724,2.856,725,1.339,726,1.339,727,1.339,728,1.339,729,1.339,730,1.339,731,1.339,732,1.846,733,2.856,734,1.339,735,1.339,736,1.339,737,4.59,738,1.339,739,1.339,740,1.339,741,1.339,742,2.856,743,1.339,744,1.339,745,1.339,746,1.339,747,1.339,748,1.339,749,1.339,750,1.339,751,1.339,752,1.339,753,1.339,754,1.339,755,1.339,756,1.339,757,1.339,758,1.339,759,2.856,760,1.339,761,1.339,762,1.339,763,1.339,764,1.339,765,1.339,766,1.339,767,1.339,768,1.339,769,2.226,770,1.339,771,1.339,772,1.111,773,1.339,774,1.339,775,2.856,776,1.339,777,1.339,778,1.339,779,1.339,780,1.339,781,2.226,782,1.339,783,1.339,784,1.339,785,1.339,786,1.339,787,1.339,788,3.328,789,3.328,790,2.226,791,1.339,792,1.339,793,1.339,794,1.846,795,1.339,796,1.846,797,1.339,798,1.339,799,1.339,800,1.339,801,2.226,802,2.226,803,2.226,804,1.846,805,2.226,806,1.339,807,1.339,808,2.856,809,1.339,810,2.226,811,1.339,812,2.226,813,2.226,814,1.339,815,1.339,816,1.339,817,1.339,818,1.339,819,1.339,820,1.339,821,1.339,822,1.339,823,1.339,824,1.339,825,1.339,826,4.422,827,1.339,828,1.339,829,1.339,830,1.339,831,1.339,832,1.339,833,2.226,834,1.339,835,1.339,836,1.339,837,1.339,838,1.339,839,1.339,840,1.339,841,1.339,842,1.339,843,1.339,844,1.339,845,1.339,846,1.339,847,1.339,848,1.339,849,1.339,850,1.339,851,1.339,852,1.339,853,1.111,854,1.339,855,1.339,856,1.339,857,1.339,858,1.339,859,1.339,860,1.339,861,1.339,862,1.339,863,1.339,864,1.339,865,1.339,866,1.339,867,1.111,868,1.339,869,1.339,870,1.339,871,1.339,872,1.339,873,1.339,874,1.339,875,1.339,876,1.339,877,1.111,878,1.339,879,1.339,880,1.339,881,1.339,882,1.339,883,1.339,884,1.339,885,1.339]],["title/coverage.html",[886,3.537]],["body/coverage.html",[7,0.035,14,0.442,41,0.767,43,1.017,45,1.777,47,1.777,49,1.777,51,1.777,53,1.777,61,0.626,81,0.488,83,0.026,84,0.026,89,1.971,95,1.288,96,2.887,120,3.546,157,2.579,158,2.204,159,2.887,218,1.971,220,2.887,225,1.971,246,2.885,247,2.887,263,1.777,275,2.887,306,2.887,365,2.204,366,2.887,391,1.777,399,2.496,401,2.496,423,2.579,425,2.887,459,1.971,470,2.887,485,2.887,498,2.887,511,2.887,524,2.887,554,2.887,608,2.204,657,3.778,886,2.887,887,3.48,888,3.48,889,4.555,890,2.887,891,2.887,892,6.05,893,3.48,894,5.078,895,2.887,896,2.887,897,2.887,898,3.48,899,2.887,900,3.48,901,3.48,902,2.887]],["title/miscellaneous/enumerations.html",[903,1.116,904,3.136]],["body/miscellaneous/enumerations.html",[7,0.034,83,0.031,84,0.031,97,0.675,276,3.934,279,3.474,361,2.8,362,4.55,903,1.977,904,3.896,905,4.697,906,4.697]],["title/miscellaneous/functions.html",[903,1.116,907,3.136]],["body/miscellaneous/functions.html",[7,0.031,83,0.031,84,0.031,97,0.692,897,3.994,899,4.868,903,2.027,907,3.994,908,4.815]],["title/index.html",[97,0.381,578,1.679,579,1.901]],["body/index.html",[7,0.034,10,1.82,11,1.487,13,0.462,45,1.641,71,3.305,83,0.024,84,0.024,200,2.666,276,2.305,313,1.82,429,2.035,459,1.82,536,3.305,581,3.449,584,4.517,585,2.666,594,2.666,608,2.035,616,2.666,634,3.584,635,3.584,678,4.753,688,3.584,701,2.305,732,3.584,772,3.584,794,2.666,853,2.666,867,4.517,902,2.666,909,3.743,910,3.214,911,3.214,912,3.214,913,3.214,914,3.214,915,3.214,916,3.214,917,4.049,918,2.666,919,3.214,920,3.214,921,4.32,922,3.214,923,3.214,924,3.214,925,3.214,926,3.214,927,3.214,928,3.214,929,4.881,930,4.32,931,3.214,932,3.214,933,4.32,934,3.214,935,3.214,936,3.214,937,3.214,938,3.214,939,4.32,940,3.214,941,4.32,942,4.32,943,3.214,944,3.214,945,3.214,946,3.214,947,3.214,948,3.214,949,3.214,950,3.214,951,3.214,952,3.214,953,3.214,954,3.214,955,3.214,956,2.666,957,3.214,958,4.32,959,3.214,960,3.214,961,3.214,962,3.214,963,3.214,964,3.214,965,3.214,966,3.214,967,3.214,968,3.214,969,3.214,970,3.214,971,3.214,972,3.214,973,3.214,974,3.214,975,2.305]],["title/license.html",[313,1.501,578,1.679,579,1.901]],["body/license.html",[7,0.027,11,1.708,83,0.027,84,0.027,125,2.199,313,2.09,581,2.337,589,3.061,608,2.337,661,3.061,711,3.925,909,2.647,917,3.061,918,5.028,975,2.647,976,5.223,977,3.69,978,4.731,979,3.69,980,3.69,981,3.69,982,3.69,983,3.69,984,3.69,985,3.69,986,3.69,987,3.69,988,3.69,989,4.731,990,3.69,991,3.69,992,4.731,993,3.69,994,3.69,995,3.69,996,3.69,997,3.69,998,3.69,999,3.69,1000,4.731,1001,3.69,1002,3.69,1003,3.69,1004,3.69,1005,3.69,1006,3.69,1007,4.731,1008,4.731,1009,3.69,1010,3.69,1011,3.69,1012,3.69,1013,3.69,1014,3.69,1015,3.69,1016,3.69,1017,3.69,1018,3.69,1019,3.69,1020,3.69,1021,3.69,1022,3.69,1023,3.69,1024,3.69,1025,3.69,1026,3.69,1027,3.69,1028,3.69,1029,3.69,1030,3.69,1031,3.69,1032,3.69,1033,3.69,1034,3.69,1035,3.69,1036,3.69,1037,3.69]],["title/modules.html",[2,1.973]],["body/modules.html",[1,2.924,2,2.136,6,2.614,7,0.03,8,2.614,83,0.03,84,0.03,85,2.924,1038,5.768,1039,5.768,1040,5.768,1041,5.954,1042,3.829,1043,4.617]],["title/overview.html",[1044,3.537]],["body/overview.html",[1,3.767,2,1.85,3,2.818,4,3.316,5,3.316,6,3.069,7,0.034,8,3.368,9,3.152,10,2.264,11,1.85,75,1.28,78,2.041,83,0.028,84,0.028,85,3.695,86,3.316,87,3.316,88,3.316,89,3.416,219,2.532,391,3.079,417,3.316,418,3.316,419,3.316,424,2.867,804,3.316,1044,3.316,1045,3.998,1046,4.977,1047,3.998]],["title/properties.html",[98,1.008,1048,2.651]],["body/properties.html",[7,0.035,83,0.029,84,0.029,98,1.126,307,3.03,313,2.392,429,2.675,535,3.504,536,2.675,581,3.261,587,3.504,588,3.504,656,3.504,701,3.03,796,3.504,877,3.504,909,3.692,975,3.03,1042,3.504,1049,4.224,1050,4.224,1051,4.224,1052,4.224,1053,4.224,1054,4.224,1055,4.224,1056,4.224,1057,4.224,1058,4.224,1059,4.224,1060,5.149,1061,4.224,1062,4.224,1063,4.224,1064,4.224,1065,4.224,1066,4.224,1067,4.224,1068,4.224]],["title/miscellaneous/typealiases.html",[903,1.116,1069,3.781]],["body/miscellaneous/typealiases.html",[7,0.031,61,0.989,83,0.031,84,0.031,97,0.678,222,3.942,246,2.985,254,4.559,903,1.984,1070,4.714,1071,4.714,1072,5.496,1073,4.714]],["title/miscellaneous/variables.html",[642,2.711,903,1.116]],["body/miscellaneous/variables.html",[7,0.036,41,0.851,61,0.695,83,0.027,84,0.027,97,0.555,98,1.029,108,2.186,119,1.869,178,2.768,190,1.971,221,3.202,243,3.202,279,3.083,307,2.768,399,3.492,401,3.492,459,2.186,642,2.768,675,3.202,890,3.202,891,4.038,895,3.202,896,4.038,903,1.625,956,3.202,1074,3.86,1075,3.86,1076,4.869,1077,3.86,1078,3.86,1079,3.86,1080,3.86,1081,3.86,1082,3.86,1083,4.869,1084,3.86,1085,3.86,1086,3.86,1087,4.869,1088,3.86,1089,3.86,1090,3.86]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":120,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["0/1",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["0848443",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":266,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["1.0.0",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["1.6.10",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["1.6.11",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["1.6.12",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["1.6.13",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["1.6.14",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["1.6.15",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["1.6.16",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["1.6.17",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["1.6.3",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["1.6.4",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["1.6.5",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["1.6.6",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["1.6.7",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["1.6.8",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["1.6.9",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["1.7.1",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["1.7.10",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["1.7.11",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["1.7.12",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["1.7.3",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["1.7.5",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["1.7.6",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["1.7.7",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["1.7.8",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["1.7.9",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":587,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["10",{"_index":269,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(50)@isoptional",{"_index":290,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["13",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["166050d",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["17c54b9",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":286,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["2",{"_index":1046,"title":{},"body":{"overview.html":{}}}],["20",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":589,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["20880c7",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["20bc1e7",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["22d3cc1",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":114,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["27",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["272c09a",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["273f337",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["2c0b15f",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["2c0b3d1",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1047,"title":{},"body":{"overview.html":{}}}],["30",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["31e4d60",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["33fea7e",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["34d521d",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["3918a78",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1045,"title":{},"body":{"overview.html":{}}}],["4552c66",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["50",{"_index":289,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["58bf922",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["5e7c6c7",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["5eddeb1",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["5f79c49",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["607cf5d",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["61b67d5",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["630f3b5",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["63d6a92",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":331,"title":{},"body":{"entities/Repo.html":{}}}],["673dca9",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["6d23c24",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":804,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["73d1c74",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["77c734c",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["79bf61d",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["7adfb6b",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["7db9008",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["7e9b8a4",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["7fe63aa",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["81e8bbc",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["8837b2a",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["8aee8e5",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["911df68",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["94ba4e1",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["a0db0aa",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["a229a3b",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["a9e1df6",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1006,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["ac31556",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["accessing",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["accessors",{"_index":277,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["action",{"_index":1031,"title":{},"body":{"license.html":{}}}],["add",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["add_table_nametest",{"_index":945,"title":{},"body":{"index.html":{}}}],["adding",{"_index":936,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["adjustments",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["af531e4",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1070,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allof",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":998,"title":{},"body":{"license.html":{}}}],["api",{"_index":701,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["api.opensauced.pizza",{"_index":913,"title":{},"body":{"index.html":{}}}],["apiconfig",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["apiextramodels(pagedto",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apinotfoundresponse",{"_index":394,"title":{},"body":{"controllers/RepoController.html":{}}}],["apiokresponse",{"_index":178,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"miscellaneous/variables.html":{}}}],["apioperation",{"_index":395,"title":{},"body":{"controllers/RepoController.html":{}}}],["apipaginatedresponse",{"_index":399,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse(repo",{"_index":415,"title":{},"body":{"controllers/RepoController.html":{}}}],["apiproperty",{"_index":235,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{}}}],["apiproperty({type",{"_index":233,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":294,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({enum",{"_index":281,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":285,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apitags",{"_index":179,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["apitags(\"health",{"_index":181,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"repositories",{"_index":404,"title":{},"body":{"controllers/RepoController.html":{}}}],["apply",{"_index":943,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":1035,"title":{},"body":{"license.html":{}}}],["array",{"_index":243,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["artifact",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":362,"title":{},"body":{"entities/Repo.html":{},"miscellaneous/enumerations.html":{}}}],["assign",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":985,"title":{},"body":{"license.html":{}}}],["async",{"_index":163,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["attach",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["attempt",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":537,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authenticate(req",{"_index":551,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["authmodule",{"_index":85,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1066,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":1024,"title":{},"body":{"license.html":{}}}],["authuser",{"_index":528,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["autoloadentities",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1043,"title":{},"body":{"modules.html":{}}}],["await",{"_index":456,"title":{},"body":{"injectables/RepoService.html":{}}}],["b1a67da",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["b1eda28",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["b4d3785",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["b57f47b",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["b5b6ac5",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["b7c3395",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["ba8dfbb",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1052,"title":{},"body":{"properties.html":{}}}],["badges",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["baseentity",{"_index":145,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["baseline",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["basequerybuilder",{"_index":426,"title":{},"body":{"injectables/RepoService.html":{}}}],["bash",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["bc3a37d",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["bd6d621",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":588,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["beta.api.opensauced.pizza",{"_index":914,"title":{},"body":{"index.html":{}}}],["better",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["bigint",{"_index":118,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["binaries",{"_index":919,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":256,"title":{},"body":{"classes/PageMetaDto.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":899,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1041,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1038,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1062,"title":{},"body":{"properties.html":{}}}],["build",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":977,"title":{},"body":{"license.html":{}}}],["c013b70",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["c127cea",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["c24937f",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["cb83f9d",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["cb9206d",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["cc46460",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["cd306f8",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["cd8f21d",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":580,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":584,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["channel",{"_index":973,"title":{},"body":{"index.html":{}}}],["character",{"_index":111,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["charge",{"_index":982,"title":{},"body":{"license.html":{}}}],["check",{"_index":634,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["checks",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1027,"title":{},"body":{"license.html":{}}}],["class",{"_index":81,"title":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"coverage.html":{}}}],["classes",{"_index":219,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"overview.html":{}}}],["clean",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":953,"title":{},"body":{"index.html":{}}}],["client",{"_index":1054,"title":{},"body":{"properties.html":{}}}],["closes",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_repomodule",{"_index":417,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_exports",{"_index":419,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["cluster_repomodule_providers",{"_index":418,"title":{},"body":{"modules/RepoModule.html":{},"overview.html":{}}}],["column",{"_index":144,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["column(\"text",{"_index":363,"title":{},"body":{"entities/Repo.html":{}}}],["column('text",{"_index":324,"title":{},"body":{"entities/Repo.html":{}}}],["column({default",{"_index":328,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["column({type",{"_index":110,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["command",{"_index":939,"title":{},"body":{"index.html":{}}}],["commands",{"_index":927,"title":{},"body":{"index.html":{}}}],["comments",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["common/decorators/api",{"_index":400,"title":{},"body":{"controllers/RepoController.html":{}}}],["common/dtos/page",{"_index":396,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["common/dtos/page.dto",{"_index":398,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["community",{"_index":965,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":1055,"title":{},"body":{"properties.html":{}}}],["component",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["concurrency",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1005,"title":{},"body":{"license.html":{}}}],["config/api.config",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["config/endpoint.config",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configservice.get(\"db.connection",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.database",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.host",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.password",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.port",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"db.username",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1036,"title":{},"body":{"license.html":{}}}],["console.log(builder.getsql",{"_index":466,"title":{},"body":{"injectables/RepoService.html":{}}}],["const",{"_index":451,"title":{},"body":{"injectables/RepoService.html":{}}}],["constants/order.constant",{"_index":300,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["constructor",{"_index":183,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["constructor(data",{"_index":223,"title":{},"body":{"classes/PageDto.html":{}}}],["constructor(private",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/RepoController.html":{}}}],["constructor(reporepository",{"_index":428,"title":{},"body":{"injectables/RepoService.html":{}}}],["constructor(undefined",{"_index":253,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["container",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["continuous",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1032,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":960,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":958,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":45,"title":{"entities/Contribution.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"coverage.html":{},"index.html":{}}}],["contribution.repo",{"_index":320,"title":{},"body":{"entities/Repo.html":{}}}],["contribution/contribution.entity",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{}}}],["contributions",{"_index":153,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{}}}],["contributor",{"_index":99,"title":{},"body":{"entities/Contribution.html":{}}}],["controller",{"_index":157,"title":{"controllers/HealthController.html":{},"controllers/RepoController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":182,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"repos",{"_index":403,"title":{},"body":{"controllers/RepoController.html":{}}}],["controllers",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"overview.html":{}}}],["conversation",{"_index":968,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1000,"title":{},"body":{"license.html":{}}}],["copy",{"_index":711,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":976,"title":{},"body":{"license.html":{}}}],["correct",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":100,"title":{},"body":{"entities/Contribution.html":{}}}],["coverage",{"_index":886,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["created",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["created_at",{"_index":101,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":150,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["createdatecolumn({type",{"_index":123,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["creating",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["d0d5ca5",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1028,"title":{},"body":{"license.html":{}}}],["data",{"_index":221,"title":{},"body":{"classes/PageDto.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["datasource",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":122,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["db",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["db:changesif",{"_index":940,"title":{},"body":{"index.html":{}}}],["db:commit",{"_index":944,"title":{},"body":{"index.html":{}}}],["db:push",{"_index":952,"title":{},"body":{"index.html":{}}}],["db:resetpush",{"_index":950,"title":{},"body":{"index.html":{}}}],["db:startmake",{"_index":935,"title":{},"body":{"index.html":{}}}],["dbconfig",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["deal",{"_index":987,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1037,"title":{},"body":{"license.html":{}}}],["debug",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["decorator",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":109,"title":{},"body":{"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["default",{"_index":119,"title":{},"body":{"entities/Contribution.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":115,"title":{},"body":{"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["delete",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["deleted_at",{"_index":102,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["deletedatecolumn",{"_index":149,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["deletedatecolumn({type",{"_index":130,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["demo",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":361,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":307,"title":{},"body":{"entities/Repo.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":1053,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":921,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":957,"title":{},"body":{"index.html":{}}}],["diagrams",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":938,"title":{},"body":{"index.html":{}}}],["digital",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["discord.find",{"_index":969,"title":{},"body":{"index.html":{}}}],["disk",{"_index":187,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":177,"title":{},"body":{"controllers/HealthController.html":{}}}],["distribute",{"_index":996,"title":{},"body":{"license.html":{}}}],["docker",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.12",{"_index":925,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["docr",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":608,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":1049,"title":{},"body":{"properties.html":{}}}],["dry",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["e145e2d",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["e1fe498",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["e663170",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":242,"title":{},"body":{"classes/PageDto.html":{}}}],["echo",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":959,"title":{},"body":{"index.html":{}}}],["endpointconfig",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["engines",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["entities",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"overview.html":{}}}],["entity",{"_index":95,"title":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":301,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["enumerations",{"_index":904,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":282,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["env",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["environments",{"_index":912,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":661,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["everything",{"_index":941,"title":{},"body":{"index.html":{}}}],["explain",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"modules/RepoModule.html":{}}}],["exposing",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1015,"title":{},"body":{"license.html":{}}}],["extend",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":154,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["extractjwt",{"_index":531,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":549,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["extractor",{"_index":548,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["f5385b3",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["fdc11ea",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["fe4b9e9",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":986,"title":{},"body":{"license.html":{}}}],["findall",{"_index":427,"title":{},"body":{"injectables/RepoService.html":{}}}],["findall(pageoptionsdto",{"_index":433,"title":{},"body":{"injectables/RepoService.html":{}}}],["findonebyid",{"_index":367,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyid(id",{"_index":370,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo",{"_index":368,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["findonebyownerandrepo(owner",{"_index":379,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["finds",{"_index":373,"title":{},"body":{"controllers/RepoController.html":{}}}],["finduserlist",{"_index":369,"title":{},"body":{"controllers/RepoController.html":{}}}],["finduserlist(pageoptionsdto",{"_index":384,"title":{},"body":{"controllers/RepoController.html":{}}}],["fine",{"_index":942,"title":{},"body":{"index.html":{}}}],["first",{"_index":930,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1020,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["flight",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":917,"title":{},"body":{"index.html":{},"license.html":{}}}],["free",{"_index":981,"title":{},"body":{"license.html":{}}}],["full",{"_index":594,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["full_name",{"_index":308,"title":{},"body":{"entities/Repo.html":{}}}],["function",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":907,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1003,"title":{},"body":{"license.html":{}}}],["generated",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["get(\"/:id",{"_index":405,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/:owner/:repo",{"_index":410,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/list",{"_index":414,"title":{},"body":{"controllers/RepoController.html":{}}}],["get(\"/service",{"_index":189,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":203,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":371,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/:owner/:repo')@apioperation({operationid",{"_index":380,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/list')@httpcode(httpstatus.ok)@apipaginatedresponse(repo)@apiokresponse({type",{"_index":385,"title":{},"body":{"controllers/RepoController.html":{}}}],["get('/service')@healthcheck()@apiokresponse",{"_index":166,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@healthcheck()@apiokresponse",{"_index":170,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdomain",{"_index":896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getschemapath(model",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(pagedto",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getskip",{"_index":292,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getting",{"_index":578,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1064,"title":{},"body":{"properties.html":{}}}],["github",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":980,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1042,"title":{},"body":{"modules.html":{},"properties.html":{}}}],["guide",{"_index":962,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":963,"title":{},"body":{"index.html":{}}}],["has_stars_data",{"_index":555,"title":{},"body":{"entities/User.html":{}}}],["hasnextpage",{"_index":248,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":249,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["health",{"_index":161,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["health.controller",{"_index":217,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":175,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":172,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":158,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":6,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hereby",{"_index":979,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1025,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1059,"title":{},"body":{"properties.html":{}}}],["host",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":185,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode",{"_index":387,"title":{},"body":{"controllers/RepoController.html":{}}}],["httpcode(httpstatus.ok",{"_index":407,"title":{},"body":{"controllers/RepoController.html":{}}}],["httphealthindicator",{"_index":173,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/open",{"_index":1060,"title":{},"body":{"properties.html":{}}}],["httpstatus",{"_index":388,"title":{},"body":{"controllers/RepoController.html":{}}}],["id",{"_index":103,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{}}}],["id'})@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":374,"title":{},"body":{"controllers/RepoController.html":{}}}],["identifier",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":954,"title":{},"body":{"index.html":{}}}],["immediate",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1016,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["imports",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}}}],["improve",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1009,"title":{},"body":{"license.html":{}}}],["including",{"_index":989,"title":{},"body":{"license.html":{}}}],["index",{"_index":97,"title":{"index.html":{}},"body":{"entities/Contribution.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{}}}],["initial",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":423,"title":{"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}},"body":{"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":424,"title":{},"body":{"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":437,"title":{},"body":{"injectables/RepoService.html":{}}}],["injectrepository(repo",{"_index":438,"title":{},"body":{"injectables/RepoService.html":{}}}],["inspection",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["installed",{"_index":920,"title":{},"body":{"index.html":{}}}],["instead",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":1057,"title":{},"body":{"properties.html":{}}}],["is_fork",{"_index":309,"title":{},"body":{"entities/Repo.html":{}}}],["is_open_sauced_member",{"_index":556,"title":{},"body":{"entities/User.html":{}}}],["is_private",{"_index":557,"title":{},"body":{"entities/User.html":{}}}],["isarray",{"_index":236,"title":{},"body":{"classes/PageDto.html":{}}}],["isarray()@apiproperty({isarray",{"_index":229,"title":{},"body":{"classes/PageDto.html":{}}}],["isenum",{"_index":295,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(order",{"_index":302,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isglobal",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":296,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isoptional",{"_index":297,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["issues",{"_index":310,"title":{},"body":{"entities/Repo.html":{}}}],["item",{"_index":455,"title":{},"body":{"injectables/RepoService.html":{}}}],["itemcount",{"_index":250,"title":{},"body":{"classes/PageMetaDto.html":{},"injectables/RepoService.html":{}}}],["items",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["job",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["jobs",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":967,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":148,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["js",{"_index":539,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["jwt",{"_index":533,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["keywords",{"_index":1058,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1014,"title":{},"body":{"license.html":{}}}],["language",{"_index":311,"title":{},"body":{"entities/Repo.html":{}}}],["last_fetched_contributors_at",{"_index":312,"title":{},"body":{"entities/Repo.html":{}}}],["last_merged_at",{"_index":104,"title":{},"body":{"entities/Contribution.html":{}}}],["leftjoinandselect(\"repo.contributions",{"_index":442,"title":{},"body":{"injectables/RepoService.html":{}}}],["leftjoinandselect(\"repo.user",{"_index":441,"title":{},"body":{"injectables/RepoService.html":{}}}],["length",{"_index":113,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["liability",{"_index":1029,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1026,"title":{},"body":{"license.html":{}}}],["license",{"_index":313,"title":{"license.html":{}},"body":{"entities/Repo.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":990,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1017,"title":{},"body":{"license.html":{}}}],["list",{"_index":675,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":1073,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["live",{"_index":911,"title":{},"body":{"index.html":{}}}],["load",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["loadrelationcountandmap(\"repo.stargazerscount",{"_index":449,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.starscount",{"_index":445,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.submissionscount",{"_index":447,"title":{},"body":{"injectables/RepoService.html":{}}}],["loadrelationcountandmap(\"repo.votescount",{"_index":443,"title":{},"body":{"injectables/RepoService.html":{}}}],["local",{"_index":732,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["localhost:54321",{"_index":934,"title":{},"body":{"index.html":{}}}],["locally",{"_index":933,"title":{},"body":{"index.html":{}}}],["logging",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":922,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":147,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["manytoone(undefined",{"_index":135,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["matching",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":272,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["max",{"_index":298,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(50",{"_index":305,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maximum",{"_index":288,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["memory",{"_index":186,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":176,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1019,"title":{},"body":{"license.html":{}}}],["merge",{"_index":994,"title":{},"body":{"license.html":{}}}],["meta",{"_index":222,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["meta.dto",{"_index":240,"title":{},"body":{"classes/PageDto.html":{},"injectables/RepoService.html":{}}}],["meta.dto.ts",{"_index":247,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:12",{"_index":258,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:15",{"_index":260,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:18",{"_index":257,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":255,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:6",{"_index":259,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":261,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["metadata",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":162,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["migration",{"_index":853,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["migrations",{"_index":948,"title":{},"body":{"index.html":{}}}],["min",{"_index":299,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":304,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimal",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":303,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minor",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":903,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":975,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mkdocs",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":993,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["mount",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["mounted",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":152,"title":{},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{}}}],["need",{"_index":916,"title":{},"body":{"index.html":{}}}],["nest",{"_index":794,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nestjs",{"_index":535,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/config",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["nestjs/passport",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{}}}],["nestjs/swagger",{"_index":180,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{}}}],["nestjs/terminus",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["nestjs/typeorm",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{}}}],["nestjs/typeorm/dist/interfaces/typeorm",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":459,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":910,"title":{},"body":{"index.html":{}}}],["node",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["node>=16.7.0",{"_index":923,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1023,"title":{},"body":{"license.html":{}}}],["notable",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["notfoundexception",{"_index":376,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["notice",{"_index":1007,"title":{},"body":{"license.html":{}}}],["now",{"_index":128,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["npm",{"_index":867,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm>=8.0.0",{"_index":924,"title":{},"body":{"index.html":{}}}],["number",{"_index":117,"title":{},"body":{"entities/Contribution.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["oas3",{"_index":1051,"title":{},"body":{"properties.html":{}}}],["obtaining",{"_index":984,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["onetomany",{"_index":354,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":319,"title":{},"body":{"entities/Repo.html":{},"entities/User.html":{}}}],["open",{"_index":581,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["open_issues",{"_index":558,"title":{},"body":{"entities/User.html":{}}}],["opensauced.pizza\"}`).tostring",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operationid",{"_index":406,"title":{},"body":{"controllers/RepoController.html":{}}}],["optional",{"_index":228,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["options.dto",{"_index":397,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["options.dto.ts",{"_index":275,"title":{},"body":{"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:10",{"_index":284,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:20",{"_index":287,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":291,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":293,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.interface",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":276,"title":{},"body":{"classes/PageOptionsDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["order.asc",{"_index":280,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["orderby",{"_index":360,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["orderby(\"repo.pushed_at",{"_index":462,"title":{},"body":{"injectables/RepoService.html":{}}}],["otherwise",{"_index":1034,"title":{},"body":{"license.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["outputs",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1044,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":971,"title":{},"body":{"index.html":{}}}],["owner",{"_index":381,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["owner}/${repo",{"_index":461,"title":{},"body":{"injectables/RepoService.html":{}}}],["package",{"_index":1048,"title":{"properties.html":{}},"body":{}}],["page",{"_index":239,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["pagecount",{"_index":251,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":218,"title":{"classes/PageDto.html":{}},"body":{"classes/PageDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagedto(entities",{"_index":469,"title":{},"body":{"injectables/RepoService.html":{}}}],["pagemetadto",{"_index":225,"title":{"classes/PageMetaDto.html":{}},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pagemetadto})@validatenested()@type(undefined",{"_index":234,"title":{},"body":{"classes/PageDto.html":{}}}],["pagemetaparameters",{"_index":254,"title":{},"body":{"classes/PageMetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["pageoptionsdto",{"_index":263,"title":{"classes/PageOptionsDto.html":{}},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"coverage.html":{}}}],["pageoptionsdto.order",{"_index":463,"title":{},"body":{"injectables/RepoService.html":{}}}],["pageoptionsdto.page",{"_index":265,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.take",{"_index":268,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pages",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["paginated",{"_index":401,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":389,"title":{},"body":{"controllers/RepoController.html":{}}}],["param(\"id",{"_index":408,"title":{},"body":{"controllers/RepoController.html":{}}}],["param(\"owner",{"_index":411,"title":{},"body":{"controllers/RepoController.html":{}}}],["param(\"repo",{"_index":412,"title":{},"body":{"controllers/RepoController.html":{}}}],["parameters",{"_index":227,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["parameters.dto",{"_index":262,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["parameters.dto.ts",{"_index":1072,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["particular",{"_index":1021,"title":{},"body":{"license.html":{}}}],["passport",{"_index":532,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["passportmodule",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":530,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["password",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":200,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["performance",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":978,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1001,"title":{},"body":{"license.html":{}}}],["person",{"_index":983,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1002,"title":{},"body":{"license.html":{}}}],["pipelines",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":961,"title":{},"body":{"index.html":{}}}],["port",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":1011,"title":{},"body":{"license.html":{}}}],["powered",{"_index":1050,"title":{},"body":{"properties.html":{}}}],["prefix",{"_index":160,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{}}}],["prerequisites",{"_index":915,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["primarycolumn",{"_index":146,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn(\"bigint",{"_index":155,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarycolumn('bigint",{"_index":132,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn",{"_index":474,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["print",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":184,"title":{},"body":{"controllers/HealthController.html":{},"injectables/RepoService.html":{}}}],["proceed",{"_index":964,"title":{},"body":{"index.html":{}}}],["process",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["process.env.domain",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.supabase_jwt_secret",{"_index":547,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_key",{"_index":544,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["process.env.supabase_url",{"_index":542,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["production",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":585,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":378,"title":{},"body":{"controllers/RepoController.html":{},"injectables/RepoService.html":{}}}],["proper",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":98,"title":{"properties.html":{}},"body":{"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":656,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["provided",{"_index":1012,"title":{},"body":{"license.html":{}}}],["providers",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{}}}],["public",{"_index":471,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{}}}],["publish",{"_index":995,"title":{},"body":{"license.html":{}}}],["pull",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1022,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["push",{"_index":616,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pushed_at",{"_index":314,"title":{},"body":{"entities/Repo.html":{}}}],["query",{"_index":390,"title":{},"body":{"controllers/RepoController.html":{}}}],["querybuilder",{"_index":452,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getcount",{"_index":467,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getmany",{"_index":468,"title":{},"body":{"injectables/RepoService.html":{}}}],["querybuilder.getone",{"_index":457,"title":{},"body":{"injectables/RepoService.html":{}}}],["questions",{"_index":966,"title":{},"body":{"index.html":{}}}],["re",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["readme",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":188,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{}}}],["received",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["referencedcolumnname",{"_index":137,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["registry",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["relations",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["relationship",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":635,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remote",{"_index":951,"title":{},"body":{"index.html":{}}}],["remove",{"_index":877,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["repo",{"_index":41,"title":{"entities/Repo.html":{}},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo'})@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":382,"title":{},"body":{"controllers/RepoController.html":{}}}],["repo.contributions",{"_index":156,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.contributions)@joincolumn({name",{"_index":136,"title":{},"body":{"entities/Contribution.html":{}}}],["repo.controller",{"_index":421,"title":{},"body":{"modules/RepoModule.html":{}}}],["repo.entity",{"_index":393,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouserstargazers",{"_index":450,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{}}}],["repo.repotouserstargazers)@joincolumn({name",{"_index":476,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["repo.repotouserstars",{"_index":446,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserStars.html":{}}}],["repo.repotouserstars)@joincolumn({name",{"_index":489,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["repo.repotousersubmissions",{"_index":448,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserSubmissions.html":{}}}],["repo.repotousersubmissions)@joincolumn({name",{"_index":502,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["repo.repotouservotes",{"_index":444,"title":{},"body":{"injectables/RepoService.html":{},"entities/RepoToUserVotes.html":{}}}],["repo.repotouservotes)@joincolumn({name",{"_index":515,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["repo.service",{"_index":392,"title":{},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{}}}],["repo.to.user.stargazers.entity",{"_index":358,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.stars.entity",{"_index":356,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.submissions.entity",{"_index":357,"title":{},"body":{"entities/Repo.html":{}}}],["repo.to.user.votes.entity",{"_index":355,"title":{},"body":{"entities/Repo.html":{}}}],["repo.user",{"_index":566,"title":{},"body":{"entities/User.html":{}}}],["repo/repo.entity",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/User.html":{}}}],["repo/repo.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["repo/repo.to.user.stargazers.entity",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.stars.entity",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.submissions.entity",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo/repo.to.user.votes.entity",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["repo_id",{"_index":105,"title":{},"body":{"entities/Contribution.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["repocontroller",{"_index":365,"title":{"controllers/RepoController.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"coverage.html":{}}}],["repomodule",{"_index":8,"title":{"modules/RepoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{},"modules.html":{},"overview.html":{}}}],["reporepository",{"_index":431,"title":{},"body":{"injectables/RepoService.html":{}}}],["repos",{"_index":359,"title":{},"body":{"entities/Repo.html":{},"controllers/RepoController.html":{},"entities/User.html":{},"changelog.html":{}}}],["reposervice",{"_index":391,"title":{"injectables/RepoService.html":{}},"body":{"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"coverage.html":{},"overview.html":{}}}],["repository",{"_index":429,"title":{},"body":{"injectables/RepoService.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["repotouserstargazers",{"_index":53,"title":{"entities/RepoToUserStargazers.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstargazers.repo",{"_index":338,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstargazers.user",{"_index":568,"title":{},"body":{"entities/User.html":{}}}],["repotouserstars",{"_index":49,"title":{"entities/RepoToUserStars.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStars.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouserstars.repo",{"_index":340,"title":{},"body":{"entities/Repo.html":{}}}],["repotouserstars.user",{"_index":570,"title":{},"body":{"entities/User.html":{}}}],["repotousersubmissions",{"_index":51,"title":{"entities/RepoToUserSubmissions.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserSubmissions.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotousersubmissions.repo",{"_index":342,"title":{},"body":{"entities/Repo.html":{}}}],["repotousersubmissions.user",{"_index":572,"title":{},"body":{"entities/User.html":{}}}],["repotouservotes",{"_index":47,"title":{"entities/RepoToUserVotes.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"coverage.html":{}}}],["repotouservotes.repo",{"_index":344,"title":{},"body":{"entities/Repo.html":{}}}],["repotouservotes.user",{"_index":574,"title":{},"body":{"entities/User.html":{}}}],["repo})@apinotfoundresponse({type",{"_index":375,"title":{},"body":{"controllers/RepoController.html":{}}}],["request",{"_index":552,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"changelog.html":{}}}],["requirements",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"index.html":{},"overview.html":{}}}],["response.decorator",{"_index":402,"title":{},"body":{"controllers/RepoController.html":{}}}],["response.decorator.ts",{"_index":891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["restriction",{"_index":988,"title":{},"body":{"license.html":{}}}],["results",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":190,"title":{},"body":{"controllers/HealthController.html":{},"classes/PageOptionsDto.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":168,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"injectables/SupabaseStrategy.html":{}}}],["revert",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":991,"title":{},"body":{"license.html":{}}}],["rogue",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":678,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runner",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["sauced",{"_index":909,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["sauced/api.opensauced.pizza",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["sauced/api.opensauced.pizza#readme",{"_index":1061,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza.git",{"_index":1065,"title":{},"body":{"properties.html":{}}}],["sauced/api.opensauced.pizza/issues",{"_index":1063,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":956,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scoping",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":955,"title":{},"body":{"index.html":{}}}],["select",{"_index":139,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"changelog.html":{}}}],["select(['repo.id",{"_index":440,"title":{},"body":{"injectables/RepoService.html":{}}}],["sell",{"_index":999,"title":{},"body":{"license.html":{}}}],["service",{"_index":164,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{}}}],["shall",{"_index":1008,"title":{},"body":{"license.html":{}}}],["simple",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["simplest",{"_index":946,"title":{},"body":{"index.html":{}}}],["skip",{"_index":278,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["skip(pageoptionsdto.skip",{"_index":464,"title":{},"body":{"injectables/RepoService.html":{}}}],["soft",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":918,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"entities/Contribution.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"modules/RepoModule.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"index.html":{}}}],["spec",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["src/.../api",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoint.config.ts",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.constant.ts",{"_index":905,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../page",{"_index":1071,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.module.ts",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/supabase.strategy.ts",{"_index":524,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"coverage.html":{}}}],["src/auth/supabase.strategy.ts:11",{"_index":526,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/auth/supabase.strategy.ts:22",{"_index":529,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["src/common/constants/order.constant.ts",{"_index":906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/decorators/api",{"_index":890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/page",{"_index":246,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/dtos/page.dto.ts",{"_index":220,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts:11",{"_index":232,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dtos/page.dto.ts:16",{"_index":226,"title":{},"body":{"classes/PageDto.html":{}}}],["src/config/endpoint.config.ts",{"_index":895,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contribution/contribution.entity.ts",{"_index":96,"title":{},"body":{"entities/Contribution.html":{},"coverage.html":{}}}],["src/contribution/contribution.entity.ts:19",{"_index":133,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:25",{"_index":140,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:31",{"_index":121,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:36",{"_index":134,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:42",{"_index":129,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:48",{"_index":142,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:53",{"_index":131,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:59",{"_index":116,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:65",{"_index":143,"title":{},"body":{"entities/Contribution.html":{}}}],["src/contribution/contribution.entity.ts:72",{"_index":138,"title":{},"body":{"entities/Contribution.html":{}}}],["src/health/health.controller.ts",{"_index":159,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:28",{"_index":167,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:47",{"_index":171,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":216,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":897,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/repo/repo.controller.ts",{"_index":366,"title":{},"body":{"controllers/RepoController.html":{},"coverage.html":{}}}],["src/repo/repo.controller.ts:22",{"_index":377,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:36",{"_index":383,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.controller.ts:47",{"_index":386,"title":{},"body":{"controllers/RepoController.html":{}}}],["src/repo/repo.entity.ts",{"_index":306,"title":{},"body":{"entities/Repo.html":{},"coverage.html":{}}}],["src/repo/repo.entity.ts:104",{"_index":326,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:107",{"_index":325,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:113",{"_index":332,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:119",{"_index":335,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:125",{"_index":349,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:132",{"_index":351,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:135",{"_index":321,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:138",{"_index":345,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:141",{"_index":341,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:144",{"_index":343,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:147",{"_index":339,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:30",{"_index":327,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:36",{"_index":352,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:42",{"_index":330,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:48",{"_index":346,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:54",{"_index":353,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:60",{"_index":347,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:63",{"_index":329,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:69",{"_index":322,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:75",{"_index":348,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:81",{"_index":337,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:87",{"_index":334,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:92",{"_index":323,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.entity.ts:98",{"_index":336,"title":{},"body":{"entities/Repo.html":{}}}],["src/repo/repo.module.ts",{"_index":420,"title":{},"body":{"modules/RepoModule.html":{}}}],["src/repo/repo.service.ts",{"_index":425,"title":{},"body":{"injectables/RepoService.html":{},"coverage.html":{}}}],["src/repo/repo.service.ts:11",{"_index":430,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:17",{"_index":432,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:28",{"_index":435,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:43",{"_index":436,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.service.ts:60",{"_index":434,"title":{},"body":{"injectables/RepoService.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts",{"_index":470,"title":{},"body":{"entities/RepoToUserStargazers.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:21",{"_index":475,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:24",{"_index":482,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:27",{"_index":478,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:33",{"_index":472,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:39",{"_index":479,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:44",{"_index":473,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:51",{"_index":481,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stargazers.entity.ts:58",{"_index":477,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["src/repo/repo.to.user.stars.entity.ts",{"_index":485,"title":{},"body":{"entities/RepoToUserStars.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:21",{"_index":488,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:24",{"_index":495,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:27",{"_index":491,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:33",{"_index":486,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:39",{"_index":492,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:44",{"_index":487,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:51",{"_index":494,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.stars.entity.ts:58",{"_index":490,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts",{"_index":498,"title":{},"body":{"entities/RepoToUserSubmissions.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:21",{"_index":501,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:24",{"_index":508,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:27",{"_index":504,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:33",{"_index":499,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:39",{"_index":505,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:44",{"_index":500,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:51",{"_index":507,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.submissions.entity.ts:58",{"_index":503,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["src/repo/repo.to.user.votes.entity.ts",{"_index":511,"title":{},"body":{"entities/RepoToUserVotes.html":{},"coverage.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:21",{"_index":514,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:24",{"_index":521,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:27",{"_index":517,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:33",{"_index":512,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:39",{"_index":518,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:44",{"_index":513,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:51",{"_index":520,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/repo/repo.to.user.votes.entity.ts:58",{"_index":516,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["src/user/user.entity.ts",{"_index":554,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:22",{"_index":562,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:28",{"_index":565,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:31",{"_index":561,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:34",{"_index":564,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:37",{"_index":563,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:43",{"_index":559,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:49",{"_index":576,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:54",{"_index":560,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:57",{"_index":567,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:60",{"_index":575,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:63",{"_index":571,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:66",{"_index":573,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:69",{"_index":569,"title":{},"body":{"entities/User.html":{}}}],["stable",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["stars",{"_index":315,"title":{},"body":{"entities/Repo.html":{}}}],["starscount",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":932,"title":{},"body":{"index.html":{}}}],["started",{"_index":579,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":928,"title":{},"body":{"index.html":{}}}],["statements",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":108,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":772,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["structured",{"_index":1056,"title":{},"body":{"properties.html":{}}}],["studio",{"_index":929,"title":{},"body":{"index.html":{}}}],["styles",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["subdomain",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":1004,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":997,"title":{},"body":{"license.html":{}}}],["submission",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["subscribers",{"_index":316,"title":{},"body":{"entities/Repo.html":{}}}],["substantial",{"_index":1010,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summary",{"_index":372,"title":{},"body":{"controllers/RepoController.html":{}}}],["supabase",{"_index":536,"title":{},"body":{"injectables/SupabaseStrategy.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["supabase.strategy",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{}}}],["supabase/supabase",{"_index":538,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabase>=0.18.0",{"_index":926,"title":{},"body":{"index.html":{}}}],["supabaseauthstrategy",{"_index":534,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasejwtsecret",{"_index":546,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasekey",{"_index":543,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabaseoptions",{"_index":545,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["supabasestrategy",{"_index":89,"title":{"injectables/SupabaseStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SupabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":541,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super",{"_index":540,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.authenticate(req",{"_index":553,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["super.validate(user",{"_index":550,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["support",{"_index":1039,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1040,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":224,"title":{},"body":{"classes/PageDto.html":{}}}],["table",{"_index":902,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["tagging",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":252,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"changelog.html":{}}}],["take(pageoptionsdto.take",{"_index":465,"title":{},"body":{"injectables/RepoService.html":{}}}],["target",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["tech",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["ted",{"_index":1067,"title":{},"body":{"properties.html":{}}}],["temporary",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":688,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["thing",{"_index":931,"title":{},"body":{"index.html":{}}}],["this.basequerybuilder",{"_index":453,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":199,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":202,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":215,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":207,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":211,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":213,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":209,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":205,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":194,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":196,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.data",{"_index":244,"title":{},"body":{"classes/PageDto.html":{}}}],["this.database.pingcheck(\"db",{"_index":192,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":201,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":197,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hasnextpage",{"_index":274,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":273,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.health.check",{"_index":191,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":214,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":206,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":210,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":212,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":208,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":204,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.itemcount",{"_index":270,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":193,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":195,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.meta",{"_index":245,"title":{},"body":{"classes/PageDto.html":{}}}],["this.page",{"_index":264,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":271,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.reporepository.createquerybuilder(\"repo",{"_index":439,"title":{},"body":{"injectables/RepoService.html":{}}}],["this.reposervice.findall(pageoptionsdto",{"_index":416,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.reposervice.findonebyid(id",{"_index":409,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.reposervice.findonebyownerandrepo(owner",{"_index":413,"title":{},"body":{"controllers/RepoController.html":{}}}],["this.take",{"_index":267,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["thresholdpercent",{"_index":198,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":458,"title":{},"body":{"injectables/RepoService.html":{}}}],["time",{"_index":126,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["timestamp",{"_index":124,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["tld",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["tmodel",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_timestamp(0",{"_index":333,"title":{},"body":{"entities/Repo.html":{}}}],["token",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1033,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":241,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["true",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"classes/PageDto.html":{}}}],["true})@type(undefined",{"_index":231,"title":{},"body":{"classes/PageDto.html":{}}}],["true})@validatenested({each",{"_index":230,"title":{},"body":{"classes/PageDto.html":{}}}],["type",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Repo.html":{},"controllers/RepoController.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1069,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"entities/Contribution.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"changelog.html":{}}}],["typeormhealthindicator",{"_index":174,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/RepoModule.html":{}}}],["typeormmodule.forfeature([repo",{"_index":422,"title":{},"body":{"modules/RepoModule.html":{}}}],["typeormmodule.forrootasync",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["undefined})@isenum(order)@isoptional",{"_index":283,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["unknown",{"_index":169,"title":{},"body":{"controllers/HealthController.html":{},"injectables/SupabaseStrategy.html":{}}}],["up",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["updated_at",{"_index":106,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["updatedatecolumn",{"_index":151,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["updatedatecolumn({type",{"_index":141,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["url",{"_index":107,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["url(`https://${subdomain",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":992,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":43,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"injectables/RepoService.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"injectables/SupabaseStrategy.html":{},"entities/User.html":{},"changelog.html":{},"coverage.html":{}}}],["user.repos",{"_index":364,"title":{},"body":{"entities/Repo.html":{}}}],["user.repos)@joincolumn({name",{"_index":350,"title":{},"body":{"entities/Repo.html":{}}}],["user.repotouserstargazers",{"_index":484,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["user.repotouserstargazers)@joincolumn({name",{"_index":480,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["user.repotouserstars",{"_index":497,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotouserstars)@joincolumn({name",{"_index":493,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["user.repotousersubmissions",{"_index":510,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["user.repotousersubmissions)@joincolumn({name",{"_index":506,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["user.repotouservotes",{"_index":523,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user.repotouservotes)@joincolumn({name",{"_index":519,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["user/user.entity",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["user_id",{"_index":317,"title":{},"body":{"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{}}}],["username",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":577,"title":{},"body":{"entities/User.html":{}}}],["users_to_repos_stargazers",{"_index":483,"title":{},"body":{"entities/RepoToUserStargazers.html":{}}}],["users_to_repos_stars",{"_index":496,"title":{},"body":{"entities/RepoToUserStars.html":{}}}],["users_to_repos_submissions",{"_index":509,"title":{},"body":{"entities/RepoToUserSubmissions.html":{}}}],["users_to_repos_votes",{"_index":522,"title":{},"body":{"entities/RepoToUserVotes.html":{}}}],["validate",{"_index":525,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validate(user",{"_index":527,"title":{},"body":{"injectables/SupabaseStrategy.html":{}}}],["validatenested",{"_index":237,"title":{},"body":{"classes/PageDto.html":{}}}],["validator",{"_index":238,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{}}}],["value",{"_index":279,"title":{},"body":{"classes/PageOptionsDto.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":657,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":642,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":112,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{}}}],["verify",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":796,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versiond",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":970,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":974,"title":{},"body":{"index.html":{}}}],["visually",{"_index":937,"title":{},"body":{"index.html":{}}}],["volume",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["volumes",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["vortex",{"_index":1068,"title":{},"body":{"properties.html":{}}}],["vortex/api.opensauced.pizza",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["votescount",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1018,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1013,"title":{},"body":{"license.html":{}}}],["watchers",{"_index":318,"title":{},"body":{"entities/Repo.html":{}}}],["way",{"_index":947,"title":{},"body":{"index.html":{}}}],["web",{"_index":165,"title":{},"body":{"controllers/HealthController.html":{}}}],["where(\"repo.full_name",{"_index":460,"title":{},"body":{"injectables/RepoService.html":{}}}],["where(\"repo.id",{"_index":454,"title":{},"body":{"injectables/RepoService.html":{}}}],["whether",{"_index":1030,"title":{},"body":{"license.html":{}}}],["without",{"_index":125,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{},"license.html":{}}}],["workflow",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":949,"title":{},"body":{"index.html":{}}}],["yaml",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":972,"title":{},"body":{"index.html":{}}}],["zone",{"_index":127,"title":{},"body":{"entities/Contribution.html":{},"entities/Repo.html":{},"entities/RepoToUserStargazers.html":{},"entities/RepoToUserStars.html":{},"entities/RepoToUserSubmissions.html":{},"entities/RepoToUserVotes.html":{},"entities/User.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RepoModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            RepoModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm/dist/interfaces/typeorm-options.interface\";\nimport { DataSource } from \"typeorm\";\n\nimport { RepoModule } from \"./repo/repo.module\";\nimport apiConfig from \"./config/api.config\";\nimport dbConfig from \"./config/database.config\";\nimport endpointConfig from \"./config/endpoint.config\";\nimport { HealthModule } from \"./health/health.module\";\nimport { Repo } from \"./repo/repo.entity\";\nimport { User } from \"./user/user.entity\";\nimport { Contribution } from \"./contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo/repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"./repo/repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"./repo/repo.to.user.stargazers.entity\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        apiConfig,\n        dbConfig,\n        endpointConfig\n      ],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\"db.connection\"),\n        host: configService.get(\"db.host\"),\n        port: configService.get(\"db.port\"),\n        username: configService.get(\"db.username\"),\n        password: configService.get(\"db.password\"),\n        database: configService.get(\"db.database\"),\n        autoLoadEntities: false,\n        entities: [\n          User,\n          Repo,\n          Contribution,\n          RepoToUserVotes,\n          RepoToUserStars,\n          RepoToUserSubmissions,\n          RepoToUserStargazers,\n        ],\n        synchronize: false,\n      }),\n      inject: [ConfigService],\n    }),\n    TerminusModule,\n    HttpModule,\n    HealthModule,\n    RepoModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  constructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SupabaseStrategy } from \"./supabase.strategy\";\nimport { PassportModule } from \"@nestjs/passport\";\n\n@Module({\n  imports: [PassportModule],\n  providers: [SupabaseStrategy],\n  exports: [SupabaseStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Contribution.html":{"url":"entities/Contribution.html","title":"entity - Contribution","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Contribution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contribution/contribution.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributor\n                            \n                            \n                                count\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                id\n                            \n                            \n                                last_merged_at\n                            \n                            \n                                repo\n                            \n                            \n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_merged_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.contributions)@JoinColumn({name: 'repo_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contribution/contribution.entity.ts:65\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  ManyToOne,\n  JoinColumn,\n  DeleteDateColumn,\n  CreateDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { Repo } from \"../repo/repo.entity\";\n\n@Entity({\n  name: \"contributions\"\n})\nexport class Contribution extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  repo_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  count: number;\n\n  @Column({\n    type: \"timestamp without time zone\"\n  })\n  last_merged_at: Date;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  contributor: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => Repo, (repo) => repo.contributions)\n  @JoinColumn({\n    name: \"repo_id\",\n    referencedColumnName: \"id\",\n  })\n  repo: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiTags } from \"@nestjs/swagger\";\n\n@ApiTags(\"health\")\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @HealthCheck()\n  @ApiOkResponse()\n  async service() {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\"),\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\"),\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @HealthCheck()\n  @ApiOkResponse()\n  async web() {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, ValidateNested } from \"class-validator\";\nimport { PageMetaDto } from \"./page-meta.dto\";\nimport { Type } from \"class-transformer\";\n\nexport class PageDto {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  @ValidateNested({ each: true })\n  @Type(() => Array)\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PageMetaDto })\n  @ValidateNested()\n  @Type(() => PageMetaDto)\n  readonly meta: PageMetaDto;\n\n  constructor(data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { PageMetaParameters } from \"./page-meta-parameters.dto\";\n\nexport class PageMetaDto {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: PageMetaParameters) {\n    this.page = pageOptionsDto.page || 1;\n    this.take = pageOptionsDto.take || 10;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Order, enumName: 'Order', default: undefined})@IsEnum(Order)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dtos/page-options.dto.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEnum, IsInt, IsOptional, Max, Min } from \"class-validator\";\nimport { Order } from \"../constants/order.constant\";\n\nexport class PageOptionsDto {\n  @ApiPropertyOptional({ enum: Order, enumName: \"Order\", default: Order.ASC })\n  @IsEnum(Order)\n  @IsOptional()\n  readonly order?: Order = Order.ASC;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 50,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(50)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return ((this.page || 1) - 1) * (this.take || 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Repo.html":{"url":"entities/Repo.html","title":"entity - Repo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Repo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contributions\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                description\n                            \n                            \n                                full_name\n                            \n                            \n                                id\n                            \n                            \n                                is_fork\n                            \n                            \n                                issues\n                            \n                            \n                                language\n                            \n                            \n                                last_fetched_contributors_at\n                            \n                            \n                                license\n                            \n                            \n                                name\n                            \n                            \n                                pushed_at\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                stars\n                            \n                            \n                                subscribers\n                            \n                            \n                                updated_at\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                            \n                                user_id\n                            \n                            \n                                watchers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contributions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contribution[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, contribution => contribution.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_fork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_fetched_contributors_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => to_timestamp(0)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        license\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushed_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.repo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'character varying', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repos)@JoinColumn({name: 'user_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  JoinColumn,\n  ManyToOne,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  DeleteDateColumn\n} from \"typeorm\";\n\nimport { User } from \"../user/user.entity\";\nimport { Contribution } from \"../contribution/contribution.entity\";\nimport { RepoToUserVotes } from \"./repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"./repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"./repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"./repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"repos\",\n  orderBy: {\n    stars: \"DESC\",\n    name: \"ASC\"\n  }\n})\nexport class Repo extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    select: false\n  })\n  user_id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  issues: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  stars: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  watchers: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  subscribers: number;\n\n  @Column({ default: false })\n  is_fork: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  pushed_at: Date;\n\n  @Column({\n    type: \"timestamp without time zone\",\n    default: () => \"to_timestamp(0)\",\n  })\n  last_fetched_contributors_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  name: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  full_name: string;\n\n  @Column(\"text\")\n  description: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  language: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 64\n  })\n  license: string;\n\n  @Column({\n    type: \"character varying\",\n    length: 255\n  })\n  url: string;\n\n  @ManyToOne(() => User, user => user.repos)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n  })\n  user: User;\n\n  @OneToMany(() => Contribution, contribution => contribution.repo)\n  contributions: Contribution[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.repo)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.repo)\n  repoToUserStars: RepoToUserStars[];\n\n  @OneToMany(() => RepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.repo)\n  repoToUserSubmissions: RepoToUserSubmissions[];\n\n  @OneToMany(() => RepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.repo)\n  repoToUserStargazers: RepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepoController.html":{"url":"controllers/RepoController.html","title":"controller - RepoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                            \n                                    Async\n                                findUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'findOneById', summary: 'Finds a repo by :id'})@HttpCode(HttpStatus.OK)@ApiOkResponse({type: Repo})@ApiNotFoundResponse({type: NotFoundException})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:owner/:repo')@ApiOperation({operationId: 'findOneByOwnerAndRepo', summary: 'Finds a repo by :owner and :repo'})@HttpCode(HttpStatus.OK)@ApiOkResponse({type: Repo})@ApiNotFoundResponse({type: NotFoundException})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserList\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserList(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@HttpCode(HttpStatus.OK)@ApiPaginatedResponse(Repo)@ApiOkResponse({type: Repo})\n                \n            \n\n            \n                \n                    Defined in src/repo/repo.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, NotFoundException, Param, Query } from \"@nestjs/common\";\nimport { RepoService } from \"./repo.service\";\nimport { Repo } from \"./repo.entity\";\nimport { ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\nimport { ApiPaginatedResponse } from \"../common/decorators/api-paginated-response.decorator\";\n\n@Controller(\"repos\")\n@ApiTags(\"Repositories\")\nexport class RepoController {\n  constructor(private readonly repoService: RepoService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"findOneById\",\n    summary: \"Finds a repo by :id\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: Repo })\n  @ApiNotFoundResponse({ type: NotFoundException })\n  async findOneById(\n    @Param(\"id\") id: number,\n  ): Promise {\n    return this.repoService.findOneById(id);\n  }\n\n  @Get(\"/:owner/:repo\")\n  @ApiOperation({\n    operationId: \"findOneByOwnerAndRepo\",\n    summary: \"Finds a repo by :owner and :repo\",\n  })\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: Repo })\n  @ApiNotFoundResponse({ type: NotFoundException })\n  async findOneByOwnerAndRepo(\n    @Param(\"owner\") owner: string,\n      @Param(\"repo\") repo: string,\n  ): Promise {\n    return this.repoService.findOneByOwnerAndRepo(owner, repo);\n  }\n\n  @Get(\"/list\")\n  @HttpCode(HttpStatus.OK)\n  @ApiPaginatedResponse(Repo)\n  @ApiOkResponse({ type: Repo })\n  async findUserList(\n    @Query() pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    return this.repoService.findAll(pageOptionsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepoModule.html":{"url":"modules/RepoModule.html","title":"module - RepoModule","body":"\n                   \n\n\n\n\n    Modules\n    RepoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_providers\n\n\n\ncluster_RepoModule_exports\n\n\n\n\nRepoService \n\nRepoService \n\n\n\nRepoModule\n\nRepoModule\n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/repo/repo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepoController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepoService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { RepoService } from \"./repo.service\";\nimport { RepoController } from \"./repo.controller\";\nimport { Repo } from \"./repo.entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Repo])],\n  controllers: [RepoController],\n  providers: [RepoService],\n  exports: [RepoService],\n})\nexport class RepoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepoService.html":{"url":"injectables/RepoService.html","title":"injectable - RepoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseQueryBuilder\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByOwnerAndRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/repo/repo.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        baseQueryBuilder\n                        \n                    \n                \n            \n            \n                \nbaseQueryBuilder()\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByOwnerAndRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByOwnerAndRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/repo/repo.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Repository } from \"typeorm\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { Repo } from \"./repo.entity\";\nimport { PageOptionsDto } from \"../common/dtos/page-options.dto\";\nimport { PageMetaDto } from \"../common/dtos/page-meta.dto\";\nimport { PageDto } from \"../common/dtos/page.dto\";\n\n@Injectable()\nexport class RepoService {\n  constructor(\n    @InjectRepository(Repo)\n    private repoRepository: Repository,\n  ) {}\n\n  baseQueryBuilder() {\n    return this.repoRepository.createQueryBuilder(\"repo\")\n      // .select(['repo.id'])\n      .leftJoinAndSelect(\"repo.user\", \"user\")\n      .leftJoinAndSelect(\"repo.contributions\", \"contributions\")\n      .loadRelationCountAndMap(\"repo.votesCount\", \"repo.repoToUserVotes\")\n      .loadRelationCountAndMap(\"repo.starsCount\", \"repo.repoToUserStars\")\n      .loadRelationCountAndMap(\"repo.submissionsCount\", \"repo.repoToUserSubmissions\")\n      .loadRelationCountAndMap(\"repo.stargazersCount\", \"repo.repoToUserStargazers\");\n  }\n\n  async findOneById(id: number): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.id = :id\", { id });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findOneByOwnerAndRepo(owner: string, repo: string): Promise {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .where(\"repo.full_name = :name\", {\n        name: `${owner}/${repo}`\n      });\n\n    const item = await queryBuilder.getOne();\n\n    if (!item) {\n      throw new NotFoundException();\n    }\n\n    return item;\n  }\n\n  async findAll(\n    pageOptionsDto: PageOptionsDto\n  ): Promise> {\n    const queryBuilder = this.baseQueryBuilder();\n\n    queryBuilder\n      .orderBy(\"repo.pushed_at\", pageOptionsDto.order)\n      .skip(pageOptionsDto.skip)\n      .take(pageOptionsDto.take);\n\n    // console.log(builder.getSql());\n\n    const itemCount = await queryBuilder.getCount();\n    const entities = await queryBuilder.getMany();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(entities, pageMetaDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStargazers.html":{"url":"entities/RepoToUserStargazers.html","title":"entity - RepoToUserStargazers","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStargazers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.stargazers.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStargazers)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStargazers)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stargazers.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stargazers\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserStargazers {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStargazers)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStargazers)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserStars.html":{"url":"entities/RepoToUserStars.html","title":"entity - RepoToUserStars","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserStars\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.stars.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserStars)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserStars)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.stars.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_stars\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserStars {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserStars)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserStars)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserSubmissions.html":{"url":"entities/RepoToUserSubmissions.html","title":"entity - RepoToUserSubmissions","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserSubmissions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.submissions.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserSubmissions)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserSubmissions)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.submissions.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_submissions\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserSubmissions {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserSubmissions)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RepoToUserVotes.html":{"url":"entities/RepoToUserVotes.html","title":"entity - RepoToUserVotes","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RepoToUserVotes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repo/repo.to.user.votes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                repo\n                            \n                            \n                                    Public\n                                repo_id\n                            \n                            \n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, repo => repo.repoToUserVotes)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repo_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.repoToUserVotes)@JoinColumn({name: 'id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/repo/repo.to.user.votes.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn, DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { User } from \"../user/user.entity\";\nimport { Repo } from \"./repo.entity\";\n\n@Entity({\n  name: \"users_to_repos_votes\",\n  orderBy: {\n    created_at: \"DESC\",\n  }\n})\nexport class RepoToUserVotes {\n  @PrimaryGeneratedColumn()\n  public id!: number;\n\n  @Column()\n  public user_id!: number;\n\n  @Column()\n  public repo_id!: number;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @ManyToOne(() => User, (user) => user.repoToUserVotes)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public user!: User;\n\n  @ManyToOne(() => Repo, (repo) => repo.repoToUserVotes)\n  @JoinColumn({\n    name: \"id\",\n    referencedColumnName: \"id\",\n  })\n  public repo!: Repo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseStrategy.html":{"url":"injectables/SupabaseStrategy.html","title":"injectable - SupabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/supabase.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/supabase.strategy.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(user: AuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/supabase.strategy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { SupabaseAuthStrategy } from \"nestjs-supabase-auth\";\nimport { AuthUser } from \"@supabase/supabase-js\";\n\n@Injectable()\nexport class SupabaseStrategy extends PassportStrategy(\n  SupabaseAuthStrategy,\n  \"supabase\",\n) {\n  public constructor() {\n    super({\n      supabaseUrl: process.env.SUPABASE_URL,\n      supabaseKey: process.env.SUPABASE_KEY,\n      supabaseOptions: {},\n      supabaseJwtSecret: process.env.SUPABASE_JWT_SECRET,\n      extractor: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate(user: AuthUser) {\n    return super.validate(user);\n  }\n\n  // authenticate(req: Request) {\n  //   super.authenticate(req);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                has_stars_data\n                            \n                            \n                                id\n                            \n                            \n                                is_open_sauced_member\n                            \n                            \n                                is_private\n                            \n                            \n                                open_issues\n                            \n                            \n                                repos\n                            \n                            \n                                repoToUserStargazers\n                            \n                            \n                                repoToUserStars\n                            \n                            \n                                repoToUserSubmissions\n                            \n                            \n                                repoToUserVotes\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp without time zone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has_stars_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_open_sauced_member\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open_issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repo => repo.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStargazers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStargazers[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStargazers => repoToUserStargazers.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserStars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserStars[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserStars => repoToUserStars.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserSubmissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserSubmissions => repoToUserSubmissions.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoToUserVotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RepoToUserVotes[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, repoToUserVotes => repoToUserVotes.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp without time zone', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  BaseEntity,\n  PrimaryColumn,\n  OneToMany,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { Repo } from \"../repo/repo.entity\";\nimport { RepoToUserVotes } from \"../repo/repo.to.user.votes.entity\";\nimport { RepoToUserStars } from \"../repo/repo.to.user.stars.entity\";\nimport { RepoToUserSubmissions } from \"../repo/repo.to.user.submissions.entity\";\nimport { RepoToUserStargazers } from \"../repo/repo.to.user.stargazers.entity\";\n\n@Entity({\n  name: \"users\"\n})\nexport class User extends BaseEntity {\n  @PrimaryColumn(\"bigint\")\n  id: number;\n\n  @Column({\n    type: \"bigint\",\n    default: 0,\n  })\n  open_issues: number;\n\n  @Column({ default: false })\n  has_stars_data: boolean;\n\n  @Column({ default: false })\n  is_private: boolean;\n\n  @Column({ default: false })\n  is_open_sauced_member: boolean;\n\n  @CreateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: \"timestamp without time zone\",\n    default: () => \"now()\",\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    type: \"timestamp without time zone\",\n  })\n  deleted_at: Date;\n\n  @OneToMany(() => Repo, repo => repo.user)\n  repos: Repo[];\n\n  @OneToMany(() => RepoToUserVotes, repoToUserVotes => repoToUserVotes.user)\n  repoToUserVotes: RepoToUserVotes[];\n\n  @OneToMany(() => RepoToUserStars, repoToUserStars => repoToUserStars.user)\n  repoToUserStars: RepoToUserStars[];\n\n  @OneToMany(() => RepoToUserSubmissions, repoToUserSubmissions => repoToUserSubmissions.user)\n  repoToUserSubmissions: RepoToUserSubmissions[];\n\n  @OneToMany(() => RepoToUserStargazers, repoToUserStargazers => repoToUserStargazers.user)\n  repoToUserStargazers: RepoToUserStargazers[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.8.0-beta.3 (2022-08-05)\n🍕 Features\n\nadd get repository by id and full name (4552c66)\n\n1.8.0-beta.2 (2022-08-05)\n🍕 Features\n\nadd proper metadata fields to entities and typeorm soft delete (#13) (af531e4), closes #10\n\n1.8.0-beta.1 (2022-07-30)\n📝 Documentation\n\nupdate readme badges (17c54b9)\n\n1.7.12 (2022-07-30)\n🐛 Bug Fixes\n\npush all tags to docr (a9e1df6)\n\n1.7.11 (2022-07-30)\n🔁 Continuous Integration\n\npush to digital ocean container registry (cd8f21d)\n\n1.7.10 (2022-07-30)\n🔁 Continuous Integration\n\ncorrect the digital ocean tagging (673dca9)\n\n1.7.9 (2022-07-30)\n✅ Tests\n\ncheck release job outputs (31e4d60)\n\n1.7.8 (2022-07-29)\n🔁 Continuous Integration\n\ncorrect environment variables (6d23c24)\n\n1.7.7 (2022-07-29)\n✅ Tests\n\nprint out proper pull request target env variables (20880c7)\n\n1.7.6 (2022-07-29)\n🔁 Continuous Integration\n\necho github context (7adfb6b)\n\n1.7.5 (2022-07-29)\n🔁 Continuous Integration\n\nprovide variable as ENV (b57f47b)\n\n1.7.4 (2022-07-29)\n🔁 Continuous Integration\n\nchange pull request event target (20bc1e7)\n\n1.7.3 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect digital ocean docker tag based on target (b1a67da)\n\n1.7.2 (2022-07-29)\n🐛 Bug Fixes\n\ncorrect static domain and release clean up workflow (a229a3b)\nupdate dependencies and list docr tags (79bf61d)\n\n🔁 Continuous Integration\n\nadd docr push dry run (5eddeb1)\nadd release workflow concurrency for demo purposes (63d6a92)\nextend digital ocean temporary token (d0d5ca5)\ntest bash variable environment (e1fe498)\n\n1.7.1 (2022-07-27)\n🔁 Continuous Integration\n\ndeploy developer mkdocs to github pages test (8837b2a)\n\n1.7.0 (2022-07-27)\n📝 Documentation\n\nchange github pages deploy to take tech mkdocs instead of api (bc3a37d)\n\n1.6.17 (2022-07-24)\n🔁 Continuous Integration\n\nadd temporary debug logging (ba8dfbb)\n\n1.6.16 (2022-07-23)\n🔁 Continuous Integration\n\nproperly copy contents from mounted container volume (c013b70)\n\n1.6.15 (2022-07-23)\n🔁 Continuous Integration\n\ncreate new container from release (b1eda28)\n\n1.6.14 (2022-07-23)\n🔁 Continuous Integration\n\ntest file is generated properly (c127cea)\n\n🤖 Build System\n\nattempt docker inspection again (2c0b3d1)\n\n1.6.13 (2022-07-23)\n🔁 Continuous Integration\n\ntest proper container name exposing (cc46460)\n\n1.6.12 (2022-07-23)\n🔁 Continuous Integration\n\ntest local swagger spec (7e9b8a4)\n\n1.6.11 (2022-07-21)\n🔁 Continuous Integration\n\ntest getting docker process list output (f5385b3)\n\n1.6.10 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to get value from running container (911df68)\ntest accessing running container by re-creating (77c734c)\n\n1.6.9 (2022-07-21)\n🔁 Continuous Integration\n\nget container name from runner context (94ba4e1)\n\n1.6.8 (2022-07-21)\n🔁 Continuous Integration\n\nattempt to assign docker service name to running container (fe4b9e9)\n\n1.6.7 (2022-07-21)\n✅ Tests\n\nmount docker service and volumes (0848443)\n\n1.6.6 (2022-07-21)\n✅ Tests\n\nload docker container from artifact (b7c3395)\n\n1.6.5 (2022-07-21)\n🐛 Bug Fixes\n\ncorrect docker local creation (cd306f8)\n\n1.6.4 (2022-07-21)\n✅ Tests\n\nload docker container in flight environment (e145e2d)\n\n1.6.3 (2022-07-20)\n🤖 Build System\n\nupdate deployment and add simple repo submission structure (33fea7e)\n\n1.6.2 (2022-07-19)\n🤖 Build System\n\nrevert to production release container (8aee8e5)\n\n1.6.1 (2022-07-19)\n🤖 Build System\n\nimprove swagger generation (22d3cc1)\n\n🐛 Bug Fixes\n\ncorrect workflow yaml comments (7fe63aa)\n\n1.6.0 (2022-07-19)\n🎨 Styles\n\nimplement correct eslint rules for immediate scoping (bd6d621), closes #1\n\n🍕 Features\n\nupdate dependencies and nest to stable new version (c24937f)\n\n🔁 Continuous Integration\n\nadd docker build and static swagger docs jobs (81e8bbc)\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n🤖 Build System\n\nadd better eslint baseline configuration (3918a78)\nadd minimal eslint configuration (a0db0aa)\nadd minor deployment improvements and github pages adjustments (cb83f9d)\nimplement prettier rules in typescript eslint (166050d)\n\n🐛 Bug Fixes\n\ncorrect release workflow artifact strategy (b5b6ac5)\ncorrect rogue workflow artifact (61b67d5)\n\n1.5.1 (2022-07-13)\n🔁 Continuous Integration\n\ndockerfile: created a script to deploy (#7) (5f79c49)\n\n📦 0-vortex/api.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.5.0 (2022-06-21)\n🍕 Features\n\nimplement proper starsCount (fdc11ea)\nimplement proper votesCount (607cf5d)\n\n1.4.0 (2022-06-17)\n🍕 Features\n\nadd minimal pagination decorator (ac31556)\n\n1.3.0 (2022-06-10)\n🍕 Features\n\nadd abstract pagination component (630f3b5)\nadd repository relations and limit select (b4d3785)\n\n1.2.0 (2022-06-09)\n🍕 Features\n\nattach user relationship to get repos (e663170)\n\n1.1.0 (2022-06-07)\n🍕 Features\n\nadd basic tld entities (273f337)\n\n1.0.2 (2022-06-05)\n🤖 Build System\n\nadd supabase migration system (34d521d)\n\n1.0.1 (2022-06-05)\n✅ Tests\n\nverify database diagrams generation (73d1c74)\n\n1.0.0 (2022-06-05)\n🍕 Features\n\nadjust health checks endpoints (cb9206d)\ninitial commit (5e7c6c7)\n\n🐛 Bug Fixes\n\ncorrect npm scripts, workflow node versiond and update deps (2c0b15f)\nupdate nest typeorm integration and correct db status (58bf922)\n\n🔥 Performance Improvements\n\nremove minor version engines requirements (7db9008)\n\n✅ Tests\n\nexplain current test configuration and unblock pipelines (272c09a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/supabase.strategy.ts\n            \n            injectable\n            SupabaseStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/dtos/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/endpoint.config.ts\n            \n            variable\n            getDomain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contribution/contribution.entity.ts\n            \n            entity\n            Contribution\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.controller.ts\n            \n            controller\n            RepoController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repo/repo.entity.ts\n            \n            entity\n            Repo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.service.ts\n            \n            injectable\n            RepoService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.stargazers.entity.ts\n            \n            entity\n            RepoToUserStargazers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.stars.entity.ts\n            \n            entity\n            RepoToUserStars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.submissions.entity.ts\n            \n            entity\n            RepoToUserSubmissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repo/repo.to.user.votes.entity.ts\n            \n            entity\n            RepoToUserVotes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../order.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/order.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        Order\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n  🍕 Open Sauced Nest Supabase API🍕\n  The path to your next Open Source contribution\n\n\n\n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n🚀 Live release environments\n\napi.opensauced.pizza\nbeta.api.opensauced.pizza\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=16.7.0\nnpm>=8.0.0\ndocker>=20.10.12\nsupabase>=0.18.0\n\n🔑 Database commands\nStarting the Supabase Studio\nFirst thing we have to do for local development is start the studio locally at localhost:54321:\nnpm run db:startMake changes\nIf we are adding a new table structure, first do it visually in the Supabase Studio and test locally.\nCheck the migration difference with the following command:\nnpm run db:changesIf everything is fine we can run the following command to apply the changes to the database:\nnpm run db:commit add_table_nameTest changes\nSimplest way to test the migrations are working is to reset the local database:\nnpm run db:resetPush changes\nIf everything is fine we can push the changes to the remote database:\nnpm run db:push🔑 Supabase structure\nClick the image to see the schema diagram full documentation.\n\n🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RepoModule\n\n\n\ncluster_RepoModule_exports\n\n\n\ncluster_RepoModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepoModule\n\nRepoModule\n\nAppModule -->\n\nRepoModule->AppModule\n\n\n\n\n\nRepoService \n\nRepoService \n\nRepoService  -->\n\nRepoModule->RepoService \n\n\n\n\n\nSupabaseStrategy \n\nSupabaseStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nSupabaseStrategy  -->\n\nAuthModule->SupabaseStrategy \n\n\n\n\n\nSupabaseStrategy\n\nSupabaseStrategy\n\nAuthModule -->\n\nSupabaseStrategy->AuthModule\n\n\n\n\n\nRepoService\n\nRepoService\n\nRepoModule -->\n\nRepoService->RepoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.8.0-beta.3\n        \n            Description : API dot Open Sauced is NestJS and SupaBase powered OAS3 backend designed to remove client complexity and provide a structured graph of all @open-sauced integrations\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/api.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/api.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/api.opensauced.pizza.git\n        \n            Author : TED Vortex \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageMetaParameters   (src/.../page-meta-parameters.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/dtos/page-meta-parameters.dto.ts\n    \n    \n        \n            \n                \n                    \n                    PageMetaParameters\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            getDomain   (src/.../endpoint.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  model: TModel,\n) => {\n  return applyDecorators(\n    ApiExtraModels(PageDto, Repo),\n    ApiOkResponse({\n      description: \"Successfully received model list\",\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PageDto) },\n          {\n            properties: {\n              data: {\n                type: \"array\",\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/config/endpoint.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (subdomain?: string) =>\n  new URL(`https://${subdomain ? `${subdomain}.` : \"\" }${process.env.DOMAIN || \"opensauced.pizza\"}`).toString()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
